[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    String javaFxVersion \u003d \u002711.0.2\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    mainClassName \u003d \"Launcher\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    archiveBaseName \u003d \"mug\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    toolVersion \u003d \u00278.29\u0027"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TianYong-Goh": 18,
      "-": 43
    }
  },
  {
    "path": "config/travis/check-eof-newline.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "#!/bin/sh"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "# Checks that all text files end with a newline."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "ret\u003d0"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "# Preserve filename with spaces by only splitting on newlines."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "IFS\u003d\u0027"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "for filename in $(git grep --cached -I -l -e \u0027\u0027 -- \u0027:/\u0027); do"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    if [ \"$(tail -c 1 \"./$filename\")\" !\u003d \u0027\u0027 ]; then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        line\u003d\"$(wc -l \"./$filename\" | cut -d\u0027 \u0027 -f1)\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        echo \"ERROR:$filename:$line: no newline at EOF.\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        ret\u003d1"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    fi"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "done"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "exit $ret"
      }
    ],
    "authorContributionMap": {
      "TianYong-Goh": 18
    }
  },
  {
    "path": "config/travis/check-line-endings.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "#!/bin/sh"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "# Checks for prohibited line endings."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "# Prohibited line endings: \\r\\n"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "git grep --cached -I -n --no-color -P \u0027\\r$\u0027 -- \u0027:/\u0027 |"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "awk \u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    BEGIN {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        FS \u003d \":\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        OFS \u003d \":\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        ret \u003d 0"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        ret \u003d 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        print \"ERROR\", $1, $2, \" prohibited \\\\r\\\\n line ending, use \\\\n instead.\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    END {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        exit ret"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "\u0027"
      }
    ],
    "authorContributionMap": {
      "TianYong-Goh": 19
    }
  },
  {
    "path": "config/travis/check-trailing-whitespace.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "#!/bin/sh"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "# Checks for trailing whitespace"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "git grep --cached -I -n --no-color -P \u0027[ \\t]+$\u0027 -- \u0027:/\u0027 |"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "awk \u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    BEGIN {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        FS \u003d \":\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        OFS \u003d \":\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        ret \u003d 0"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        # Only warn for markdown files (*.md) to accomodate text editors"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        # which do not properly handle trailing whitespace."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        # (e.g. GitHub web editor)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        if ($1 ~ /\\.md$/) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            severity \u003d \"WARN\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            severity \u003d \"ERROR\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            ret \u003d 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        print severity, $1, $2, \" trailing whitespace.\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    END {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        exit ret"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "\u0027"
      }
    ],
    "authorContributionMap": {
      "TianYong-Goh": 26
    }
  },
  {
    "path": "config/travis/run-checks.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "#!/bin/sh"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "# Runs all check-* scripts, and returns a non-zero exit code if any of them fail."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "dir\u003d$(CDPATH\u003d cd -- \"$(dirname -- \"$0\")\" \u0026\u0026 pwd) \u0026\u0026"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "ret\u003d0 \u0026\u0026"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "for checkscript in \"$dir\"/check-*; do"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    if ! \"$checkscript\"; then"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        ret\u003d1"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    fi"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "done"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "exit $ret"
      }
    ],
    "authorContributionMap": {
      "TianYong-Goh": 11
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "## Command Summary"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "Action|Format"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "------|--------------"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "todo| `todo {description}`"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "deadline| `deadline {description} /by {YYYY-MM-DD}`"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "event| `event {description} /at {YYYY-MM-DD}`"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "list| `list`"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "delete| `delete {index}`"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "done| `done {index}`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "undo| `undo`"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "find| `find {keyword}`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "### Adding Todo Task: `todo`"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "Adds todo tasks into the list"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "Format: `todo {description}`"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "Example: todo read book"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "  "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "### Adding Deadline Task: `deadline`"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "Adds deadline tasks into the list"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "Format: `deadline {description} /by {YYYY-MM-DD}`"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "Example: deadline essay /by 2020-01-01"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "### Adding Event Task: `event`"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "Adds event tasks into the list"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "Format: `event {description} /at {YYYY-MM-DD}`"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "Example: event conference /at 2019-12-30"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "### Listing all tasks: `list`"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "Lists out all tasks"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "Format: `list`"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "### Deleting task: `delete`"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "delete the task"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "Format: `delete {index}`"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "Example: delete 1"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "### Marking task done: `done`"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "Marks the task done"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "Format: `done {index}`"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "Example: done 1"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "### Undo: `undo`"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "Undo for command(**todo**, **deadline**, **event**, **delete**, **done**) "
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "Format: `undo`"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "### Searching tasks: `find`"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "Finds tasks from the list"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "Format: `find {keyword}`"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "Example: find read"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "### `Keyword` - Describe action"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "Describe action and its outcome."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "`keyword (optional arguments)`"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "`outcome`"
      }
    ],
    "authorContributionMap": {
      "TianYong-Goh": 63,
      "-": 18
    }
  },
  {
    "path": "mug-test.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "TODO|0|read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "TODO|0|return book"
      }
    ],
    "authorContributionMap": {
      "TianYong-Goh": 2
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    private Label text;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * DialogBox Object contains message and the image given."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * @param text Message."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * @param img Image."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    public DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        } catch (IOException ex) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            ex.printStackTrace();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        this.text.setText(text);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        this.displayPicture.setImage(img);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image image) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        return new DialogBox(text, image);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    public static DialogBox getMugDialog(String text, Image image) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        DialogBox db \u003d new DialogBox(text, image);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TianYong-Goh": 64
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TianYong-Goh": 10
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": " * A GUI for Mug using FXML."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    /** Mug Object */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    private final Mug mug \u003d new Mug();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            stage.setTitle(\"Mug\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            stage.setResizable(false);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setMug(mug);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        } catch (IOException ex) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            ex.printStackTrace();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TianYong-Goh": 31
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    private Mug mug;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Pot.png\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    private final Image mugImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Mug.png\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * Prints welcome messages."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    private static String welcome() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        return \"Hello! I\u0027m Mug\\n\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                + \"What can Mug do for you ?_?\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * Initials the Mug main window."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        DialogBox welcome \u003d DialogBox.getMugDialog(MainWindow.welcome(), mugImage);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        dialogContainer.getChildren().add(welcome);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    public void setMug(Mug mug) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        this.mug \u003d mug;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Mug\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        String response \u003d mug.getResponse(input);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                DialogBox.getMugDialog(response, mugImage)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        );"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        if (input.toUpperCase().equals(\"BYE\")) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            userInput.setPromptText(\"Text field has been disabled. Hope to see you soon!!\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            userInput.setDisable(true);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            sendButton.setDisable(true);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TianYong-Goh": 68
    }
  },
  {
    "path": "src/main/java/Mug.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import tasks.TaskList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": " * A class to get Mug response."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "public class Mug {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    /** user Interface Object*/"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    private final Ui ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    /** A list of Tasks */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    private final TaskList tasks;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * Constructs a Mug Object that create/read the file from the given filepath"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * and pass the information from the file to TaskList."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    public Mug() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        Storage storage \u003d new Storage(Storage.MUG_FILE);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        storage.initialize();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        this.tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * Returns respond from mug to user."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * @param input User\u0027s input"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * @return Mug\u0027s responds."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        new Mug();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        return this.ui.readCommand(input, this.tasks);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TianYong-Goh": 33
    }
  },
  {
    "path": "src/main/java/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": " * All the eligible command."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "public enum Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    BYE,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    DEADLINE,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    DONE,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    DELETE,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    EVENT,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    LIST,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    TODO,"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    FIND,"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    UNDO"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "TianYong-Goh": 17
    }
  },
  {
    "path": "src/main/java/mugexception/MugException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "package mugexception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": " * Error that cause by Mug."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "public class MugException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * Constructs a new Mug Exception with specific detail message"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * @param message error Message"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    public MugException(String message) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        return \"Wrong command given/lack of information\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TianYong-Goh": 21
    }
  },
  {
    "path": "src/main/java/storage/Action.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "package storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": " * The type of action undergo in previous command."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "enum Action {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    ADD, DELETE, DONE"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TianYong-Goh": 8
    }
  },
  {
    "path": "src/main/java/storage/AddStorage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "package storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import java.io.PrintWriter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import command.Command;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import mugexception.MugException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import validator.Validator;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": " * Adds task to the storage"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "public class AddStorage extends Storage {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * Constructs a AddStorage object with given path."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * @param filepath File\u0027s path"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    public AddStorage(String filepath) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        super(filepath);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * Adds Task to local file."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * @param command User command."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * @param info Task description."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * @throws MugException When MugException cause by other method."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    public void appendTask(Command command, String info) throws MugException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            FileWriter fw \u003d new FileWriter(super.filepath, true);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            BufferedWriter bw \u003d new BufferedWriter(fw);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            PrintWriter pw \u003d new PrintWriter(bw);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            String task;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            switch (command) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            case TODO:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                task \u003d addTodo(info);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            case DEADLINE:"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                task \u003d addDeadLine(info);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            case EVENT:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                task \u003d addEvent(info);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                task \u003d \" | | \";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            pw.println(task);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            pw.flush();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            pw.close();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            int lineNum \u003d lineCounter(super.filepath);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            writeUndoRecord(Action.ADD, task, lineNum);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        } catch (MugException ex) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            throw new MugException(ex.getMessage());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        } catch (IOException ex) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            throw new MugException(\"Something went wrong. Mug fail to add the Tasks.Task :_:\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    private String addTodo(String info) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        return \"TODO|0|\" + info;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    private String addDeadLine(String info) throws MugException {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        String[] deadlineInfo \u003d info.split(\" /by \");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        // Validate info"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        Validator.input(Command.DEADLINE, deadlineInfo.length, true);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        Validator.info(Command.DEADLINE, deadlineInfo[1], true);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        // info"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        String deadlineEvent \u003d deadlineInfo[0];"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        LocalDate deadlineTime \u003d Validator.date(deadlineInfo[1]);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        return \"DEADLINE|0|\" + deadlineEvent + \"|\" + deadlineTime;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    private String addEvent(String info) throws MugException {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        String[] eventInfo \u003d info.split(\" /at \");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        // Validate info"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        Validator.input(Command.EVENT, eventInfo.length, true);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        Validator.info(Command.EVENT, eventInfo[1], true);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        // info"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        String eventEvent \u003d eventInfo[0];"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        LocalDate eventTime \u003d Validator.date(eventInfo[1]);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        return \"EVENT|0|\" + eventEvent + \"|\" + eventTime;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TianYong-Goh": 90
    }
  },
  {
    "path": "src/main/java/storage/DeleteStorage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "package storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import java.io.PrintWriter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import mugexception.MugException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": " * Delete task from the local storage"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "public class DeleteStorage extends Storage {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * Constructs a DeleteStorage object with given path."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * @param filepath File\u0027s path"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    public DeleteStorage(String filepath) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        super(filepath);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * Deletes Task from local file."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * @param taskId Task index"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * @throws MugException When MugException cause by other method."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    public void deleteTask(int taskId) throws MugException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        String tempFile \u003d \"deleteTemp.txt\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        File oldFile \u003d new File(super.filepath);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        File newFile \u003d new File(tempFile);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        int taskTrack \u003d 0;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            // writer"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            FileWriter fw \u003d new FileWriter(tempFile, true);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            BufferedWriter bw \u003d new BufferedWriter(fw);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            PrintWriter pw \u003d new PrintWriter(bw);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            // reader"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            FileReader fr \u003d new FileReader(super.filepath);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            BufferedReader br \u003d new BufferedReader(fr);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            String line \u003d br.readLine();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            while (Optional.ofNullable(line).isPresent()) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                taskTrack++;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                if (taskTrack !\u003d taskId) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                    pw.println(line);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                    writeUndoRecord(Action.DELETE, line, taskId);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                line \u003d br.readLine();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            br.close();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            pw.flush();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            pw.close();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            oldFile.delete();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            File renameFile \u003d new File(super.filepath);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            newFile.renameTo(renameFile);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        } catch (IOException ex) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            throw new MugException(\"Something went wrong. Mug fail to delete the Tasks.Task :_:\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TianYong-Goh": 70
    }
  },
  {
    "path": "src/main/java/storage/DoneStorage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "package storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import java.io.PrintWriter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import mugexception.MugException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": " * Marks the task Done"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "public class DoneStorage extends Storage {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * Constructs a DoneStorage object with given path."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * @param filepath File\u0027s path"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    public DoneStorage(String filepath) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        super(filepath);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * Marks Task done in local file."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * @param taskId Task index."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * @throws MugException When MugException cause by other method."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    public void doneTask(int taskId) throws MugException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        String tempFile \u003d \"doneTemp.txt\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        File oldFile \u003d new File(this.filepath);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        File newFile \u003d new File(tempFile);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        int taskTrack \u003d 0;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            // writer"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            FileWriter fw \u003d new FileWriter(tempFile, true);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            BufferedWriter bw \u003d new BufferedWriter(fw);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            PrintWriter pw \u003d new PrintWriter(bw);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            // reader"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            FileReader fr \u003d new FileReader(this.filepath);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            BufferedReader br \u003d new BufferedReader(fr);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            String line \u003d br.readLine();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            while (Optional.ofNullable(line).isPresent()) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                taskTrack++;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                if (taskTrack !\u003d taskId) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                    pw.println(line);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                    writeUndoRecord(Action.DONE, line, taskId);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                    String[] newLine \u003d line.split(\"[|]\", 3);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                    pw.println(newLine[0] + \"|\" + 1 + \"|\" + newLine[2]);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                line \u003d br.readLine();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            br.close();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            pw.flush();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            pw.close();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            oldFile.delete();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            File renameFile \u003d new File(this.filepath);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            newFile.renameTo(renameFile);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            throw new MugException(\"File not found\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            throw new MugException(\"Something went wrong\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TianYong-Goh": 75
    }
  },
  {
    "path": "src/main/java/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "package storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import java.io.PrintWriter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import command.Command;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import mugexception.MugException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import tasks.Deadline;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import tasks.Event;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import tasks.Todo;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import validator.Validator;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": " * Operations on local Storage."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": " */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    /** mug.txt */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    public static final String MUG_FILE \u003d \"mug.txt\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    /** undo.txt */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    public static final String UNDO_FILE \u003d \"undo.txt\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    /** File\u0027s path */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    protected final String filepath;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * Constructs a Storage object(file) at given path."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * @param filepath File\u0027s path"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    public Storage(String filepath) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        this.filepath \u003d filepath;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * Initialize Local Storage"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        File mainFile \u003d new File(this.filepath);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        File undoFile \u003d new File(Storage.UNDO_FILE);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        undoFile.deleteOnExit();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            if (!mainFile.exists()) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                mainFile.createNewFile();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            if (!undoFile.exists()) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                undoFile.createNewFile();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        } catch (IOException ex) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            System.out.println(\"An error occurred!!\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            ex.printStackTrace();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * Loads Tasks from the file to arraylist of Task."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * @return Arraylist of Task."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    public ArrayList\u003cTask\u003e load() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            FileReader fr \u003d new FileReader(this.filepath);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            BufferedReader br \u003d new BufferedReader(fr);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            String line;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            while ((line \u003d br.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                String[] newLine \u003d line.split(\"[|]\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                assert(newLine.length \u003c\u003d 4 \u0026\u0026 newLine.length \u003e 0);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                Command command \u003d Validator.command(newLine[0]);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                boolean hasDone \u003d Integer.parseInt(newLine[1]) \u003d\u003d 1;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                if (command \u003d\u003d Command.TODO) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                    taskList.add(new Todo(newLine[2], hasDone));"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                } else if (command \u003d\u003d Command.DEADLINE) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                    LocalDate date \u003d Validator.date(newLine[3]);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                    taskList.add(new Deadline(newLine[2], date, hasDone));"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                } else if (command \u003d\u003d Command.EVENT) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                    LocalDate date \u003d Validator.date(newLine[3]);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                    taskList.add(new Event(newLine[2], date, hasDone));"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            br.close();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        } catch (IOException | MugException ex) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            System.out.println(\"WARNING: \" + ex.getMessage() + \" :WARNING\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            System.out.println(\"WARNING: There is Something wrong with your Storage :WARNING\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * Count the number of line used in a text file"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * @return Number of line."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * @throws IOException If"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    protected int lineCounter(String filepath) throws IOException {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        FileReader fr \u003d new FileReader(filepath);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        BufferedReader br \u003d new BufferedReader(fr);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        int lineNum \u003d 0;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        String line \u003d br.readLine();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        while (Optional.ofNullable(line).isPresent()) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            lineNum++;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            line \u003d br.readLine();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        br.close();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        return lineNum;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * Record the action."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * @param task command given to Mug."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * @throws MugException If fail to access undo.txt."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    protected void writeUndoRecord(Action task, String info, int taskId) throws MugException {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        String tempFile \u003d \"undoTemp.txt\";"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        File oldFile \u003d new File(Storage.UNDO_FILE);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        File newFile \u003d new File(tempFile);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            // writer"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            FileWriter fw \u003d new FileWriter(newFile, true);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            BufferedWriter bw \u003d new BufferedWriter(fw);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            PrintWriter pw \u003d new PrintWriter(bw);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            // read undo.txt"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            FileReader fr \u003d new FileReader(Storage.UNDO_FILE);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            BufferedReader br \u003d new BufferedReader(fr);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            pw.println(task);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            pw.println(taskId);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            pw.println(info);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            String line \u003d br.readLine();"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            while (Optional.ofNullable(line).isPresent()) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                pw.println(line);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                line \u003d br.readLine();"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            //close reader and writer"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            br.close();"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            pw.flush();"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            pw.close();"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            //rename"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            oldFile.delete();"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            File renameFile \u003d new File(Storage.UNDO_FILE);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            newFile.renameTo(renameFile);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        } catch (IOException ex) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            throw new MugException(\"Something went wrong. Mug fail to record task :_:\");"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TianYong-Goh": 159
    }
  },
  {
    "path": "src/main/java/storage/UndoStorage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "package storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import java.io.PrintWriter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import java.util.NoSuchElementException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import mugexception.MugException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": " * Undo Action in storage"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "public class UndoStorage extends Storage {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    /** undo.txt filepath */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    private final String undoFilepath;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * Create Undo Storage Object for undo command."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * @param mugFilepath mug.txt filepath."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * @param undoFilepath undo.txt filepath."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    public UndoStorage(String mugFilepath, String undoFilepath) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        super(mugFilepath);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        this.undoFilepath \u003d undoFilepath;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * Undo action."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * @throws MugException If do not have anything to undo or fail to read the file."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    public void undo() throws MugException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            FileReader fr \u003d new FileReader(this.undoFilepath);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            BufferedReader br \u003d new BufferedReader(fr);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            Optional\u003cString\u003e undoCommand \u003d Optional.ofNullable(br.readLine());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            br.close();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            Action parsedCommand \u003d Action.valueOf(undoCommand.get());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            assert(parsedCommand \u003d\u003d Action.DELETE"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                    || parsedCommand \u003d\u003d Action.ADD"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                    || parsedCommand \u003d\u003d Action.DONE);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            switch (parsedCommand) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            case DELETE:"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                undoDelete();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            case ADD:"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                undoAdd();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            case DONE:"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                undoDone();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                throw new MugException(\"Something went wrong. Mug fail to undo:_:\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        } catch (NoSuchElementException ex) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            throw new MugException(\"Mug do not have anything to undo. TT\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        } catch (IOException ex) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            throw new MugException(\"Something went wrong. Mug fail to undo:_:\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    private void undoDelete() throws MugException {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            writeFile(super.filepath, this.undoFilepath, true, false);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            clearUndo(this.undoFilepath);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        } catch (IOException ex) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            throw new MugException(\"Something went wrong. Mug fail to undo:_:\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    private void undoDone() throws MugException {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            writeFile(super.filepath, this.undoFilepath, false, true);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            clearUndo(this.undoFilepath);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        } catch (IOException ex) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            throw new MugException(\"Something went wrong. Mug fail to undo:_:\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    private void undoAdd() throws MugException {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            writeFile(super.filepath, this.undoFilepath, false, false);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            clearUndo(this.undoFilepath);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        } catch (IOException ex) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            throw new MugException(\"Something went wrong. Mug fail to undo:_:\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    private void clearUndo(String filepath) throws IOException {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        String tempFile \u003d \"clearTemp.txt\";"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        File oldFile \u003d new File(filepath);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        File newFile \u003d new File(tempFile);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            // writer"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            FileWriter fw \u003d new FileWriter(tempFile, true);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            BufferedWriter bw \u003d new BufferedWriter(fw);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            PrintWriter pw \u003d new PrintWriter(bw);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            // undo.txt reader"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            FileReader fr \u003d new FileReader(filepath);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            BufferedReader br \u003d new BufferedReader(fr);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            // remove the first three"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            br.readLine();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            br.readLine();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            br.readLine();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            // copy back the rest"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            String line \u003d br.readLine();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            while (Optional.ofNullable(line).isPresent()) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                pw.println(line);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                line \u003d br.readLine();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            br.close();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            pw.flush();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            pw.close();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            // rename file"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            oldFile.delete();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            File renameFile \u003d new File(filepath);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            newFile.renameTo(renameFile);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        } catch (IOException ex) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            throw new IOException();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    private void writeFile(String mugFilepath, String undoFilepath,"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                           boolean isDelete, boolean isDone) throws IOException, MugException {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        String tempFile \u003d \"writeTemp.txt\";"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        File oldFile \u003d new File(mugFilepath);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        File newFile \u003d new File(tempFile);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            // mug.txt writer"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            FileWriter mugFw \u003d new FileWriter(tempFile, true);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            BufferedWriter mugBw \u003d new BufferedWriter(mugFw);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            PrintWriter mugPw \u003d new PrintWriter(mugBw);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            // undo.txt reader"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            FileReader undoFr \u003d new FileReader(undoFilepath);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            BufferedReader undoBr \u003d new BufferedReader(undoFr);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            undoBr.readLine();"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            String taskId \u003d undoBr.readLine();"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            int lineIndex \u003d Integer.parseInt(taskId.trim());"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            assert(lineIndex \u003e 0);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            // mug.txt reader"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            FileReader mugFr \u003d new FileReader(mugFilepath);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            BufferedReader mugBr \u003d new BufferedReader(mugFr);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            // add in task"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            for (int i \u003d 1; i \u003c lineIndex; i++) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                mugPw.println(mugBr.readLine());"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            if (isDelete || isDone) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                // add in changed task"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                mugPw.println(undoBr.readLine());"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                if (isDone) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                    mugBr.readLine();"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                // continue copy the rest of the task"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                String line \u003d mugBr.readLine();"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                while (Optional.ofNullable(line).isPresent()) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                    mugPw.println(line);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                    line \u003d mugBr.readLine();"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            // close br"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            undoBr.close();"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            mugBr.close();"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            // close mug file"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            mugPw.flush();"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            mugPw.close();"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            oldFile.delete();"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            File renameFile \u003d new File(mugFilepath);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            newFile.renameTo(renameFile);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        } catch (NumberFormatException ex) {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            throw new MugException(\"Something went wrong with your undo.txt file!!!\");"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        } catch (IOException ex) {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            throw new IOException();"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TianYong-Goh": 182
    }
  },
  {
    "path": "src/main/java/tasks/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": " * Create Deadline objects extends from Task class."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    /** Deadline. */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    protected LocalDate by;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * Constructs Deadline object with description and date given."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * @param description Deadline\u0027s description."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * @param by Deadline."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    public Deadline(String description, LocalDate by) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * Constructs Deadline object with deadline\u0027s description, date and deadline status given."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * @param description Deadline\u0027s description."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * @param by Deadline."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * @param isDone Deadline status."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    public Deadline(String description, LocalDate by, boolean isDone) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * Creates a new Deadline object with isDone equal true."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * @return New Deadline object."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    protected Deadline markAsDone() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        return new Deadline(super.description, this.by, true);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                + by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                + \" [\" + by.getDayOfWeek() + \"])\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "}"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "TianYong-Goh": 53
    }
  },
  {
    "path": "src/main/java/tasks/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": " * Create Event objects extends from Task class."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    /** Event\u0027s date. */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    protected LocalDate at;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * Constructs Event object with event\u0027s description and event\u0027s date given."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * @param description Event\u0027s description."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * @param at Event\u0027s date."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    public Event(String description, LocalDate at) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * Constructs Event object with description event status and event date given."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * @param description Event\u0027s description."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * @param at Event\u0027s date."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * @param isDone Event\u0027s status."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    public Event(String description, LocalDate at, boolean isDone) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * Create a new Event object with isDone equal true."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * @return New Event object."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    protected Event markAsDone() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        return new Event(super.description, this.at, true);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                + at.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                + \"[\" + at.getDayOfWeek() + \"])\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "}"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "TianYong-Goh": 53
    }
  },
  {
    "path": "src/main/java/tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": " * Create Task objects."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    /** Task\u0027s description. */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    /** Task status. */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * Constructs Task object with Task\u0027s description."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * @param description Task\u0027s description."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * Constructs Task object with Task\u0027s description and Task\u0027s status."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * @param description Task\u0027s description."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * @param isDone Task\u0027s status."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    public Task(String description, boolean isDone) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * Gets status Icon."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * @return Status Icon."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    protected String getStatusIcon() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * Gets Task\u0027s description."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * @return Task\u0027s description."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    protected String getDescription() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * Create a new Task object with isDone equal true."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * @return New Task object."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    protected Task markAsDone() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        return new Task(this.description, true);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * Gets isDone status."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * @return Task\u0027s status."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    protected boolean isDone() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        return this.isDone;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.getDescription();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TianYong-Goh": 74
    }
  },
  {
    "path": "src/main/java/tasks/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import java.util.concurrent.atomic.AtomicInteger;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import java.util.stream.IntStream;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import command.Command;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import mugexception.MugException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import storage.UndoStorage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import validator.Validator;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": " * Operation for the list of Task."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    /** ArrayList of Task */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    private ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * Constructs TaskList object with local Storage given."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * @param taskList List of Tasks"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    private int taskListLen() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        return this.taskList.size();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * Reads list of Task."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * @return list of Task in String."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    public String readList() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        if (this.taskListLen() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            return \"Mug don\u0027t have any of your task \\\"_\\\"\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            StringBuilder results \u003d new StringBuilder(\"Here is your tasks:\\n\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            IntStream.range(0, this.taskListLen())"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                    .forEach(taskIndex -\u003e {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                        results.append(taskIndex + 1);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                        results.append(\". \");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                        results.append(this.taskList.get(taskIndex));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                        if (taskIndex !\u003d this.taskListLen()) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                            results.append(\"\\n\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                    });"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            return results.toString();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * Adds Task."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * @param command User command."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * @param info Task descriptions."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * @return Message when task add."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    public String addTask(Command command, String info) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            Task task;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            switch (command) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            case TODO:"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                task \u003d addTodo(info);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            case DEADLINE:"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                task \u003d addDeadline(info);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            case EVENT:"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                task \u003d addEvent(info);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                task \u003d new Task(info);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            this.taskList.add(task);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            return \"Got it. Mug has added this task:\\n\""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                    + task"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                    + \"\\nNow you have \""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                    + this.taskListLen()"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                    + \" tasks in the list.\";"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        } catch (MugException ex) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            return ex.getMessage();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    private Task addTodo(String info) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        return new Todo(info);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    private Task addDeadline(String info) throws MugException {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        String[] deadlineInfo \u003d info.split(\" /by \");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        //Validate info"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        Validator.input(Command.DEADLINE, deadlineInfo.length, true);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        assert(deadlineInfo.length \u003e 1);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        Validator.info(Command.DEADLINE, deadlineInfo[1], true);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        // info"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        String deadlineEvent \u003d deadlineInfo[0];"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        LocalDate deadlineTime \u003d Validator.date(deadlineInfo[1]);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        return new Deadline(deadlineEvent, deadlineTime);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    private Task addEvent(String info) throws MugException {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        String[] eventInfo \u003d info.split(\" /at \");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        //Validate info"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        Validator.input(Command.EVENT, eventInfo.length, true);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        assert(eventInfo.length \u003e 1);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        Validator.info(Command.EVENT, eventInfo[1], true);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        // info"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        String eventEvent \u003d eventInfo[0];"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        LocalDate eventTime \u003d Validator.date(eventInfo[1]);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        return new Event(eventEvent, eventTime);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * Deletes Task."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * @param taskId Task index."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * @return Message when task delete."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    public String deleteTask(int taskId) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        if (taskId \u003e this.taskListLen() || taskId \u003c 1) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            return \"Mug don\u0027t have this task to Delete @_@\";"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            //assert"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            assert(taskId \u003c\u003d this.taskListLen());"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            int taskIndex \u003d taskId - 1;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            Task deletedTask \u003d this.taskList.get(taskIndex);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            this.taskList.remove(taskIndex);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            return \"Noted. Mug has removed this task:\\n\""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                    + deletedTask"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                    + \"\\nNow you have \""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                    + this.taskListLen()"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                    + \" tasks in the list.\";"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * Updates Task done."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * @param taskId Task index"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * @return Message when task update done."
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    public String taskDone(int taskId) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        if (taskId \u003e this.taskListLen() || taskId \u003c 1) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            return \"Mug don\u0027t have this task to mark as Done :\u003e\";"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            //assert"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            assert(taskId \u003c\u003d this.taskListLen());"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            int taskIndex \u003d taskId - 1;"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            Task doneTask \u003d this.taskList.get(taskIndex);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            if (doneTask.isDone()) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                return \"Mug had marked this task as done:\\n\""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                        + doneTask;"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                doneTask \u003d doneTask.markAsDone();"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                this.taskList.set(taskIndex, doneTask);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                return \"Congratz! Mug has marked this task as done:\\n\""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                        + doneTask;"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * Searches the Task using the keyword provide."
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * @param keyword Keyword to search."
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * @return List of Task with the search keyword"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    public String searchTask(String keyword) {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        AtomicInteger taskNum \u003d new AtomicInteger();"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        StringBuilder results \u003d new StringBuilder(\"Here is the result:\");"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        IntStream.range(0, this.taskListLen())"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                .forEach(taskIndex -\u003e {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                    Task task \u003d this.taskList.get(taskIndex);"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                    boolean hasKeyword \u003d task.getDescription().contains(keyword);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                    if (hasKeyword) {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                        taskNum.getAndIncrement();"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                        results.append(\"\\n\");"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                        results.append(taskNum.get());"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                        results.append(\". \");"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                        results.append(task);"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                });"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        if (taskNum.get() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            return \"Opps!! Mug don\u0027t have the task you searching :)\";"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            return results.toString();"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * Undo the most recent edited task(add, delete, done)."
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * @return Undo Status"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    public String undoTask(String mugFile, String undoFile) {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            UndoStorage store \u003d new UndoStorage(mugFile, undoFile);"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            store.undo();"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            this.taskList \u003d store.load();"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            return \"Mug has undo successfully :D\";"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        } catch (MugException ex) {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            return ex.getMessage();"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TianYong-Goh": 214
    }
  },
  {
    "path": "src/main/java/tasks/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": " * Create Todo objects extends from Task class."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * Constructs Todo object with Todo\u0027s description."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * @param description Todo\u0027s description."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * Constructs Todo object with Todo\u0027s description and Todo\u0027s status."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * @param description Todo\u0027s describtion"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * @param isDone Todo\u0027s status"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    public Todo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * Create a new Todo object with isDone equal true."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * @return New Todo object."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    protected Todo markAsDone() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        return new Todo(super.description, true);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TianYong-Goh": 41
    }
  },
  {
    "path": "src/main/java/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "package ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import mugexception.MugException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import storage.AddStorage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import storage.DeleteStorage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import storage.DoneStorage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import tasks.TaskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import validator.Validator;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": " * User interaction."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * Read the input command."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * @param input User input."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * @param tasks Task list."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * @return Messages according to the user input."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    public String readCommand(String input, TaskList tasks) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        String output;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            String[] splitInput \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            // Validate Command"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            Command command \u003d Validator.command(splitInput[0]);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            switch (command) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            case LIST:"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                output \u003d listAction(tasks);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            case BYE:"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                output \u003d byeAction();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            case DONE:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                output \u003d doneAction(splitInput, tasks);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            case DELETE:"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                output \u003d deleteAction(splitInput, tasks);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            case TODO:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            case DEADLINE:"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            case EVENT:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                output \u003d taskAction(command, splitInput, tasks);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            case FIND:"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                output \u003d findAction(splitInput, tasks);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            case UNDO:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                output \u003d tasks.undoTask(Storage.MUG_FILE, Storage.UNDO_FILE);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                output \u003d \"Hey!!! I\u0027m sorry, but Mug don\u0027t know what that means :3\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        } catch (MugException ex) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            output \u003d ex.getMessage();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            output \u003d \"There is Something wrong with your Storage.Storage\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    private String doneAction(String[] splitInput, TaskList tasks) throws MugException {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        // Validate splitInput"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        Validator.input(Command.DONE, splitInput.length, false);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        assert(splitInput.length \u003e 1);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        Validator.info(Command.DONE, splitInput[1], false);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        // Extract and validate Id"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        int doneTaskId \u003d Validator.index(splitInput[1], splitInput.length);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        assert(doneTaskId \u003e 0);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        // write local Storage"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        DoneStorage store \u003d new DoneStorage(Storage.MUG_FILE);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        store.doneTask(doneTaskId);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        return tasks.taskDone(doneTaskId);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    private String deleteAction(String[] splitInput, TaskList tasks) throws MugException {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        // Validate splitInput"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        Validator.input(Command.DELETE, splitInput.length, false);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        assert(splitInput.length \u003e 1);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        Validator.info(Command.DELETE, splitInput[1], false);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        // Extract and Validate Id"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        int deleteTaskId \u003d Validator.index(splitInput[1], splitInput.length);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        assert(deleteTaskId \u003e 0);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        // write local Storage"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        DeleteStorage store \u003d new DeleteStorage(Storage.MUG_FILE);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        store.deleteTask(deleteTaskId);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        return tasks.deleteTask(deleteTaskId);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    private String taskAction(Command command, String[] splitInput, TaskList tasks) throws MugException {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        // Validate splitInput"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        Validator.input(command, splitInput.length, false);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        assert(splitInput.length \u003e 1);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        Validator.info(command, splitInput[1], false);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        // Extract Info"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        String info \u003d splitInput[1];"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        // write local storage"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        AddStorage store \u003d new AddStorage(Storage.MUG_FILE);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        store.appendTask(command, info);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        return tasks.addTask(command, info);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    private String findAction(String[] splitInput, TaskList tasks) throws MugException {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        // Validate splitInput"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        Validator.input(Command.FIND, splitInput.length, false);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        assert(splitInput.length \u003e 1);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        Validator.info(Command.FIND, splitInput[1], false);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        // extract keyword"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        String keyword \u003d splitInput[1];"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        return tasks.searchTask(keyword);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    private String byeAction() {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        return \"** Bye. Hope to see you soon!! **\";"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * Undergoes action for list command."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * @param tasks A list of tasks to show."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * @return list of Tasks."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    private String listAction(TaskList tasks) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        return tasks.readList();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TianYong-Goh": 133
    }
  },
  {
    "path": "src/main/java/validator/Validator.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "package validator;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import command.Command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import mugexception.MugException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": " * Validates or parses the user command"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "public class Validator {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * Validates user\u0027s input."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * @param command User command."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * @param splitInputLen Length of the split string."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * @param isTime time related."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * @throws MugException If splitNum less than 2."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    public static void input(Command command, int splitInputLen, boolean isTime) throws MugException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        if (splitInputLen \u003c 2) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            boolean isDeadline \u003d command \u003d\u003d Command.DEADLINE;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            boolean isEvent \u003d command \u003d\u003d Command.EVENT;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            if ((isTime \u0026\u0026 isDeadline)) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                throw new MugException(\"HEY!!! Feed me with {/by [date]}. Mug is hungry T_T\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            } else if (isTime \u0026\u0026 isEvent) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                throw new MugException(\"HEY!!! Feed me with {/at [date]}. Mug is hungry T_T\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                throw new MugException(\"HEY!!! Don\u0027t be stingy give Mug more information \u003e.\u003c\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * Validates the info that user\u0027s input."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * @param command User command."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * @param info Task description."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * @param isTime time related."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * @throws MugException If info pass in is empty."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    public static void info(Command command, String info, boolean isTime) throws MugException {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        boolean isDeadline \u003d command \u003d\u003d Command.DEADLINE;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        boolean isEvent \u003d command \u003d\u003d Command.EVENT;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        if (info.trim().equals(\"\")) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            if ((isTime \u0026\u0026 isDeadline)) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                throw new MugException(\"HEY!!! Feed me with {/by [date]}. Mug is hungry T_T\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            } else if (isTime \u0026\u0026 isEvent) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                throw new MugException(\"HEY!!! Feed me with {/at [date]}. Mug is hungry T_T\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                throw new MugException(\"HEY!!! Don\u0027t be stingy give Mug more information \u003e.\u003c\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * Parses and validates the date."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * @param date Date."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * @return Parse date."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * @throws MugException If date pass in with wrong format."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    public static LocalDate date(String date) throws MugException {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            return LocalDate.parse(date);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        } catch (DateTimeParseException ex) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            throw new MugException(\"Mug is picky. Give him the correct date format(YYYY-MM-DD) XD\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * Parses and validates command."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * @param command User command."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * @return Parse command."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * @throws MugException If wrong command give."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    public static Command command(String command) throws MugException {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            return Command.valueOf(command.toUpperCase());"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        } catch (IllegalArgumentException ex) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            throw new MugException(\"Hey!!! I\u0027m sorry, but Mug don\u0027t know what that means :3\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * Parses and validates integer number."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * @param strIndex Integer in string."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * @param splitInputLen Length of the split string."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * @return Integer number."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     * @throws MugException If splitInputLen smaller than 2 or strIndex is not integer in string."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    public static int index(String strIndex, int splitInputLen) throws MugException {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            int index \u003d Integer.parseInt(strIndex);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            if (splitInputLen \u003c 2) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                throw new MugException(\"HEY!!! Don\u0027t be stingy give Mug more information \u003e.\u003c\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            return index;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        } catch (NumberFormatException ex) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            throw new MugException(\"Please feed Mug an integer number ~_~\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "}"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "TianYong-Goh": 109
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.2\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        \u003cLabel fx:id\u003d\"text\" minHeight\u003d\"-Infinity\" text\u003d\"Label\" textOverrun\u003d\"CLIP\" wrapText\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "         \u003cfont\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            \u003cFont name\u003d\"Comic Sans MS\" size\u003d\"12.0\" /\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "         \u003c/font\u003e\u003c/Label\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"100.0\" fitWidth\u003d\"100.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "TianYong-Goh": 20
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.2\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" style\u003d\"-fx-prompt-text-fill: black;\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" cancelButton\u003d\"true\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "         \u003cfont\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            \u003cFont name\u003d\"Comic Sans MS Bold\" size\u003d\"18.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "         \u003c/font\u003e\u003c/Button\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" pannable\u003d\"true\" prefHeight\u003d\"558.0\" prefWidth\u003d\"400.0\" vbarPolicy\u003d\"ALWAYS\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" style\u003d\"-fx-background-color: #c5efff;\" /\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "TianYong-Goh": 23
    }
  },
  {
    "path": "src/test/java/Storage/StorageTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "package storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "public class StorageTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    private final Storage store \u003d new Storage(\"mug-test.txt\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    public void load() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        ArrayList\u003cTask\u003e actResult \u003d this.store.load();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        StringBuilder actString \u003d new StringBuilder();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        for (Task task: actResult) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            actString.append(task);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        String expResult \u003d \"[T][\\u2718] read book[T][\\u2718] return book\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        assertEquals(expResult, actString.toString());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TianYong-Goh": 28
    }
  },
  {
    "path": "src/test/java/Ui/UiTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "package ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import tasks.TaskList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "public class UiTest {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    private Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    private Storage store \u003d new Storage(\"mug-test.txt\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    private TaskList taskList \u003d new TaskList(new ArrayList\u003cTask\u003e());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    public void readCommandTest() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        String actResult \u003d this.ui.readCommand(\"bye\", taskList);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        String expResult \u003d \"** Bye. Hope to see you soon!! **\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        assertEquals(expResult, actResult);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TianYong-Goh": 25
    }
  },
  {
    "path": "src/test/java/tasks/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import command.Command;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    private final Storage store \u003d new Storage(\"mug-test.txt\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    { store.initialize(); }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    private final TaskList taskList \u003d new TaskList(store.load());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    public void addTask() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        String actResult \u003d this.taskList.addTask(Command.TODO, \"borrow book\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        String expResult \u003d \"Got it. Mug has added this task:\\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                + \"[T][\\u2718] borrow book\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                + \"\\nNow you have \""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                + 3"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                + \" tasks in the list.\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        assertEquals(expResult, actResult);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    public void taskDone() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        String actResult \u003d this.taskList.taskDone(2);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        String expResult \u003d \"Congratz! Mug has marked this task as done:\\n\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                + \"[T][\\u2713] return book\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        assertEquals(expResult, actResult);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    public void deleteTask() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        String actResult \u003d this.taskList.deleteTask(2);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        String expResult \u003d \"Noted. Mug has removed this task:\\n\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            + \"[T][\\u2718] return book\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            + \"\\nNow you have \""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            + 1"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            + \" tasks in the list.\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        assertEquals(expResult, actResult);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    public void readList() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        String actResult \u003d this.taskList.readList();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        String expResult \u003d \"Here is your tasks:\\n\""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                + \"1. [T][\\u2718] read book\\n\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                + \"2. [T][\\u2718] return book\\n\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        assertEquals(expResult, actResult);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    public void searchTask() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        String actResult \u003d this.taskList.searchTask(\"read\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        String expResult \u003d \"Here is the result:\\n\""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                + \"1. [T][\\u2718] read book\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        assertEquals(expResult, actResult);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TianYong-Goh": 64
    }
  },
  {
    "path": "src/test/java/validator/ValidatorTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "package validator;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import command.Command;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import mugexception.MugException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "public class ValidatorTest {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    public void inputTest() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            Validator.input(Command.TODO, 1, true);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        } catch (MugException ex) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            String expect \u003d \"HEY!!! Don\u0027t be stingy give Mug more information \u003e.\u003c\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            assertEquals(expect, ex.getMessage());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    public void infoTest() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            Validator.info(Command.TODO, \"\", true);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        } catch (MugException ex) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            String expect \u003d \"HEY!!! Don\u0027t be stingy give Mug more information \u003e.\u003c\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            assertEquals(expect, ex.getMessage());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    public void dateTest() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            LocalDate actDate \u003d Validator.date(\"2019-01-12\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            LocalDate expDate \u003d LocalDate.parse(\"2019-01-12\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            assertEquals(expDate, actDate);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        } catch (MugException ex) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            ex.printStackTrace();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    public void commandTest() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            Command command \u003d Validator.command(\"todo\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            assertEquals(Command.TODO, command);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        } catch (MugException ex) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            ex.printStackTrace();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    public void indexTest() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            int index \u003d Validator.index(\"2\", 4);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            assertEquals(2, index);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        } catch (MugException ex) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            ex.printStackTrace();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TianYong-Goh": 65
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "command"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "todo"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "todo"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "todo borrow textbook"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "deadline return book"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "deadline return book /by"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "deadline return book /by 2019-12-02"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "event"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "event"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "event project meeting"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "event project meeting /at"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "event project meeting /at 2019-12-01"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "deadline do homework /by no idea :-p"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "list"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "done 5"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "delete 5"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "list"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "find text"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "find hello"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "TianYong-Goh": 26
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "set JAVA_TOOL_OPTIONS\u003d-Dfile.encoding\u003dUTF-8"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "TianYong-Goh": 2,
      "-": 21
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "export LC_ALL\u003den_GB.UTF-8"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "if"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "  ! ("
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    find ../src/main/java -name \"*.java\" \u003esources.txt"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    javac -cp ../src -Xlint:none -d ../bin @sources.txt"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "  )"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "java -classpath ../bin Mug \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "TianYong-Goh": 7,
      "-": 36
    }
  },
  {
    "path": "text-ui-test/sources.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "../src/main/java/ui/Ui.java"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "../src/main/java/tasks/TaskList.java"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "../src/main/java/tasks/Event.java"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "../src/main/java/tasks/Task.java"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "../src/main/java/tasks/Deadline.java"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "../src/main/java/tasks/Todo.java"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "../src/main/java/Mug.java"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "../src/main/java/mugexception/MugException.java"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "../src/main/java/validator/Parser.java"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "../src/main/java/storage/Storage.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "../src/main/java/DialogBox.java"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "../src/main/java/Main.java"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "../src/main/java/MainWindow.java"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "../src/main/java/command/Command.java"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "../src/main/java/Launcher.java"
      }
    ],
    "authorContributionMap": {
      "TianYong-Goh": 15
    }
  }
]
