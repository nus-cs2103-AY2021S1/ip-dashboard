[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jialin7878"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jialin7878"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jialin7878"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "    toolVersion \u003d \u00278.29\u0027"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jialin7878": 18,
      "-": 44
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "? ? read book "
      }
    ],
    "authorContributionMap": {
      "jialin7878": 1
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialin7878"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialin7878"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "    protected static char sym \u003d \u0027\\u270F\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialin7878"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "    public Deadline(String desc, LocalDateTime time) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "        super(desc);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "        symbol \u003d sym;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "        this.time \u003d \"/\" + time.format(formatter);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jialin7878": 12
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jialin7878"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jialin7878"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "    private Label text;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jialin7878"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "    public DialogBox(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "        text \u003d l;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "        displayPicture \u003d iv;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jialin7878"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "        text.setWrapText(true);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "        displayPicture.setFitWidth(100.0);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "        displayPicture.setFitHeight(100.0);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jialin7878"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "        this.setAlignment(Pos.TOP_RIGHT);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "        this.getChildren().addAll(text, displayPicture);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jialin7878"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "        this.setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "        FXCollections.reverse(tmp);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "        this.getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jialin7878"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "    public static DialogBox getUserDialog(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "        return new DialogBox(l, iv);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jialin7878"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "    public static DialogBox getDukeDialog(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "        var db \u003d new DialogBox(l, iv);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jialin7878": 45
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialin7878"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialin7878"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "    private DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialin7878"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jialin7878"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "        storage \u003d new Storage(\"data/Duke.txt\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "        tasks \u003d new TaskList(storage.loadFile());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jialin7878"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "    String getResponse(String input) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "        return processInput(input);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jialin7878"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "     * Processes each command line by line,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "     * calling the corresponding methods"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "     * Exits when user inputs \"bye\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "    String processInput(String msg) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "        if (msg.equals(\"bye\")) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "            return \"Bye bye. Talk again soon!\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "        } else if (msg.equals(\"list\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "            return displayList();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "        } else if (msg.contains(\"done\")) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "            int index \u003d Integer.parseInt(msg.replace(\"done \", \"\").trim());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "            return markAsDone(index);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "        } else if (msg.contains(\"delete\")) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "            int index \u003d Integer.parseInt(msg.replace(\"delete \", \"\").trim());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "            return delete(index);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "        } else if (msg.contains(\"todo\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "            return addToList(msg.replace(\"todo \", \"\"), Type.TODO);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "        } else if (msg.contains(\"event\")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "            return addToList(msg.replace(\"event \", \"\"), Type.EVENT);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "        } else if (msg.contains(\"deadline\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "            return addToList(msg.replace(\"deadline \", \"\"), Type.DEADLINE);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "        } else if (msg.contains(\"find\")) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "            return find(msg.replace(\"find \", \"\"));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "            return \"Sorry, Poco didn\u0027t understand. Try again?\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jialin7878"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "     * Prints each item in the task list"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "    String displayList() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "        if (tasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "            return \"Yay, all done!\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "            return tasks.toString();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jialin7878"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "     * Adds corresponding task to task list"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "     *"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "     * @param msg description of task"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "     * @param type type of task"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "    String addToList(String msg, Type type) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "        if (msg.trim().isEmpty()) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "            return \"Poco noticed that your task is empty\";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "            String[] sp \u003d new String[]{msg};"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "            switch (type) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "            case TODO:"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "                tasks.add(new ToDo(msg));"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "            case EVENT:"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "                sp \u003d msg.split(\"/\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "                LocalDateTime ldt \u003d LocalDateTime.parse(sp[1].trim(), formatter);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "                tasks.add(new Event(sp[0], ldt));"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "            case DEADLINE:"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "                sp \u003d msg.split(\"/\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "                LocalDateTime ld \u003d LocalDateTime.parse(sp[1].trim(), formatter);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "                tasks.add(new Deadline(sp[0], ld));"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "            }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "            storage.saveFile(tasks);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "            return \"Poco has added \" + sp[0] + \" to your list\" + \"\\n\""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "                    + \"Pending Tasks: \" + tasks.size();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jialin7878"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jialin7878"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "     * Marks the task at index in task list as done"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "     *"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "     * @param index index of item that is done"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "     */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "    String markAsDone(int index) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "        index--;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "        if (index \u003c 0 || index \u003e\u003d tasks.size()) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "            return \"Poco cannot find the task: \" + index;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "            tasks.done(index);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "            storage.saveFile(tasks);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "            return \"Good job!\" + \"\\n\""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "                    + tasks.get(index).toString();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jialin7878"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "     * Deletes the task at index in task list"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "     *"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "     * @param index index of item to be deleted"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "     */"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "    String delete(int index) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "        index--;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "        if (index \u003c 0 || index \u003e\u003d tasks.size()) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "            index++;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "            return \"Poco cannot find the task: \" + index;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "            tasks.remove(index);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "            storage.saveFile(tasks);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "            return \"Poco has deleted the task\" + \"\\n\""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "                    + tasks.get(index).toString();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "        }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "jialin7878"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "jialin7878"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "    String find(String match) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "        return tasks.find(match);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "jialin7878"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "enum Type {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "    TODO, EVENT, DEADLINE"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jialin7878": 131,
      "-": 5
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "public class DukeException extends java.lang.Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "    public DukeException(String errorMsg) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "        super(errorMsg);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jialin7878": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialin7878"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialin7878"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "    static char sym \u003d \u0027\\u23F1\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialin7878"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "    public Event(String desc, LocalDateTime time) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "        super(desc);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "        symbol \u003d sym;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "        this.time \u003d \"/\" + time.format(formatter);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jialin7878"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jialin7878"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "    public Event(String desc) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "        super(desc);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "        symbol \u003d sym;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jialin7878": 18
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialin7878"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialin7878"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jialin7878": 8
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialin7878"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jialin7878"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jialin7878"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jialin7878"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jialin7878"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jialin7878"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jialin7878": 29
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jialin7878"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jialin7878"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jialin7878"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jialin7878"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jialin7878"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jialin7878"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jialin7878"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jialin7878"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "                DialogBox.getUserDialog(new Label(input), new ImageView(userImage)),"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "                DialogBox.getDukeDialog(new Label(response), new ImageView(dukeImage))"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "        );"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jialin7878": 52
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jialin7878": 2
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jialin7878"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jialin7878"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jialin7878"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jialin7878"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "     * Calls initFile first as a check"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "     * Reads the file at the filepath and"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "     * parses each line as a task to add to list"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "     * @return array list of tasks in the file"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "    ArrayList\u003cTask\u003e loadFile() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "        initFile();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jialin7878"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "        ArrayList\u003cTask\u003e ls \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "            File f \u003d new File(this.filePath);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "            BufferedReader reader \u003d new BufferedReader(new FileReader(f));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "            //loads txt into ls"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "            while (true) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "                String line \u003d reader.readLine();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "                if (line \u003d\u003d null || line.isEmpty()) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "                    //no more tasks"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "                }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "                Task task \u003d Task.parseToTask(line);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "                if (task !\u003d null) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "                    ls.add(task);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "                }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "            reader.close();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "        } catch (IOException ex) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "            System.out.println(ex.toString());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "        return ls;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jialin7878"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "     * Saves the param TaskList into"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "     * the file at the specified filepath"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "     * @param ls task list"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "    void saveFile(TaskList ls) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "        File f \u003d new File(this.filePath);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "            BufferedWriter writer \u003d new BufferedWriter(new FileWriter(f));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "            writer.write(ls.toString());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "            writer.close();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "        } catch (IOException ex) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "            System.out.println(ex.toString());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jialin7878"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "     * Checks if the directory or file exists"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "     * and if not, creates one"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "    void initFile() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "        File dir \u003d new File (\"data\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "        //create dir if not there"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "        if (!dir.isDirectory()) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "            if (!dir.mkdir()) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "                System.out.println(\"Error creating folder\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "            }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jialin7878"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "        File f \u003d new File(this.filePath);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "        //create file if not there"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "        if (!f.exists()) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "                if (!f.createNewFile()) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "                    System.out.println(\"Error creating file\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "                }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "            } catch (IOException ex) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "                System.out.println(ex.toString());"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "            }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jialin7878": 92
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialin7878"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "    String desc;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "    boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "    char symbol;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "    String time \u003d \"\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jialin7878"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "    DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"EEE dd MMM HH:mm\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jialin7878"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jialin7878"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jialin7878"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "    public Task(String desc) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "        this.desc \u003d desc;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jialin7878"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "        String check \u003d isDone ? \"\\u2713\" : \"\\u2718\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "        return check + \" \" + symbol + \" \" + desc + \" \" + time;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jialin7878"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "    public void done() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jialin7878"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "    public static Task parseToTask(String line) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "        char c \u003d line.charAt(2);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "        String desc \u003d line.substring(4);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "        Task t;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jialin7878"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "        if (c \u003d\u003d ToDo.sym) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "            t \u003d new ToDo(desc);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "        } else if (c \u003d\u003d Event.sym) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "            t \u003d new Event(desc);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "            System.out.println(\"Error didn\u0027t recognize task symbol\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jialin7878"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "        char d \u003d line.charAt(0);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jialin7878"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "        //check if its done"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "        if (d \u003d\u003d \u0027\\u2713\u0027) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "            t.done();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jialin7878"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "        return t;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jialin7878"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jialin7878": 51
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialin7878"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "    private ArrayList\u003cTask\u003e ls \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialin7878"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "        ls.addAll(list);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jialin7878"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "     * Adds param task into this.ls"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "     * @param task task to be added to list"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "    void add(Task task) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "        ls.add(task);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jialin7878"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "     * Returns size of this.ls"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "     * @return int"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "    int size() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "        return ls.size();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jialin7878"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "     * Marks the task at index in this.ls as done"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "     * @param index index of task that is done"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "    void done(int index) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "        ls.get(index).done();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jialin7878"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "     * Removes the task at index in this.ls"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "     * @param index index of task to be removed"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "    void remove(int index) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "        ls.remove(index);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jialin7878"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "     * Returns task at index in this.ls"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "     * @param index index of task to be returned"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "     * @return Task"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "    Task get(int index) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "        return ls.get(index);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jialin7878"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "    String find(String match) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "        String s \u003d \"\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "        for (Task task : ls) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "            if (task.toString().contains(match)) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "                s \u003d s.concat(task.toString());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "                s \u003d s.concat(\"\\n\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "        return s;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jialin7878"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "        String s \u003d \"\";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "        for (Task task : ls) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "            s \u003d s.concat(task.toString());"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "            s \u003d s.concat(\"\\n\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "        return s;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jialin7878": 75
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "    static char sym \u003d \u0027\\u270F\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialin7878"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "    public ToDo(String desc) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "        super(desc);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "        symbol \u003d sym;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jialin7878": 8
    }
  },
  {
    "path": "src/main/java/UI.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "public class UI {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jialin7878": 2
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialin7878"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialin7878"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "jialin7878": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialin7878"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jialin7878"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "jialin7878": 19
    }
  },
  {
    "path": "src/test/data/test.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "✘ ✏ dance "
      }
    ],
    "authorContributionMap": {
      "jialin7878": 1
    }
  },
  {
    "path": "src/test/java/StorageTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "import org.junit.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialin7878"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialin7878"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "import static org.junit.Assert.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialin7878"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "public class StorageTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "    public void emptyFileTest() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "        Storage store \u003d new Storage(\"data/new.txt\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "        ArrayList\u003cTask\u003e ls \u003d store.loadFile();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "        assertEquals(new ArrayList\u003c\u003e(), ls);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jialin7878"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "    public void saveAndLoadTest() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "        File file \u003d new File(\"data/test.text\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "        file.delete();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "        Storage store \u003d new Storage(\"data/test.txt\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "        ArrayList\u003cTask\u003e ls \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "        ls.add(new ToDo(\"dance\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "        store.saveFile(new TaskList(ls));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jialin7878"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jialin7878"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "        assertEquals(\"✘ ✏ dance  \\n\", new TaskList(store.loadFile()).toString());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jialin7878": 28
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "jialin7878": 1
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jialin7878"
        },
        "content": "    "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jialin7878"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "jialin7878": 3,
      "-": 14
    }
  }
]
