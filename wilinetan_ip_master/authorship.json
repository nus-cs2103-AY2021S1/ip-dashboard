[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    mainClassName \u003d \"seedu.duke.Duke\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    toolVersion \u003d \u00278.29\u0027"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    enableAssertions \u003d true"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "compileJava.options.encoding \u003d \u0027UTF-8\u0027"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "tasks.withType(JavaCompile) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    options.encoding \u003d \u0027UTF-8\u0027"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 46,
      "wilinetan": 22
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "T | 1 | read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "D | 1 | return book | 6/6/2020 1800"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "E | 0 | meeting | mon 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "T | 1 | study"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "E | 0 | training | tues 4-6pm"
      }
    ],
    "authorContributionMap": {
      "wilinetan": 5
    }
  },
  {
    "path": "gradlew.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "@rem  Gradle startup script for Windows"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "@rem Set local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "set DIRNAME\u003d%~dp0"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "set APP_BASE_NAME\u003d%~n0"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "set APP_HOME\u003d%DIRNAME%"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "@rem Find java.exe"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "if defined JAVA_HOME goto findJavaFromJavaHome"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "set JAVA_EXE\u003djava.exe"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "echo."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "echo."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ":findJavaFromJavaHome"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "if exist \"%JAVA_EXE%\" goto init"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "echo."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "echo."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ":init"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "@rem Get command-line arguments, handling Windows variants"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ":win9xME_args"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "@rem Slurp the command line arguments."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "set CMD_LINE_ARGS\u003d"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "set _SKIP\u003d2"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ":win9xME_args_slurp"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "if \"x%~1\" \u003d\u003d \"x\" goto execute"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "set CMD_LINE_ARGS\u003d%*"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ":execute"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "@rem Setup the command line"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "@rem Execute Gradle"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ":end"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "@rem End local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ":fail"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "rem the _cmd.exe /c_ return code!"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "exit /b 1"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ":mainEnd"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ":omega"
      }
    ],
    "authorContributionMap": {
      "wilinetan": 84
    }
  },
  {
    "path": "src/main/java/AddDeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "public class AddDeadlineCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    public static final boolean IS_EXIT \u003d false;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    protected String input;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     * Creates a AddDeadlineCommmand Object to handle adding Deadline to list."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     * @param input The input that user types in."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    public AddDeadlineCommand(String input) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        super(IS_EXIT);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     * @param tasks The entire list of tasks."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     * @param ui Ui object to deal with user interaction."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     * @param storage Storage object to deal with loading tasks from the file and saving tasks in the file."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     * @throws DukeException when the input is not valid."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        if (input.length() \u003c\u003d 9 || !input.contains(\"/by\")) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        String[] splitStr \u003d input.split(\"/by \");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        String description \u003d splitStr[0].substring(9).trim();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        Deadline deadline \u003d new Deadline(description, splitStr[1]);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        tasks.addTask(deadline);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        storage.writeNewDataToFile(\"D\", \"0\", deadline.getDescription(), deadline.getBy());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        System.out.println(\"    Got it. I\u0027ve added this task:\\n      \" + deadline + \"\\n    Now you have \""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "                + tasks.getSize() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wilinetan": 38
    }
  },
  {
    "path": "src/main/java/AddEventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "public class AddEventCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    public static final boolean IS_EXIT \u003d false;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    protected String input;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     * Creates a AddEventCommand Object to handle adding Event to list."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     * @param input The input that user types in."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    public AddEventCommand(String input) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        super(IS_EXIT);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     * @param tasks The entire list of tasks."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     * @param ui Ui object to deal with user interaction."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     * @param storage Storage object to deal with loading tasks from the file and saving tasks in the file."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     * @throws DukeException when the input is not valid."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        if (input.length() \u003c\u003d 6 || !input.contains(\"/at\")) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        String[] splitStr \u003d input.split(\"/at \");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        String description \u003d splitStr[0].substring(6).trim();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        Event event \u003d new Event(description, splitStr[1]);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        tasks.addTask(event);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        storage.writeNewDataToFile(\"E\", \"0\", event.getDescription(), event.getTime());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        System.out.println(\"    Got it. I\u0027ve added this task:\\n      \" + event + \"\\n    Now you have \""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "                + tasks.getSize() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wilinetan": 39
    }
  },
  {
    "path": "src/main/java/AddTodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "public class AddTodoCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    public static final boolean IS_EXIT \u003d false;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    protected String input;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     * Creates a AddTodoCommand Object to handle adding Todo to list."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     * @param input The input that user types in."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    public AddTodoCommand(String input) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        super(IS_EXIT);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     * @param tasks The entire list of tasks."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     * @param ui Ui object to deal with user interaction."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     * @param storage Storage object to deal with loading tasks from the file and saving tasks in the file."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     * @throws DukeException when the input is not valid."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        if (input.length() \u003c\u003d 5) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        Todo todo \u003d new Todo(input.substring(5));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        tasks.addTask(todo);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        storage.writeNewDataToFile(\"T\", \"0\", todo.getDescription(), \"\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        System.out.println(\"    Got it. I\u0027ve added this task:\\n      \" + todo + \"\\n    Now you have \""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "                + tasks.getSize() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wilinetan": 36
    }
  },
  {
    "path": "src/main/java/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    public static final boolean IS_EXIT \u003d true;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     * Creates a ByeCommand Object to handle the case when user says bye."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    public ByeCommand() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        super(IS_EXIT);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     * @param tasks The entire list of tasks."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     * @param ui Ui object to deal with user interaction."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     * @param storage Storage object to deal with loading tasks from the file and saving tasks in the file."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        System.out.println(\"    Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wilinetan": 22
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    protected boolean isExit;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     * Creates an abstract Command Object."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     * @param isExit whether the programme should end"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    public Command(boolean isExit) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        this.isExit \u003d isExit;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        return isExit;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wilinetan": 19
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    protected LocalDateTime dateTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     * Creates a Deadline object that represents a deadline."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     * @param description Description of the deadline."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     * @param by The time of the deadline."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        String[] dateAndTime \u003d by.split(\" \");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        String[] date \u003d dateAndTime[0].split(\"/\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        String time \u003d dateAndTime[1];"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        LocalDateTime dateTime \u003d LocalDateTime.of(Integer.parseInt(date[2]), Integer.parseInt(date[1]),"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "                Integer.parseInt(date[0]), Integer.parseInt(time.substring(0, 2)), Integer.parseInt(time.substring(2)));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        this.dateTime \u003d dateTime;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     * Return the Deadline time."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     * @return The Deadline time."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    public String getBy() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        return this.by;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     * Return the string to be printed out for Deadline."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     * @return The string to be printed out for Deadline."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        String period \u003d dateTime.getHour() \u003e\u003d 12 ? \"PM\" : \"AM\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        String hour \u003d dateTime.getHour() \u003e 12"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "                ? Integer.toString(dateTime.getHour() - 12)"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "                : Integer.toString(dateTime.getHour());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        if (dateTime.getMinute() \u003e 0) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "            return \"[D]\" + super.toString() + \" (by: \" + dateTime.getDayOfMonth() + \" \" + dateTime.getMonth() + \" \""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "                    + dateTime.getYear() + \" \" + hour + \".\" + dateTime.getMinute() + period + \")\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "            return \"[D]\" + super.toString() + \" (by: \" + dateTime.getDayOfMonth() + \" \" + dateTime.getMonth() + \" \""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "                    + dateTime.getYear() + \" \" + hour + period + \")\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wilinetan": 55
    }
  },
  {
    "path": "src/main/java/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    public static final boolean IS_EXIT \u003d false;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    protected String input;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     * Creates a DeleteCommand Object to handle deleting a task from the list."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     * @param input The input that user types in."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    public DeleteCommand(String input) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        super(IS_EXIT);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     * @param tasks The entire list of tasks."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     * @param ui Ui object to deal with user interaction."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     * @param storage Storage object to deal with loading tasks from the file and saving tasks in the file."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     * @throws DukeException when the input is not valid."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        String[] splitStr \u003d input.split(\" \");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        if (splitStr.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! I don\u0027t know which task to delete.\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        int taskIndex \u003d Integer.parseInt(splitStr[1]) - 1;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        Task task \u003d tasks.getTask(taskIndex);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        tasks.removeTask(taskIndex);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        storage.deleteCurrentDataInFile(taskIndex + 1, tasks.getSize());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        System.out.println(\"    Noted. I\u0027ve removed this task:\\n      \" + task + \"\\n    Now you have \""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "                + tasks.getSize() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wilinetan": 39
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wilinetan"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wilinetan"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wilinetan"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wilinetan"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wilinetan": 59
    }
  },
  {
    "path": "src/main/java/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    public static final boolean IS_EXIT \u003d false;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    protected String input;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     * Creates a DoneCommand Object to handle checking a task as completed."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     * @param input The input that user types in."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    public DoneCommand(String input) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        super(IS_EXIT);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     * @param tasks The entire list of tasks."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     * @param ui Ui object to deal with user interaction."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     * @param storage Storage object to deal with loading tasks from the file and saving tasks in the file."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     * @throws DukeException when the input is not valid."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        String[] splitStr \u003d input.split(\" \");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        if (splitStr.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! I don\u0027t know which task to mark as done.\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        int taskIndex \u003d Integer.parseInt(splitStr[1]) - 1;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        Task task \u003d tasks.getTask(taskIndex);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        task.markAsDone();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        if (task.getTaskType().equals(\"T\")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "            storage.editCurrentDataInFile(taskIndex + 1, task.getTaskType(), \"1\", task.getDescription(),"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "                    \"\", tasks.getSize());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        } else if (task.getTaskType().equals(\"D\")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "            Deadline deadline \u003d (Deadline) task;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "            storage.editCurrentDataInFile(taskIndex + 1, task.getTaskType(), \"1\", task.getDescription(),"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "                    deadline.getBy(), tasks.getSize());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "            Event event \u003d (Event) task;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "            storage.editCurrentDataInFile(taskIndex + 1, task.getTaskType(), \"1\", task.getDescription(),"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "                    event.getTime(), tasks.getSize());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        System.out.println(\"    Nice! I\u0027ve marked this task as done:\\n      \" + task);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wilinetan": 50
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     * Creates a Duke Object."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        String currentDir \u003d System.getProperty(\"user.dir\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        String filePath \u003d currentDir + File.separator + \"data\" + File.separator + \"duke.txt\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     * Creates a Duke Object."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     * @param filePath The path to the txt file to store the data."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     * You should have your own function to generate a response to user input."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     * Replace this stub with your completed method."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        return \"Duke heard: \" + input;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     * Runs the Duke chatbot programme"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     * Main method to start the Duke chatbot programme"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     * @param args The command line arguments."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        String currentDir \u003d System.getProperty(\"user.dir\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        String path \u003d currentDir + File.separator + \"data\" + File.separator + \"duke.txt\";"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        new Duke(path).run();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wilinetan": 76,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    private String message;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        this.message \u003d message;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     * Return the error message."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     * @return the error message."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        return \"    \" + message;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        return this.message;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wilinetan": 20
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    protected String time;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     * Creates a Event object that represents an event."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     * @param description Description of the event."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     * @param time The time of the event."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    public Event(String description, String time) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     * Return the Event time."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     * @return The Event time."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    public String getTime() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        return this.time;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + time + \")\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wilinetan": 29
    }
  },
  {
    "path": "src/main/java/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    public static final boolean IS_EXIT \u003d false;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    protected String input;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     * Creates a FindCommand Object to handle user asking for a keyword."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     * @param input Keyword to find."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    public FindCommand(String input) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        super(IS_EXIT);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        if (input.length() \u003c\u003d 5) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! The description of a find cannot be empty.\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        String[] splitStr \u003d input.split(\" \");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        ArrayList\u003cTask\u003e tasksWithWord \u003d tasks.find(splitStr[1]);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        System.out.println(\"    Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        for (int i \u003d 0; i \u003c tasksWithWord.size(); i++) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "            Task task \u003d tasksWithWord.get(i);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "            System.out.println(\"    \" + (i + 1) + \".\" + task);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wilinetan": 33
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wilinetan"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wilinetan"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wilinetan": 10
    }
  },
  {
    "path": "src/main/java/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    public static final boolean IS_EXIT \u003d false;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     * Creates a ListCommand Object to handle user asking for the entire list of tasks."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    public ListCommand() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        super(IS_EXIT);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     * @param tasks The entire list of tasks."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     * @param ui Ui object to deal with user interaction."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     * @param storage Storage object to deal with loading tasks from the file and saving tasks in the file."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        System.out.println(\"    Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.getSize(); i++) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "            Task task \u003d tasks.getTask(i);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "            System.out.println(\"    \" + (i + 1) + \".\" + task);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "}"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "wilinetan": 28
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wilinetan"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wilinetan"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wilinetan": 29
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wilinetan"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wilinetan"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        );"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wilinetan": 49
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     * Return the Command to be exectued."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     * @param command The command from the user."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     * @return The Command to be executed."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     * @throws DukeException when the input is not valid."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    public static Command parse(String command) throws DukeException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        if (command.equals(\"bye\")) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "            return new ByeCommand();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        } else if (command.equals(\"list\")) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        } else if (command.contains(\"done\")) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "            return new DoneCommand(command);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        } else if (command.contains(\"todo\")) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "            return new AddTodoCommand(command);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        } else if (command.contains(\"deadline\")) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "            return new AddDeadlineCommand(command);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        } else if (command.contains(\"event\")) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "            return new AddEventCommand(command);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        } else if (command.contains(\"delete\")) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "            return new DeleteCommand(command);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        } else if (command.contains(\"find\")) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "            return new FindCommand(command);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wilinetan": 31
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    protected String filePath;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     * Load the file if it exists or creates it if it does not."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     * @return The List of Tasks."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     * @throws DukeException when the file cannot be found or read."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        File f \u003d new File(filePath);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        if (f.exists() \u0026\u0026 !f.isDirectory()) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "                for (String line : Files.readAllLines(Paths.get(filePath))) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "                    String[] data \u003d line.split(\" \\\\| \");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "                    String taskType \u003d data[0];"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "                    switch (taskType) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "                    case \"T\":"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "                        Todo todo \u003d new Todo(data[2]);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "                        if (data[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "                            todo.markAsDone();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "                        tasks.add(todo);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "                    case \"D\":"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "                        Deadline deadline \u003d new Deadline(data[2], data[3]);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "                        if (data[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "                            deadline.markAsDone();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "                        tasks.add(deadline);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "                    case \"E\":"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "                        Event event \u003d new Event(data[2], data[3]);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "                        if (data[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "                            event.markAsDone();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "                        tasks.add(event);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "                    default:"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "                        throw new DukeException(\"Line cannot be read\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "                return tasks;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "            } catch (IOException ex) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "                System.out.println(\"Error reading file\" + ex);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "                throw new DukeException(\"Error reading file\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "                f.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "                f.createNewFile();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "            } catch (IOException ex) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "                System.out.println(\"Error creating file\" + ex);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "                throw new DukeException(\"Error reading file\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        return new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     * Add new Task to the file."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     * @param taskType The type of the Task."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     * @param done Whether the task is completed."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     * @param description Description of the Task."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     * @param deadline The time attached to the Task."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     * @throws DukeException When there is error writing to the file."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    public void writeNewDataToFile(String taskType, String done, String description, String deadline)"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "            throws DukeException {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "            FileWriter myWriter \u003d new FileWriter(filePath, true);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "            switch (taskType) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "            case \"T\":"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "                myWriter.write(\"\\n\" + taskType + \" | \" + done + \" | \" + description);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "                myWriter.close();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "            case \"D\":"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "            case \"E\":"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "                myWriter.write(\"\\n\" + taskType + \" | \" + done + \" | \" + description + \" | \" + deadline);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "                myWriter.close();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "                throw new DukeException(\"Data cannot be written to file due to missing task type.\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        } catch (IOException ex) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "            System.out.println(\"Problem writing to file\" + ex);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "            throw new DukeException(\"Error writing to file.\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     * Edit a Task in the file."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     * @param taskNumber The index of the Task."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     * @param taskType The type of the Task."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     * @param done Whether the task is completed."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     * @param description Description of the Task."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     * @param deadline The time attached to the Task."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     * @param total The total number of Tasks in the list."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     * @throws DukeException When there is error writing to the file."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    public void editCurrentDataInFile(int taskNumber, String taskType, String done,"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "                                             String description, String deadline, int total) throws DukeException {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "            BufferedReader br \u003d new BufferedReader(new FileReader(filePath));"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "            //String buffer to store contents of the file"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "            StringBuffer sb \u003d new StringBuffer(\"\");"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "            //Keep track of the line number"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "            int linenumber \u003d 1;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "            String line;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "            while ((line \u003d br.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "                //Store each valid line in the string buffer"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "                if (linenumber !\u003d taskNumber \u0026\u0026 linenumber !\u003d total) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "                    sb.append(line + \"\\n\");"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "                } else if (linenumber !\u003d taskNumber) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "                    sb.append(line);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "                    String data;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "                    if (taskType.equals(\"T\")) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "                        data \u003d taskType + \" | \" + done + \" | \" + description;"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "                        data \u003d taskType + \" | \" + done + \" | \" + description + \" | \" + deadline;"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "                    if (linenumber \u003d\u003d total) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "                        sb.append(data);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "                        sb.append(data + \"\\n\");"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "                linenumber++;"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "            br.close();"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "            FileWriter fw \u003d new FileWriter(new File(filePath));"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "            //Write entire string buffer into the file"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "            fw.write(sb.toString());"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "            System.out.println(\"Error editing file: \" + e.getMessage());"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "            throw new DukeException(\"Error editing file\");"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     * Delete a Task in the file."
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     * @param taskNumber The index of the Task."
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     * @param total The total number of Tasks in the list."
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     * @throws DukeException When there is error writing to the file."
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    public static void deleteCurrentDataInFile(int taskNumber, int total) throws DukeException {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "            String currentDir \u003d System.getProperty(\"user.dir\");"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "            String pathToFile \u003d currentDir + File.separator + \"data\" + File.separator + \"duke.txt\";"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "            BufferedReader br \u003d new BufferedReader(new FileReader(pathToFile));"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "            //String buffer to store contents of the file"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "            StringBuffer sb \u003d new StringBuffer(\"\");"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "            //Keep track of the line number"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "            int linenumber \u003d 1;"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "            String line;"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "            while ((line \u003d br.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "                //Store each valid line in the string buffer"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "                if (linenumber !\u003d taskNumber \u0026\u0026 linenumber \u003d\u003d total + 1) {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "                    sb.append(line);"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "                } else if (linenumber !\u003d taskNumber) {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "                    sb.append(line + \"\\n\");"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "                linenumber++;"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "            br.close();"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "            FileWriter fw \u003d new FileWriter(new File(pathToFile));"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "            //Write entire string buffer into the file"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "            fw.write(sb.toString());"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        } catch (Exception ex) {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "            System.out.println(\"Error deleting task: \" + ex.getMessage());"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "            throw new DukeException(\"Error deleting task.\");"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wilinetan": 212
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     * Creates a Task object to represent a task."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     * @param description Description of the Task."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     * Return the status icon of the Task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     * @return The status icon of the Task."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     * Update the Task as done."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     * @return true when the Task is marked as done."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    public boolean markAsDone() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     * Return the task type of the Task."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     * @return The task type of the Task."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    public String getTaskType() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        if (this instanceof Todo) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "            return \"T\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        } else if (this instanceof Deadline) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "            return \"D\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "            return \"E\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     * Return the description of the Task."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     * @return The description of the Task."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wilinetan": 62
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    protected ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     * Creates a TaskList object to contain all the Tasks from an empty list."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     * Creates a TaskList object to contain all the current Tasks."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     * Return the size of the list."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     * @return The size of the list."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     * Return the Task at the given index."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     * @param index Index of the Task."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     * @return The Task at the given index."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    public Task getTask(int index) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        return tasks.get(index);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     * Add a Task to the list."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     * @param task Task to be added."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     * @return true when Task is added."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    public boolean addTask(Task task) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        return tasks.add(task);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     * Remove the Task at the given index."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     * @param index Index of the Task."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     * @return The Task that was removed."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    public Task removeTask(int index) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        return tasks.remove(index);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     * Find the all Tasks with descriptions containing the word."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     * @param word Word to find."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     * @return The lists of Tasks containing the word."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    public ArrayList\u003cTask\u003e find(String word) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        ArrayList\u003cTask\u003e tasksWithWord \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "            if (task.getDescription().contains(word)) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "                tasksWithWord.add(task);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        return tasksWithWord;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wilinetan": 75
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wilinetan": 10
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    protected Scanner sc;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        this.sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     * Show the welcome message."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        System.out.println(\"    ___________________________________________________________\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        System.out.println(\"    Hello! I\u0027m Duke\\n    What can I do for you?\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        System.out.println(\"    ___________________________________________________________\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     * Read the next user input."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     * @return The next user input."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        return sc.nextLine();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     * Show the divider line."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        System.out.println(\"    ___________________________________________________________\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     * Show the loading error message."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        System.out.println(\"Error loading file\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     * Show the error message."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    public void showError(String errorMessage) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        System.out.println(errorMessage);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wilinetan": 49
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "wilinetan": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "wilinetan": 19
    }
  },
  {
    "path": "src/test/java/ByeCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "import java.io.ByteArrayOutputStream;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "public class ByeCommandTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    public void executeTest() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        System.setOut(new PrintStream(outContent));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        ByeCommand byeCommand \u003d new ByeCommand();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        tasks.add(new Todo(\"read book\"));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        String currentDir \u003d System.getProperty(\"user.dir\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        String path \u003d currentDir + File.separator + \"data\" + File.separator + \"duke.txt\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        Storage storage \u003d new Storage(path);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        byeCommand.execute(taskList, ui, storage);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        String expectedOutput \u003d \"    Bye. Hope to see you again soon!\\n\"; // Notice the \\n for new line."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        assertEquals(expectedOutput, outContent.toString());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wilinetan": 35
    }
  },
  {
    "path": "src/test/java/TaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "public class TaskTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    public void getTaskTypeTest() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        Task task \u003d new Todo(\"borrow book\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        String result \u003d task.getTaskType();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        assertEquals(\"T\", result);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wilinetan"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    public void getStatusIconTest() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        Task task \u003d new Todo(\"borrow book\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        task.markAsDone();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "        assertEquals(\"\\u2713\", task.getStatusIcon());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wilinetan": 19
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "todo"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "wilinetan": 8
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "if ! javac -encoding UTF-8 -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "#java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wilinetan"
        },
        "content": "java -Dfile.encoding\u003dUTF-8 -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "-": 36,
      "wilinetan": 3
    }
  }
]
