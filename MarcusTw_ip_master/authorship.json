[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "    final String by;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "    Deadline(String description, String by) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "        super(description, TaskType.DEADLINE);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "        return super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MarcusTw": 12
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "    private TaskList list;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "            list \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "        } catch (DukeInvalidData dukeInvalidData) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "            list \u003d new TaskList();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "        ui.intro();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "        while (sc.hasNext()) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "            String nextLine \u003d sc.nextLine();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "            if (nextLine.equals(\"bye\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "                ui.printBye();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "            } else if (nextLine.equals(\"list\")) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "                ui.printWindow(list.getListAsString());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "            } else if (nextLine.startsWith(\"done\")) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "                    ui.showMarkDone(list.markDone(nextLine));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "                } catch (DukeEmptyDoneIndexException | DukeInvalidDoneIndexException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "                    ui.printWindow(e.getMessage());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "                }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "            } else if (nextLine.startsWith(\"delete\")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "                    ui.showDeleted(list.deleteTask(nextLine), list.getSize());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "                } catch (DukeInvalidDeleteIndexException | DukeEmptyDeleteIndexException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "                    ui.printWindow(e.getMessage());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "                }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "                    ui.showAdded(list.addTask(nextLine), list.getSize());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "                } catch (DukeUnknownInputException |"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "                        DukeEmptyByException |"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "                        DukeEmptyAtException |"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "                        DukeEmptyDescriptionException e) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "                    ui.printWindow(e.getMessage());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "                }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "                storage.save(list.list);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "                ui.printWindow(e.getMessage());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "    public static void checkAndMakeDir(String filePath) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "        new File(filePath).mkdir();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "        String homePath \u003d System.getProperty(\"user.home\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "        checkAndMakeDir(homePath + \"/data\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "        Duke duke \u003d new Duke(homePath + \"/data/duke.txt\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "        duke.run();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "//        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "//                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "//                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "//                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "//                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "//        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MarcusTw": 74,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeDeleteTaskException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "public class DukeDeleteTaskException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "    DukeDeleteTaskException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MarcusTw": 5
    }
  },
  {
    "path": "src/main/java/DukeDoneException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "public class DukeDoneException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "    DukeDoneException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MarcusTw": 5
    }
  },
  {
    "path": "src/main/java/DukeEmptyAtException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "public class DukeEmptyAtException extends DukeTaskException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "    DukeEmptyAtException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MarcusTw": 5
    }
  },
  {
    "path": "src/main/java/DukeEmptyByException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "public class DukeEmptyByException extends DukeTaskException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "    DukeEmptyByException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MarcusTw": 5
    }
  },
  {
    "path": "src/main/java/DukeEmptyDeleteIndexException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "public class DukeEmptyDeleteIndexException extends DukeDeleteTaskException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "    DukeEmptyDeleteIndexException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MarcusTw": 5
    }
  },
  {
    "path": "src/main/java/DukeEmptyDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "public class DukeEmptyDescriptionException extends DukeTaskException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "    DukeEmptyDescriptionException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MarcusTw": 5
    }
  },
  {
    "path": "src/main/java/DukeEmptyDoneIndexException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "public class DukeEmptyDoneIndexException extends DukeDoneException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "    DukeEmptyDoneIndexException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MarcusTw": 5
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "    String message;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "    DukeException(String message) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "        return this.message;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MarcusTw": 11
    }
  },
  {
    "path": "src/main/java/DukeInvalidData.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "public class DukeInvalidData extends DukeStorageException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "    DukeInvalidData(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MarcusTw": 5
    }
  },
  {
    "path": "src/main/java/DukeInvalidDeleteIndexException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "public class DukeInvalidDeleteIndexException extends DukeDeleteTaskException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "    DukeInvalidDeleteIndexException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MarcusTw": 5
    }
  },
  {
    "path": "src/main/java/DukeInvalidDoneIndexException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "public class DukeInvalidDoneIndexException extends DukeDoneException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "    DukeInvalidDoneIndexException(String message) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MarcusTw": 6
    }
  },
  {
    "path": "src/main/java/DukeInvalidStoragePathException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "public class DukeInvalidStoragePathException extends DukeStorageException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "    DukeInvalidStoragePathException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MarcusTw": 5
    }
  },
  {
    "path": "src/main/java/DukeStorageException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "public class DukeStorageException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "    DukeStorageException(String message) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MarcusTw": 6
    }
  },
  {
    "path": "src/main/java/DukeTaskException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "public class DukeTaskException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "    DukeTaskException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MarcusTw": 5
    }
  },
  {
    "path": "src/main/java/DukeUnknownInputException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "public class DukeUnknownInputException extends DukeTaskException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "    DukeUnknownInputException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MarcusTw": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "    final String at;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "    Event(String description, String at) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "        super(description, TaskType.EVENT);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "        return super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MarcusTw": 12
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "    private final String filePath;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "    public List\u003cTask\u003e load() throws DukeInvalidData {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "        File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "        List\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "            Scanner sc \u003d new Scanner(file);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "            while (sc.hasNext()) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "                String next \u003d sc.nextLine();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "                String[] tokens \u003d next.split(\" \\\\| \");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "                if (tokens.length \u003c 3) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "                    throw new DukeInvalidData(\"Oops data is invalid\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "                }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "                String taskType \u003d tokens[0];"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "                String isDone \u003d tokens[1];"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "                String description \u003d tokens[2];"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "                Task task;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "                if (taskType.equals(\"T\")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "                    task \u003d new Todo(description);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "                } else if (tokens.length !\u003d 4) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "                    throw new DukeInvalidData(\"Oops data is invalid\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "                } else if (taskType.equals(\"D\")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "                    task \u003d new Deadline(description, tokens[3]);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "                } else if (taskType.equals(\"E\")) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "                    task \u003d new Event(description, tokens[3]);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "                    throw new DukeInvalidData(\"Oops data is invalid\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "                }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "                if (isDone.equals(\"1\")) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "                    task.markAsDone();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "                    list.add(task);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "                } else if (isDone.equals(\"0\")) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "                    list.add(task);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "                    throw new DukeInvalidData(\"Oops data is invalid\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "                }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "            FileWriter writer;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "                writer \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "                writer.write(\"\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "            } catch (IOException ioException) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "                System.out.println(ioException.getMessage());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "                list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "            }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "    public void save(List\u003cTask\u003e tasksList) throws IOException {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "        File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "        FileWriter writer \u003d new FileWriter(file);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "        for (int i \u003d 0; i \u003c tasksList.size(); i++) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "            Task task \u003d tasksList.get(i);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "            TaskType type \u003d task.taskType;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "            String s \u003d \"\";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "            switch (type) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "                case TODO:"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "                    s \u003d String.format(\"T | %d | %s\", task.isDone ? 1 : 0, task.description);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "                case DEADLINE:"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "                    Deadline deadline \u003d (Deadline) task;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "                    s \u003d String.format(\"D | %d | %s | %s\", deadline.isDone ? 1 : 0,"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "                            deadline.description, deadline.by);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "                case EVENT:"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "                    Event event \u003d (Event) task;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "                    s \u003d String.format(\"E | %d | %s | %s\", event.isDone ? 1 : 0,"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "                            event.description, event.at);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "            }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "            if (i !\u003d tasksList.size() - 1) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "                s +\u003d \"\\n\";"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "            }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "            writer.write(s);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "        writer.close();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MarcusTw": 97
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "    protected final String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "    protected final TaskType taskType;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "    public Task(String description, TaskType taskType) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "        this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "//            return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "        //For checking purposes, V is checkmark and X is cross"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "        return (isDone ? \"✓\" : \"✘\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "        return taskType + \"[\" + getStatusIcon() +\"] \" + description;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MarcusTw": 26
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "    static final String INDENT \u003d \"    \";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "    static final String UNKNOWN_TASK_ERROR \u003d \"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that meows :-(\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "    static final String EMPTY_BY_ERROR \u003d \"☹ OOPS!!! The deadline cannot be empty.\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "    static final String EMPTY_AT_ERROR \u003d \"☹ OOPS!!! The event time cannot be empty.\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "    static final String NO_SUCH_TASK \u003d \"☹ OOPS!!! There is no such task.\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "    static final String EMPTY_TASK_INDEX \u003d \"☹ OOPS!!! The task index cannot be empty.\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "    static final String EMPTY_DESCRIPTION_ERROR(String task) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "        return String.format(\"☹ OOPS!!! The description of %s cannot be empty.\", task);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "    protected List\u003cTask\u003e list;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "        this.list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "    public TaskList(List\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "        this.list \u003d taskList;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "    public Task addTask(String t) throws DukeEmptyDescriptionException,"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "            DukeEmptyByException, DukeEmptyAtException,"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "            DukeUnknownInputException{"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "        Task toBeAdded;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "        String des;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "        String[] tokens;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "        if (t.startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "                des \u003d t.substring(5);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "                toBeAdded \u003d new Todo(des);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "                list.add(toBeAdded);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "            } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "                throw new DukeEmptyDescriptionException(EMPTY_DESCRIPTION_ERROR(\"todo\"));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "        } else if (t.startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "            tokens \u003d t.split(\" /by \");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "                des \u003d tokens[0].substring(9);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "                toBeAdded \u003d new Deadline(des, tokens[1]);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "                list.add(toBeAdded);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "            } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "                throw new DukeEmptyDescriptionException(EMPTY_DESCRIPTION_ERROR(\"deadline\"));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "                throw new DukeEmptyByException(EMPTY_BY_ERROR);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "        } else if (t.startsWith(\"event\")) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "                tokens \u003d t.split(\" /at \");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "                des \u003d tokens[0].substring(6);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "                toBeAdded \u003d new Event(des, tokens[1]);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "                list.add(toBeAdded);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "            } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "                throw new DukeEmptyDescriptionException(EMPTY_DESCRIPTION_ERROR(\"event\"));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "                throw new DukeEmptyAtException(EMPTY_AT_ERROR);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "            }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "            throw new DukeUnknownInputException(UNKNOWN_TASK_ERROR);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "        return toBeAdded;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "    public Task markDone(String md) throws DukeInvalidDoneIndexException, DukeEmptyDoneIndexException {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "        int index;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "            String[] tokens \u003d md.split(\" \");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "            index \u003d Integer.parseInt(tokens[1]);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "            Task task \u003d list.get(index - 1);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "            task.markAsDone();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "            return task;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "            throw new DukeEmptyDoneIndexException(EMPTY_TASK_INDEX);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "            throw new DukeInvalidDoneIndexException(NO_SUCH_TASK);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "    public Task deleteTask(String dt) throws DukeInvalidDeleteIndexException, DukeEmptyDeleteIndexException {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "        int index;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "            String[] tokens \u003d dt.split(\" \");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "            index \u003d Integer.parseInt(tokens[1]);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "            Task removedTask \u003d list.remove(index - 1);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "            return removedTask;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "            throw new DukeEmptyDeleteIndexException(EMPTY_TASK_INDEX);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "            throw new DukeInvalidDeleteIndexException(NO_SUCH_TASK);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "    public static String getListAsStringFromList(List\u003cTask\u003e  list, String alternative) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "        String s \u003d \"\";"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "        for (int i \u003d 0; i \u003c list.size(); i ++) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "            s +\u003d (i + 1) + \".\" + list.get(i);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "            if (i !\u003d list.size() - 1) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "                s +\u003d \u0027\\n\u0027 + INDENT;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "            }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "        if (s.equals(\"\")) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "            return alternative;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "            return s;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "    public String getListAsString() {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "        return getListAsStringFromList(this.list, \"There is nothing in the list!\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "        return list.size();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MarcusTw": 120
    }
  },
  {
    "path": "src/main/java/TaskType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "public enum TaskType {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "    TODO(\"[T]\"), DEADLINE(\"[D]\"), EVENT(\"[E]\");"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "    private final String bracketedTaskType;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "    TaskType(String bracketedTaskType) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "        this.bracketedTaskType \u003d bracketedTaskType;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "        return bracketedTaskType;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MarcusTw": 14
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "        super(description, TaskType.TODO);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "        return super.toString();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MarcusTw": 10
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "    static final String SOCCAT \u003d"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "            \"                 .                         .                             \\n\" +"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "            \"                ...                       ...                            \\n\" +"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "            \"               /@@@\u0026*                   (@@@@@\u0026*                         \\n\" +"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "            \"              /@@@@@@@@\u0026*            /@@@@@@@@@@#                        \\n\" +"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "            \"             *\u0026@@@@@@@@@@@@*       /@@@@@@@@@@@@\u0026/                       \\n\" +"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "            \"             %\u0026@@@@@@@@@@@@@@%.  *@@@@@@@@@@@@@@@\u0026/                      \\n\" +"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "            \"            /@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#                     \\n\" +"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "            \"           /@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@,                   \\n\" +"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "            \"         .@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@,                 \\n\" +"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "            \"        *@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@.               \\n\" +"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "            \"       #@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@,              \\n\" +"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "            \"      %@@@@@@@@@@@@*,#@@@@@@@@@@@@@@@@@@@%..,\u0026@@@@@@@@@@@@@/             \\n\" +"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "            \"     (@@@@@@@@@@@%    *@@@@@@@@@@@@@@@@@@    ,@@@@@@@@@@@@@\u0026             \\n\" +"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "            \"     @@@@@@@@@@@@@@@   \u0026@@@@@@@@@@@@@@@@@@\u0026.  %@@@@@@@@@@@@@(            \\n\" +"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "            \"    (@@@@@@@@@@@@(     #@@@@@@@@@@@@@@@@@.    /@@@@@@@@@@@@\u0026%            \\n\" +"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "            \"    *@\u0026\u0026\u0026\u0026\u0026@@@@@@(     /@@@@@@@@@@@@@@@@@.    *@@@@@@\u0026\u0026\u0026\u0026\u0026\u0026\u0026(            \\n\" +"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "            \"     %\u0026\u0026\u0026\u0026\u0026\u0026\u0026\u0026@@@\u0026     (@@@@@@@@@@@@@@@@@*    #@@@\u0026@\u0026\u0026\u0026\u0026\u0026\u0026\u0026%             \\n\" +"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "            \"     .\u0026\u0026\u0026\u0026\u0026\u0026\u0026\u0026@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\u0026\u0026\u0026\u0026\u0026\u0026\u0026\u0026,             \\n\" +"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "            \"       ,\u0026\u0026\u0026\u0026\u0026\u0026@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\u0026\u0026\u0026\u0026(               \\n\" +"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "            \"         .(@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\u0026\u0026/                 \\n\" +"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "            \"             ,#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%*.                    \\n\" +"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "            \"                    ,/#@@@@@@@@@@@@@@@@@@@@@@#                           \\n\" +"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "            \"                      #\u0026@@@@@@@@@@@@@@@@@@@\u0026\u0026\u0026\u0026.                         \\n\" +"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "            \"                     ,\u0026@@@@@@@@@@@@@@@@@@@@@@@@@/                        \\n\" +"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "            \"                     #@@@@@@@@@@@@@@@@@@@@@@@@@@@@.                      \\n\" +"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "            \"                    ,@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@(                     \\n\" +"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "            \"                    @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\u0026.                   \\n\" +"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "            \"                   /@@@@@@@@@@@@@@@@@@@@@@\u0026@@@@@@@@@@\u0026,                  \\n\" +"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "            \"                   %@@@@@@@@@@@@@@@@@@@@@\u0026@@@@@@@@@@@@\u0026.                 \\n\" +"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "            \"                   @@@@@@@@@@@@@@@@@@@@@%\u0026@@@@@@@@@@@@\u0026\u0026#*,.             \\n\" +"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "            \"                  *@@@@@@@@@@@@@@@@@@@@@\u0026\u0026@@@@@@@@@@@\u0026\u0026*.,#\u0026\u0026@@@*        \\n\" +"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "            \"                  ,@@@@@@@@@\u0026@@@@@@@@@@\u0026@@@@@@@@@@@@\u0026\u0026(       .(\u0026@@(     \\n\" +"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "            \"                    ./#%\u0026\u0026%..,***////**(@@@@@@@@@\u0026\u0026%*            ,@@@*   \\n\" +"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "            \"                                                                    @@(  \\n\" +"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "            \"                                                       *%#*@#/@#(\u0026@\u0026.    \\n\" +"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "            \"                                                  /\u0026@@@%##/\u0026@@@@\u0026,       \\n\" +"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "            \"                                                @@@@@@#\u0026@@@@@@@@@        \\n\" +"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "            \"                                           .(@@\u0026#\u0026@\u0026\u0026\u0026\u0026\u0026%@@@@@@@*        \\n\" +"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "            \"                                           \u0026%\u0026\u0026\u0026%\u0026\u0026\u0026\u0026\u0026\u0026\u0026\u0026\u0026@@#            \\n\" +"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "            \"                                            .*%@@@%@@%, ..               \\n\" +"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "            \"                                                  .                      \";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "    static final String HORIZONTAL_LINE \u003d"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "            \"____________________________________________________________\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "    static final String INDENT \u003d \"    \";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "    public void printWindow(String s) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "        System.out.println(INDENT + HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "        System.out.println(INDENT + s);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "        System.out.println(INDENT + HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "    public void printBye() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "        System.out.println(INDENT + HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "        System.out.println(INDENT + \"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "        System.out.print(INDENT + HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "    public void intro() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "        System.out.println(INDENT + HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "        System.out.println(SOCCAT);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "        System.out.println(\"    Hello! I\u0027m Soccat Duke\\n\" +"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "                \"    What do you meow?\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "        System.out.println(INDENT + HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "    public void showMarkDone(Task task) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "        printWindow(\"Nice! I\u0027ve marked this task as done: \\n\" +"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "                \"      \" + task);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "    public void showAdded(Task addedTask, int listSize) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "        printWindow(\"Got it. I\u0027ve added this task:\\n\" +"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "                INDENT + \"  \" + addedTask + \"\\n\" +"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "                INDENT +"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "                String.format(\"Now you have %d tasks in the in the list\", listSize));"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "    public void showDeleted(Task deletedTask, int listSize) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "        printWindow(\"Noted. I\u0027ve removed this task: \\n\" +"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "                \"      \" + deletedTask +"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "                String.format(\"\\n     Now you have %d tasks in the list.\", listSize));"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "        printWindow(\"Oops, error in loading the tasks! Please check the duke.txt file\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MarcusTw": 89
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "deadline return book /by June 6th"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "event project meeting /at Aug 6th 2-4pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "todo join sports club"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "MarcusTw": 11
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "SET MY_PATH\u003dC:\\Users\\Marcus\\Desktop\\NUS CS\\Year 2 - Sem 1\\CS2103T\\ip"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "if not exist \"%MY_PATH%\\bin\" mkdir \"%MY_PATH%\\bin\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "javac  -cp \"%MY_PATH%\\src\\main\\java\" -Xlint:none -d \"%MY_PATH%\\bin\" \"%MY_PATH%\\src\\main\\java\\Duke.java\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "MarcusTw"
        },
        "content": "java -classpath \"%MY_PATH%\\bin\" Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "MarcusTw": 5,
      "-": 18
    }
  }
]
