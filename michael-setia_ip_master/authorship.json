[
  {
    "path": "src/main/java/duke/command/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "import duke.main.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "michael-setia"
        },
        "content": " * ByeCommand is a Command to shut down Duke."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "michael-setia"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     * Says bye to the user."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     * @param tasks The related TaskList."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    public void perform(TaskList tasks) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        System.out.println(\" Bye! Hope to see you again in the future!\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     * Checks if this is a termination Command."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     * @return True."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "michael-setia": 29
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "import duke.main.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "/** Command is used to perform a or a number of operations on the given TaskList or just simply"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "michael-setia"
        },
        "content": " *  prints messages to the user."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "michael-setia"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     * Performs the desired operations."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     * @param tasks The related TaskList."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    public abstract void perform(TaskList tasks);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     * Checks if this Command is a termination Command."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     * @return True if this Command is a termination Command, otherwise false."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    public abstract boolean isExit();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "michael-setia": 22
    }
  },
  {
    "path": "src/main/java/duke/command/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "import duke.main.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "michael-setia"
        },
        "content": " * DeadlineCommand is Command to add a Deadline to the related TaskList."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "michael-setia"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "public class DeadlineCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    /** The Deadline that wants to be added to the TaskList. */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    protected Deadline deadline;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     * Constructs a DeadlineCommand."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     * @param description The description of the Deadline to be added to the TaskList."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     * @param date The date of the Deadline to be added to the TaskList."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    public DeadlineCommand(String description, String date) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        this.deadline \u003d new Deadline(description, date);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     * Adds the Deadline to the related TaskList."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     * @param tasks The related TaskList."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    public void perform(TaskList tasks) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        tasks.add(deadline);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        System.out.println(\" Okay! I have added this task:\" + \"\\n\" + \"   \""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "                + deadline.toString() + \"\\n\" + \" Now you have \" + tasks.size() + (tasks.size() \u003e 1 ? \" tasks.\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "                : \" task.\"));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     * Checks if this is a termination Command."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     * @return False."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "michael-setia": 46
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "import duke.main.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "michael-setia"
        },
        "content": " * DeleteCommand is a Command to delete a Task from the related TaskList."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "michael-setia"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    /** The index of the Task that wants to be deleted from the TaskList. */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    protected int taskNumber;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     * Constructs a DeleteCommand."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     * @param taskNumber Index of Task that wants to be deleted."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    public DeleteCommand(String taskNumber) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        this.taskNumber \u003d Integer.parseInt(taskNumber);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     * Deletes a Task from the related TaskList based on the given index."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     * @param tasks The related TaskList."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    public void perform(TaskList tasks) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        Task task \u003d tasks.get(taskNumber - 1);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        tasks.delete(taskNumber - 1);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        System.out.println(\" Okie! I have deleted this task: \" + \"\\n\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "                + \"   \" + task.toString() + \"\\n\" + \" Now you have \" + tasks.size() + (tasks.size() \u003e 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "                ? \" tasks.\" : \" task.\"));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     * Checks if this is a termination Command."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     * @return False."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "michael-setia": 46
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "import duke.main.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "michael-setia"
        },
        "content": " * DoneCommand is a Command to mark as done a Task in the related TaskList based on the given index."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "michael-setia"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    /** The index of the Task that wants to be marked as done. */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    protected int taskNumber;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     * Constructs a DoneCommand."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     * @param taskNumber The index of the Task that wants to be marked as done."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    public DoneCommand(String taskNumber) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        this.taskNumber \u003d Integer.parseInt(taskNumber);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     * Marks as done the Task in the TaskList based on the given index."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     * @param tasks The related TaskList."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    public void perform(TaskList tasks) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        Task task \u003d tasks.get(taskNumber - 1);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        task.markAsDone();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        System.out.println(\" Yay! I have marked this task as done: \" + \"\\n\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "                + \"   \" + task.toString());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     * Checks if this is a termination Command."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     * @return False."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "michael-setia": 45
    }
  },
  {
    "path": "src/main/java/duke/command/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "import duke.main.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "michael-setia"
        },
        "content": " * EventCommand is Command to add a Command to the related TaskList."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "michael-setia"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "public class EventCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    /** The Event that wants to be added to the TaskList. */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    protected Event event;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     * Constructs an EventCommand."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     * @param taskDescription The description of the Event."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     * @param date The date of the Event."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    public EventCommand(String taskDescription, String date) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        this.event \u003d new Event(taskDescription, date);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     * Adds the Event to the related TaskList."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     * @param tasks The related TaskList."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    public void perform(TaskList tasks) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        tasks.add(event);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        System.out.println(\" Okay! I have added this task:\" + \"\\n\" + \"   \""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "                + event.toString() + \"\\n\" + \" Now you have \" + tasks.size() + (tasks.size() \u003e 1 ? \" tasks.\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "                : \" task.\"));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     * Checks if this is a termination Command."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     * @return False."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "michael-setia": 45
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "import duke.main.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    protected String keyword;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    public FindCommand(String keyword) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    public void perform(TaskList tasks) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        TaskList temp \u003d new TaskList();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            Task t \u003d tasks.get(i);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            String description \u003d t.getInfo()[1];"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            if (containSameWord(keyword, description)) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "                System.out.println(keyword + \" \" + description);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "                temp.add(t);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        if (temp.size() \u003e 0) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            System.out.println(\" Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            for (int i \u003d 0; i \u003c temp.size(); i++) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "                Task t \u003d temp.get(i);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "                System.out.println(\" \" + (i + 1) + \".\" + t.toString());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            System.out.println(\" There are no tasks that match the keyword.\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    // String \u0027a\u0027 must be a single word"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    public boolean containSameWord(String a, String b) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        boolean hasSameWord \u003d false;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        String[] stringArr \u003d b.split(\" \");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        for (String s : stringArr) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            //System.out.println(s + \" \" + a);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            if (s.equals(a)) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "                hasSameWord \u003d true;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        return hasSameWord;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "michael-setia": 54
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "import duke.main.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "michael-setia"
        },
        "content": " * ListCommand is Command to list all the Task that the user have stored in the related TaskList."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "michael-setia"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     * Lists all the task in the related TaskList."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     * @param tasks The related TaskList."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    public void perform(TaskList tasks) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        System.out.println(\" These are the tasks in your list:\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            Task t \u003d tasks.get(i);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            System.out.println(\" \" + (i + 1) + \".\" + t.toString());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     * Checks if this is a termination Command."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     * @return False."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "michael-setia": 34
    }
  },
  {
    "path": "src/main/java/duke/command/TodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "import duke.main.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "michael-setia"
        },
        "content": " * TodoCommand is Command to add a Todo to the related TaskList."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "michael-setia"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "public class TodoCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     * The Todo that wants to be added to the related TaskList."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    protected Todo todo;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     * Constructs a TodoCommand."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     * @param taskDescription The description of the Todo."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    public TodoCommand(String taskDescription) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        this.todo \u003d new Todo(taskDescription);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     * Adds the Todo to the related TaskList."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     * @param tasks The related TaskList."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    public void perform(TaskList tasks) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        tasks.add(todo);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        System.out.println(\" Okay! I have added this task:\" + \"\\n\" + \"   \""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "                + todo.toString() + \"\\n\" + \" Now you have \" + tasks.size() + (tasks.size() \u003e 1 ? \" tasks.\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "                : \" task.\"));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     * Checks if this is a termination Command."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     * @return False."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "michael-setia": 47
    }
  },
  {
    "path": "src/main/java/duke/exception/DeadlineIncompleteException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "michael-setia"
        },
        "content": " * Exception that occurs when the user does not specify anything about the Deadline."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "michael-setia"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "public class DeadlineIncompleteException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     * Returns String message of this Exception."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     * @return String message of this Exception."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        return \" Oh no! Please specify the description of a deadline.\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "michael-setia": 17
    }
  },
  {
    "path": "src/main/java/duke/exception/DeleteIncompleteException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "michael-setia"
        },
        "content": " * Exception that occurs when the user does not specify which Task to be deleted."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "michael-setia"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "public class DeleteIncompleteException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     * Returns String message of this Exception."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     * @return String message of this Exception."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        return \" Oh no! Please specify which task to be deleted.\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "michael-setia": 17
    }
  },
  {
    "path": "src/main/java/duke/exception/DeleteOutOfListException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "michael-setia"
        },
        "content": " * Exception that occurs when the user input an invalid number for the file that wants to be deleted."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "michael-setia"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "public class DeleteOutOfListException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     * Returns String message of this Exception."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     * @return String message of this Exception."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        return \" Oh no! Task number cannot be zero or negative\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "                + \"\\n\" + \" Please refer to your task list to find the\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "                + \"\\n\" + \" appropriate task number :)\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "michael-setia": 19
    }
  },
  {
    "path": "src/main/java/duke/exception/DoneIncompleteException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "michael-setia"
        },
        "content": " * Exception that occurs when the user does not specify which Task to be marked as done."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "michael-setia"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "public class DoneIncompleteException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     * Returns String message of this Exception."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     * @return String message of this Exception."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        return \" Oh no! Please specify which task to be marked as done.\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "michael-setia": 17
    }
  },
  {
    "path": "src/main/java/duke/exception/DoneOutOfListException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "michael-setia"
        },
        "content": " * Exception that occurs when the user input an invalid number for the file that wants to be marked as done."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "michael-setia"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "public class DoneOutOfListException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     * Returns String message of this Exception."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     * @return String message of this Exception."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        return \" Oh no! Task number cannot be zero or negative\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "                + \"\\n\" + \" Please refer to your task list to find the\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "                + \"\\n\" + \" appropriate task number :)\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "michael-setia": 19
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "/** Parent class for exception in Duke. */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "michael-setia": 6
    }
  },
  {
    "path": "src/main/java/duke/exception/EventIncompleteException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "michael-setia"
        },
        "content": " * Exception that occurs when the user does not specify anything about the Event."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "michael-setia"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "public class EventIncompleteException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     * Returns String message of this Exception."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     * @return String message of this Exception."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        return \" Oh no! Please specify the description of an event.\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "michael-setia": 17
    }
  },
  {
    "path": "src/main/java/duke/exception/FindIncompleteException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "public class FindIncompleteException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        return \" Oh no! Please specify a keyword of the task that you \""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "                + \"\\n\" + \" want to find.\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "michael-setia": 10
    }
  },
  {
    "path": "src/main/java/duke/exception/NoInputException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "michael-setia"
        },
        "content": " * Exception that occurs when the user does not input anything (only hit enter)."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "michael-setia"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "public class NoInputException extends DukeException{"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     * Returns String message of this Exception."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     * @return String message of this Exception."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        return \" No input detected.\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "michael-setia": 17
    }
  },
  {
    "path": "src/main/java/duke/exception/TodoIncompleteException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "michael-setia"
        },
        "content": " * Exception that occurs when the user does not specify anything about the Todo."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "michael-setia"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "public class TodoIncompleteException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     * Returns String message of this Exception."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     * @return String message of this Exception."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        return \" Oh no! Please specify the description of a todo.\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "michael-setia": 17
    }
  },
  {
    "path": "src/main/java/duke/exception/UnknownInputException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "michael-setia"
        },
        "content": " * Exception that occurs when the user inputs an invalid command that Duke does not understand."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "michael-setia"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "public class UnknownInputException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     * Returns String message of this Exception."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     * @return String message of this Exception."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        return \" Oh no! Sorry, but I do not know what that means :(\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "michael-setia": 17
    }
  },
  {
    "path": "src/main/java/duke/main/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "package duke.main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "michael-setia"
        },
        "content": " * Duke is a chatbot that can help us manage and store our various kinds of Task."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "michael-setia"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    /** TaskList to store Tasks. */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    private final TaskList tasks;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    /** Storage to store data to hard disk */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    private final Storage storage;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    /** Ui for interacting with user. */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    private final Ui ui;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     * Constructs a Duke."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        // Create storage"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        storage \u003d new Storage();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        // Read from hard disk"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        tasks \u003d storage.readFromHardDisk();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        // Initialize Ui"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     * Runs Duke."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        // Display greeting message"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        ui.showLine();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        ui.showGreetingMessage();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        ui.showLine();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        // Process user input"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            String input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "                Command command \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "                command.perform(tasks);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "                storage.writeToHardDisk(tasks);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "                isExit \u003d command.isExit();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     * Main method of duke."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     * @param args Arguments."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        duke.run();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "michael-setia": 70,
      "-": 2
    }
  },
  {
    "path": "src/main/java/duke/main/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "package duke.main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "import duke.command.ByeCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "import duke.command.DeadlineCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "import duke.command.DoneCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "import duke.command.EventCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "import duke.command.FindCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "import duke.command.TodoCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "import duke.exception.DeadlineIncompleteException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "import duke.exception.DeleteIncompleteException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "import duke.exception.DeleteOutOfListException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "import duke.exception.DoneIncompleteException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "import duke.exception.DoneOutOfListException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "import duke.exception.EventIncompleteException;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "import duke.exception.FindIncompleteException;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "import duke.exception.NoInputException;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "import duke.exception.TodoIncompleteException;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "import duke.exception.UnknownInputException;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "/**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "michael-setia"
        },
        "content": " * Parser is used to make sense the input from the user and convert it to executable command."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "michael-setia"
        },
        "content": " */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    public static String[] commands \u003d {\"list\", \"done\", \"deadline\", \"event\", \"todo\", \"delete\", \"bye\", \"find\"};"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    public static ArrayList\u003cString\u003e VALID_COMMAND \u003d new ArrayList\u003c\u003e(Arrays.asList(commands));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     * Checks the correctness of the input by the user."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     * @param line The input from the user."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     * @throws DukeException If user\u0027s input is invalid."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    public static void checkInput(String line) throws DukeException {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        String[] input \u003d line.split(\" \");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        String command \u003d input[0];"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        if (command.equals(\"\")) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            throw new NoInputException();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        } else if (!VALID_COMMAND.contains(input[0])) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            throw new UnknownInputException();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        } else if (input.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            switch (command) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "                case \"done\":"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "                    throw new DoneIncompleteException();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "                case \"deadline\":"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "                    throw new DeadlineIncompleteException();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "                case \"event\":"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "                    throw new EventIncompleteException();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "                case \"todo\":"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "                    throw new TodoIncompleteException();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "                case \"delete\":"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "                    throw new DeleteIncompleteException();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "                case \"find\":"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "                    throw new FindIncompleteException();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        } else if (command.equals(\"done\")) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            if (Integer.parseInt(input[1]) \u003c 1) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "                throw new DoneOutOfListException();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        } else if (command.equals(\"delete\")) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            if (Integer.parseInt(input[1]) \u003c 1) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "                throw new DeleteOutOfListException();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     * Translates user input into executable Command."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     * @param c The input from the user."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     * @return Command that will be executed."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     * @throws DukeException If user\u0027s input is invalid."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    public static Command parse(String c) throws DukeException {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        // Check command input"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        checkInput(c);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        String[] s \u003d c.split(\" \");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        String commandType \u003d s[0];"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        switch (commandType) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            return new ByeCommand();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        case \"done\": {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            String taskNumber \u003d s[1];"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            return new DoneCommand(taskNumber);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        case \"delete\": {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            String taskNumber \u003d s[1];"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            return new DeleteCommand(taskNumber);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            String taskDescription \u003d c.substring(5);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            return new TodoCommand(taskDescription);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        case \"deadline\": {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            // Split string to get date"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            String[] str \u003d c.split(\" /by \");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            // Ignore task type"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            String description \u003d str[0].substring(9);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            String date \u003d str[1];"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            return new DeadlineCommand(description, date);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        case \"find\": {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            return new FindCommand(s[1]);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        default: {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            // Split string to get date"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            String[] str \u003d c.split(\" /at \");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            // Ignore task type"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            String description \u003d str[0].substring(6);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            String date \u003d str[1];"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            return new EventCommand(description, date);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "michael-setia": 124
    }
  },
  {
    "path": "src/main/java/duke/main/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "package duke.main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "/**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "michael-setia"
        },
        "content": " * Storage is used to store Tasks to the hard disk from a TaskList. It can"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "michael-setia"
        },
        "content": " * also be used to read file to input data to a TaskList."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "michael-setia"
        },
        "content": " */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     * Converts a String from hard disk into a Task."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     * @param s String from the hard disk."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     * @return A Task based on the given String."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    public Task convertFromHardDisk(String s) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        String[] data \u003d s.split(\" / \");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        String taskType \u003d data[0];"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        boolean isDone \u003d data[1].equals(\"1\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        String description \u003d data[2];"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        if (taskType.equals(\"T\")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            task \u003d new Todo(description);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        } else if (taskType.equals(\"D\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            String date \u003d data[3];"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            task \u003d new Deadline(description, date);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            String date \u003d data[3];"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            task \u003d new Event(description, date);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            task.markAsDone();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     * Converts a Task into a String that can be stored in the hard disk."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     * @param t The Task to be converted to String."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     * @return A String representation of the given Task that can be stored in the hard disk."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    public String convertToHardDisk(Task t) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        String[] info \u003d t.getInfo();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        String taskType \u003d info[0];"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        String description \u003d info[1];"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        String isDone \u003d t.isDone() ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        if (taskType.equals(\"T\")) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            return taskType + \" / \" + isDone + \" / \" + description;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        } else if (taskType.equals(\"D\")) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            return taskType + \" / \" + isDone + \" / \" + description + \" / \" + info[2];"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            return taskType + \" / \" + isDone + \" / \" + description + \" / \" + info[2];"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     * Reads all data from hard disk, then convert all the data into Tasks."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     * @return A TaskList that contains all the Tasks from the hard disk."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    public TaskList readFromHardDisk() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        // Create paths for the file"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        String projectRoot \u003d System.getProperty(\"user.dir\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        // p1 is used for creating directory"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        Path p1 \u003d Paths.get(projectRoot, \"data\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        Path p2 \u003d Paths.get(projectRoot, \"data\", \"task.txt\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        String path \u003d p2.toString();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        File data \u003d new File(path);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        // Make directory if it does not exist"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        if (!Files.exists(p1)) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            File temp \u003d new File(p1.toString());"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            boolean created \u003d temp.mkdir();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            if (!created) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "                System.out.println(\"Cannot create directory for storage file! List will not\" + \"\\n\" +"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "                        \"be saved until the directory and the file are created.\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        // ArrayList to store task"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        ArrayList\u003cTask\u003e storage \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            Scanner sc \u003d new Scanner(data);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "                // Convert line to task, then add to storage"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "                storage.add(convertFromHardDisk(sc.nextLine()));"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "                // Create file if it does not exist"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "                /* The case for file does not exist is handled separately so that the"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "                 * user does not need to delete the entire folder."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "                 */"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "                boolean created \u003d data.createNewFile();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "                if (!created) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "                    System.out.println(\"Cannot create storage file! List will not be saved until the \" +"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "                            \"file is created\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "                }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            } catch (IOException x) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "                x.printStackTrace();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        return new TaskList(storage);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     * Writes all Tasks from a TaskList to hard disk."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     * @param storage Tasklist that wants to be stored in the hard disk."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    public void writeToHardDisk(TaskList storage) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        String projectRoot \u003d System.getProperty(\"user.dir\");"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        Path p2 \u003d Paths.get(projectRoot, \"data\", \"task.txt\");"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            FileWriter fw \u003d new FileWriter(p2.toString());"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            StringBuilder text \u003d new StringBuilder();"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            for (int i \u003d 0; i \u003c storage.size(); i++) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "                Task t \u003d storage.get(i);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "                text.append(convertToHardDisk(t)).append(\"\\n\");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            fw.write(text.toString());"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "michael-setia": 143
    }
  },
  {
    "path": "src/main/java/duke/main/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "package duke.main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "michael-setia"
        },
        "content": " * TaskList is a container for Task. It has query, delete, and add function."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "michael-setia"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    /** List to store the Tasks. */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    protected ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     * Constructs an empty TaskList."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        this.taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     * Constructs a TaskList based on the given data."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     * @param data List of Task that wants to be added to this TaskList."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e data) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        this.taskList \u003d data;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     * Adds a Task to this TaskList."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     * @param t Task to be added."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    public void add(Task t) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        taskList.add(t);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     * Deletes a Task in this TaskList based on the given index."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     * @param i Index of Task that wants to be deleted."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    public void delete(int i) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        taskList.remove(i);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     * Gets the Task based on the given index."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     * @param i Index of the desired Task."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     * @return The desired Task based on the given index."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    public Task get(int i) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        return taskList.get(i);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     * Returns the size of this TaskList."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     * @return The size of this TaskList in integer form."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        return taskList.size();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "michael-setia": 67
    }
  },
  {
    "path": "src/main/java/duke/main/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "package duke.main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "michael-setia"
        },
        "content": " * Ui (User Interface) is used to interact with the user. It provides"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "michael-setia"
        },
        "content": " * function that will form the interface that the user will see."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "michael-setia"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     * Displays a horizontal line."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        System.out.println(\"_\".repeat(55));"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     * Displays the greeting message to the user."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    public void showGreetingMessage() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        System.out.println(\" Hey there! I am Popi\" + \"\\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "                + \" How can I help you?\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "michael-setia": 23
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "michael-setia"
        },
        "content": " * Deadline is a sub-class of Task. Deadline is a task with a deadline date which"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "michael-setia"
        },
        "content": " * means this Task has to be done before the deadline date."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "michael-setia"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    /** Date as LocalDate. */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    /** Date as String. */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    protected String date2;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     * Constructs a Deadline."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     * @param description The description of the Deadline."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     * @param date The deadline date of the deadline."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    public Deadline(String description, String date) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        this.date \u003d LocalDate.parse(date);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        this.date2 \u003d date;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     * Gets the information about this Deadline except its status."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     * @return a String array that contains symbol type for Event (\"E\"), description, and date."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    public String[] getInfo() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        return new String[] {\"D\", description, date2};"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     * Returns String representation of this Deadline."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     * @return String that represent this Deadline."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        String dateString \u003d date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        return \" [D]\" + super.toString() + \" (by: \" + dateString + \")\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "michael-setia": 49
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "michael-setia"
        },
        "content": " * Event is sub-class of Task. Event is a task that have time when it will take place."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "michael-setia"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     * Date as LocalDate."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     * Date as String."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    protected String date2;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     * Constructs an Event."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     * @param description Description of the Event"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     * @param date Date of the Event."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    public Event(String description, String date) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        this.date \u003d LocalDate.parse(date);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        this.date2 \u003d date;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     * Gets the Date of this Event."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     * @return Date of this Event in LocalDate form."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    public LocalDate getDate() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     * Gets the information about this Event except its status (done or not done)."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     * @return a String array that contains symbol type for Event (\"E\"), description, and date."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    public String[] getInfo() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        return new String[] {\"E\", description, date2};"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     * Returns String representation of this Event."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     * @return String that represents this Event."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        String dateString \u003d date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        return \" [E]\" + super.toString() + \" (at: \" + dateString + \")\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "michael-setia": 61
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "michael-setia"
        },
        "content": " * Task is used to store information about the Task that must done."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "michael-setia"
        },
        "content": " * It can also tell us if it has been done or not."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "michael-setia"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    /** Description of Task. */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    /** Status of Task. */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     * Constructs a Task."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     * @param description Description of the Task."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     * Checks if this Task is done or not."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     * @return true if this Task is done, otherwise false."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     * Marks this task as done."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     * Returns the indicator based on the status of the task."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     * @return a \"V\" if it is done, otherwise \"X\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    public String getIcon() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            return \"V\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            return \"X\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     * Gets information about this task except the status of this task (done or not done)."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     * @return a String array that contains the description of this Task."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    public String[] getInfo() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        return new String[] {description};"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     * Returns String representation of this Task."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     * @return String that represent this Task."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        return \"[\" + getIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "michael-setia": 71
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "michael-setia"
        },
        "content": " * Todo is a sub-class of Task. Todo is a Task without time information."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "michael-setia"
        },
        "content": " * Can be used to store daily activity that is not crucial and non-formal"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "michael-setia"
        },
        "content": " * but is targetted to be done."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "michael-setia"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     * Constructs a Todo."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     * @param description Description of the Todo."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     * Gets information about this Todo except its status (done or not done)."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     * @return a String array that contains symbol type for Todo (\"T\") and description."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    public String[] getInfo() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        return new String[] {\"T\", description};"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     * Returns String representation of Todo."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     * @return String that represent this Todo."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    // Return the type icon"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        return \" [T]\" + super.toString();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "michael-setia": 38
    }
  },
  {
    "path": "src/test/java/duke/main/DeadlineStub.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "package duke.main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "public class DeadlineStub extends Deadline {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    public DeadlineStub() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        super(\"no description\", \"2000-05-05\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    public String[] getInfo() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        return new String[] {\"D\", \"finish assignment\", \"2021-02-03\"};"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "michael-setia": 20
    }
  },
  {
    "path": "src/test/java/duke/main/EventStub.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "package duke.main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "public class EventStub extends Event {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    public EventStub() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        super(\"no description\", \"2000-05-05\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    public String[] getInfo() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        return new String[] {\"E\", \"read manga\", \"2021-01-03\"};"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "michael-setia": 20
    }
  },
  {
    "path": "src/test/java/duke/main/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "package duke.main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    public void checkInput_doneIncomplete_exceptionThrown() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            Parser.checkInput(\"done\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            assertEquals(\" Oh no! Please specify which task to be marked as done.\", e.getMessage());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    public void checkInput_deleteIncomplete_exceptionThrown() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            Parser.checkInput(\"delete\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            assertEquals(\" Oh no! Please specify which task to be deleted.\", e.getMessage());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    public void checkInput_deadlineIncomplete_exceptionThrown() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            Parser.checkInput(\"deadline\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            assertEquals(\" Oh no! Please specify the description of a deadline.\", e.getMessage());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    public void checkInput_eventIncomplete_exceptionThrown() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            Parser.checkInput(\"event\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            assertEquals(\" Oh no! Please specify the description of an event.\", e.getMessage());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    public void checkInput_todoIncomplete_exceptionThrown() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            Parser.checkInput(\"todo\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            assertEquals(\" Oh no! Please specify the description of a todo.\", e.getMessage());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    public void checkInput_noInput_exceptionThrown() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            Parser.checkInput(\"\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            assertEquals(\" No input detected.\", e.getMessage());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    public void checkInput_unknownInput_exceptionThrown() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            Parser.checkInput(\"halo\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            assertEquals(\" Oh no! Sorry, but I do not know what that means :(\", e.getMessage());"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    public void checkInput_deleteOutOfList_exceptionThrown() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            Parser.checkInput(\"delete -1\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            String s \u003d \" Oh no! Task number cannot be zero or negative\""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "                    + \"\\n\" + \" Please refer to your task list to find the\""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "                    + \"\\n\" + \" appropriate task number :)\";"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            assertEquals(s, e.getMessage());"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    public void checkInput_doneOutOfList_exceptionThrown() {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            Parser.checkInput(\"done -1\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            String s \u003d \" Oh no! Task number cannot be zero or negative\""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "                + \"\\n\" + \" Please refer to your task list to find the\""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "                + \"\\n\" + \" appropriate task number :)\";"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            assertEquals(s, e.getMessage());"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "michael-setia": 106
    }
  },
  {
    "path": "src/test/java/duke/main/StorageTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "package duke.main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "public class StorageTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    public void testConvertFromHardisk() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        Storage storage \u003d new Storage();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        assertEquals(\"E / 1 / read manga / 2021-01-03\", storage.convertToHardDisk(new EventStub()));"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        assertEquals(\"T / 1 / wash dishes\", storage.convertToHardDisk(new TodoStub()));"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        assertEquals(\"D / 0 / finish assignment / 2021-02-03\", storage.convertToHardDisk(new DeadlineStub()));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "michael-setia": 16
    }
  },
  {
    "path": "src/test/java/duke/main/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "package duke.main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "   @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "   public void testSize() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "       TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "       tasks.add(new EventStub());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "       tasks.add(new TodoStub());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "       tasks.add(new DeadlineStub());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "       assertEquals(3, tasks.size());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "   }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    public void testDelete() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        tasks.add(new EventStub());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        tasks.add(new TodoStub());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        tasks.delete(1);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        assertEquals(1, tasks.size());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "michael-setia": 26
    }
  },
  {
    "path": "src/test/java/duke/main/TodoStub.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "package duke.main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "public class TodoStub extends Todo {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    public TodoStub() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        super(\"no description\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    public String[] getInfo() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        return new String[] {\"T\", \"wash dishes\"};"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "michael-setia": 20
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "deadline watch anime /by Sunday"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "event project meeting /at Tue 3-5PM"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "done"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "todo"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "event"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "done 0"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "done -1"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "list"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "delete"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "delete 0"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "delete -1"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "michael-setia": 21
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "java -classpath ..\\bin main.java.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "michael-setia": 2,
      "-": 19
    }
  }
]
