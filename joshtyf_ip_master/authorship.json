[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00276.0.0\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "}"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "test {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "}"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.4.0\u0027"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.4.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    manifest {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        attributes \u0027Main-Class\u0027: \u0027Duke\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joshtyf": 24
    }
  },
  {
    "path": "gradlew.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "@rem Copyright 2015 the original author or authors."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "@rem Licensed under the Apache License, Version 2.0 (the \"License\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "@rem you may not use this file except in compliance with the License."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "@rem You may obtain a copy of the License at"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "@rem      https://www.apache.org/licenses/LICENSE-2.0"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "@rem Unless required by applicable law or agreed to in writing, software"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "@rem distributed under the License is distributed on an \"AS IS\" BASIS,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "@rem See the License for the specific language governing permissions and"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "@rem limitations under the License."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "@rem  Gradle startup script for Windows"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "@rem Set local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "set DIRNAME\u003d%~dp0"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "set APP_BASE_NAME\u003d%~n0"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "set APP_HOME\u003d%DIRNAME%"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "@rem Find java.exe"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "if defined JAVA_HOME goto findJavaFromJavaHome"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "set JAVA_EXE\u003djava.exe"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "echo."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "echo."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ":findJavaFromJavaHome"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "if exist \"%JAVA_EXE%\" goto init"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "echo."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "echo."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ":init"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "@rem Get command-line arguments, handling Windows variants"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ":win9xME_args"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "@rem Slurp the command line arguments."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "set CMD_LINE_ARGS\u003d"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "set _SKIP\u003d2"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ":win9xME_args_slurp"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "if \"x%~1\" \u003d\u003d \"x\" goto execute"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "set CMD_LINE_ARGS\u003d%*"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ":execute"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "@rem Setup the command line"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "@rem Execute Gradle"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ":end"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "@rem End local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ":fail"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "rem the _cmd.exe /c_ return code!"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "exit /b 1"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ":mainEnd"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ":omega"
      }
    ],
    "authorContributionMap": {
      "joshtyf": 104
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joshtyf"
        },
        "content": " * Command is the abstract base class for all"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joshtyf"
        },
        "content": " * commands"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joshtyf"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    TaskManager tm;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    Ui ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    Scanner sc;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * Sets utility tools that will be used by child command classes."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @param tm the task manager."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @param ui the ui object that will output the user interface."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @param sc the scanner object to receive user inputs."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    public void setUtility(TaskManager tm, Ui ui, Scanner sc) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        this.tm \u003d tm;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        this.ui \u003d ui;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        this.sc \u003d sc;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * Abstract method to be implemented by child command classes."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * Different child command classes will have different behaviours"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * when the method \u003ccode\u003eexecute\u003c/code\u003e is called."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @return a boolean value indicating whether or not the program should continue running."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @throws DukeException if an exception has occured while executing the command."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    public abstract boolean execute() throws DukeException;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joshtyf": 33
    }
  },
  {
    "path": "src/main/java/CommandHandler.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joshtyf"
        },
        "content": " * CommandHandler is the class that will handle all the commands."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joshtyf"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "public class CommandHandler {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * Parses the \u003ccode\u003ecmd\u003c/code\u003e and returns"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * an appropriate \u003ccode\u003eCommand\u003c/code\u003e object."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @param cmd the string command to be parsed."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @return a \u003ccode\u003eCommand\u003c/code\u003e."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    public static Command parseCommand(String cmd) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        switch (cmd) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            case \"bye\":"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "                return new ExitCommand();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "                return new ListCommand();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "                return new TodoCommand();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "                return new DeadlineCommand();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "                return new EventCommand();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            case \"complete\":"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "                return new CompleteCommand();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "                return new DeleteCommand();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            case \"find\":"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "                return new FindCommand();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "                return new ErrorCommand();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joshtyf": 33
    }
  },
  {
    "path": "src/main/java/CompleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joshtyf"
        },
        "content": " * \u003ccode\u003eCompleteCommand\u003c/code\u003e inherits from the base class \u003ccode\u003eCommand\u003c/code\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joshtyf"
        },
        "content": " * and will handle the job of marking tasks as complete."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joshtyf"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "public class CompleteCommand extends Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * Marks a task as complete."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * Using the \u003ccode\u003eUi\u003c/code\u003e object in the parent class, it prints out"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * the user interface to ask for the number of the task to be completed."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * It uses the \u003ccode\u003eScanner\u003c/code\u003e object in the parent class to receive the number."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * It uses the \u003ccode\u003eTaskManager\u003c/code\u003e object in the parent class and calls"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * its \u003ccode\u003emarkDone\u003c/code\u003e method with the task number passed as an argument to mark"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * the task as completed."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @return \u003ccode\u003etrue\u003c/code\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @throws DukeException if an invalid task number was given by the user."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    public boolean execute() throws DukeException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        ui.askTaskNumToComplete();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        int taskNum \u003d Integer.parseInt(sc.nextLine());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        Task task \u003d tm.markDone(taskNum);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        ui.taskCompleted(task);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joshtyf": 24
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "import java.text.DateFormat;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joshtyf"
        },
        "content": " * \u003ccode\u003eDeadline\u003c/code\u003e inherits from \u003ccode\u003eTask\u003c/code\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joshtyf"
        },
        "content": " * and is used to represent a deadline."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joshtyf"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "class Deadline extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    private Date dueDate;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * Constructor for creating a new \u003ccode\u003eDeadline\u003c/code\u003e object."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * Requires a \u003ccode\u003ename\u003c/code\u003e and a \u003ccode\u003edueDate\u003c/code\u003e."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @param name the name of this object"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @param dueDate the due date of this object in the format of \"dd MM yyyy\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @throws DukeException if the date format given is invalid"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    Deadline(String name, String dueDate) throws DukeException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        SimpleDateFormat formatter \u003d new SimpleDateFormat(\"dd MM yyyy\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        try {        "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            this.dueDate \u003d formatter.parse(dueDate);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            throw new DukeException(\"Date format is invalid!\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * Returns a comma seperated \u003ccode\u003eString\u003c/code\u003e containing the relevant information"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * about this deadline. This information will then be saved in a text file."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @return the comma seperated text of this deadline"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    public String saveText() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        String completeStatus \u003d super.isCompleted() ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        DateFormat dateFormat \u003d new SimpleDateFormat(\"dd MM yyyy\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ";        return \"D,\" + completeStatus + \",\" + super.getName() + \",\" + dateFormat.format(dueDate);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * Returns the string representation of this deadline."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @return a string representation of this deadline"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        DateFormat dateFormat \u003d new SimpleDateFormat(\"dd/MM/yyyy\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        return String.format(\"[D]%s (due: %s)\", super.toString(), dateFormat.format(dueDate));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joshtyf": 51
    }
  },
  {
    "path": "src/main/java/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joshtyf"
        },
        "content": " * \u003ccode\u003eDeadlineCommand\u003c/code\u003e inherits from the base class \u003ccode\u003eCommand\u003c/code\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joshtyf"
        },
        "content": " * and will handle the job of adding deadlines to the task manager."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joshtyf"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "public class DeadlineCommand extends Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * Adds a \u003ccode\u003eDeadline\u003c/code\u003e to the task manager."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * Using the \u003ccode\u003eUi\u003c/code\u003e object in the parent class, it prints out"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * the user interface to ask for the name and due date of the deadline to be created."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * It uses the \u003ccode\u003eScanner\u003c/code\u003e object in the parent class to receive the name and due date"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * of the deadline."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * It uses the \u003ccode\u003eTaskManager\u003c/code\u003e object in the parent class and calls"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * its \u003ccode\u003eadd\u003c/code\u003e method with a \u003ccode\u003eDeadline\u003c/code\u003e object passed as an argument."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @return \u003ccode\u003etrue\u003c/code\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @throws DukeException if the construction of the \u003ccode\u003eDeadline\u003c/code\u003e object results in an \u003ccode\u003eexception\u003c/code\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    public boolean execute() throws DukeException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        ui.askDeadlineName();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        String deadlineName \u003d sc.nextLine();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        ui.askDeadlineDate();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        String deadlineDate \u003d sc.nextLine();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        tm.add(new Deadline(deadlineName, deadlineDate));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joshtyf": 25
    }
  },
  {
    "path": "src/main/java/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joshtyf"
        },
        "content": " * \u003ccode\u003eDeleteCommand\u003c/code\u003e inherits from the base class \u003ccode\u003eCommand\u003c/code\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joshtyf"
        },
        "content": " * and will handle the job of deleting tasks."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joshtyf"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * Deletes a task."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * Using the \u003ccode\u003eUi\u003c/code\u003e object in the parent class, it prints out"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * the user interface to ask for the number of the task to be deleted."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * It uses the \u003ccode\u003eScanner\u003c/code\u003e object in the parent class to receive the number."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * It uses the \u003ccode\u003eTaskManager\u003c/code\u003e object in the parent class and calls"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * its \u003ccode\u003edeleteTask\u003c/code\u003e method with the task number passed as an argument to delete"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * the task."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @return \u003ccode\u003etrue\u003c/code\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @throws DukeException if an invalid task number was given by the user."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    public boolean execute() throws DukeException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        ui.askTaskNumToDelete();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        int taskNum \u003d Integer.parseInt(sc.nextLine());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        tm.deleteTask(taskNum);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joshtyf": 23
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joshtyf"
        },
        "content": " * Main class that will oversee the running of the program."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joshtyf"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    Ui ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    TaskManager taskManager;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    CommandHandler commandHandler;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    Duke() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        this.commandHandler \u003d new CommandHandler();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            this.taskManager \u003d new TaskManager(new Storage().load());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            System.out.println(e);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * Starts the program."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    private void start() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        ui.showStartScreen();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        boolean running \u003d true;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        while (running) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            ui.askForCommand();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            String s \u003d sc.nextLine();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            Command cmd \u003d CommandHandler.parseCommand(s);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            cmd.setUtility(taskManager, ui, sc);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "                boolean result \u003d cmd.execute();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "                running \u003d result;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "                System.out.println(e);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        ui.showExitScreen();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        sc.close();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        new Duke().start();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        return;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    //     String line \u003d \"------------------------\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    //     System.out.println(line);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    //     TaskManager tm;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    //     tm \u003d new TaskManager();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    //     Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        "
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    //     while(true) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    //         System.out.print(\"your input: \");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    //         String cmd \u003d sc.nextLine();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    //         System.out.println(\"\\n\" + line);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    //         if (cmd.equals(\"bye\")) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    //             end();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    //             break;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    //         }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    //         try {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    //             handleCmd(cmd, sc, tm);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    //         } catch (DukeException e) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    //             System.out.println(e);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    //         }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    //         System.out.println(line);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    //     }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    // }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    // private static void handleCmd(String cmd, Scanner sc, TaskManager tm) throws DukeException {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    //     switch(cmd) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    //         case \"list\":"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    //             tm.listTasks();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    //             break;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    //         case \"complete\":"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    //             complete(sc, tm);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    //             break;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    //         case \"todo\":"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    //             try {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    //                 todo(sc, tm);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    //             } catch (DukeException e) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    //                 throw e;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    //             }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    //             break;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    //         case \"deadline\":"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    //             try {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    //                 deadline(sc, tm);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    //             } catch (DukeException e) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    //                 throw e;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    //             }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    //             break;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    //         case \"event\":"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    //             try {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    //                 event(sc, tm);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    //             } catch (DukeException e) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    //                 throw e;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    //             }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    //             break;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    //         case \"delete\":"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    //             try {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    //                 delete(sc, tm);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    //             } catch (DukeException e) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    //                 throw e;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    //             }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    //             break;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    //         default:"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    //             throw new DukeException(\"That was an invalid command\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    //     }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    // }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    // private static void end() {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    //      System.out.println(\"Bye. Hope to see you again soon!\");       "
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    // }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    // private static void complete(Scanner sc, TaskManager tm) throws DukeException {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    //     System.out.println(\"Which task do you wish to mark complete? \");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    //     int taskNum \u003d Integer.parseInt(sc.nextLine());"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    //     try {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    //         tm.setCompleted(taskNum);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    //     } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    //         throw new DukeException(\"You did not provide a valid task number!\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    //     }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    // }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    // private static void todo(Scanner sc, TaskManager tm) throws DukeException {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    //     System.out.println(\"what is the name of the todo: \");"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    //     String todoName \u003d sc.nextLine();"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    //     if (todoName.isEmpty()) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    //         throw new DukeException(\"You must provide a name for the todo task!\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    //     }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    //     tm.add(new Todo(todoName));"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    //     System.out.println(\"*added: \" + todoName);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    // }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    // private static void deadline(Scanner sc, TaskManager tm) throws DukeException {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    //     System.out.println(\"what is the name of the task: \");"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    //     String deadlineName \u003d sc.nextLine();"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    //     if (deadlineName.isEmpty()) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    //         throw new DukeException(\"You must provide a name for the deadline task!\");"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    //     }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    //     System.out.println(\"when is the due date (Day Month Year): \");"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    //     String dueDate \u003d sc.nextLine();"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    //     if (dueDate.isEmpty()) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    //         throw new DukeException(\"You must provide a due date for the deadline task!\");"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    //     }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    //     try {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    //         tm.add(new Deadline(deadlineName, dueDate));"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    //         System.out.println(\"*added: \" + deadlineName);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    //     } catch (DukeException e) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    //         throw e;"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    //     }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    // }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    // private static void event(Scanner sc, TaskManager tm) throws DukeException {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    //     System.out.println(\"what is the name of the event: \");"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    //     String eventName \u003d sc.nextLine();"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    //     if (eventName.isEmpty()) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    //         throw new DukeException(\"You must provide a name for the event!\");"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    //     }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    //     System.out.println(\"when does the event start (Day Month Year Hour:Minute): \");"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    //     String start \u003d sc.nextLine();"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    //     if (start.isEmpty()) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    //         throw new DukeException(\"You must provide a start time for the event!\");"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    //     }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    //     System.out.println(\"when does the event end (Day Month Year Hour:Minute): \");"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    //     String end \u003d sc.nextLine();"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    //     if (end.isEmpty()) {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    //         throw new DukeException(\"You must provide an end time for the event!\");"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    //     }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    //     try {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    //         tm.add(new Event(eventName, start, end));"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    //         System.out.println(\"*added: \" + eventName);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    //     } catch (DukeException e) {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    //         throw e;"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    //     }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        "
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    // }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    // private static void delete (Scanner sc, TaskManager tm) throws DukeException {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    //     System.out.println(\"Which task would you like to remove: \");"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    //     int taskNum \u003d Integer.parseInt(sc.nextLine());"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    //     try {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    //         tm.deleteTask(taskNum);"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    //     } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    //         throw new DukeException(\"You did not provide a valid task number!\");"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    //     }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    // }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joshtyf": 186,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joshtyf"
        },
        "content": " * An exception class that handles user input exceptions."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joshtyf"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "class DukeException extends Exception {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    private String error;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * Constructor"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @param error the error message to show"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    DukeException(String error) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        // TODO: use super(error) constructor instead"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        this.error \u003d error;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * \u003ccode\u003eString\u003c/code\u003e represenation of this exception."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @return the string representation of this exception."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        return String.format(\"OOPS! %s\", error);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joshtyf": 24
    }
  },
  {
    "path": "src/main/java/ErrorCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joshtyf"
        },
        "content": " * \u003ccode\u003eErrorCommand\u003c/code\u003e inherits from the base class \u003ccode\u003eCommand\u003c/code\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joshtyf"
        },
        "content": " * and will handle the situation when the user gives an invalid command."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joshtyf"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "public class ErrorCommand extends Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * Prints out \"Oops, you gave an invalid command."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @return \u003ccode\u003etrue\u003c/code\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    public boolean execute() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        // TODO: refactor this to the ui class"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        System.out.println(\"Oops, you gave an invalid command\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joshtyf": 15
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "import java.text.DateFormat;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joshtyf"
        },
        "content": " * \u003ccode\u003eEvent\u003c/code\u003e inherits from \u003ccode\u003eTask\u003c/code\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joshtyf"
        },
        "content": " * and is used to represent an event."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joshtyf"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "class Event extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    private Date start;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    private Date end;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * Constructor to create an event object."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @param name the name of the event"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @param start the start time of the event in the format \"dd MM yyyy HH:mm\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @param end the end time of the event in the format \"dd MM yyyy HH:mm\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @throws DukeException if the format of the given dates are wrong"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    Event(String name, String start, String end) throws DukeException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        SimpleDateFormat formatter \u003d new SimpleDateFormat(\"dd MM yyyy HH:mm\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        try {        "
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            this.start \u003d formatter.parse(start);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            this.end \u003d formatter.parse(end);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            throw new DukeException(\"Date format is invalid!\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * Returns a comma seperated \u003ccode\u003eString\u003c/code\u003e containing the relevant information"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * about this event. This information will then be saved in a text file."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @return the comma seperated text of this event"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    public String saveText() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        String completeStatus \u003d super.isCompleted() ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        DateFormat dateFormat \u003d new SimpleDateFormat(\"dd MM yyyy HH:mm\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ";        return \"E,\" + completeStatus + \",\" + super.getName() + \",\" + dateFormat.format(start) + \",\" + dateFormat.format(end);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * \u003ccode\u003eString\u003c/code\u003e represenation of this event object."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @return the string representation this object"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        DateFormat dateFormat \u003d new SimpleDateFormat(\"dd/MM/yyyy HH:mm\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        return String.format(\"[E]%s (start: %s, end: %s)\", super.toString(), dateFormat.format(start), dateFormat.format(end));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joshtyf": 53
    }
  },
  {
    "path": "src/main/java/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joshtyf"
        },
        "content": " * \u003ccode\u003eEventCommand\u003c/code\u003e inherits from the base class \u003ccode\u003eCommand\u003c/code\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joshtyf"
        },
        "content": " * and will handle the job of adding events to the task manager."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joshtyf"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "public class EventCommand extends Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * Adds an \u003ccode\u003eEvent\u003c/code\u003e to the task manager."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * Using the \u003ccode\u003eUi\u003c/code\u003e object in the parent class, it prints out"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * the user interface to ask for the name, start time and end time of the event to be created."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * It uses the \u003ccode\u003eScanner\u003c/code\u003e object in the parent class to receive the name, start time"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * and end time of the deadline."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * It uses the \u003ccode\u003eTaskManager\u003c/code\u003e object in the parent class and calls"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * its \u003ccode\u003eadd\u003c/code\u003e method with an \u003ccode\u003eEvent\u003c/code\u003e object passed as an argument."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @return \u003ccode\u003etrue\u003c/code\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @throws DukeException if the construction of the \u003ccode\u003eEvent\u003c/code\u003e object results in an \u003ccode\u003eexception\u003c/code\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    public boolean execute() throws DukeException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        ui.askEventName();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        String eventName \u003d sc.nextLine();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        ui.askEventStartTime();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        String eventStartTime \u003d sc.nextLine();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        ui.askEventEndTime();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        String eventEndTime \u003d sc.nextLine();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        tm.add(new Event(eventName, eventStartTime, eventEndTime));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joshtyf": 27
    }
  },
  {
    "path": "src/main/java/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joshtyf"
        },
        "content": " * \u003ccode\u003eExitCommand\u003c/code\u003e inherits from the base class \u003ccode\u003eCommand\u003c/code\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joshtyf"
        },
        "content": " * and will handle the job of exiting duke."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joshtyf"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * Returns \u003ccode\u003efalse\u003c/code\u003e so that the program will stop running."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @return \u003ccode\u003efalse\u003c/code\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    public boolean execute() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joshtyf": 13
    }
  },
  {
    "path": "src/main/java/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joshtyf"
        },
        "content": " * \u003ccode\u003eFindCommand\u003c/code\u003e inherits from the base class \u003ccode\u003eCommand\u003c/code\u003e."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joshtyf"
        },
        "content": " * It handles the execution of finding tasks given a particular keyword."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joshtyf"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "public class FindCommand extends Command{"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * Asks for a keyword through the \u003ccode\u003eUi\u003c/code\u003e object and receives the user"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * input through the \u003ccode\u003eScanner\u003c/code\u003e object from the parent class."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * It then calls the method \u003ccode\u003efindTask\u003c/code\u003e with the \u003ccode\u003ekeyword\u003c/code\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * passed as an argument. It then prints out the result."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @return \u003ccode\u003etrue\u003c/code\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    public boolean execute() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        ui.askForKeyword();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        String keyword \u003d sc.nextLine();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        String result \u003d tm.findTask(keyword);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        ui.print(result);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joshtyf": 22
    }
  },
  {
    "path": "src/main/java/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joshtyf"
        },
        "content": " * \u003ccode\u003eListCommand\u003c/code\u003e inherits from the base class \u003ccode\u003eCommand\u003c/code\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joshtyf"
        },
        "content": " * and will handle the job of listing tasks."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joshtyf"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * Calls the \u003ccode\u003elistTasks\u003c/code\u003e method of the \u003ccode\u003eTaskManager\u003c/code\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * in the parent class. This returns a \u003ccode\u003eString\u003c/code\u003e which is then"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * printed out using the \u003ccode\u003eprint\u003c/code\u003e method of the \u003ccode\u003eUi\u003c/code\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * object in the parent class."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @return \u003ccode\u003etrue\u003c/code\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    public boolean execute() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        String s \u003d tm.listTasks();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        ui.print(s);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joshtyf": 18
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joshtyf"
        },
        "content": " * \u003ccode\u003eStorage\u003c/code\u003e handles all file read and writes."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joshtyf"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "class Storage {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    final static String TASKS_TEXT_FILE_PATH \u003d \"../tasks.txt\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * Loads the information from the file \"tasks.txt\" into a"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * \u003ccode\u003eList\u003c/code\u003e. Since each task from the file is"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * comma seperated, it splits each string into a string array using \",\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * as a delimiter. Then it creates objects of the child classes of"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * \u003ccode\u003eTask\u003c/code\u003e according to the information provided."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @return a list of tasks as a \u003ccode\u003eList\u003c/code\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @throws DukeException if there is an IOexception while creating a new empty file"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    public List\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            File f \u003d new File(TASKS_TEXT_FILE_PATH);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            Scanner sc \u003d new Scanner(f);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            "
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            while (sc.hasNext()) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "                String taskInfo \u003d sc.nextLine();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "                String[] arr \u003d taskInfo.split(\",\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "                switch (arr[0]) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "                    case \"T\":"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "                        Todo t \u003d new Todo(arr[2]);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "                        if (arr[1].equals(\"1\")) t.setCompleted();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "                        tasks.add(t);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "                    case \"D\":"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "                        Deadline d \u003d new Deadline(arr[2], arr[3]);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "                        if (arr[1].equals(\"1\")) d.setCompleted();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "                        tasks.add(d);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "                    case \"E\":"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "                        Event e \u003d new Event(arr[2], arr[3], arr[4]);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "                        if (arr[1].equals(\"1\")) e.setCompleted();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "                        tasks.add(e);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "                }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            sc.close();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            return tasks;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            // TODO: Customise font"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            System.out.println(\"File \\\"tasks.txt\\\" does not exist. Attempting to create one for you.\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "                FileWriter fw \u003d new FileWriter(TASKS_TEXT_FILE_PATH);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "                fw.close();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "                System.out.println(\"Successfully created file tasks.txt\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "                return tasks;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            } catch (IOException ioException) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "                throw new DukeException(ioException.getMessage());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * Writes the list of tasks to the file \"tasks.txt\"."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @param fileContent the comma seperated string information to be written to the file"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    public static void writeTasksFile(String fileContent) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            FileWriter fw \u003d new FileWriter(TASKS_TEXT_FILE_PATH, false);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            fw.write(fileContent);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            System.out.println(\"Something went wrong while saving to the backend: \" + e.getMessage());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joshtyf": 81
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joshtyf"
        },
        "content": " * \u003ccode\u003eTask\u003c/code\u003e is the base class for all kinds of tasks."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joshtyf"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "class Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    private boolean isCompleted;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    private String name;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * Constructor for creating a task."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @param name the name of this task object"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    Task(String name) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        // TODO: initialise the isCompleted field"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * Gets the name of this task."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @return the name of this class as a \u003ccode\u003eString\u003c/code\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * Returns a boolean value indicating whether or not this task is completed."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @return \u003ccode\u003etrue\u003c/code\u003e if this task is completed, \u003ccode\u003efalse\u003c/code\u003e otherwise"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    public boolean isCompleted() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        return isCompleted;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * Returns a comma seperated \u003ccode\u003eString\u003c/code\u003e containing the relevant information"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * about this task. This information will then be saved in a text file."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @return the comma seperated text of this task"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    public String saveText() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        String completeStatus \u003d isCompleted ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        return \"Task,\" +  completeStatus + \",\" + name;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * Marks this task as done by setting the value of its field"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * \u003ccode\u003eisCompleted\u003c/code\u003e to \u003ccode\u003etrue\u003c/code\u003e."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    public void setCompleted() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        isCompleted \u003d true;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * \u003ccode\u003eString\u003c/code\u003e represenation of this task object."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @return the string representation this object"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        String symbol \u003d isCompleted ? \"\\u2713\" : \"x\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        return \"[\" + symbol + \"] \" + name; "
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joshtyf": 60
    }
  },
  {
    "path": "src/main/java/TaskManager.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joshtyf"
        },
        "content": " * \u003ccode\u003eTaskManager\u003c/code\u003e handles every operation related to tasks."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joshtyf"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "class TaskManager {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    private List\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * Constructs a new \u003ccode\u003eTaskManager\u003c/code\u003e object"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * and initialises its \u003ccode\u003etasks\u003c/code\u003e field as"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * an empty \u003ccode\u003eArrayList\u003c/code\u003e."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    public TaskManager() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * Constructs a new \u003ccode\u003eTaskManager\u003c/code\u003e object"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * and initialises its \u003ccode\u003etasks\u003c/code\u003e field using the provided"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * argument."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @param tasks the list of tasks to be initialised with"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    public TaskManager(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        this.tasks \u003d tasks;   "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * Adds a task."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @param task the task to be added"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    public void add(Task task) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        save();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * Gets the \"save\" text represenation of each \u003ccode\u003eTask\u003c/code\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * and creates a \u003ccode\u003eString\u003c/code\u003e of the information to be saved."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * This string information is then passed on to the \u003ccode\u003eStorage\u003c/code\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * class where it will handle the saving of the information."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    private void save() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        StringBuffer sb \u003d new StringBuffer();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            sb.append(task.saveText() + \"\\n\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        Storage.writeTasksFile(sb.toString());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * Creates a string representation of all the tasks."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @return the string representation of all the tasks"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    public String listTasks() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        int i \u003d 1;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        StringBuffer sb \u003d new StringBuffer(\"Here are your tasks\\n\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        for (Task task: tasks) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            sb.append(\"\\n\" + i + \". \" + task);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            i++;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * Marks a particular task as done. The task to be marked as done"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * is identified by the \u003ccode\u003etaskNum\u003c/code\u003e. \u003ccode\u003etaskNum - 1\u003c/code\u003e"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * is the index position of the task in the \u003ccode\u003eArrayList\u003c/code\u003e."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @param taskNum the number of the task in the task list"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @return the \u003ccode\u003eTask\u003c/code\u003e that is marked done"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @throws DukeException if the provided task number is out of bounds of the range of the \u003ccode\u003eArrayList\u003c/code\u003e"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    public Task markDone(int taskNum) throws DukeException {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            Task task \u003d tasks.get(taskNum - 1);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            task.setCompleted();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            save();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            return task;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            throw new DukeException(\"you gave an invalid task number!\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        "
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * Deletes a task from the list."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @param taskNum the task number of the task to be deleted"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @throws DukeException if the provided task number is out of bounds of the range of the \u003ccode\u003eArrayList\u003c/code\u003e"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     */"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    public void deleteTask(int taskNum) throws DukeException {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            Task task \u003d tasks.remove(taskNum - 1);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            System.out.println(String.format(\"Successfully removed the following task:\\n %s\", task));"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            System.out.println(String.format(\"You have a total of %d tasks left\", tasks.size()));"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            save();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            throw new DukeException(\"you gave an invalid task number!\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * Finds a task with a given keyword in its name."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @param keyword the keyword to search for"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @return the string represenation of the list of tasks found. If none found, it will"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * say that no tasks are found."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     */"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    public String findTask(String keyword) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        List\u003cTask\u003e temp \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            if (task.getName().toLowerCase().contains(keyword.toLowerCase())) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "                temp.add(task);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        if (temp.isEmpty()) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            return \"Sorry there are no tasks that matches your keyword\";"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            StringBuilder sb \u003d new StringBuilder(\"Here are the tasks that match your keyword\\n\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            for (int i \u003d 0; i \u003c temp.size(); i++) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "                sb.append(\"\\n\").append(i + 1).append(\". \").append(temp.get(i));"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            return sb.toString();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joshtyf": 125
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joshtyf"
        },
        "content": " * \u003ccode\u003eTodo\u003c/code\u003e inherits from \u003ccode\u003eTask\u003c/code\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joshtyf"
        },
        "content": " * and is used to represent a todo."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joshtyf"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "class Todo extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    Todo(String name) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * Returns a comma seperated \u003ccode\u003eString\u003c/code\u003e containing the relevant information"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * about this todo. This information will then be saved in a text file."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @return the comma seperated text of this todo"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    public String saveText() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        String completeStatus \u003d super.isCompleted() ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ";        return \"T,\" + completeStatus + \",\" + super.getName();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * Returns the string representation of this todo."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @return a string representation of this todo"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        return String.format(\"[T]%s\", super.toString());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joshtyf": 29
    }
  },
  {
    "path": "src/main/java/TodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joshtyf"
        },
        "content": " * \u003ccode\u003eTodoCommand\u003c/code\u003e inherits from the base class \u003ccode\u003eCommand\u003c/code\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joshtyf"
        },
        "content": " * and will handle the job of adding todos to the task manager."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joshtyf"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "public class TodoCommand extends Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * Adds an \u003ccode\u003eTodo\u003c/code\u003e to the task manager."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * Using the \u003ccode\u003eUi\u003c/code\u003e object in the parent class, it prints out"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * the user interface to ask for the name of the todo to be created."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * It uses the \u003ccode\u003eScanner\u003c/code\u003e object in the parent class to receive the name the deadline."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * It uses the \u003ccode\u003eTaskManager\u003c/code\u003e object in the parent class and calls"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * its \u003ccode\u003eadd\u003c/code\u003e method with an \u003ccode\u003eTodo\u003c/code\u003e object passed as an argument."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @return \u003ccode\u003etrue\u003c/code\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    public boolean execute() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        ui.askTodo();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        String todoName \u003d sc.nextLine();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        tm.add(new Todo(todoName));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joshtyf": 21
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joshtyf"
        },
        "content": " * \u003ccode\u003eUi\u003c/code\u003e contains all the methods and information needed to diplay"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joshtyf"
        },
        "content": " * the user interface on the screen."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joshtyf"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    final String LOGO \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    final String LINE \u003d \"------------------------\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * Shows the start screen."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    public void showStartScreen() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        System.out.println(\"Hello from\\n\" + LOGO);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke \\nWhat can I do for you?\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        System.out.println(LINE + \"\\n\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * Prints out a string with a \u003ccode\u003eLINE\u003c/code\u003e above and below it."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @param s the string to be printed out"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    public void print(String s) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        System.out.println(s);  "
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * Shows the interface to ask for a command."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    public void askForCommand() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        System.out.println(\"What is your command?\"); "
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        System.out.print(\"\u003e \");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * Shows the interface to display the error."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @param errorMessage the error to be displayed"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    public void showErrorScreen(String errorMessage) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        System.out.println(\"Oh no, something went wrong!\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        System.out.println(errorMessage);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * Shows the exit screen."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    public void showExitScreen() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        System.out.println(\"GOODBYE!\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * Shows the interface to ask for the name of a todo."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    public void askTodo() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        System.out.println(\"What is the name of your Todo?\"); "
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        System.out.print(\"\u003e \");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * Shows the interface to ask for the name of a deadline."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    public void askDeadlineName() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        System.out.println(\"What is the name of your Deadline?\"); "
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        System.out.print(\"\u003e \");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * Shows the interface to ask for the due date of the deadline."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    public void askDeadlineDate() {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        System.out.println(\"When is the deadline? (Give in this format: day month year)\"); "
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        System.out.print(\"\u003e \");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * Shows the interface to ask for the name of the event."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     */"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    public void askEventName() {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        System.out.println(\"What is the name of your Event?\"); "
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        System.out.print(\"\u003e \");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * Shows the interface to ask for the start time of the event."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     */"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    public void askEventStartTime() {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        System.out.println(\"When is the start of your event? (Give in this format: day month year hour:min)\"); "
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        System.out.print(\"\u003e \");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * Shows the interface to to ask for the end time of the event."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     */"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    public void askEventEndTime() {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        System.out.println(\"When is the end of your event? (Give in this format: day month year hour:min)\"); "
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        System.out.print(\"\u003e \");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * Shows the interface to ask for the number of the"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * task to be marked as completed."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     */"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    public void askTaskNumToComplete() {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        System.out.println(\"What is the number of the task you wish to mark as complete?\"); "
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        System.out.print(\"\u003e \");"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * Displays a message to indicating a task has been marked as completed."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * @param task the task that has completed"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     */"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    public void taskCompleted(Task task) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        System.out.println(\"Nice, I\u0027ve marked this task as done!\");"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        System.out.println(task);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * Shows the interface to ask for the number of the"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * task to be deleted."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     */"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    public void askTaskNumToDelete() {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        System.out.println(\"What is the number of the task you wish to delete?\"); "
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        System.out.print(\"\u003e \");"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     * Show interface to ask for a keyword."
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "     */"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    public void askForKeyword() {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        System.out.println(\"Give me a keyword to search for\");"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        System.out.print(\"\u003e \");"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joshtyf": 164
    }
  },
  {
    "path": "src/test/java/TaskManagerTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "public class TaskManagerTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    public void listTasks_listOfTasks_success() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            TaskManager tm \u003d new TaskManager();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            tm.add(new Todo(\"eat\"));"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            tm.add(new Deadline(\"assignment\", \"24 5 2020\"));"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            String expected \u003d \"Here are your tasks\\n\" +"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "                    \"\\n1. [T][x] eat\" +"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "                    \"\\n2. [D][x] assignment (due: 24/05/2020)\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            assertEquals(expected, tm.listTasks());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            assertEquals(\"OOPS! Date format is invalid!\", e.getMessage());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    public void markDone_todoMarkedDone_success() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            TaskManager tm \u003d new TaskManager();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            tm.add(new TodoStub(\"eat\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            Task task \u003d tm.markDone(1);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            assertEquals(\"[T][\\u2713] eat\", task.toString());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            assertEquals(\"OOPS! you gave an invalid task number!\", e.getMessage());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joshtyf": 34
    }
  },
  {
    "path": "src/test/java/TodoStub.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "public class TodoStub extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    private String name;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    private boolean isCompleted;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    TodoStub(String name) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        isCompleted \u003d false;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    public void setCompleted() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        isCompleted \u003d true;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        String symbol \u003d isCompleted ? \"\\u2713\" : \"x\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        return String.format(\"[T][%s] %s\", symbol, name);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joshtyf": 21
    }
  },
  {
    "path": "src/test/java/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "public class TodoTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    public void testStringConversion() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        assertEquals(\"[T][x] eat\", new Todo(\"eat\").toString());"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joshtyf": 12
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "todo"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "clean my room"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "assignment"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "tomorrow"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "event"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "soccer practice"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "4pm"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "6pm"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "list"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "joshtyf": 11
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "joshtyf": 1,
      "-": 37
    }
  }
]
