[
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import duke.command.ExitCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import duke.utils.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import duke.utils.DukeFileHandler;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import duke.utils.Parser;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import duke.utils.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import duke.utils.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    private final Ui ui;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    private final DukeFileHandler fileHandler;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    private Duke(String path) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        ui.welcome();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        fileHandler \u003d new DukeFileHandler(path);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            tasks \u003d new TaskList(fileHandler.readFile());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            if (!tasks.isNull()) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "                ui.displayList(tasks.getList());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            tasks \u003d new TaskList(new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        run();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    private void run() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            String input \u003d scanner.nextLine().trim();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "                Command command \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "                command.execute(tasks, ui, fileHandler);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "                if (command instanceof ExitCommand) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            } catch (DukeException ex) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "                ui.displayThis(ex.getMessage());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        new Duke(\"data/dukeData.txt\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "peter-yeh": 67,
      "-": 2
    }
  },
  {
    "path": "src/main/java/duke/command/ClearCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import duke.utils.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import duke.utils.DukeFileHandler;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import duke.utils.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import duke.utils.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "public class ClearCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, DukeFileHandler fileHandler) throws DukeException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        tasks.clear();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        ui.displayThis(\"List is cleared\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            fileHandler.writeToFile(tasks.getList());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            throw new DukeException(\"Erorr clearing lists in storage\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "peter-yeh": 23
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import duke.utils.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import duke.utils.DukeFileHandler;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import duke.utils.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import duke.utils.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": " * Corresponds to commands the users wants to execute."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    public abstract void execute(TaskList tasks, Ui ui, DukeFileHandler fileHandler) throws DukeException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "peter-yeh": 14
    }
  },
  {
    "path": "src/main/java/duke/command/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import duke.utils.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import duke.utils.DukeFileHandler;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import duke.utils.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import duke.utils.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "public class DeadlineCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    private final String description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    private final String by;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    public DeadlineCommand(String description, String by) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, DukeFileHandler fileHandler) throws DukeException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            tasks.addTask(new Deadline(description, by));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            fileHandler.writeToFile(tasks.getList());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        } catch (Exception ex) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            throw new DukeException(\"Error creating this deadline\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "peter-yeh": 32
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import duke.utils.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import duke.utils.DukeFileHandler;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import duke.utils.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import duke.utils.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    private final int entryDelete;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    public DeleteCommand(int entryDelete) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        this.entryDelete \u003d entryDelete;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, DukeFileHandler fileHandler) throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            ui.displayThis(\"OKay, I\u0027ve remove this task: \\n        \" + tasks.delete(entryDelete) +"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "                    \"\\n    Now you have \" + tasks.size() + \" tasks in the list\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            fileHandler.writeToFile(tasks.getList());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        } catch (Exception ex) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            throw new DukeException(\"This task does not exist\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "peter-yeh": 28
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import duke.utils.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import duke.utils.DukeFileHandler;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import duke.utils.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import duke.utils.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    private final int entryDone;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    public DoneCommand(int entryDone) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        this.entryDone \u003d entryDone;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, DukeFileHandler fileHandler) throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            ui.displayThis(\"Nice! I\u0027ve marked this task as done: \\n        \" + tasks.done(entryDone));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            fileHandler.writeToFile(tasks.getList());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        } catch (Exception ex) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            throw new DukeException(\"This task does not exist\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "peter-yeh": 27
    }
  },
  {
    "path": "src/main/java/duke/command/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import duke.utils.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import duke.utils.DukeFileHandler;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import duke.utils.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import duke.utils.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "public class EventCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    private final String description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    private final String at;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    public EventCommand(String description, String at) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, DukeFileHandler fileHandler) throws DukeException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            tasks.addTask(new Event(description, at));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            fileHandler.writeToFile(tasks.getList());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        } catch (Exception ex) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            throw new DukeException(\"Error creating this event\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "peter-yeh": 32
    }
  },
  {
    "path": "src/main/java/duke/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import duke.utils.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import duke.utils.DukeFileHandler;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import duke.utils.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import duke.utils.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, DukeFileHandler fileHandler) throws DukeException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            fileHandler.writeToFile(tasks.getList());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            throw new DukeException(\"Error saving your file\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        ui.displayThis(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "peter-yeh": 24
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import duke.utils.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import duke.utils.DukeFileHandler;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import duke.utils.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import duke.utils.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    private final String keyword;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    public FindCommand(String keyword) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, DukeFileHandler fileHandler) throws DukeException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        List\u003cTask\u003e temp \u003d tasks.findKeyword(keyword);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        if (temp.size() \u003c\u003d 0) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            throw new DukeException(\"No tasks found, please refine your search\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        ui.displayList(temp, \"Here are the matching tasks in your list: \");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "peter-yeh": 29
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import duke.utils.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import duke.utils.DukeFileHandler;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import duke.utils.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import duke.utils.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, DukeFileHandler fileHandler) throws DukeException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        if (tasks.isNull()) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            throw new DukeException(\"There\u0027s nothing in the list :-(\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            ui.displayList(tasks.getList());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "peter-yeh": 17
    }
  },
  {
    "path": "src/main/java/duke/command/TodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import duke.utils.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import duke.utils.DukeFileHandler;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import duke.utils.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import duke.utils.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "public class TodoCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    private final String description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    public TodoCommand(String description) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, DukeFileHandler fileHandler) throws DukeException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        tasks.addTask(new Task(description));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            fileHandler.writeToFile(tasks.getList());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            throw new DukeException(\"Error saving task to storage\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "peter-yeh": 31
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    protected LocalDate by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     * Creates a type of task with a deadline"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     * @param description the content of the task"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     * @param by          time in yyyy-mm-dd"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        this.by \u003d LocalDate.parse(by.trim());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    public Deadline(String description, boolean isDone, String by) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        this.by \u003d LocalDate.parse(by.trim());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     * Overrides the toString method"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     * @return a custom task description"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        return \"[D][\" + super.getStatusIcon() + \"] \" + super.description + \" (by: \""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "                + this.by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \")\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     * Returns a fixed format in string to store the task to storage."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     * @return D | 0 | return book | June 6th"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    public String toCustomString() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        return \"D | \" + (super.isDone ? 1 : 0) + \" | \" + super.description + \" | \" + by;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "peter-yeh": 49
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    protected LocalDate at;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     * Creates a type of task with timing"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     * @param description detail of the task"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     * @param at          time in yyyy-mm-dd"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        this.at \u003d LocalDate.parse(at.trim());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    public Event(String description, boolean isDone, String at) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        this.at \u003d LocalDate.parse(at.trim());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     * Overrides the toString method"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     * @return a custom event description"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        return \"[E][\" + super.getStatusIcon() + \"] \" + super.description + \" (at: \""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "                + this.at.format(DateTimeFormatter.ofPattern(\"MMM dd yyy\")) + \")\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     * Returns a fixed format in string to store the task to storage."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     * @return E | 0 | return book | June 6th"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    public String toCustomString() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        return \"E | \" + (super.isDone ? 1 : 0) + \" | \" + super.description + \" | \" + at;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "peter-yeh": 49
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     * Creates a task."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     * @param description the content of the class."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    public Task(String description, boolean isDone) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    protected String getStatusIcon() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        //return tick or X symbols"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     * Changes the state of this task, isDone to true."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    public Task markAsDone() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     * Overrides the toString method."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     * @return a custom event description."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        return \"[T][\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     * Returns a fixed format in string to store the task to storage."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     * @return T | 0 | return book"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    public String toCustomString() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        return \"T | \" + (isDone ? 1 : 0) + \" | \" + description;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     * Gets the content of the tasks"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     * @return String the content of the tasks"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "peter-yeh": 68
    }
  },
  {
    "path": "src/main/java/duke/utils/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "package duke.utils;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     * Creates a custom exception"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     * @param msg The error encountered"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    public DukeException(String msg) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        super(\"OOPS! \" + msg);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "peter-yeh": 14
    }
  },
  {
    "path": "src/main/java/duke/utils/DukeFileHandler.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "package duke.utils;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": " * Class to handle the opening, writing and reading of file data.txt"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "public class DukeFileHandler {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    private final String path;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    public DukeFileHandler(String path) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        this.path \u003d path;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     * Reads the files from the file path."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     * @return a List of Tasks created from the file data.txt"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     * @throws FileNotFoundException if the file is not found, not created"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    public List\u003cTask\u003e readFile() throws FileNotFoundException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        File file \u003d new File(path);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        if (!file.exists()) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "                // todo find out why access is denied when creating file"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "                file.mkdirs();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "                file.createNewFile();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            return new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            Scanner scan \u003d new Scanner(file);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            List\u003cTask\u003e toDoList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            while (scan.hasNext()) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "                toDoList.add(createTask(scan.nextLine()));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            return toDoList;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    // input is of format TaskType | isDone | Detail | Date (can be null)"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    private Task createTask(String input) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        String[] inputArr \u003d input.split(\"\\\\|\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        boolean isDone \u003d inputArr[1].trim().equals(\"1\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        switch (inputArr[0].trim()) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        case \"T\":"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            return new Task(inputArr[2].trim(), isDone);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        case \"D\":"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            return new Deadline(inputArr[2].trim(), isDone, inputArr[3].trim());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        case \"E\":"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            return new Event(inputArr[2].trim(), isDone, inputArr[3].trim());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    // todo the access denied to write file"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     * Writes the list to the file."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     * @param list the data to write to the file"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     * @throws IOException if the file could not be found"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    public void writeToFile(List\u003cTask\u003e list) throws IOException {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            FileWriter fileWriter \u003d new FileWriter(path);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            StringBuilder content \u003d new StringBuilder();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            for (Task task : list) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "                content.append(task.toCustomString()).append(System.lineSeparator());"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            fileWriter.write(content.toString());"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            fileWriter.close();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "//            e.printStackTrace();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "peter-yeh": 102
    }
  },
  {
    "path": "src/main/java/duke/utils/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "package duke.utils;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import duke.command.ClearCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import duke.command.DeadlineCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import duke.command.DoneCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import duke.command.EventCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import duke.command.ExitCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import duke.command.FindCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import duke.command.TodoCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": " * Handles all the commands from the user."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     * Converts the users input from string to Command type."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     * @param input string the user entered."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     * @return Command which the user wanted."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     * @throws DukeException if the command format is wrong."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    public static Command parse(String input) throws DukeException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        switch (input.split(\" \")[0].toLowerCase()) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        case \"\":"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            throw new DukeException(\"Please type a duke.command\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        case \"clear\":"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            return new ClearCommand();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            return new DoneCommand(Integer.parseInt(input.substring(5)) - 1);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            return new DeleteCommand(Integer.parseInt(input.substring(7)) - 1);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "                int by \u003d input.indexOf(\" /by\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "                return new DeadlineCommand(input.substring(9, by), input.substring(by + 5));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "                throw new DukeException(\"Deadline format isn\u0027t correct\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "                int at \u003d input.indexOf(\" /at\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "                return new EventCommand(input.substring(6, at), input.substring(at + 5));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "                throw new DukeException(\"Event format isn\u0027t correct\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            return new TodoCommand(input.substring(5));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "                return new FindCommand(input.substring(5));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "                throw new DukeException(\"Find format isn\u0027t correct\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            throw new DukeException(\"I don\u0027t know what that means :( \");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "peter-yeh": 68
    }
  },
  {
    "path": "src/main/java/duke/utils/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "package duke.utils;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": " * Maintains the tasks list for the user."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    private final List\u003cTask\u003e list;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    private final Ui ui;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    public TaskList(List\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        this.list \u003d list;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     * Adds a task to the list."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     * @param task to add to the list."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        list.add(task);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        ui.displayThis(\"Got it. I\u0027ve added this task: \\n         \" + task +"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "                \"\\n    Now you have \" + list.size() + \" tasks in the list\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     * Marks the task as done."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     * @param entryDone index of the task to be marked."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     * @return task that is done."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    public Task done(int entryDone) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        return list.get(entryDone).markAsDone();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     * Clears the current list by removing every entry inside."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    public void clear() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        list.clear();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     * Deletes a task."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     * @param entryDelete index of the task to delete."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     * @return task that is deleted."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    public Task delete(int entryDelete) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        return list.remove(entryDelete);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     * Returns the number of elements inside the tasks list."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     * @return the number of tasks in the list."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        return list.size();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     * Returns true if there is nothing inside the list."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     * @return true if list is null."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    public boolean isNull() {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        return list.size() \u003c\u003d 0;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     * Returns the tasks lists."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     * @return the Lists which contains the tasks."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    public List\u003cTask\u003e getList() {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     * Retuns a list of tasks which contains the keyword."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     * @param keyword string the user wants to find."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     * @return List of tasks with the keyword."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    public List\u003cTask\u003e findKeyword(String keyword) throws DukeException {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        List\u003cTask\u003e containsKeywords \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        for (Task task : list) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            if (task.getDescription().contains(keyword)) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "                containsKeywords.add(task);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        return containsKeywords;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "peter-yeh": 111
    }
  },
  {
    "path": "src/main/java/duke/utils/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "package duke.utils;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": " * Handles the printing of output to the console"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     * Outputs to console with lines."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     * @param s string to output to console"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    public void displayThis(String s) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        displayLines();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        displayString(s);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        displayLines();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     * Displays the contents to console."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     * @param toDoList the Tasks to display to console"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    public void displayList(List\u003cTask\u003e toDoList) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        displayLines();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        displayString(\"Here are your current tasks:\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        for (int i \u003d 0; i \u003c toDoList.size(); i++) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            displayString((i + 1) + \". \" + toDoList.get(i));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        displayLines();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     * Welcomes the user with a welcome message"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    public void displayList(List\u003cTask\u003e toDoList, String s) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        displayLines();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        displayString(s);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        for (int i \u003d 0; i \u003c toDoList.size(); i++) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            displayString((i + 1) + \". \" + toDoList.get(i));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        displayLines();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    public void welcome() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        String logo \u003d \"     ____        _        \\n\""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "                + \"    |  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "                + \"    | | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "                + \"    | |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "                + \"    |____/ \\\\__,_|_|\\\\_\\\\___|\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        System.out.println(logo);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        System.out.println(\"\" +"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "                \"\\n    Hello! I\u0027m duke.Duke, your Windows duke.task.Task Manager\" +"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "                \"\\n    Valid command:\" +"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "                \"\\n    - list\" +"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "                \"\\n    - done \u003cnum\u003e\" +"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "                \"\\n    - todo \u003ctask\u003e\" +"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "                \"\\n    - deadline \u003ctask\u003e /by \u003cyyyy-mm-dd\u003e\" +"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "                \"\\n    - event \u003ctask\u003e /at \u003cyyyy-mm-dd\u003e\" +"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "                \"\\n    - find \u003ckeyword\u003e\\n\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    private void displayString(String s) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        System.out.println(\"    \" + s);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    private void displayLines() {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        System.out.println(\"    -------------------------------------------------\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "peter-yeh": 90
    }
  },
  {
    "path": "test/duke/task/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    Deadline deadline \u003d new Deadline(\"Lunch with friends\", \"2020-02-23\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    Deadline deadline2 \u003d new Deadline(\"Meeting with prof\", true, \"2019-05-23\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    public void testMarkAsDone() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        deadline.markAsDone();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        assertEquals(\"[D][✓] Lunch with friends (by: Feb 23 2020)\", deadline.toString());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        deadline2.markAsDone();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        assertEquals(\"[D][✓] Meeting with prof (by: May 23 2019)\", deadline2.toString());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    public void testToString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        assertEquals(\"[D][✘] Lunch with friends (by: Feb 23 2020)\", deadline.toString());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        assertEquals(\"[D][✓] Meeting with prof (by: May 23 2019)\", deadline2.toString());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    public void toCustomString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        assertEquals(\"D | 0 | Lunch with friends | 2020-02-23\", deadline.toCustomString());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        assertEquals(\"D | 1 | Meeting with prof | 2019-05-23\", deadline2.toCustomString());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "peter-yeh": 32
    }
  },
  {
    "path": "test/duke/task/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "public class EventTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    Event event \u003d new Event(\"Lunch with friends\", \"2020-02-23\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    Event event2 \u003d new Event(\"Meeting with prof\", true, \"2019-05-23\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    public void testMarkAsDone() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        event.markAsDone();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        assertEquals(\"[E][✓] Lunch with friends (at: Feb 23 2020)\", event.toString());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        event2.markAsDone();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        assertEquals(\"[E][✓] Meeting with prof (at: May 23 2019)\", event2.toString());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    public void testToString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        assertEquals(\"[E][✘] Lunch with friends (at: Feb 23 2020)\", event.toString());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        assertEquals(\"[E][✓] Meeting with prof (at: May 23 2019)\", event2.toString());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    public void toCustomString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        assertEquals(\"E | 0 | Lunch with friends | 2020-02-23\", event.toCustomString());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        assertEquals(\"E | 1 | Meeting with prof | 2019-05-23\", event2.toCustomString());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "peter-yeh": 31
    }
  },
  {
    "path": "test/duke/task/TaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "public class TaskTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    Task task \u003d new Task(\"Review this week\u0027s lecture\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    Task task2 \u003d new Task(\"Review Code\", true);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    public void testMarkAsDone() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        task.markAsDone();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        assertEquals(\"[T][\\u2713] Review this week\u0027s lecture\", task.toString());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        task2.markAsDone();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        assertEquals(\"[T][\\u2713] Review Code\", task2.toString());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    public void testToString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        assertEquals(\"[T][\\u2718] Review this week\u0027s lecture\", task.toString());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        assertEquals(\"[T][\\u2713] Review Code\", task2.toString());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    public void testToCustomString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        assertEquals(\"T | 0 | Review this week\u0027s lecture\", task.toCustomString());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        assertEquals(\"T | 1 | Review Code\", task2.toCustomString());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "peter-yeh": 33
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "list"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "done 0"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "done 99"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "done 5"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "done 5"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "done 5"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "List"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "dElete 0"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "list"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "deletE 99"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "clear"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "list"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "done 0"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "done 999"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "list"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "delete 0"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "DELete 99"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "list"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "todo reading books /by"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "todo deadline"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "list"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "deadline testDeadline /by 2020-03-18"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "list"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "deadliNe testDeadline 2 /at 2020-03-18"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "duke.task.Deadline testDeadline 3"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "list"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "deadline testDeadline 4 /by 2020-03-18"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "deadline /by 2020-03-18"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "deadline /by"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "list"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "event testEvent /by 2020-03-18"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "event testEvent2 /at 2020-03-18"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "EvenT testEvenet3"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "list"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "evEnt testEvent4 /by 2020-03-18"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "event /by 2020-03-18"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "event /by"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "list"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "deadline testing legit deadline /by 2020-03-18"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "event testing legit event /at 2020-03-18"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "peter-yeh": 47
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "REM -cp class path, specifies where to find the user class files"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "REM -d specify where to place generated class files"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "REM javac -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "pause"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "pause"
      }
    ],
    "authorContributionMap": {
      "peter-yeh": 10,
      "-": 20
    }
  }
]
