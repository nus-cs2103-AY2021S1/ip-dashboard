[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "moyj01"
        },
        "content": "# Duke Melvin Task Tracker"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "moyj01"
        },
        "content": "Duke Melvin Task Tracker is a desktop app to manage your tasks,"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "moyj01"
        },
        "content": "optimized for use via a Command Line Interface (CLI) while "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "moyj01"
        },
        "content": "still having the benefits of a Graphical User Interface (GUI). "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "moyj01"
        },
        "content": "If you can type fast, this app can allow you to manage your tasks"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "moyj01"
        },
        "content": "faster than traditional GUI apps."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "moyj01"
        },
        "content": "\u003cbr\u003e\u003cimg src\u003d\"./docs/Ui.png\" width\u003d\"603\"/\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "moyj01"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "moyj01"
        },
        "content": "### Feature 1 - Add Task"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "moyj01"
        },
        "content": "### Feature 2 - List tasks"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "moyj01"
        },
        "content": "### Feature 3 - Mark Task as Done"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "moyj01"
        },
        "content": "### Feature 4 - Delete Task"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "moyj01"
        },
        "content": "### Feature 5 - Find task "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "moyj01"
        },
        "content": "### Feature 6 - Detect duplicate tasks"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "moyj01"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "moyj01"
        },
        "content": "### `todo` - Adds a todo task"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "moyj01"
        },
        "content": "Adds a todo task to the list of tasks."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "moyj01"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "moyj01"
        },
        "content": "`todo CS2103T quiz`"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "moyj01"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "moyj01"
        },
        "content": "`Got it. I\u0027ve added this task:`\\"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "moyj01"
        },
        "content": "`[T][X] CS2103T quiz`\\"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "moyj01"
        },
        "content": "`Now you have 1 tasks in the list`"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "moyj01"
        },
        "content": "### `event` - Adds an event task"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "moyj01"
        },
        "content": "Adds an event task to the list of tasks. Date must be specified in \u003cb\u003eYYYY-MM-DD\u003c/b\u003e or \u003cb\u003eYYYY/MM/DD\u003c/b\u003e format."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "moyj01"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "moyj01"
        },
        "content": "`event examinations /at 2020-09-19`"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "moyj01"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "moyj01"
        },
        "content": "`Got it. I\u0027ve added this task:`\\"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "moyj01"
        },
        "content": "`[E][X] examinations [at: SEP 19 2020]`\\"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "moyj01"
        },
        "content": "`Now you have 2 tasks in the list`"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "moyj01"
        },
        "content": "### `deadline` - Adds a deadline task"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "moyj01"
        },
        "content": "Adds a deadline task to the list of tasks. Date must be specified in \u003cb\u003eYYYY-MM-DD\u003c/b\u003e or \u003cb\u003eYYYY/MM/DD\u003c/b\u003e format."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "moyj01"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "moyj01"
        },
        "content": "`deadline assignment /by 2020-09-19`"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "moyj01"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "moyj01"
        },
        "content": "`Got it. I\u0027ve added this task:`\\"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "moyj01"
        },
        "content": "`[D][âœ—] assignment [by: SEP 19 2020]`\\"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "moyj01"
        },
        "content": "`Now you have 3 tasks in the list`"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "moyj01"
        },
        "content": "### `list` - Lists all tasks"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "moyj01"
        },
        "content": "Lists all tasks. Each task is given an index starting from 1."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "moyj01"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "moyj01"
        },
        "content": "`list`"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "moyj01"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "moyj01"
        },
        "content": "`Here are the tasks in your list:`\\"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "moyj01"
        },
        "content": "`1. [T][âœ—] CS2103T quiz`\\"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "moyj01"
        },
        "content": "`2. [E][âœ—] examinations [at: SEP 19 2020]`\\"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "moyj01"
        },
        "content": "`3. [D][âœ—] assignment [by: SEP 19 2020]`"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "moyj01"
        },
        "content": "### `done` - Mark task as done"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "moyj01"
        },
        "content": "Mark a task specified by the index as done."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "moyj01"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "moyj01"
        },
        "content": "`done 1`"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "moyj01"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "moyj01"
        },
        "content": "`Nice I\u0027ve marked this task as done:`\\"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "moyj01"
        },
        "content": "`1. [T][âœ“] CS2103T quiz`"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "moyj01"
        },
        "content": "### `delete` - Delete a task"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "moyj01"
        },
        "content": "Deletes a task specified by the index. Index is obtained through `list`."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "moyj01"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "moyj01"
        },
        "content": "`delete 1`"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "moyj01"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "moyj01"
        },
        "content": "`Noted. I\u0027ve removed this task:`\\"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "moyj01"
        },
        "content": "`[T][âœ“] CS2103T quiz`\\"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "moyj01"
        },
        "content": "`Now you have 2 tasks in the list`"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "moyj01"
        },
        "content": "### `find` - Find a task"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "moyj01"
        },
        "content": "Finds a task specified by the given keyword."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "moyj01"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "moyj01"
        },
        "content": "`find assignment`"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "moyj01"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "moyj01"
        },
        "content": "`Here are the search results:`\\"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "moyj01"
        },
        "content": "`1. [D][âœ—] assignment [by: SEP 19 2020]`"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "moyj01"
        },
        "content": "### Detect duplicate tasks"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "moyj01"
        },
        "content": "Prompts the user when a task that already exists in the list is being added"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "moyj01"
        },
        "content": "This feature is case-insensitive."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "moyj01"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "moyj01"
        },
        "content": "`deadline aSsiGnment /by 2020-09-19`"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "moyj01"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "moyj01"
        },
        "content": "`There appears to be a duplicate task`"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "moyj01"
        },
        "content": "## Command summary"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "moyj01"
        },
        "content": "|Action|Format|Examples|"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "moyj01"
        },
        "content": "|--------------|----------------|----------------|"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "moyj01"
        },
        "content": "|`todo` | `todo [task description]` | `todo read book`|"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "moyj01"
        },
        "content": "|`event` | `event [task description] /at [date]` | `event examinations /at 2020-09-19`|"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "moyj01"
        },
        "content": "|`deadline` | `deadline [task description] /by [date]` | `deadline assignment /by 2020-09-19`|"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "moyj01"
        },
        "content": "|`list` | `list`|"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "moyj01"
        },
        "content": "|`done` | `done [INDEX]` | `done 2`|"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "moyj01"
        },
        "content": "|`delete` | `delete [INDEX]` | `delete 1`| "
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "moyj01"
        },
        "content": "|`find` | `find [search terms]...` | `find assignment`, `find math assignment`|"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "moyj01"
        },
        "content": "|`bye` | `bye`|"
      }
    ],
    "authorContributionMap": {
      "moyj01": 140
    }
  },
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    id \"com.github.johnrengelman.shadow\" version \"6.0.0\""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "moyj01"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    toolVersion \u003d \u00278.29\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "moyj01"
        },
        "content": "}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    implementation \u0027junit:junit:4.12\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    implementation \u0027org.junit.jupiter:junit-jupiter:5.4.2\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    String javaFxVersion \u003d \u002711.0.2\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    mainClassName \u003d \"duke.Launcher\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    enableAssertions \u003d true"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "moyj01": 24,
      "-": 39
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "moyj01"
        },
        "content": "# Duke Melvin Task Tracker"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "moyj01"
        },
        "content": "Duke Melvin Task Tracker is a desktop app to manage your tasks,"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "moyj01"
        },
        "content": "optimized for use via a Command Line Interface (CLI) while "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "moyj01"
        },
        "content": "still having the benefits of a Graphical User Interface (GUI). "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "moyj01"
        },
        "content": "If you can type fast, this app can allow you to manage your tasks"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "moyj01"
        },
        "content": "faster than traditional GUI apps."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "moyj01"
        },
        "content": "\u003cbr\u003e\u003cimg src\u003d\"Ui.png\" width\u003d\"603\"/\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "moyj01"
        },
        "content": "### Feature 1 - Add Task"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "moyj01"
        },
        "content": "### Feature 2 - List tasks"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "moyj01"
        },
        "content": "### Feature 3 - Mark Task as Done"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "moyj01"
        },
        "content": "### Feature 4 - Delete Task"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "moyj01"
        },
        "content": "### Feature 5 - Find task "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "moyj01"
        },
        "content": "### Feature 6 - Detect duplicate tasks"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "moyj01"
        },
        "content": "### `todo` - Adds a todo task"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "moyj01"
        },
        "content": "Adds a todo task to the list of tasks."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "moyj01"
        },
        "content": "`todo CS2103T quiz`"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "moyj01"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "moyj01"
        },
        "content": "`Got it. I\u0027ve added this task:`\\"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "moyj01"
        },
        "content": "`[T][X] CS2103T quiz`\\"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "moyj01"
        },
        "content": "`Now you have 1 tasks in the list`"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "moyj01"
        },
        "content": "### `event` - Adds an event task"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "moyj01"
        },
        "content": "Adds an event task to the list of tasks. Date must be specified in \u003cb\u003eYYYY-MM-DD\u003c/b\u003e or \u003cb\u003eYYYY/MM/DD\u003c/b\u003e format."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "moyj01"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "moyj01"
        },
        "content": "`event examinations /at 2020-09-19`"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "moyj01"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "moyj01"
        },
        "content": "`Got it. I\u0027ve added this task:`\\"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "moyj01"
        },
        "content": "`[E][X] examinations [at: SEP 19 2020]`\\"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "moyj01"
        },
        "content": "`Now you have 2 tasks in the list`"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "moyj01"
        },
        "content": "### `deadline` - Adds a deadline task"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "moyj01"
        },
        "content": "Adds a deadline task to the list of tasks. Date must be specified in \u003cb\u003eYYYY-MM-DD\u003c/b\u003e or \u003cb\u003eYYYY/MM/DD\u003c/b\u003e format."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "moyj01"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "moyj01"
        },
        "content": "`deadline assignment /by 2020-09-19`"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "moyj01"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "moyj01"
        },
        "content": "`Got it. I\u0027ve added this task:`\\"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "moyj01"
        },
        "content": "`[D][âœ—] assignment [by: SEP 19 2020]`\\"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "moyj01"
        },
        "content": "`Now you have 3 tasks in the list`"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "moyj01"
        },
        "content": "### `list` - Lists all tasks"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "moyj01"
        },
        "content": "Lists all tasks. Each task is given an index starting from 1."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "moyj01"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "moyj01"
        },
        "content": "`list`"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "moyj01"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "moyj01"
        },
        "content": "`Here are the tasks in your list:`\\"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "moyj01"
        },
        "content": "`1. [T][âœ—] CS2103T quiz`\\"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "moyj01"
        },
        "content": "`2. [E][âœ—] examinations [at: SEP 19 2020]`\\"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "moyj01"
        },
        "content": "`3. [D][âœ—] assignment [by: SEP 19 2020]`"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "moyj01"
        },
        "content": "### `done` - Mark task as done"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "moyj01"
        },
        "content": "Mark a task specified by the index as done."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "moyj01"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "moyj01"
        },
        "content": "`done 1`"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "moyj01"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "moyj01"
        },
        "content": "`Nice I\u0027ve marked this task as done:`\\"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "moyj01"
        },
        "content": "`1. [T][âœ“] CS2103T quiz`"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "moyj01"
        },
        "content": "### `delete` - Delete a task"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "moyj01"
        },
        "content": "Deletes a task specified by the index. Index is obtained through `list`."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "moyj01"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "moyj01"
        },
        "content": "`delete 1`"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "moyj01"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "moyj01"
        },
        "content": "`Noted. I\u0027ve removed this task:`\\"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "moyj01"
        },
        "content": "`[T][âœ“] CS2103T quiz`\\"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "moyj01"
        },
        "content": "`Now you have 2 tasks in the list`"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "moyj01"
        },
        "content": "### `find` - Find a task"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "moyj01"
        },
        "content": "Finds a task specified by the given keyword."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "moyj01"
        },
        "content": "`find assignment`"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "moyj01"
        },
        "content": "`Here are the search results:`\\"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "moyj01"
        },
        "content": "`1. [D][âœ—] assignment [by: SEP 19 2020]`"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "moyj01"
        },
        "content": "### Detect duplicate tasks"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "moyj01"
        },
        "content": "Prompts the user when a task that already exists in the list is being added"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "moyj01"
        },
        "content": "This feature is case-insensitive."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "moyj01"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "moyj01"
        },
        "content": "`deadline aSsiGnment /by 2020-09-19`"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "moyj01"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "moyj01"
        },
        "content": "`There appears to be a duplicate task`"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "moyj01"
        },
        "content": "## Command summary"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "moyj01"
        },
        "content": "|Action|Format|Examples|"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "moyj01"
        },
        "content": "|--------------|----------------|----------------|"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "moyj01"
        },
        "content": "|`todo` | `todo [task description]` | `todo read book`|"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "moyj01"
        },
        "content": "|`event` | `event [task description] /at [date]` | `event examinations /at 2020-09-19`|"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "moyj01"
        },
        "content": "|`deadline` | `deadline [task description] /by [date]` | `deadline assignment /by 2020-09-19`|"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "moyj01"
        },
        "content": "|`list` | `list`|"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "moyj01"
        },
        "content": "|`done` | `done [INDEX]` | `done 2`|"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "moyj01"
        },
        "content": "|`delete` | `delete [INDEX]` | `delete 1`| "
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "moyj01"
        },
        "content": "|`find` | `find [search terms]...` | `find assignment`, `find math assignment`|"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "moyj01"
        },
        "content": "|`bye` | `bye`|"
      }
    ],
    "authorContributionMap": {
      "moyj01": 123,
      "-": 17
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "moyj01"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import duke.command.UserCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import duke.response.Response;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "moyj01"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "moyj01"
        },
        "content": " * Duke program."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "moyj01"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "moyj01"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    private Scene scene;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @param filePath Filepath to be loaded."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        tasks \u003d storage.load();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @param userInput User\u0027s input."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @return Response that allows Gui to display text dynamically."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public Response getResponse(String userInput) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            UserCommand command \u003d Parser.parse(userInput);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            String response \u003d command.execute(tasks, ui);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            storage.save(tasks);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            if (command.getExit()) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                return new Response(response, false, true);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            return new Response(response, false, false);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        } catch (DukeException exception) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            return new Response(exception.getMessage(), true, false);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "moyj01"
        },
        "content": "}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "moyj01": 60
    }
  },
  {
    "path": "src/main/java/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "moyj01"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import duke.gui.Main;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "moyj01"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "moyj01"
        },
        "content": " * Launches the application."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "moyj01"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "moyj01"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "moyj01"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "moyj01": 14
    }
  },
  {
    "path": "src/main/java/duke/command/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "moyj01"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "moyj01"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "moyj01"
        },
        "content": " * Represents the command that ends the program."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "moyj01"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "moyj01"
        },
        "content": "public class ByeCommand extends UserCommand {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @param userInput User\u0027s input."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public ByeCommand(String userInput) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        super(userInput);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        this.isExit \u003d true;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @param taskList TaskList containing all the tasks."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @param ui Ui that helps to print output."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public String execute(TaskList taskList, Ui ui) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        return ui.sayGoodBye();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "moyj01"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "moyj01": 27
    }
  },
  {
    "path": "src/main/java/duke/command/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "moyj01"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import duke.duplicatechecker.DuplicateChecker;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import duke.exceptions.DuplicateException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import duke.tasks.Deadline;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import duke.timeformatter.TimeFormatter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "moyj01"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "moyj01"
        },
        "content": " * Represents a command that adds a deadline task."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "moyj01"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "moyj01"
        },
        "content": "public class DeadlineCommand extends UserCommand {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    private static String eventType \u003d \"Deadline\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    private static final String DEFAULT_MESSAGE \u003d \"Got it. I\u0027ve added this task:\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @param userInput User\u0027s input."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public DeadlineCommand(String userInput) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        super(userInput);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * Adds an Deadline task while checking for duplicates in TaskList."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @param taskList TaskList that contains all the existing tasks."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @param ui Ui that helps to print output."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public String execute(TaskList taskList, Ui ui) throws DukeException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        String[] deadlineArr \u003d userInput.split(\"/\", 2);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        String by \u003d deadlineArr[1].substring(deadlineArr[1].indexOf(\"by\") + 3);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        String deadlineString \u003d deadlineArr[0].substring(9);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        LocalDate localDeadlineDate \u003d TimeFormatter.localDate(by);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        DuplicateChecker duplicateChecker \u003d new DuplicateChecker(deadlineString, localDeadlineDate, taskList,"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                Task.TaskType.Deadline);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        if (duplicateChecker.checkForDuplicates()) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            throw new DuplicateException();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            Deadline deadline \u003d new Deadline(deadlineString, localDeadlineDate);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            taskList.addTask(deadline);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            return ui.printResponse(DEFAULT_MESSAGE) + \"\\n\""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                    + ui.printResponse(deadline.toString()) + \"\\n\""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                    + ui.printListCount(taskList);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "moyj01"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "moyj01": 54
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "moyj01"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import duke.exceptions.InvalidDeleteCommandException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "moyj01"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "moyj01"
        },
        "content": " * Represents a command that deletes a task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "moyj01"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "moyj01"
        },
        "content": "public class DeleteCommand extends UserCommand {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @param userInput User\u0027s input."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public DeleteCommand(String userInput) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        super(userInput);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * Deletes a Task from the TaskList."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @param taskList TaskList that contains all the existing tasks."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @param ui Ui that helps to print output."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public String execute(TaskList taskList, Ui ui) throws DukeException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        String[] deleteCommandArray \u003d userInput.split(\" \");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        if (deleteCommandArray.length \u003c 2) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            throw new InvalidDeleteCommandException();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            int itemToBeDeleted \u003d Integer.parseInt(deleteCommandArray[1]);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            if (itemToBeDeleted \u003e taskList.listSize() || itemToBeDeleted \u003c\u003d 0) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                throw new InvalidDeleteCommandException();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                Task item \u003d taskList.getTaskAtIndex(itemToBeDeleted - 1);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                taskList.deleteTask(itemToBeDeleted - 1);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                return ui.printResponse(\"Noted. I\u0027ve removed this task:\") + \"\\n\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                        + ui.printResponse(item.toString()) + \"\\n\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                        + ui.printListCount(taskList);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "moyj01"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "moyj01": 46
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "moyj01"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import duke.exceptions.InvalidDoneCommandException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "moyj01"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "moyj01"
        },
        "content": " * Represents a command that marks a Task as done."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "moyj01"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "moyj01"
        },
        "content": "public class DoneCommand extends UserCommand {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    private static final String DEFAULT_MESSAGE \u003d \"Nice! I\u0027ve marked this task as done: \" + \"\\n\" + \"[\\u2713] \";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @param userInput User\u0027s input."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public DoneCommand(String userInput) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        super(userInput);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @param index String representation of the index of the Task to be marked as done."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @param taskSize taskSize Size of the TaskList."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @return boolean."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @throws InvalidDoneCommandException Exception thrown when an invalid done command is inputted."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public boolean checkInputRange(String index, int taskSize) throws InvalidDoneCommandException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            int itemToBeMarkedAsDone \u003d Integer.parseInt(index);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            return itemToBeMarkedAsDone \u003e taskSize || itemToBeMarkedAsDone \u003c\u003d 0;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        } catch (NumberFormatException ex) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            throw new InvalidDoneCommandException();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @param taskList TaskList that contains all the existing tasks."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @param ui Ui that helps to print output."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public String execute(TaskList taskList, Ui ui) throws DukeException {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        String[] doneCommandArray \u003d userInput.split(\" \");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        if (doneCommandArray.length \u003c 2) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            throw new InvalidDoneCommandException();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        if (checkInputRange(doneCommandArray[1], taskList.listSize())) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            throw new InvalidDoneCommandException();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            int itemToBeMarkedAsDone \u003d Integer.parseInt(doneCommandArray[1]);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            taskList.getTaskAtIndex(itemToBeMarkedAsDone - 1).markAsDone();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            return ui.printResponse(DEFAULT_MESSAGE + taskList.getTaskAtIndex(itemToBeMarkedAsDone - 1)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                    .getDescription());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "moyj01"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "moyj01": 57
    }
  },
  {
    "path": "src/main/java/duke/command/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "moyj01"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import duke.duplicatechecker.DuplicateChecker;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import duke.exceptions.DuplicateException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import duke.tasks.Event;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import duke.timeformatter.TimeFormatter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "moyj01"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "moyj01"
        },
        "content": " * Represents a command that creates an Event task."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "moyj01"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "moyj01"
        },
        "content": "public class EventCommand extends UserCommand {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    private static String eventType \u003d \"Event\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    private static final String DEFAULT_MESSAGE \u003d \"Got it. I\u0027ve added this task:\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @param userInput User\u0027s input."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public EventCommand(String userInput) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        super(userInput);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * Adds an Event task while checking for duplicates in TaskList."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @param taskList TaskList that contains all the existing tasks."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @param ui Ui that helps to print output."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public String execute(TaskList taskList, Ui ui) throws DukeException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        String[] eventArr \u003d userInput.split(\"/\", 2);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        String at \u003d eventArr[1].substring(eventArr[1].indexOf(\"at\") + 3);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        String eventString \u003d eventArr[0].substring(6);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        LocalDate localEventDate \u003d TimeFormatter.localDate(at);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        DuplicateChecker duplicateChecker \u003d new DuplicateChecker(eventString, localEventDate, taskList,"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                Task.TaskType.Event);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        if (duplicateChecker.checkForDuplicates()) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            throw new DuplicateException();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            Event event \u003d new Event(eventString, localEventDate);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            taskList.addTask(event);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            return ui.printResponse(DEFAULT_MESSAGE) + \"\\n\""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                    + ui.printResponse(event.toString()) + \"\\n\""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                    + ui.printListCount(taskList);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "moyj01"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "moyj01": 55
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "moyj01"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import duke.exceptions.EmptyFindException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "moyj01"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "moyj01"
        },
        "content": " * Represents a command that searches for tasks based on user\u0027s input."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "moyj01"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "moyj01"
        },
        "content": "public class FindCommand extends UserCommand {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @param userInput User\u0027s search input."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public FindCommand(String userInput) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        super(userInput);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * Searchs for tasks within the TaskList."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @param taskList TaskList that contains all the existing tasks."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @param ui Ui that helps to print output."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public String execute(TaskList taskList, Ui ui) throws DukeException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        if (userInput.trim().length() \u003c\u003d 4) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            throw new EmptyFindException();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            String search \u003d userInput.substring(5);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            List\u003cTask\u003e searchList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            for (int i \u003d 0; i \u003c taskList.listSize(); i++) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                Task task \u003d taskList.getTaskAtIndex(i);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                if (task.getDescription().contains(search)) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                    searchList.add(task);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            if (searchList.isEmpty()) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                return ui.printResponse(\"No results found.\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                TaskList tempList \u003d new TaskList(searchList);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                return ui.printResponse(\"Here are the search results\\n\") + ui.printList(tempList);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "moyj01"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "moyj01": 51
    }
  },
  {
    "path": "src/main/java/duke/command/InvalidCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "moyj01"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import duke.exceptions.InvalidCommandException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "moyj01"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "moyj01"
        },
        "content": " * Represents a command that is invalid."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "moyj01"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "moyj01"
        },
        "content": "public class InvalidCommand extends UserCommand {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @param userInput User\u0027s input."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public InvalidCommand(String userInput) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        super(userInput);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @param taskList TaskList that contains all the existing tasks."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @param ui Ui that helps to print output."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public String execute(TaskList taskList, Ui ui) throws DukeException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        throw new InvalidCommandException();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "moyj01"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "moyj01": 29
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "moyj01"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "moyj01"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "moyj01"
        },
        "content": " * Represents a command that displays all the Tasks in the TaskList."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "moyj01"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "moyj01"
        },
        "content": "public class ListCommand extends UserCommand {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @param userInput User\u0027s input."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public ListCommand(String userInput) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        super(userInput);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @param taskList TaskList that contains all the existing tasks."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @param ui Ui that helps to print output."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public String execute(TaskList taskList, Ui ui) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        return ui.printResponse(\"Here are the tasks in your task list:\") + ui.printList(taskList);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "moyj01"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "moyj01": 26
    }
  },
  {
    "path": "src/main/java/duke/command/ToDoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "moyj01"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import duke.duplicatechecker.DuplicateChecker;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import duke.exceptions.DuplicateException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import duke.exceptions.EmptyToDoException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import duke.tasks.ToDo;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "moyj01"
        },
        "content": "public class ToDoCommand extends UserCommand {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    private static String eventType \u003d \"ToDo\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    private static final String DEFAULT_MESSAGE \u003d \"Got it. I\u0027ve added this task:\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @param userInput User\u0027s input."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public ToDoCommand(String userInput) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        super(userInput);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * Adds an ToDo task while checking for duplicates in TaskList."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @param taskList TaskList that contains all the existing tasks."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @param ui Ui that helps to print output."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public String execute(TaskList taskList, Ui ui) throws DukeException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        if (userInput.trim().length() \u003c\u003d 4) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            throw new EmptyToDoException();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            String todoString \u003d userInput.substring(5);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            DuplicateChecker duplicateChecker \u003d new DuplicateChecker(todoString, taskList,"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                    Task.TaskType.ToDo);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            if (duplicateChecker.checkForDuplicates()) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                throw new DuplicateException();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                ToDo todo \u003d new ToDo(todoString);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                taskList.addTask(todo);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                return ui.printResponse(DEFAULT_MESSAGE) + \"\\n\""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                        + ui.printResponse(todo.toString()) + \"\\n\""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                        + ui.printListCount(taskList);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "moyj01"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "moyj01": 50
    }
  },
  {
    "path": "src/main/java/duke/command/UserCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "moyj01"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "moyj01"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "moyj01"
        },
        "content": " * Represents the parent class of all commands."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "moyj01"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "moyj01"
        },
        "content": "public abstract class UserCommand {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * User\u0027s input."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    protected String userInput;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * Boolean to check if user wishes to exit the program"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    protected Boolean isExit \u003d false;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @param userInput User\u0027s input."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public UserCommand(String userInput) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        this.userInput \u003d userInput;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @param taskList TaskList that contains all the existing tasks."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @param ui Ui that helps to print output."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public abstract String execute(TaskList taskList, Ui ui) throws DukeException;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public Boolean getExit() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        return isExit;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "moyj01"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "moyj01": 39
    }
  },
  {
    "path": "src/main/java/duke/duplicatechecker/DuplicateChecker.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "moyj01"
        },
        "content": "package duke.duplicatechecker;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "moyj01"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "moyj01"
        },
        "content": " * Checks for duplicate Task within the existing TaskList."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "moyj01"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "moyj01"
        },
        "content": "public class DuplicateChecker {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    private LocalDate date;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    private Task.TaskType taskType;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @param description Task description."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @param date Date associated with the Task."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @param taskList Current TaskList."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @param taskType Type of task."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public DuplicateChecker(String description, LocalDate date, TaskList taskList, Task.TaskType taskType) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        this.description \u003d description.toLowerCase();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @param description task description."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @param taskList existing tasklist."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @param taskType type of task."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public DuplicateChecker(String description, TaskList taskList, Task.TaskType taskType) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        this.description \u003d description.toLowerCase();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        this.date \u003d null;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * Checks for duplicate description and date."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @return boolean."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public boolean checkForDuplicates() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        boolean hasDuplicate \u003d false;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.listSize(); i++) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            Task task \u003d taskList.getTaskAtIndex(i);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            if (taskType.equals(task.getTaskType())) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                String taskDescription \u003d task.getDescription().toLowerCase();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                LocalDate localDate \u003d task.getLocalDate();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                if (checkForDuplicateDescription(taskDescription) \u0026\u0026 checkForDuplicateDate(localDate)) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                    hasDuplicate \u003d true;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        return hasDuplicate;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @param localDate Date associated with the task."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @return boolean."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public boolean checkForDuplicateDate(LocalDate localDate) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        return localDate \u003d\u003d null || localDate.equals(date);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @param taskDescription Task\u0027s description."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @return boolean."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public boolean checkForDuplicateDescription(String taskDescription) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        return taskDescription.equals(description);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "moyj01"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "moyj01": 84
    }
  },
  {
    "path": "src/main/java/duke/exceptions/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "moyj01"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "moyj01"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public DukeException(String errorMessage) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "moyj01"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "moyj01": 7
    }
  },
  {
    "path": "src/main/java/duke/exceptions/DuplicateException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "moyj01"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "moyj01"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "moyj01"
        },
        "content": " * Thrown when a duplicate Task is detected."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "moyj01"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "moyj01"
        },
        "content": "public class DuplicateException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public DuplicateException() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        super(\"There appears to be a duplicate task\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "moyj01"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "moyj01": 10
    }
  },
  {
    "path": "src/main/java/duke/exceptions/EmptyFindException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "moyj01"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "moyj01"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "moyj01"
        },
        "content": " * Thrown when no search term is inputted."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "moyj01"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "moyj01"
        },
        "content": "public class EmptyFindException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public EmptyFindException() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        super(\"Please input a search term\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "moyj01"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "moyj01": 10
    }
  },
  {
    "path": "src/main/java/duke/exceptions/EmptyToDoException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "moyj01"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "moyj01"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "moyj01"
        },
        "content": " * Thrown when the the user inputs an empty Todo description."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "moyj01"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "moyj01"
        },
        "content": "public class EmptyToDoException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public EmptyToDoException() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        super(\"\\u2639 OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "moyj01"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "moyj01": 10
    }
  },
  {
    "path": "src/main/java/duke/exceptions/InvalidCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "moyj01"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "moyj01"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "moyj01"
        },
        "content": " * Thrown when the user inputs an invalid command."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "moyj01"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "moyj01"
        },
        "content": "public class InvalidCommandException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public InvalidCommandException() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        super(\"\\u2639 OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "moyj01"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "moyj01": 10
    }
  },
  {
    "path": "src/main/java/duke/exceptions/InvalidDateFormatException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "moyj01"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "moyj01"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "moyj01"
        },
        "content": " * Thrown when the user input a wrongly formatted Date."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "moyj01"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "moyj01"
        },
        "content": "public class InvalidDateFormatException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public InvalidDateFormatException() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        super(\"\\u2639 OOPS!!! Looks like the date you inputted is invalid\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "moyj01"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "moyj01": 10
    }
  },
  {
    "path": "src/main/java/duke/exceptions/InvalidDeleteCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "moyj01"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "moyj01"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "moyj01"
        },
        "content": " * Thrown when the user inputs an invalid index to be marked for deletion."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "moyj01"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "moyj01"
        },
        "content": "public class InvalidDeleteCommandException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public InvalidDeleteCommandException() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        super(\"\\u2639 OOPS!!! Please mark a valid item for deletion\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "moyj01"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "moyj01": 11
    }
  },
  {
    "path": "src/main/java/duke/exceptions/InvalidDoneCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "moyj01"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "moyj01"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "moyj01"
        },
        "content": " * Thrown when the user inputs an invalid index to be marked as done."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "moyj01"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "moyj01"
        },
        "content": "public class InvalidDoneCommandException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public InvalidDoneCommandException() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        super(\"\\u2639 OOPS!!! Please mark a valid item as done\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "moyj01"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "moyj01": 10
    }
  },
  {
    "path": "src/main/java/duke/gui/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "moyj01"
        },
        "content": "package duke.gui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import javafx.scene.paint.Color;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "moyj01"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "moyj01"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "moyj01"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "moyj01"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "moyj01"
        },
        "content": " */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "moyj01"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        dialog.setStyle(\"-fx-text-fill: blue; -fx-font-family:Courier New;\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        dialog.setTextFill(Color.web(\"#000000\"));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    private DialogBox(String text, Image img, boolean hasError) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        dialog.setStyle(\"-fx-text-fill: red; -fx-font-family:Courier New;\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        dialog.setTextFill(Color.web(\"#000000\"));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img, boolean hasError) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        var db \u003d new DialogBox(text, img, hasError);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "moyj01"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "moyj01": 84
    }
  },
  {
    "path": "src/main/java/duke/gui/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "moyj01"
        },
        "content": "package duke.gui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "moyj01"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "moyj01"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "moyj01"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "moyj01"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    private Duke duke \u003d new Duke(\"./taskData.txt\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            scene.getStylesheets().add(\"view/styles.css\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            stage.setTitle(\"Duke\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            stage.getIcons().add(new Image(\"/images/cat-icon.png\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "moyj01"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "moyj01": 37
    }
  },
  {
    "path": "src/main/java/duke/gui/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "moyj01"
        },
        "content": "package duke.gui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import duke.response.Response;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import javafx.animation.PauseTransition;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import javafx.util.Duration;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "moyj01"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "moyj01"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "moyj01"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "moyj01"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.gif\"));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/duke.gif\"));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public MainWindow() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * Initialises the program\u0027s GUI."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        String greeting \u003d \"Hello, I\u0027m Duke Melvin\" + \"\\n\" + \"What can I do for you?\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        dialogContainer.getChildren().add("
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                DialogBox.getDukeDialog(greeting, dukeImage)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        );"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        Response response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        DialogBox dukeDialog;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        if (response.isErrorMessage()) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            dukeDialog \u003d DialogBox.getDukeDialog(response.getResponseMessage(), dukeImage, true);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            dukeDialog \u003d DialogBox.getDukeDialog(response.getResponseMessage(), dukeImage);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            if (response.isExit()) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                PauseTransition delay \u003d new PauseTransition(Duration.seconds(0.5));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                delay.setOnFinished(event -\u003e Platform.exit());"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                delay.play();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                dukeDialog"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        );"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "moyj01"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "moyj01": 82
    }
  },
  {
    "path": "src/main/java/duke/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "moyj01"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import duke.command.ByeCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import duke.command.DeadlineCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import duke.command.DoneCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import duke.command.EventCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import duke.command.FindCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import duke.command.InvalidCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import duke.command.ToDoCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import duke.command.UserCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "moyj01"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "moyj01"
        },
        "content": " * Parses user\u0027s input."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "moyj01"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "moyj01"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @param userInput User\u0027s input."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @return command Corresponding Command based on user\u0027s input."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public static UserCommand parse(String userInput) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        String firstArg \u003d userInput.trim().split(\" \")[0];"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        switch (userInput) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            return new ByeCommand(userInput);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            return new ListCommand(userInput);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            switch (firstArg) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                return new DoneCommand(userInput);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                return new DeleteCommand(userInput);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                return new ToDoCommand(userInput);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                return new DeadlineCommand(userInput);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                return new EventCommand(userInput);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            case \"find\":"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                return new FindCommand(userInput);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                return new InvalidCommand(userInput);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "moyj01"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "moyj01": 49
    }
  },
  {
    "path": "src/main/java/duke/response/Response.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "moyj01"
        },
        "content": "package duke.response;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "moyj01"
        },
        "content": "public class Response {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    private boolean isErrorMessage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    private String responseMessage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    private boolean isExit;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @param responseMessage response message to user\u0027s input."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @param isErrorMessage  checks if response message is an error message."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @param isExit          checks if response message is an exit message."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public Response(String responseMessage, boolean isErrorMessage, boolean isExit) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        this.responseMessage \u003d responseMessage;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        this.isErrorMessage \u003d isErrorMessage;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        this.isExit \u003d isExit;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public boolean isErrorMessage() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        return isErrorMessage;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public String getResponseMessage() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        return responseMessage;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        return isExit;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "moyj01"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "moyj01": 30
    }
  },
  {
    "path": "src/main/java/duke/storage/ArrayListToTextConverter.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "moyj01"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import java.io.FileOutputStream;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import java.io.ObjectOutputStream;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "moyj01"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "moyj01"
        },
        "content": " * Saves the current TaskList."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "moyj01"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "moyj01"
        },
        "content": "public class ArrayListToTextConverter {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @param tasks TaskList containing all the existing tasks."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @param filePath Filepath to store the file."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public static void convertTaskListToText(TaskList tasks, String filePath) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            FileOutputStream fileOutputStream \u003d new FileOutputStream(filePath);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            ObjectOutputStream objectOutputStream \u003d new ObjectOutputStream(fileOutputStream);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            objectOutputStream.writeObject(tasks);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            objectOutputStream.flush();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            objectOutputStream.close();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "moyj01"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "moyj01": 31
    }
  },
  {
    "path": "src/main/java/duke/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "moyj01"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "moyj01"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "moyj01"
        },
        "content": " * Deals with loading tasks from the file and saving tasks to the file"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "moyj01"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "moyj01"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * Load saved file from disk."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @return list containing the previously saved tasks."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public TaskList load() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        return TextToTaskListConverter.readFile(filePath);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * Save file to disk."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @param tasks containing the tasks in the list."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public void save(TaskList tasks) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        ArrayListToTextConverter.convertTaskListToText(tasks, filePath);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "moyj01"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "moyj01": 34
    }
  },
  {
    "path": "src/main/java/duke/storage/TextToTaskListConverter.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "moyj01"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import java.io.FileInputStream;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import java.io.ObjectInputStream;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "moyj01"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "moyj01"
        },
        "content": " * Loads the saved TaskList."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "moyj01"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "moyj01"
        },
        "content": "public class TextToTaskListConverter {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @param filePath Filepath where the file is stored."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @return TaskList that has been saved previously."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public static TaskList readFile(String filePath) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            FileInputStream fileInputStream \u003d new FileInputStream(filePath);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            ObjectInputStream objectInputStream \u003d new ObjectInputStream(fileInputStream);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            TaskList taskList \u003d (TaskList) objectInputStream.readObject();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            objectInputStream.close();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            return taskList;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            return new TaskList();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        } catch (ClassNotFoundException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "moyj01"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "moyj01": 36
    }
  },
  {
    "path": "src/main/java/duke/tasks/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "moyj01"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import duke.timeformatter.TimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "moyj01"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "moyj01"
        },
        "content": " * Represents a Task that has an associated Deadline."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "moyj01"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "moyj01"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @param description Description of the Deadline."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @param by Date associated with the deadline."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public Deadline(String description, LocalDate by) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        super(description, by);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * Returns the String representation of this deadline to be displayed to the user."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @return The String representation of this deadline to be displayed to the user."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        return \"[D]\" + getStatusIcon() + super.toString() + \" [by: \""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                + TimeFormatter.prettyDate(localDate) + \"]\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public TaskType getTaskType() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        return TaskType.Deadline;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "moyj01"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "moyj01": 35
    }
  },
  {
    "path": "src/main/java/duke/tasks/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "moyj01"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import duke.timeformatter.TimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "moyj01"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "moyj01"
        },
        "content": " * Represent a Task that has an associated date of occurrence."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "moyj01"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "moyj01"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @param description Description of the Event."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @param at Date of the Event."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public Event(String description, LocalDate at) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        super(description, at);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * Returns the String representation of this event to be displayed to the user."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @return The String representation of this event to be displayed to the user."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        return \"[E]\" + getStatusIcon() + super.toString() + \" [at: \""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                + TimeFormatter.prettyDate(localDate) + \"]\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public TaskType getTaskType() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        return TaskType.Event;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "moyj01"
        },
        "content": "}"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "moyj01": 38
    }
  },
  {
    "path": "src/main/java/duke/tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "moyj01"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "moyj01"
        },
        "content": "public class Task implements Serializable {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    protected LocalDate localDate;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @param description Task\u0027s description."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        this.localDate \u003d null;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @param description Task\u0027s description."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @param localDate Date associated with the task."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public Task(String description, LocalDate localDate) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        this.localDate \u003d localDate;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * Getter method to retrieve the status of the task."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @return String representation of the status of the Task."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        return (isDone ? \"[\\u2713] \" : \"[\\u2718] \");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @return Description of the Task."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @return Date of the Task."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public LocalDate getLocalDate() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        return localDate;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @return Type of the Task."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public TaskType getTaskType() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * Mark a task as completed."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * Returns the String representation of this task to be displayed to the user."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     *"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @return The String representation of this task to be displayed to the user."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * Enum to represents the different task types."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public enum TaskType {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        Deadline,"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        ToDo,"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        Event"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "moyj01"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "moyj01": 85
    }
  },
  {
    "path": "src/main/java/duke/tasks/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "moyj01"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "moyj01"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "moyj01"
        },
        "content": " * Represents the list of Tasks."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "moyj01"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "moyj01"
        },
        "content": "public class TaskList implements Serializable {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    private List\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * Construct an empty TaskList."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public TaskList(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @param index Index of the Task in the TaskList."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @return Task at the corresponding index."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public Task getTaskAtIndex(int index) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        assert (index \u003e\u003d 0 \u0026\u0026 index \u003c this.listSize());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        return this.tasks.get(index);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @param task Task to be added to the TaskList."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        this.tasks.add(task);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @param index Item index in the TaskList."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public void deleteTask(int index) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        assert (index \u003e\u003d 0 \u0026\u0026 index \u003c this.listSize());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        this.tasks.remove(index);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @return Size of the TaskList."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public int listSize() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "moyj01"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "moyj01": 55
    }
  },
  {
    "path": "src/main/java/duke/tasks/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "moyj01"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "moyj01"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "moyj01"
        },
        "content": " * Represents a Task that requires completion."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "moyj01"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "moyj01"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    private static final String taskType \u003d \"ToDo\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @param description Todo description."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * Returns the String representation of this ToDo to be displayed to the user."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @return The String representation of this ToDo to be displayed to the user."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        return \"[T]\" + getStatusIcon() + super.toString();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public TaskType getTaskType() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        return TaskType.ToDo;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "moyj01"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "moyj01": 31
    }
  },
  {
    "path": "src/main/java/duke/timeformatter/TimeFormatter.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "moyj01"
        },
        "content": "package duke.timeformatter;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import duke.exceptions.InvalidDateFormatException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "moyj01"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "moyj01"
        },
        "content": " * Convert the user\u0027s input for date to be parse by LocalDate."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "moyj01"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "moyj01"
        },
        "content": "public class TimeFormatter {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * Convert string input to LocalDate"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @param inputDate User\u0027s date string input."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @return LocalDate corresponding to the string input."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public static LocalDate localDate(String inputDate) throws DukeException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            String date \u003d inputDate.trim().replaceAll(\"/\", \"-\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            LocalDate localDate \u003d LocalDate.parse(date);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            return localDate;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        } catch (DateTimeParseException ex) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            throw new InvalidDateFormatException();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @param localDate LocalDate to be converted to String representation."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @return String representation of date."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public static String prettyDate(LocalDate localDate) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        return localDate.getMonth().name().substring(0, 3) + \" \" + localDate.getDayOfMonth() + \" \""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                + localDate.getYear();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "moyj01"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "moyj01": 38
    }
  },
  {
    "path": "src/main/java/duke/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "moyj01"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "moyj01"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "moyj01"
        },
        "content": " * Deals with handling interactions with the user."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "moyj01"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "moyj01"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * Constructor for Ui."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * Prints goodbye message to the user."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public String sayGoodBye() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        return \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * Prints out all the Task within the TaskList."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @param taskList TaskList that contains the Tasks."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public String printList(TaskList taskList) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        String s \u003d \"\\n\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        for (int x \u003d 0; x \u003c taskList.listSize(); x++) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            s \u003d s + (int) (x + 1) + \":\" + taskList.getTaskAtIndex(x).toString() + \"\\n\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        return s;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * Prints the size of the TaskList."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @param taskList TaskList that contains the Tasks."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public String printListCount(TaskList taskList) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        return \"Now you have \" + taskList.listSize() + \" tasks in the list\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * Prints the response to user\u0027s command."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @param response String to be printed to the user."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public String printResponse(String response) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        return response;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "moyj01"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "moyj01": 55
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "moyj01"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "moyj01"
        },
        "content": "\u003c?import javafx.geometry.*?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "moyj01"
        },
        "content": "\u003c?import javafx.scene.control.*?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "moyj01"
        },
        "content": "\u003c?import javafx.scene.effect.*?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "moyj01"
        },
        "content": "\u003c?import javafx.scene.image.*?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "moyj01"
        },
        "content": "\u003c?import javafx.scene.layout.*?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "moyj01"
        },
        "content": "\u003c?import javafx.scene.text.*?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "moyj01"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" prefHeight\u003d\"100.0\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "moyj01"
        },
        "content": "         xmlns\u003d\"http://javafx.com/javafx/10.0.2-internal\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        \u003cVBox fx:id\u003d\"chatBubble\" maxHeight\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" spacing\u003d\"10.0\" styleClass\u003d\"chat-bubble\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                \u003cInsets left\u003d\"15.0\" right\u003d\"5.0\"/\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            \u003cpadding\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                \u003cInsets bottom\u003d\"20.0\" left\u003d\"20.0\" right\u003d\"20.0\" top\u003d\"20.0\"/\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            \u003c/padding\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            \u003cchildren\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                \u003cLabel fx:id\u003d\"dialog\" lineSpacing\u003d\"5.0\" styleClass\u003d\"chat-label\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                    \u003cfont\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                        \u003cFont name\u003d\"Comic Sans MS\" size\u003d\"13.0\"/\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                    \u003c/font\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                \u003c/Label\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            \u003c/children\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        \u003c/VBox\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"/\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"15.0\" right\u003d\"15.0\" top\u003d\"15.0\"/\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "moyj01"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "moyj01": 33
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "moyj01"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "moyj01"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "moyj01"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "moyj01"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "moyj01"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "moyj01"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "moyj01"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.gui.MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" styleClass\u003d\"scroll-view\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "moyj01"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "moyj01": 19
    }
  },
  {
    "path": "src/test/java/duke/parser/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "moyj01"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import duke.command.ByeCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import duke.command.UserCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "moyj01"
        },
        "content": "class ParserTest {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public void parseByeCommand() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        UserCommand command \u003d Parser.parse(\"bye\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        assertTrue(command instanceof ByeCommand);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public void parseListCommand() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        UserCommand command \u003d Parser.parse(\"list\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        assertTrue(command instanceof ListCommand);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "moyj01"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "moyj01": 28
    }
  },
  {
    "path": "src/test/java/duke/timeformatter/TimeFormatterTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "moyj01"
        },
        "content": "package duke.timeformatter;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "moyj01"
        },
        "content": "class TimeFormatterTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public void convertDate() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        String by \u003d \"2019/10/10\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        String date \u003d by.trim().replaceAll(\"/\", \"-\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        LocalDate localDate \u003d LocalDate.parse(date);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        assertTrue(localDate.equals(LocalDate.parse(\"2019-10-10\")));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public void convertToPrettyDate() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        LocalDate localDate \u003d LocalDate.parse(\"2019-10-10\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        String testString \u003d TimeFormatter.prettyDate(localDate);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        String expectedOutput \u003d \"OCT 10 2019\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        assertTrue(testString.equals(expectedOutput));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "moyj01"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "moyj01": 26
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "moyj01"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "moyj01"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "moyj01"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "moyj01"
        },
        "content": "list"
      }
    ],
    "authorContributionMap": {
      "moyj01": 4
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "moyj01"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "moyj01": 2,
      "-": 20
    }
  }
]
