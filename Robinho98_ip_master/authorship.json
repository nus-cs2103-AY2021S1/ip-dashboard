[
  {
    "path": "data/fileInfo.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "D | 1 | pore | 2012-02-19"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "T | 0 | pretty"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "D | 0 | yas | 2012-01-01"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "E | 1 | pepega | 2010-04-30"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "T | 0 | thisisfine"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "D | 0 | imnotfine | 2030-04-05"
      }
    ],
    "authorContributionMap": {
      "Robinho98": 6
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import duke.common.CustomException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import duke.common.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Robinho98"
        },
        "content": " * Entry point of the Duke application."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Robinho98"
        },
        "content": " * Initializes the application and starts the interaction with the user."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Robinho98"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * Sets up the required objects, loads up the data from the storage file, and prints the welcome message."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @param filePath directory of where the storage file is located in."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        Ui.displayWelcome();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            ArrayList\u003cTask\u003e currenttasks \u003d Storage.readFile();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            tasks \u003d new TaskList(currenttasks);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            if (!currenttasks.isEmpty()) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "                Ui.displayTasks(currenttasks);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "                Ui.display(\"No current list available. Start by adding a task!\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            tasks \u003d new TaskList(new ArrayList\u003cTask\u003e());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    /** Runs the program until termination.  */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            } catch (CustomException | IOException e) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "                Ui.display(e.getMessage());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        new Duke(\"data/fileInfo.txt\").run();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Robinho98": 63,
      "-": 3
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import duke.common.CustomException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import duke.common.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Robinho98"
        },
        "content": " * Represents an executable command."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Robinho98"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @param tasks list of tasks"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @param ui object to output messages"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @param storage object to write TaskList to file"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public abstract void execute (TaskList tasks, Ui ui, Storage storage) throws CustomException, IOException;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * Checks if command will exit the program."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Robinho98": 30
    }
  },
  {
    "path": "src/main/java/duke/command/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import duke.common.CustomException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import duke.common.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Robinho98"
        },
        "content": " * Adds a deadline task."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Robinho98"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "public class DeadlineCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    private static String description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    private static String by;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public DeadlineCommand(String description, String by) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        DeadlineCommand.description \u003d description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        DeadlineCommand.by \u003d by;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public void execute (TaskList tasks, Ui ui, Storage storage) throws CustomException, IOException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            Task temp \u003d new Deadline(description, by);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            tasks.addTask(temp);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            Storage.appendToFile(temp);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            Ui.display(\"Yay! New task added:\\n   \" + temp +"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "                    \"\\nNow you have \" + tasks.getSize() + \" tasks in your list.\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            throw new CustomException(\"Please input a suitable date of \u003cyyyy-mm-dd\u003e format!\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Robinho98": 34
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import duke.common.CustomException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import duke.common.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Robinho98"
        },
        "content": " * Deletes a task."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Robinho98"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    private static int taskindex;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public DeleteCommand(int taskindex) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        DeleteCommand.taskindex \u003d taskindex - 1;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public void execute (TaskList tasks, Ui ui, Storage storage) throws CustomException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            Ui.display(\"Noted. I\u0027ve removed this task:\\n   \" + tasks.getTask(taskindex) +"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "                    \"\\nNow you have \" + tasks.getSize() + \" tasks in your list.\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            tasks.deleteTask(taskindex);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            Storage.writeToFile(tasks.getList());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            throw new CustomException(\"This task does not exist!\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Robinho98": 28
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import duke.common.CustomException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import duke.common.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Robinho98"
        },
        "content": " * Marks a task as done."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Robinho98"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    private static int taskindex;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public DoneCommand(int taskindex) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        DoneCommand.taskindex \u003d taskindex - 1;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public void execute (TaskList tasks, Ui ui, Storage storage) throws CustomException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            tasks.markAsDone(taskindex);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            Ui.display(\"Nice! I\u0027ve marked this task as done:\\n   \" + tasks.getTask(taskindex));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            Storage.writeToFile(tasks.getList());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            throw new CustomException(\"This task does not exist!\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Robinho98": 27
    }
  },
  {
    "path": "src/main/java/duke/command/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import duke.common.CustomException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import duke.common.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Robinho98"
        },
        "content": " * Adds a event task."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Robinho98"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "public class EventCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    private static String description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    private static String at;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public EventCommand(String description, String at) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        EventCommand.description \u003d description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        EventCommand.at \u003d at;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public void execute (TaskList tasks, Ui ui, Storage storage) throws CustomException, IOException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "//        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            Task temp \u003d new Event(description, at);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            tasks.addTask(temp);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            Storage.appendToFile(temp);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            Ui.display(\"Yay! New task added:\\n   \" + temp +"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "                    \"\\nNow you have \" + tasks.getSize() + \" tasks in your list.\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "//        } catch (Exception e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "//            throw new CustomException(\"Please input a suitable date of \u003cyyyy-mm-dd\u003e format!\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "//        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Robinho98": 34
    }
  },
  {
    "path": "src/main/java/duke/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import duke.common.CustomException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import duke.common.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Robinho98"
        },
        "content": " * Command to exit the program."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Robinho98"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public void execute (TaskList tasks, Ui ui, Storage storage) throws CustomException, IOException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        Storage.writeToFile(tasks.getList());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        Ui.display(\"Bye! Hope to see you again! :D\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        System.exit(0);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * Checks if command will exit the program."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Robinho98": 26
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import duke.common.CustomException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import duke.common.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Robinho98"
        },
        "content": " * Command to search for keywords"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Robinho98"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    private static String keyword;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public FindCommand(String keyword) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        duke.command.FindCommand.keyword \u003d keyword;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws CustomException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            ArrayList\u003cTask\u003e matching \u003d tasks.findTask(keyword);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            if (!matching.isEmpty()) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "                Ui.displayMatchingTasks(matching);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "                Ui.display(\"No matching tasks!\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            throw new CustomException(\"Please include a keyword to search for!\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Robinho98": 35
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import duke.common.CustomException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import duke.common.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Robinho98"
        },
        "content": " * Lists all tasks in the current task list."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Robinho98"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public void execute (TaskList tasks, Ui ui, Storage storage) throws CustomException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        Ui.displayTasks(tasks.getList());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Robinho98": 15
    }
  },
  {
    "path": "src/main/java/duke/command/ToDoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import duke.common.CustomException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import duke.common.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Robinho98"
        },
        "content": " * Adds a ToDo task."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Robinho98"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "public class ToDoCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    private static String description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public ToDoCommand(String description) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        ToDoCommand.description \u003d description;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public void execute (TaskList tasks, Ui ui, Storage storage) throws CustomException, IOException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        Task temp \u003d new ToDo(description);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        tasks.addTask(temp);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        Storage.appendToFile(temp);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        Ui.display(\"Yay! New task added:\\n   \" + temp +"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "                \"\\nNow you have \" + tasks.getSize() + \" tasks in your list.\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Robinho98": 29
    }
  },
  {
    "path": "src/main/java/duke/common/CustomException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "package duke.common;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Robinho98"
        },
        "content": " * Signals custom errors and outputs a corresponding message."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Robinho98"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "public class CustomException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public CustomException(String message) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Robinho98": 11
    }
  },
  {
    "path": "src/main/java/duke/common/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "package duke.common;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Robinho98"
        },
        "content": " * Text UI of the application."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Robinho98"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    private final Scanner sc;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        this.sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * Generates and prints a custom string."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @param s text to be displayed to the user"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public static void display(String s) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        displayLine();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        System.out.println(s);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        displayLine();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * Generates and prints a divider line."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public static void displayLine() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        System.out.println(\"________________________________________\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * Generates and prints the current task list of the user."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @param tasks list of tasks the user has inputted thus far"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public static void displayTasks(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        displayLine();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        System.out.println(\"Here is your current list:\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            System.out.println(\"    \" + (i + 1) + \". \" + tasks.get(i));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        displayLine();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public static void displayMatchingTasks(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        displayLine();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        System.out.println(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            System.out.println(\"    \" + (i + 1) + \". \" + tasks.get(i));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        displayLine();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * Generates and prints the welcome message upon the start of the application."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public static void displayWelcome() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\\n\" +"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "                \"     What can I do for you?\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * Uses scanner to read the next line that the user input."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @return next command"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        return sc.nextLine();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Robinho98": 78
    }
  },
  {
    "path": "src/main/java/duke/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import duke.command.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import duke.common.CustomException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Robinho98"
        },
        "content": " * Parses user input."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Robinho98"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * Parses user input into command for execution."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @param command full user input string"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @return the command based on the user input"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public static Command parse(String command) throws CustomException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        String[] parts \u003d command.split(\" \", 2);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "//        System.out.println(parts[0] + \"|\" + parts[1]);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        switch(parts[0].toLowerCase()) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            case \"bye\":"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "                return new ExitCommand();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "                return new ListCommand();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "                return new DoneCommand(Integer.parseInt(parts[1].trim()));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "                return new DeleteCommand(Integer.parseInt(parts[1].trim()));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            case \"find\":"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "                return new FindCommand(parts[1].trim());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "                return new ToDoCommand(parts[1].trim());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "                    String[] deadline \u003d parts[1].split(\"/by\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "                    return new DeadlineCommand(deadline[0].trim(), deadline[1].trim());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "                } catch (Exception e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "                    throw new CustomException(\"Deadline formatting is wrong! Please include /by.\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "                }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "                    String[] event \u003d parts[1].split(\"/at\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "                    return new EventCommand(event[0].trim(), event[1].trim());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "                } catch (Exception e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "                    throw new CustomException(\"Event formatting is wrong! Please include /at.\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "                }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "                throw new CustomException(\"Please try again!\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Robinho98": 52
    }
  },
  {
    "path": "src/main/java/duke/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Robinho98"
        },
        "content": " * Stores user data."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Robinho98"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    private static String filePath;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        Storage.filePath \u003d filePath;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            File f \u003d new File(filePath);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            f.getParentFile().mkdir();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            f.createNewFile();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        } catch(Exception e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            // if any error occurs"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * Writes task list to file"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @param toDoList list of tasks that user has inputted that needs to be saved"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public static void writeToFile(ArrayList\u003cTask\u003e toDoList) throws IOException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        for (int i \u003d 0; i \u003c toDoList.size(); i++) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            fw.write(toDoList.get(i).infoString());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            fw.write(System.lineSeparator());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * Adds an additional task to file"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @param task the task that needs to be added to the file to be saved"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public static void appendToFile(Task task) throws IOException {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath, true); // create a FileWriter in append mode"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        fw.write(task.infoString());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        fw.write(System.lineSeparator());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * Reads file and generates the task list that was saved"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @return the tasklist that was saved in the file"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public static ArrayList\u003cTask\u003e readFile() throws FileNotFoundException {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        File f \u003d new File(filePath);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        if (!f.exists()) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            return new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        Scanner s \u003d new Scanner(f);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        ArrayList\u003cTask\u003e listOfTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        while (s.hasNext()) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            listOfTasks.add(createTask(s.nextLine()));"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        return listOfTasks;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * Converts infoString format into a Task"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @param s infoString of the task"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @return task represented by the infoString"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public static Task createTask(String s) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        String[] parts \u003d s.split(\"\\\\|\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        switch(parts[0].trim()) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            case \"T\":"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "                return new ToDo(parts[2].trim(), parts[1].trim().equals(\"1\"));"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            case \"D\":"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "                return new Deadline(parts[2].trim(), parts[1].trim().equals(\"1\"), parts[3].trim());"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            case \"E\":"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "                return new Event(parts[2].trim(), parts[1].trim().equals(\"1\"), parts[3].trim());"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "                return null;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Robinho98": 97
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Robinho98"
        },
        "content": " * Deadline task that inherits from Task class, and has an additional condition, which is when it is due by."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Robinho98"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    protected LocalDate by;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * Creates a new Deadline object"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @param description details about the Deadline"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @param by          date the deadline is due by in yyyy-mm-dd format"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @return Deadline with a corresponding description and sets it as uncompleted."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        this.by \u003d LocalDate.parse(by.trim());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * Creates a new Event object"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @param description details about the Deadline"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @param isDone whether Deadline is done or not"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @param by time/date the Deadline is due by in yyyy-mm-dd format"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @return Deadline with a corresponding description and completed status."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public Deadline(String description, boolean isDone, String by) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        this.by \u003d LocalDate.parse(by.trim());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * Checks if task contains the keyword"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @return whether the task contains that keyword"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public boolean haveKeyword(String keyword) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        return description.contains(keyword) || by.format(DateTimeFormatter.ofPattern(\"d MMM yyyy\")).contains(keyword);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * Overrides toString method of Task class"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @return Custom description of the deadline"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        return \"[D] \" + super.toString() + \" (by: \" + by.format(DateTimeFormatter.ofPattern(\"d MMM yyyy\")) + \")\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * Returns task description and its isDone status for saving."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @return string containing its description and its status icon."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public String infoString() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        String x \u003d \"0\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            x \u003d \"1\";"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        return \"D | \" + x +  \" | \" + this.description + \" | \" + by;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Robinho98": 70
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Robinho98"
        },
        "content": " * Event task that inherits from Task class, and has an additional condition, which is when it is held at."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Robinho98"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    protected LocalDate at;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * Creates a new Event object"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @param description details about the Event"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @param at time/date the event is held at"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @return Event with a corresponding description and completed status."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        this.at \u003d LocalDate.parse(at.trim());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * Creates a new Event object"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @param description details about the Event"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @param isDone whether Event is done or not"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @param at time/date the event is held at"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @return Event with a corresponding description and completed status."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public Event(String description, boolean isDone, String at) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        this.at \u003d LocalDate.parse(at.trim());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * Checks if task contains the keyword"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @return whether the task contains that keyword"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public boolean haveKeyword(String keyword) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        return description.contains(keyword) || at.format(DateTimeFormatter.ofPattern(\"d MMM yyyy\")).contains(keyword);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * Overrides toString method of Task class"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @return Custom description of the event"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        return \"[E] \" + super.toString() + \" (at: \" + at.format(DateTimeFormatter.ofPattern(\"d MMM yyyy\")) + \")\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * Returns task description and its isDone status for saving."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @return string containing its description and its status icon."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public String infoString() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        String x \u003d \"0\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            x \u003d \"1\";"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        return \"E | \" + x +  \" | \" + this.description + \" | \" + at;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Robinho98": 70
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Robinho98"
        },
        "content": " * Tasks that the user input"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Robinho98"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * Creates a new Task object and set its isDone boolean"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @param description details about the Task"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @param isDone whether Task is done or not"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @return Task with a corresponding description and completed status."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public Task(String description, boolean isDone) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * Returns either ✓ or ✘, depending on whether task has been done."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @return ✓ or ✘."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        return (isDone ? \"✓\" : \"✘\"); //return tick or X symbols"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public abstract boolean haveKeyword(String keyword);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * Returns task description and its status icon."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @return string containing its description and its status icon."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * Returns task description and its isDone status for saving."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @return string containing its description and its status icon."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public String infoString() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        String x \u003d \"0\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            x \u003d \"1\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        return \"T | \" + x + \" | \" + this.description;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Robinho98": 63
    }
  },
  {
    "path": "src/main/java/duke/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import duke.common.CustomException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Robinho98"
        },
        "content": " * Represents all of the users tasks in a list."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Robinho98"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    private static ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        TaskList.tasks \u003d tasks;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * Adds a task to the task list."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @param task The task to be added"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * Deletes a task to the task list."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @param taskindex The index of the task to be deleted in the task list."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public void deleteTask(int taskindex) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        tasks.remove(taskindex);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * Marks a task in the task list as done"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @param taskindex The index of the task in the task list that is to be marked as done."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public void markAsDone(int taskindex) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        tasks.get(taskindex).markAsDone();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * Returns current task list."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @return current task list."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public ArrayList\u003cTask\u003e getList() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * Gets a task to the task list."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @param taskindex The index of the task to get in the task list."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public Task getTask(int taskindex) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        return tasks.get(taskindex);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * Returns number of tasks in the task list"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @return number of tasks."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * Filters for tasks that contain the keyword."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @return tasks that contains the keyword in an array list."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public ArrayList\u003cTask\u003e findTask(String keyword) throws CustomException {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        ArrayList\u003cTask\u003e result \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        if (!keyword.isEmpty()) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            for (Task task : tasks) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "                if (task.haveKeyword(keyword)) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "                    result.add(task);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "                }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            throw new CustomException(\"keyword is left blank.\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Robinho98": 83
    }
  },
  {
    "path": "src/main/java/duke/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Robinho98"
        },
        "content": " * Todo task that inherits from Task class"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Robinho98"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * Creates a new Task object and set its isDone boolean"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @param description details about the Task"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @param isDone whether Task is done or not"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @return Task with a corresponding description and completed status."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public ToDo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * Checks if task contains the keyword"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @return whether the task contains that keyword"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public boolean haveKeyword(String keyword) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        return description.contains(keyword);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * Overrides toString method of Task class"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @return Custom description of the todo task"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        return \"[T] \" + super.toString();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * Returns task description and its isDone status for saving."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @return string containing its description and its status icon."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public String infoString() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        String x \u003d \"0\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            x \u003d \"1\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        return \"T | \" + x +  \" | \" + this.description;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Robinho98": 58
    }
  },
  {
    "path": "src/test/java/duke/task/ToDoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "public class ToDoTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public void descriptionTest(){"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        assertEquals(new ToDo(\"testing\").description, \"testing\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public void defaultStatusTest(){"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        assertEquals(new ToDo(\"testing\").isDone, false);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public void overloadedConstructorTest(){"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        assertEquals(new ToDo(\"testing\", true).isDone, true);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public void toStringTest(){"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        assertEquals(new ToDo(\"testing\").toString(), \"[T] [✘] testing\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public void infoStringTest(){"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        assertEquals(new ToDo(\"testing\").infoString(), \"T | 0 | testing\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Robinho98": 32
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "todo hi"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "deadline homework /by wednesday"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "event concert /at next month"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "Robinho98": 7
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "SET MY_PATH\u003dC:\\Users\\Robin\\Desktop\\NUS Codes\\Y2S1\\CS2103T\\iP"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "javac  -cp \"C:\\Users\\Robin\\Desktop\\NUS Codes\\Y2S1\\CS2103T\\iP\\src\\main\\java\" -Xlint:none -d \"C:\\Users\\Robin\\Desktop\\NUS Codes\\Y2S1\\CS2103T\\iP\\bin\" \"C:\\Users\\Robin\\Desktop\\NUS Codes\\Y2S1\\CS2103T\\iP\\src\\main\\java\\Duke.java\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "Robinho98": 3,
      "-": 20
    }
  }
]
