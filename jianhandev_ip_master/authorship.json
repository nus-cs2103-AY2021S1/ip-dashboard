[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"jianhandev"},"content":"# FukuBot by Li Jianhan"},{"lineNumber":2,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":3,"author":{"gitId":"jianhandev"},"content":"This is an individual greenfield Java project under CS2103T (Software Enginnering). Given below are instructions on how to use it."},{"lineNumber":4,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":5,"author":{"gitId":"jianhandev"},"content":"Chatbot Hanry accepts several commands, namely:"},{"lineNumber":6,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":7,"author":{"gitId":"jianhandev"},"content":"\u003cins\u003eShow Commands:\u003c/ins\u003e"},{"lineNumber":8,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":9,"author":{"gitId":"jianhandev"},"content":"This set of commands will list out your tasks based on the criteria given."},{"lineNumber":10,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":11,"author":{"gitId":"jianhandev"},"content":"`list`"},{"lineNumber":12,"author":{"gitId":"jianhandev"},"content":"Lists out all tasks"},{"lineNumber":13,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":14,"author":{"gitId":"jianhandev"},"content":"`date \u003cdate\u003e`"},{"lineNumber":15,"author":{"gitId":"jianhandev"},"content":"Finds all tasks on the given date"},{"lineNumber":16,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":17,"author":{"gitId":"jianhandev"},"content":"`find \u003ckeyword\u003e`"},{"lineNumber":18,"author":{"gitId":"jianhandev"},"content":"Finds all tasks that contains a certain keyword/substring"},{"lineNumber":19,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":20,"author":{"gitId":"jianhandev"},"content":"`sort /by \u003cdescriptor\u003e`"},{"lineNumber":21,"author":{"gitId":"jianhandev"},"content":"Sort tasks by latest or earliest date"},{"lineNumber":22,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":23,"author":{"gitId":"jianhandev"},"content":"\u003cins\u003eAdd Commands:\u003c/ins\u003e"},{"lineNumber":24,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":25,"author":{"gitId":"jianhandev"},"content":"`todo \u003cdescription\u003e`"},{"lineNumber":26,"author":{"gitId":"jianhandev"},"content":"Adds a todo task"},{"lineNumber":27,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":28,"author":{"gitId":"jianhandev"},"content":"`deadline \u003cdescription\u003e /by \u003cdate\u003e`"},{"lineNumber":29,"author":{"gitId":"jianhandev"},"content":"Adds a deadline with a due date"},{"lineNumber":30,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":31,"author":{"gitId":"jianhandev"},"content":"`event \u003cdescription\u003e /at \u003cdate\u003e`"},{"lineNumber":32,"author":{"gitId":"jianhandev"},"content":"Adds an event on the given date"},{"lineNumber":33,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":34,"author":{"gitId":"jianhandev"},"content":"\u003cins\u003eAction Commands:\u003c/ins\u003e"},{"lineNumber":35,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":36,"author":{"gitId":"jianhandev"},"content":"`done \u003cindex\u003e`"},{"lineNumber":37,"author":{"gitId":"jianhandev"},"content":"Marks the task as completed"},{"lineNumber":38,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":39,"author":{"gitId":"jianhandev"},"content":"`delete \u003cindex\u003e`"},{"lineNumber":40,"author":{"gitId":"jianhandev"},"content":"Deletes the task"},{"lineNumber":41,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":42,"author":{"gitId":"jianhandev"},"content":"`bye`"},{"lineNumber":43,"author":{"gitId":"jianhandev"},"content":"Exits the program"},{"lineNumber":44,"author":{"gitId":"jianhandev"},"content":""}],"authorContributionMap":{"jianhandev":44}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":15,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":16,"author":{"gitId":"jianhandev"},"content":"    String javaFxVersion \u003d \u002711.0.2\u0027"},{"lineNumber":17,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":18,"author":{"gitId":"jianhandev"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":19,"author":{"gitId":"jianhandev"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":20,"author":{"gitId":"jianhandev"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":21,"author":{"gitId":"jianhandev"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":22,"author":{"gitId":"jianhandev"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":23,"author":{"gitId":"jianhandev"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":24,"author":{"gitId":"jianhandev"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":25,"author":{"gitId":"jianhandev"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":26,"author":{"gitId":"jianhandev"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":27,"author":{"gitId":"jianhandev"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":28,"author":{"gitId":"jianhandev"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":29,"author":{"gitId":"jianhandev"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":47,"author":{"gitId":"jianhandev"},"content":"    mainClassName \u003d \"chatbot.Launcher\""},{"lineNumber":48,"author":{"gitId":"-"},"content":"}"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":51,"author":{"gitId":"jianhandev"},"content":"    archiveBaseName \u003d \"FUKUBOT\""},{"lineNumber":52,"author":{"gitId":"jianhandev"},"content":"    archiveVersion \u003d \"V0.2\""},{"lineNumber":53,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}"},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":57,"author":{"gitId":"jianhandev"},"content":"    toolVersion \u003d \u00278.32\u0027"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}"},{"lineNumber":59,"author":{"gitId":"-"},"content":""},{"lineNumber":60,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"jianhandev":19,"-":43}},{"path":"config/travis/check-eof-newline.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"jianhandev"},"content":"#!/bin/sh"},{"lineNumber":2,"author":{"gitId":"jianhandev"},"content":"# Checks that all text files end with a newline."},{"lineNumber":3,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":4,"author":{"gitId":"jianhandev"},"content":"ret\u003d0"},{"lineNumber":5,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":6,"author":{"gitId":"jianhandev"},"content":"# Preserve filename with spaces by only splitting on newlines."},{"lineNumber":7,"author":{"gitId":"jianhandev"},"content":"IFS\u003d\u0027"},{"lineNumber":8,"author":{"gitId":"jianhandev"},"content":"\u0027"},{"lineNumber":9,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":10,"author":{"gitId":"jianhandev"},"content":"for filename in $(git grep --cached -I -l -e \u0027\u0027 -- \u0027:/\u0027); do"},{"lineNumber":11,"author":{"gitId":"jianhandev"},"content":"    if [ \"$(tail -c 1 \"./$filename\")\" !\u003d \u0027\u0027 ]; then"},{"lineNumber":12,"author":{"gitId":"jianhandev"},"content":"        line\u003d\"$(wc -l \"./$filename\" | cut -d\u0027 \u0027 -f1)\""},{"lineNumber":13,"author":{"gitId":"jianhandev"},"content":"        echo \"ERROR:$filename:$line: no newline at EOF.\""},{"lineNumber":14,"author":{"gitId":"jianhandev"},"content":"        ret\u003d1"},{"lineNumber":15,"author":{"gitId":"jianhandev"},"content":"    fi"},{"lineNumber":16,"author":{"gitId":"jianhandev"},"content":"done"},{"lineNumber":17,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":18,"author":{"gitId":"jianhandev"},"content":"exit $ret"}],"authorContributionMap":{"jianhandev":18}},{"path":"config/travis/check-line-endings.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"jianhandev"},"content":"#!/bin/sh"},{"lineNumber":2,"author":{"gitId":"jianhandev"},"content":"# Checks for prohibited line endings."},{"lineNumber":3,"author":{"gitId":"jianhandev"},"content":"# Prohibited line endings: \\r\\n"},{"lineNumber":4,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":5,"author":{"gitId":"jianhandev"},"content":"git grep --cached -I -n --no-color -P \u0027\\r$\u0027 -- \u0027:/\u0027 |"},{"lineNumber":6,"author":{"gitId":"jianhandev"},"content":"awk \u0027"},{"lineNumber":7,"author":{"gitId":"jianhandev"},"content":"    BEGIN {"},{"lineNumber":8,"author":{"gitId":"jianhandev"},"content":"        FS \u003d \":\""},{"lineNumber":9,"author":{"gitId":"jianhandev"},"content":"        OFS \u003d \":\""},{"lineNumber":10,"author":{"gitId":"jianhandev"},"content":"        ret \u003d 0"},{"lineNumber":11,"author":{"gitId":"jianhandev"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"jianhandev"},"content":"    {"},{"lineNumber":13,"author":{"gitId":"jianhandev"},"content":"        ret \u003d 1"},{"lineNumber":14,"author":{"gitId":"jianhandev"},"content":"        print \"ERROR\", $1, $2, \" prohibited \\\\r\\\\n line ending, use \\\\n instead.\""},{"lineNumber":15,"author":{"gitId":"jianhandev"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"jianhandev"},"content":"    END {"},{"lineNumber":17,"author":{"gitId":"jianhandev"},"content":"        exit ret"},{"lineNumber":18,"author":{"gitId":"jianhandev"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"jianhandev"},"content":"\u0027"}],"authorContributionMap":{"jianhandev":19}},{"path":"config/travis/check-trailing-whitespace.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"jianhandev"},"content":"#!/bin/sh"},{"lineNumber":2,"author":{"gitId":"jianhandev"},"content":"# Checks for trailing whitespace"},{"lineNumber":3,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":4,"author":{"gitId":"jianhandev"},"content":"git grep --cached -I -n --no-color -P \u0027[ \\t]+$\u0027 -- \u0027:/\u0027 |"},{"lineNumber":5,"author":{"gitId":"jianhandev"},"content":"awk \u0027"},{"lineNumber":6,"author":{"gitId":"jianhandev"},"content":"    BEGIN {"},{"lineNumber":7,"author":{"gitId":"jianhandev"},"content":"        FS \u003d \":\""},{"lineNumber":8,"author":{"gitId":"jianhandev"},"content":"        OFS \u003d \":\""},{"lineNumber":9,"author":{"gitId":"jianhandev"},"content":"        ret \u003d 0"},{"lineNumber":10,"author":{"gitId":"jianhandev"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"jianhandev"},"content":"    {"},{"lineNumber":12,"author":{"gitId":"jianhandev"},"content":"        # Only warn for markdown files (*.md) to accomodate text editors"},{"lineNumber":13,"author":{"gitId":"jianhandev"},"content":"        # which do not properly handle trailing whitespace."},{"lineNumber":14,"author":{"gitId":"jianhandev"},"content":"        # (e.g. GitHub web editor)"},{"lineNumber":15,"author":{"gitId":"jianhandev"},"content":"        if ($1 ~ /\\.md$/) {"},{"lineNumber":16,"author":{"gitId":"jianhandev"},"content":"            severity \u003d \"WARN\""},{"lineNumber":17,"author":{"gitId":"jianhandev"},"content":"        } else {"},{"lineNumber":18,"author":{"gitId":"jianhandev"},"content":"            severity \u003d \"ERROR\""},{"lineNumber":19,"author":{"gitId":"jianhandev"},"content":"            ret \u003d 1"},{"lineNumber":20,"author":{"gitId":"jianhandev"},"content":"        }"},{"lineNumber":21,"author":{"gitId":"jianhandev"},"content":"        print severity, $1, $2, \" trailing whitespace.\""},{"lineNumber":22,"author":{"gitId":"jianhandev"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"jianhandev"},"content":"    END {"},{"lineNumber":24,"author":{"gitId":"jianhandev"},"content":"        exit ret"},{"lineNumber":25,"author":{"gitId":"jianhandev"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"jianhandev"},"content":"\u0027"}],"authorContributionMap":{"jianhandev":26}},{"path":"config/travis/run-checks.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"jianhandev"},"content":"#!/bin/sh"},{"lineNumber":2,"author":{"gitId":"jianhandev"},"content":"# Runs all check-* scripts, and returns a non-zero exit code if any of them fail."},{"lineNumber":3,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":4,"author":{"gitId":"jianhandev"},"content":"dir\u003d$(CDPATH\u003d cd -- \"$(dirname -- \"$0\")\" \u0026\u0026 pwd) \u0026\u0026"},{"lineNumber":5,"author":{"gitId":"jianhandev"},"content":"ret\u003d0 \u0026\u0026"},{"lineNumber":6,"author":{"gitId":"jianhandev"},"content":"for checkscript in \"$dir\"/check-*; do"},{"lineNumber":7,"author":{"gitId":"jianhandev"},"content":"    if ! \"$checkscript\"; then"},{"lineNumber":8,"author":{"gitId":"jianhandev"},"content":"        ret\u003d1"},{"lineNumber":9,"author":{"gitId":"jianhandev"},"content":"    fi"},{"lineNumber":10,"author":{"gitId":"jianhandev"},"content":"done"},{"lineNumber":11,"author":{"gitId":"jianhandev"},"content":"exit $ret"}],"authorContributionMap":{"jianhandev":11}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features "},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"jianhandev"},"content":"### Add task (e.g. Todo, deadline, event)"},{"lineNumber":6,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":7,"author":{"gitId":"jianhandev"},"content":"Asks the chatbot to add a new task to the list "},{"lineNumber":8,"author":{"gitId":"jianhandev"},"content":"and save it to disk."},{"lineNumber":9,"author":{"gitId":"jianhandev"},"content":"You are expected to specify a date for deadlines "},{"lineNumber":10,"author":{"gitId":"jianhandev"},"content":"and events."},{"lineNumber":11,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":12,"author":{"gitId":"jianhandev"},"content":"### List task"},{"lineNumber":13,"author":{"gitId":"jianhandev"},"content":"Asks the chatbot to list out your tasks."},{"lineNumber":14,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":15,"author":{"gitId":"jianhandev"},"content":"### Delete task"},{"lineNumber":16,"author":{"gitId":"jianhandev"},"content":"Instructs the chatbot to delete the task which "},{"lineNumber":17,"author":{"gitId":"jianhandev"},"content":"you do not want or have completed."},{"lineNumber":18,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":19,"author":{"gitId":"jianhandev"},"content":"### Mark complete"},{"lineNumber":20,"author":{"gitId":"jianhandev"},"content":"Instructs the chatbot to mark a task as done."},{"lineNumber":21,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":22,"author":{"gitId":"jianhandev"},"content":"### Find by date"},{"lineNumber":23,"author":{"gitId":"jianhandev"},"content":"Asks the chatbot to return you all tasks on "},{"lineNumber":24,"author":{"gitId":"jianhandev"},"content":"a given date, to help you quickly find out what "},{"lineNumber":25,"author":{"gitId":"jianhandev"},"content":"needs to be done on a particular day."},{"lineNumber":26,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":27,"author":{"gitId":"jianhandev"},"content":"### Find by keyword"},{"lineNumber":28,"author":{"gitId":"jianhandev"},"content":"Asks the chatbot to return you a list of tasks"},{"lineNumber":29,"author":{"gitId":"jianhandev"},"content":"that contains certain keywords."},{"lineNumber":30,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":31,"author":{"gitId":"jianhandev"},"content":"### Sort tasks"},{"lineNumber":32,"author":{"gitId":"jianhandev"},"content":"Asks the chatbot to return you a list of tasks"},{"lineNumber":33,"author":{"gitId":"jianhandev"},"content":"sorted by earliest or latest date."},{"lineNumber":34,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"## Usage"},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"jianhandev"},"content":"### Show All Tasks"},{"lineNumber":39,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":40,"author":{"gitId":"jianhandev"},"content":"Format: `list`"},{"lineNumber":41,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":42,"author":{"gitId":"jianhandev"},"content":"Shows a list of all tasks managed by the chatbot."},{"lineNumber":43,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":44,"author":{"gitId":"jianhandev"},"content":"Examples:"},{"lineNumber":45,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":46,"author":{"gitId":"jianhandev"},"content":"- `list` will list out all tasks by the order they are added."},{"lineNumber":47,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":48,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":49,"author":{"gitId":"jianhandev"},"content":"### Adds a Todo Task"},{"lineNumber":50,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":51,"author":{"gitId":"jianhandev"},"content":"Adds a todo task to the chatbot."},{"lineNumber":52,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":53,"author":{"gitId":"jianhandev"},"content":"Format: `todo \u003cdescription\u003e` "},{"lineNumber":54,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":55,"author":{"gitId":"jianhandev"},"content":"Examples:"},{"lineNumber":56,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":57,"author":{"gitId":"jianhandev"},"content":"- `todo Walk the dog` adds a todo task with the description `Walk the dog.`"},{"lineNumber":58,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":59,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":60,"author":{"gitId":"jianhandev"},"content":"### Adds a Deadline"},{"lineNumber":61,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":62,"author":{"gitId":"jianhandev"},"content":"Adds a deadline to the chatbot."},{"lineNumber":63,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":64,"author":{"gitId":"jianhandev"},"content":"Format: `deadline \u003cdescription\u003e /by \u003cdate\u003e`"},{"lineNumber":65,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":66,"author":{"gitId":"jianhandev"},"content":"Examples: "},{"lineNumber":67,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":68,"author":{"gitId":"jianhandev"},"content":"- `deadline Submit assignment /by 2020-09-10` will add a deadline with a description"},{"lineNumber":69,"author":{"gitId":"jianhandev"},"content":"`Submit assignment` that is due on 10 September 2020."},{"lineNumber":70,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":71,"author":{"gitId":"jianhandev"},"content":"### Adds an Event"},{"lineNumber":72,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":73,"author":{"gitId":"jianhandev"},"content":"Adds an event to the chatbot."},{"lineNumber":74,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":75,"author":{"gitId":"jianhandev"},"content":"Format: `event \u003cdescription\u003e /at \u003cdate\u003e`"},{"lineNumber":76,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":77,"author":{"gitId":"jianhandev"},"content":"Examples: "},{"lineNumber":78,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":79,"author":{"gitId":"jianhandev"},"content":"- `event Attend sister\u0027s wedding /at 2020-10-10` will add an event with a description"},{"lineNumber":80,"author":{"gitId":"jianhandev"},"content":"`Attend sister\u0027s wedding` on 10 October 2020."},{"lineNumber":81,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":82,"author":{"gitId":"jianhandev"},"content":"### Mark Complete"},{"lineNumber":83,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":84,"author":{"gitId":"jianhandev"},"content":"Marks a task as completed."},{"lineNumber":85,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":86,"author":{"gitId":"jianhandev"},"content":"Format: `done \u003cindex\u003e`"},{"lineNumber":87,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":88,"author":{"gitId":"jianhandev"},"content":"- Marks the task at the specified index as done."},{"lineNumber":89,"author":{"gitId":"jianhandev"},"content":"- The index refers to the index number shown in the displayed tasks list."},{"lineNumber":90,"author":{"gitId":"jianhandev"},"content":"- The index must be a positive integer i.e. 1, 2, 3, ..."},{"lineNumber":91,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":92,"author":{"gitId":"jianhandev"},"content":"Examples:"},{"lineNumber":93,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":94,"author":{"gitId":"jianhandev"},"content":"- `done 1` marks the first task in the task list as complete."},{"lineNumber":95,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":96,"author":{"gitId":"jianhandev"},"content":"### Delete a Task"},{"lineNumber":97,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":98,"author":{"gitId":"jianhandev"},"content":"Deletes a task from the task list."},{"lineNumber":99,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":100,"author":{"gitId":"jianhandev"},"content":"Format: `delete \u003cindex\u003e`"},{"lineNumber":101,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":102,"author":{"gitId":"jianhandev"},"content":"- Deletes the task at the specified index."},{"lineNumber":103,"author":{"gitId":"jianhandev"},"content":"- The index refers to the index number shown in the displayed tasks list."},{"lineNumber":104,"author":{"gitId":"jianhandev"},"content":"- The index must be a positive integer i.e. 1, 2, 3, ..."},{"lineNumber":105,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":106,"author":{"gitId":"jianhandev"},"content":"Examples: "},{"lineNumber":107,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":108,"author":{"gitId":"jianhandev"},"content":"- `delete 1` will delete the first task in the task list."},{"lineNumber":109,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":110,"author":{"gitId":"jianhandev"},"content":"### Find by Date"},{"lineNumber":111,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":112,"author":{"gitId":"jianhandev"},"content":"Finds a task by the specified date."},{"lineNumber":113,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":114,"author":{"gitId":"jianhandev"},"content":"Format:"},{"lineNumber":115,"author":{"gitId":"jianhandev"},"content":"`date \u003cdate\u003e`"},{"lineNumber":116,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":117,"author":{"gitId":"jianhandev"},"content":"Examples: "},{"lineNumber":118,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":119,"author":{"gitId":"jianhandev"},"content":"- `date 2020-10-10` will retrieve all tasks on 10 October 2020."},{"lineNumber":120,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":121,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":122,"author":{"gitId":"jianhandev"},"content":"### Find by Keyword"},{"lineNumber":123,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":124,"author":{"gitId":"jianhandev"},"content":"Find tasks which the description contains the given keywords."},{"lineNumber":125,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":126,"author":{"gitId":"jianhandev"},"content":"Format: `find \u003ckeyword\u003e`"},{"lineNumber":127,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":128,"author":{"gitId":"jianhandev"},"content":"Examples:"},{"lineNumber":129,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":130,"author":{"gitId":"jianhandev"},"content":"- `find Submit` will retrieve all tasks containing the word `Submit`."},{"lineNumber":131,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":132,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":133,"author":{"gitId":"jianhandev"},"content":"### Sort tasks"},{"lineNumber":134,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":135,"author":{"gitId":"jianhandev"},"content":"Sort tasks by `latest` or `earliest` date, and returns you a list of tasks in that order."},{"lineNumber":136,"author":{"gitId":"jianhandev"},"content":"Tasks without a date will be placed at the bottom of the list."},{"lineNumber":137,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":138,"author":{"gitId":"jianhandev"},"content":"Format: `sort /by \u003cdescriptor\u003e`"},{"lineNumber":139,"author":{"gitId":"-"},"content":""},{"lineNumber":140,"author":{"gitId":"jianhandev"},"content":"Examples: "},{"lineNumber":141,"author":{"gitId":"jianhandev"},"content":"```"},{"lineNumber":142,"author":{"gitId":"jianhandev"},"content":"1. Submit assignment (by 10 Oct 2020)"},{"lineNumber":143,"author":{"gitId":"jianhandev"},"content":"2. Attend sister\u0027s wedding (at 5 Nov 2020)"},{"lineNumber":144,"author":{"gitId":"jianhandev"},"content":"3. Submit internship application (by 8 Oct 2020)"},{"lineNumber":145,"author":{"gitId":"jianhandev"},"content":"```"},{"lineNumber":146,"author":{"gitId":"-"},"content":""},{"lineNumber":147,"author":{"gitId":"jianhandev"},"content":"- `sort /by latest` will return the following:"},{"lineNumber":148,"author":{"gitId":"jianhandev"},"content":"```"},{"lineNumber":149,"author":{"gitId":"jianhandev"},"content":"1. Attend sister\u0027s wedding (at 5 Nov 2020)"},{"lineNumber":150,"author":{"gitId":"jianhandev"},"content":"2. Submit assignment (by 10 Oct 2020)"},{"lineNumber":151,"author":{"gitId":"jianhandev"},"content":"3. Submit internship application (by 8 Oct 2020)"},{"lineNumber":152,"author":{"gitId":"jianhandev"},"content":"```"},{"lineNumber":153,"author":{"gitId":"jianhandev"},"content":"- `sort /by earliest` will return a list of tasks"},{"lineNumber":154,"author":{"gitId":"jianhandev"},"content":"```"},{"lineNumber":155,"author":{"gitId":"jianhandev"},"content":"1. Submit internship application (by 8 Oct 2020)"},{"lineNumber":156,"author":{"gitId":"jianhandev"},"content":"2. Submit assignment (by 10 Oct 2020)"},{"lineNumber":157,"author":{"gitId":"jianhandev"},"content":"3. Attend sister\u0027s wedding (at 5 Nov 2020)"},{"lineNumber":158,"author":{"gitId":"jianhandev"},"content":"```"},{"lineNumber":159,"author":{"gitId":"jianhandev"},"content":"### Exit"},{"lineNumber":160,"author":{"gitId":"-"},"content":""},{"lineNumber":161,"author":{"gitId":"jianhandev"},"content":"Exits the program."},{"lineNumber":162,"author":{"gitId":"-"},"content":""},{"lineNumber":163,"author":{"gitId":"jianhandev"},"content":"Format: `bye`"},{"lineNumber":164,"author":{"gitId":"-"},"content":""}],"authorContributionMap":{"jianhandev":152,"-":12}},{"path":"src/main/java/chatbot/Chatbot.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jianhandev"},"content":"package chatbot;"},{"lineNumber":2,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":3,"author":{"gitId":"jianhandev"},"content":"import java.nio.file.Path;"},{"lineNumber":4,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":5,"author":{"gitId":"jianhandev"},"content":"import chatbot.commands.Command;"},{"lineNumber":6,"author":{"gitId":"jianhandev"},"content":"import chatbot.commands.ExitCommand;"},{"lineNumber":7,"author":{"gitId":"jianhandev"},"content":"import chatbot.data.TaskList;"},{"lineNumber":8,"author":{"gitId":"jianhandev"},"content":"import chatbot.exception.ChatbotException;"},{"lineNumber":9,"author":{"gitId":"jianhandev"},"content":"import chatbot.parser.ChatbotParser;"},{"lineNumber":10,"author":{"gitId":"jianhandev"},"content":"import chatbot.storage.Storage;"},{"lineNumber":11,"author":{"gitId":"jianhandev"},"content":"import chatbot.ui.Ui;"},{"lineNumber":12,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":13,"author":{"gitId":"jianhandev"},"content":"public class Chatbot {"},{"lineNumber":14,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":15,"author":{"gitId":"jianhandev"},"content":"    private static TaskList taskList;"},{"lineNumber":16,"author":{"gitId":"jianhandev"},"content":"    private static Storage taskStorage;"},{"lineNumber":17,"author":{"gitId":"jianhandev"},"content":"    private static Ui ui;"},{"lineNumber":18,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":19,"author":{"gitId":"jianhandev"},"content":"    private Path filePath;"},{"lineNumber":20,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":21,"author":{"gitId":"jianhandev"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"jianhandev"},"content":"     * Constructs a chatbot with storage capabilities."},{"lineNumber":23,"author":{"gitId":"jianhandev"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"jianhandev"},"content":"    public Chatbot() {"},{"lineNumber":25,"author":{"gitId":"jianhandev"},"content":"        initialiseDataPath();"},{"lineNumber":26,"author":{"gitId":"jianhandev"},"content":"        initialiseUI();"},{"lineNumber":27,"author":{"gitId":"jianhandev"},"content":"        initialiseStorage();"},{"lineNumber":28,"author":{"gitId":"jianhandev"},"content":"        initialiseTaskList(taskStorage);"},{"lineNumber":29,"author":{"gitId":"jianhandev"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":31,"author":{"gitId":"jianhandev"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"jianhandev"},"content":"     * Generates a response from user input."},{"lineNumber":33,"author":{"gitId":"jianhandev"},"content":"     * @param input user input"},{"lineNumber":34,"author":{"gitId":"jianhandev"},"content":"     * @return response message"},{"lineNumber":35,"author":{"gitId":"jianhandev"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"jianhandev"},"content":"    public String getResponse(String input) {"},{"lineNumber":37,"author":{"gitId":"jianhandev"},"content":"        String response;"},{"lineNumber":38,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":39,"author":{"gitId":"jianhandev"},"content":"        try {"},{"lineNumber":40,"author":{"gitId":"jianhandev"},"content":"            // parse user input to generate a command"},{"lineNumber":41,"author":{"gitId":"jianhandev"},"content":"            Command command \u003d ChatbotParser.parseCommand(input);"},{"lineNumber":42,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":43,"author":{"gitId":"jianhandev"},"content":"            // exit command -\u003e terminate program"},{"lineNumber":44,"author":{"gitId":"jianhandev"},"content":"            if (command instanceof ExitCommand) {"},{"lineNumber":45,"author":{"gitId":"jianhandev"},"content":"                ui.exit();"},{"lineNumber":46,"author":{"gitId":"jianhandev"},"content":"            }"},{"lineNumber":47,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":48,"author":{"gitId":"jianhandev"},"content":"            // execute command to get response message"},{"lineNumber":49,"author":{"gitId":"jianhandev"},"content":"            response \u003d command.execute(taskList, ui, taskStorage);"},{"lineNumber":50,"author":{"gitId":"jianhandev"},"content":"        } catch (ChatbotException e) {"},{"lineNumber":51,"author":{"gitId":"jianhandev"},"content":"            response \u003d e.getMessage();"},{"lineNumber":52,"author":{"gitId":"jianhandev"},"content":"        }"},{"lineNumber":53,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":54,"author":{"gitId":"jianhandev"},"content":"        return response;"},{"lineNumber":55,"author":{"gitId":"jianhandev"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":57,"author":{"gitId":"jianhandev"},"content":"    /**"},{"lineNumber":58,"author":{"gitId":"jianhandev"},"content":"     * Generates a welcome message."},{"lineNumber":59,"author":{"gitId":"jianhandev"},"content":"     * @return Welcome message"},{"lineNumber":60,"author":{"gitId":"jianhandev"},"content":"     */"},{"lineNumber":61,"author":{"gitId":"jianhandev"},"content":"    public String generateWelcomeMessage() {"},{"lineNumber":62,"author":{"gitId":"jianhandev"},"content":"        return ui.getWelcomeMessage();"},{"lineNumber":63,"author":{"gitId":"jianhandev"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":65,"author":{"gitId":"jianhandev"},"content":"    private void initialiseDataPath() {"},{"lineNumber":66,"author":{"gitId":"jianhandev"},"content":"        String path \u003d \"chatbot.txt\";"},{"lineNumber":67,"author":{"gitId":"jianhandev"},"content":"        this.filePath \u003d Path.of(path);"},{"lineNumber":68,"author":{"gitId":"jianhandev"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":70,"author":{"gitId":"jianhandev"},"content":"    private void initialiseUI() {"},{"lineNumber":71,"author":{"gitId":"jianhandev"},"content":"        ui \u003d new Ui();"},{"lineNumber":72,"author":{"gitId":"jianhandev"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":74,"author":{"gitId":"jianhandev"},"content":"    private void initialiseStorage() {"},{"lineNumber":75,"author":{"gitId":"jianhandev"},"content":"        taskStorage \u003d new Storage(filePath);"},{"lineNumber":76,"author":{"gitId":"jianhandev"},"content":"    }"},{"lineNumber":77,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":78,"author":{"gitId":"jianhandev"},"content":"    private void initialiseTaskList(Storage store) {"},{"lineNumber":79,"author":{"gitId":"jianhandev"},"content":"        // load tasks from disk"},{"lineNumber":80,"author":{"gitId":"jianhandev"},"content":"        try {"},{"lineNumber":81,"author":{"gitId":"jianhandev"},"content":"            taskList \u003d new TaskList(store.loadTasks());"},{"lineNumber":82,"author":{"gitId":"jianhandev"},"content":"        } catch (ChatbotException e) {"},{"lineNumber":83,"author":{"gitId":"jianhandev"},"content":"            e.printStackTrace();"},{"lineNumber":84,"author":{"gitId":"jianhandev"},"content":"        }"},{"lineNumber":85,"author":{"gitId":"jianhandev"},"content":"    }"},{"lineNumber":86,"author":{"gitId":"jianhandev"},"content":"}"}],"authorContributionMap":{"jianhandev":86}},{"path":"src/main/java/chatbot/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jianhandev"},"content":"package chatbot;"},{"lineNumber":2,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":3,"author":{"gitId":"jianhandev"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"jianhandev"},"content":"import java.util.Collections;"},{"lineNumber":5,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":6,"author":{"gitId":"jianhandev"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":7,"author":{"gitId":"jianhandev"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":8,"author":{"gitId":"jianhandev"},"content":"import javafx.fxml.FXML;"},{"lineNumber":9,"author":{"gitId":"jianhandev"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":10,"author":{"gitId":"jianhandev"},"content":"import javafx.geometry.Insets;"},{"lineNumber":11,"author":{"gitId":"jianhandev"},"content":"import javafx.geometry.Pos;"},{"lineNumber":12,"author":{"gitId":"jianhandev"},"content":"import javafx.scene.Node;"},{"lineNumber":13,"author":{"gitId":"jianhandev"},"content":"import javafx.scene.control.Label;"},{"lineNumber":14,"author":{"gitId":"jianhandev"},"content":"import javafx.scene.image.Image;"},{"lineNumber":15,"author":{"gitId":"jianhandev"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":16,"author":{"gitId":"jianhandev"},"content":"import javafx.scene.layout.Background;"},{"lineNumber":17,"author":{"gitId":"jianhandev"},"content":"import javafx.scene.layout.BackgroundFill;"},{"lineNumber":18,"author":{"gitId":"jianhandev"},"content":"import javafx.scene.layout.CornerRadii;"},{"lineNumber":19,"author":{"gitId":"jianhandev"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":20,"author":{"gitId":"jianhandev"},"content":"import javafx.scene.paint.Color;"},{"lineNumber":21,"author":{"gitId":"jianhandev"},"content":"import javafx.scene.paint.Paint;"},{"lineNumber":22,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":23,"author":{"gitId":"jianhandev"},"content":"/**"},{"lineNumber":24,"author":{"gitId":"jianhandev"},"content":" * An example of a custom control using FXML."},{"lineNumber":25,"author":{"gitId":"jianhandev"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"},{"lineNumber":26,"author":{"gitId":"jianhandev"},"content":" * containing text from the speaker."},{"lineNumber":27,"author":{"gitId":"jianhandev"},"content":" */"},{"lineNumber":28,"author":{"gitId":"jianhandev"},"content":"public class DialogBox extends HBox {"},{"lineNumber":29,"author":{"gitId":"jianhandev"},"content":"    @FXML"},{"lineNumber":30,"author":{"gitId":"jianhandev"},"content":"    private Label dialog;"},{"lineNumber":31,"author":{"gitId":"jianhandev"},"content":"    @FXML"},{"lineNumber":32,"author":{"gitId":"jianhandev"},"content":"    private ImageView displayPicture;"},{"lineNumber":33,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":34,"author":{"gitId":"jianhandev"},"content":"    private DialogBox(String text, Image img) {"},{"lineNumber":35,"author":{"gitId":"jianhandev"},"content":"        try {"},{"lineNumber":36,"author":{"gitId":"jianhandev"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"},{"lineNumber":37,"author":{"gitId":"jianhandev"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":38,"author":{"gitId":"jianhandev"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":39,"author":{"gitId":"jianhandev"},"content":"            fxmlLoader.load();"},{"lineNumber":40,"author":{"gitId":"jianhandev"},"content":"        } catch (IOException e) {"},{"lineNumber":41,"author":{"gitId":"jianhandev"},"content":"            e.printStackTrace();"},{"lineNumber":42,"author":{"gitId":"jianhandev"},"content":"        }"},{"lineNumber":43,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":44,"author":{"gitId":"jianhandev"},"content":"        dialog.setText(text);"},{"lineNumber":45,"author":{"gitId":"jianhandev"},"content":"        displayPicture.setImage(img);"},{"lineNumber":46,"author":{"gitId":"jianhandev"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":48,"author":{"gitId":"jianhandev"},"content":"    /**"},{"lineNumber":49,"author":{"gitId":"jianhandev"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":50,"author":{"gitId":"jianhandev"},"content":"     */"},{"lineNumber":51,"author":{"gitId":"jianhandev"},"content":"    private void flip() {"},{"lineNumber":52,"author":{"gitId":"jianhandev"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":53,"author":{"gitId":"jianhandev"},"content":"        Collections.reverse(tmp);"},{"lineNumber":54,"author":{"gitId":"jianhandev"},"content":"        getChildren().setAll(tmp);"},{"lineNumber":55,"author":{"gitId":"jianhandev"},"content":"        setAlignment(Pos.TOP_LEFT);"},{"lineNumber":56,"author":{"gitId":"jianhandev"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":58,"author":{"gitId":"jianhandev"},"content":"    public static DialogBox getUserDialog(String text, Image img) {"},{"lineNumber":59,"author":{"gitId":"jianhandev"},"content":"        DialogBox db \u003d new DialogBox(text, img);"},{"lineNumber":60,"author":{"gitId":"jianhandev"},"content":"        db.dialog.setTextFill(Color.BLACK);"},{"lineNumber":61,"author":{"gitId":"jianhandev"},"content":"        return setDialogBoxBG(db, Color.web(\"f4f4f4\"));"},{"lineNumber":62,"author":{"gitId":"jianhandev"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":64,"author":{"gitId":"jianhandev"},"content":"    public static DialogBox getChatbotDialog(String text, Image img) {"},{"lineNumber":65,"author":{"gitId":"jianhandev"},"content":"        var db \u003d new DialogBox(text, img);"},{"lineNumber":66,"author":{"gitId":"jianhandev"},"content":"        db.dialog.setTextFill(Color.WHITE);"},{"lineNumber":67,"author":{"gitId":"jianhandev"},"content":"        db.flip();"},{"lineNumber":68,"author":{"gitId":"jianhandev"},"content":"        return setDialogBoxBG(db, Color.web(\"1a1c20\"));"},{"lineNumber":69,"author":{"gitId":"jianhandev"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":71,"author":{"gitId":"jianhandev"},"content":"    private static DialogBox setDialogBoxBG(DialogBox db, Paint color) {"},{"lineNumber":72,"author":{"gitId":"jianhandev"},"content":"        BackgroundFill fill \u003d new BackgroundFill("},{"lineNumber":73,"author":{"gitId":"jianhandev"},"content":"                color,"},{"lineNumber":74,"author":{"gitId":"jianhandev"},"content":"                new CornerRadii(5.0),"},{"lineNumber":75,"author":{"gitId":"jianhandev"},"content":"                new Insets(5.0));"},{"lineNumber":76,"author":{"gitId":"jianhandev"},"content":"        Background bg \u003d new Background(fill);"},{"lineNumber":77,"author":{"gitId":"jianhandev"},"content":"        db.setBackground(bg);"},{"lineNumber":78,"author":{"gitId":"jianhandev"},"content":"        return db;"},{"lineNumber":79,"author":{"gitId":"jianhandev"},"content":"    }"},{"lineNumber":80,"author":{"gitId":"jianhandev"},"content":"}"}],"authorContributionMap":{"jianhandev":80}},{"path":"src/main/java/chatbot/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jianhandev"},"content":"package chatbot;"},{"lineNumber":2,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":3,"author":{"gitId":"jianhandev"},"content":"import javafx.application.Application;"},{"lineNumber":4,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":5,"author":{"gitId":"jianhandev"},"content":"public class Launcher {"},{"lineNumber":6,"author":{"gitId":"jianhandev"},"content":"    public static void main(String[] args) {"},{"lineNumber":7,"author":{"gitId":"jianhandev"},"content":"        Application.launch(Main.class, args);"},{"lineNumber":8,"author":{"gitId":"jianhandev"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"jianhandev"},"content":"}"}],"authorContributionMap":{"jianhandev":9}},{"path":"src/main/java/chatbot/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jianhandev"},"content":"package chatbot;"},{"lineNumber":2,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":3,"author":{"gitId":"jianhandev"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":5,"author":{"gitId":"jianhandev"},"content":"import javafx.application.Application;"},{"lineNumber":6,"author":{"gitId":"jianhandev"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":7,"author":{"gitId":"jianhandev"},"content":"import javafx.scene.Scene;"},{"lineNumber":8,"author":{"gitId":"jianhandev"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":9,"author":{"gitId":"jianhandev"},"content":"import javafx.stage.Stage;"},{"lineNumber":10,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":11,"author":{"gitId":"jianhandev"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"jianhandev"},"content":" * A GUI for chatbot using FXML."},{"lineNumber":13,"author":{"gitId":"jianhandev"},"content":" */"},{"lineNumber":14,"author":{"gitId":"jianhandev"},"content":"public class Main extends Application {"},{"lineNumber":15,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":16,"author":{"gitId":"jianhandev"},"content":"    private Chatbot chatbot \u003d new Chatbot();"},{"lineNumber":17,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":18,"author":{"gitId":"jianhandev"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"jianhandev"},"content":"    public void start(Stage stage) {"},{"lineNumber":20,"author":{"gitId":"jianhandev"},"content":"        try {"},{"lineNumber":21,"author":{"gitId":"jianhandev"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":22,"author":{"gitId":"jianhandev"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":23,"author":{"gitId":"jianhandev"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":24,"author":{"gitId":"jianhandev"},"content":"            stage.setScene(scene);"},{"lineNumber":25,"author":{"gitId":"jianhandev"},"content":"            stage.setTitle(\"FukuBot\");"},{"lineNumber":26,"author":{"gitId":"jianhandev"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setChatbot(chatbot);"},{"lineNumber":27,"author":{"gitId":"jianhandev"},"content":"            stage.show();"},{"lineNumber":28,"author":{"gitId":"jianhandev"},"content":"        } catch (IOException e) {"},{"lineNumber":29,"author":{"gitId":"jianhandev"},"content":"            e.printStackTrace();"},{"lineNumber":30,"author":{"gitId":"jianhandev"},"content":"        }"},{"lineNumber":31,"author":{"gitId":"jianhandev"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"jianhandev"},"content":"}"}],"authorContributionMap":{"jianhandev":32}},{"path":"src/main/java/chatbot/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jianhandev"},"content":"package chatbot;"},{"lineNumber":2,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":3,"author":{"gitId":"jianhandev"},"content":"import javafx.fxml.FXML;"},{"lineNumber":4,"author":{"gitId":"jianhandev"},"content":"import javafx.scene.control.Button;"},{"lineNumber":5,"author":{"gitId":"jianhandev"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":6,"author":{"gitId":"jianhandev"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":7,"author":{"gitId":"jianhandev"},"content":"import javafx.scene.image.Image;"},{"lineNumber":8,"author":{"gitId":"jianhandev"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":9,"author":{"gitId":"jianhandev"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":10,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":11,"author":{"gitId":"jianhandev"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"jianhandev"},"content":" * Controller for MainWindow. Provides the layout for the other controls."},{"lineNumber":13,"author":{"gitId":"jianhandev"},"content":" */"},{"lineNumber":14,"author":{"gitId":"jianhandev"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":15,"author":{"gitId":"jianhandev"},"content":"    @FXML"},{"lineNumber":16,"author":{"gitId":"jianhandev"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":17,"author":{"gitId":"jianhandev"},"content":"    @FXML"},{"lineNumber":18,"author":{"gitId":"jianhandev"},"content":"    private VBox dialogContainer;"},{"lineNumber":19,"author":{"gitId":"jianhandev"},"content":"    @FXML"},{"lineNumber":20,"author":{"gitId":"jianhandev"},"content":"    private TextField userInput;"},{"lineNumber":21,"author":{"gitId":"jianhandev"},"content":"    @FXML"},{"lineNumber":22,"author":{"gitId":"jianhandev"},"content":"    private Button sendButton;"},{"lineNumber":23,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":24,"author":{"gitId":"jianhandev"},"content":"    private Chatbot chatbot;"},{"lineNumber":25,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":26,"author":{"gitId":"jianhandev"},"content":"    private final Image userImage \u003d new Image("},{"lineNumber":27,"author":{"gitId":"jianhandev"},"content":"            this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"},{"lineNumber":28,"author":{"gitId":"jianhandev"},"content":"    private final Image chatbotImage \u003d new Image("},{"lineNumber":29,"author":{"gitId":"jianhandev"},"content":"            this.getClass().getResourceAsStream(\"/images/DaChatbot.png\"));"},{"lineNumber":30,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":31,"author":{"gitId":"jianhandev"},"content":"    @FXML"},{"lineNumber":32,"author":{"gitId":"jianhandev"},"content":"    public void initialize() {"},{"lineNumber":33,"author":{"gitId":"jianhandev"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":34,"author":{"gitId":"jianhandev"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":36,"author":{"gitId":"jianhandev"},"content":"    public void setChatbot(Chatbot b) {"},{"lineNumber":37,"author":{"gitId":"jianhandev"},"content":"        chatbot \u003d b;"},{"lineNumber":38,"author":{"gitId":"jianhandev"},"content":"        showWelcomeMessage();"},{"lineNumber":39,"author":{"gitId":"jianhandev"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":41,"author":{"gitId":"jianhandev"},"content":"    /**"},{"lineNumber":42,"author":{"gitId":"jianhandev"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing"},{"lineNumber":43,"author":{"gitId":"jianhandev"},"content":"     * chat bot\u0027s reply and then appends them to the dialog container. Clears the"},{"lineNumber":44,"author":{"gitId":"jianhandev"},"content":"     * user input after processing."},{"lineNumber":45,"author":{"gitId":"jianhandev"},"content":"     */"},{"lineNumber":46,"author":{"gitId":"jianhandev"},"content":"    @FXML"},{"lineNumber":47,"author":{"gitId":"jianhandev"},"content":"    private void handleUserInput() {"},{"lineNumber":48,"author":{"gitId":"jianhandev"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":49,"author":{"gitId":"jianhandev"},"content":"        String response \u003d chatbot.getResponse(input);"},{"lineNumber":50,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":51,"author":{"gitId":"jianhandev"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":52,"author":{"gitId":"jianhandev"},"content":"                DialogBox.getUserDialog(input, userImage),"},{"lineNumber":53,"author":{"gitId":"jianhandev"},"content":"                DialogBox.getChatbotDialog(response, chatbotImage)"},{"lineNumber":54,"author":{"gitId":"jianhandev"},"content":"        );"},{"lineNumber":55,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":56,"author":{"gitId":"jianhandev"},"content":"        userInput.clear();"},{"lineNumber":57,"author":{"gitId":"jianhandev"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":59,"author":{"gitId":"jianhandev"},"content":"    @FXML"},{"lineNumber":60,"author":{"gitId":"jianhandev"},"content":"    private void showWelcomeMessage() {"},{"lineNumber":61,"author":{"gitId":"jianhandev"},"content":"        String greeting \u003d chatbot.generateWelcomeMessage();"},{"lineNumber":62,"author":{"gitId":"jianhandev"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":63,"author":{"gitId":"jianhandev"},"content":"                DialogBox.getChatbotDialog(greeting, chatbotImage)"},{"lineNumber":64,"author":{"gitId":"jianhandev"},"content":"        );"},{"lineNumber":65,"author":{"gitId":"jianhandev"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"jianhandev"},"content":"}"}],"authorContributionMap":{"jianhandev":66}},{"path":"src/main/java/chatbot/commands/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jianhandev"},"content":"package chatbot.commands;"},{"lineNumber":2,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":3,"author":{"gitId":"jianhandev"},"content":"import chatbot.data.Task;"},{"lineNumber":4,"author":{"gitId":"jianhandev"},"content":"import chatbot.data.TaskList;"},{"lineNumber":5,"author":{"gitId":"jianhandev"},"content":"import chatbot.exception.ChatbotException;"},{"lineNumber":6,"author":{"gitId":"jianhandev"},"content":"import chatbot.storage.Storage;"},{"lineNumber":7,"author":{"gitId":"jianhandev"},"content":"import chatbot.ui.Ui;"},{"lineNumber":8,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":9,"author":{"gitId":"jianhandev"},"content":"public class AddCommand extends Command {"},{"lineNumber":10,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":11,"author":{"gitId":"jianhandev"},"content":"    private final Task toAdd;"},{"lineNumber":12,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":13,"author":{"gitId":"jianhandev"},"content":"    public AddCommand(Task task) {"},{"lineNumber":14,"author":{"gitId":"jianhandev"},"content":"        this.toAdd \u003d task;"},{"lineNumber":15,"author":{"gitId":"jianhandev"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":17,"author":{"gitId":"jianhandev"},"content":"    public Task getToAdd() {"},{"lineNumber":18,"author":{"gitId":"jianhandev"},"content":"        return this.toAdd;"},{"lineNumber":19,"author":{"gitId":"jianhandev"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":21,"author":{"gitId":"jianhandev"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"jianhandev"},"content":"    public boolean isExit() {"},{"lineNumber":23,"author":{"gitId":"jianhandev"},"content":"        return false;"},{"lineNumber":24,"author":{"gitId":"jianhandev"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":26,"author":{"gitId":"jianhandev"},"content":"    @Override"},{"lineNumber":27,"author":{"gitId":"jianhandev"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws ChatbotException {"},{"lineNumber":28,"author":{"gitId":"jianhandev"},"content":"        assert toAdd !\u003d null : \"Task is not supposed to be null\";"},{"lineNumber":29,"author":{"gitId":"jianhandev"},"content":"        taskList.addTask(toAdd);"},{"lineNumber":30,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":31,"author":{"gitId":"jianhandev"},"content":"        boolean isSaveSuccess \u003d storage.saveTasks(taskList.getTasks());"},{"lineNumber":32,"author":{"gitId":"jianhandev"},"content":"        assert isSaveSuccess : \"Save tasks supposed to return true.\";"},{"lineNumber":33,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":34,"author":{"gitId":"jianhandev"},"content":"        return ui.addSuccess(toAdd, taskList.count());"},{"lineNumber":35,"author":{"gitId":"jianhandev"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"jianhandev"},"content":"}"}],"authorContributionMap":{"jianhandev":36}},{"path":"src/main/java/chatbot/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jianhandev"},"content":"package chatbot.commands;"},{"lineNumber":2,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":3,"author":{"gitId":"jianhandev"},"content":"import chatbot.data.TaskList;"},{"lineNumber":4,"author":{"gitId":"jianhandev"},"content":"import chatbot.exception.ChatbotException;"},{"lineNumber":5,"author":{"gitId":"jianhandev"},"content":"import chatbot.storage.Storage;"},{"lineNumber":6,"author":{"gitId":"jianhandev"},"content":"import chatbot.ui.Ui;"},{"lineNumber":7,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":8,"author":{"gitId":"jianhandev"},"content":"public abstract class Command {"},{"lineNumber":9,"author":{"gitId":"jianhandev"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"jianhandev"},"content":"     * Returns true if this command instructs the program to exit."},{"lineNumber":11,"author":{"gitId":"jianhandev"},"content":"     * @return if program should exits"},{"lineNumber":12,"author":{"gitId":"jianhandev"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"jianhandev"},"content":"    public abstract boolean isExit();"},{"lineNumber":14,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":15,"author":{"gitId":"jianhandev"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"jianhandev"},"content":"     * Executes the command."},{"lineNumber":17,"author":{"gitId":"jianhandev"},"content":"     * @param taskList the TaskList object for handling tasks"},{"lineNumber":18,"author":{"gitId":"jianhandev"},"content":"     * @param ui the UI object for text-ui display"},{"lineNumber":19,"author":{"gitId":"jianhandev"},"content":"     * @param storage the Storage object for persistence"},{"lineNumber":20,"author":{"gitId":"jianhandev"},"content":"     * @return String response text from executing the command"},{"lineNumber":21,"author":{"gitId":"jianhandev"},"content":"     * @throws ChatbotException if execution unsuccessful"},{"lineNumber":22,"author":{"gitId":"jianhandev"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"jianhandev"},"content":"    public abstract String execute(TaskList taskList, Ui ui, Storage storage) throws ChatbotException;"},{"lineNumber":24,"author":{"gitId":"jianhandev"},"content":"}"}],"authorContributionMap":{"jianhandev":24}},{"path":"src/main/java/chatbot/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jianhandev"},"content":"package chatbot.commands;"},{"lineNumber":2,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":3,"author":{"gitId":"jianhandev"},"content":"import chatbot.data.Task;"},{"lineNumber":4,"author":{"gitId":"jianhandev"},"content":"import chatbot.data.TaskList;"},{"lineNumber":5,"author":{"gitId":"jianhandev"},"content":"import chatbot.exception.ChatbotException;"},{"lineNumber":6,"author":{"gitId":"jianhandev"},"content":"import chatbot.storage.Storage;"},{"lineNumber":7,"author":{"gitId":"jianhandev"},"content":"import chatbot.ui.Ui;"},{"lineNumber":8,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":9,"author":{"gitId":"jianhandev"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"jianhandev"},"content":" * Represents a command to either delete or mark task as done given a type."},{"lineNumber":11,"author":{"gitId":"jianhandev"},"content":" */"},{"lineNumber":12,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":13,"author":{"gitId":"jianhandev"},"content":"public class DeleteCommand extends Command {"},{"lineNumber":14,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":15,"author":{"gitId":"jianhandev"},"content":"    private final int index;"},{"lineNumber":16,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":17,"author":{"gitId":"jianhandev"},"content":"    public DeleteCommand(int index) {"},{"lineNumber":18,"author":{"gitId":"jianhandev"},"content":"        this.index \u003d index;"},{"lineNumber":19,"author":{"gitId":"jianhandev"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":21,"author":{"gitId":"jianhandev"},"content":"    public int getIndex() {"},{"lineNumber":22,"author":{"gitId":"jianhandev"},"content":"        return index + 1;"},{"lineNumber":23,"author":{"gitId":"jianhandev"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":25,"author":{"gitId":"jianhandev"},"content":"    @Override"},{"lineNumber":26,"author":{"gitId":"jianhandev"},"content":"    public boolean isExit() {"},{"lineNumber":27,"author":{"gitId":"jianhandev"},"content":"        return false;"},{"lineNumber":28,"author":{"gitId":"jianhandev"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":30,"author":{"gitId":"jianhandev"},"content":"    @Override"},{"lineNumber":31,"author":{"gitId":"jianhandev"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws ChatbotException {"},{"lineNumber":32,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":33,"author":{"gitId":"jianhandev"},"content":"        Task deletedTask \u003d taskList.removeTask(index);"},{"lineNumber":34,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":35,"author":{"gitId":"jianhandev"},"content":"        boolean isSaveSuccess \u003d storage.saveTasks(taskList.getTasks());"},{"lineNumber":36,"author":{"gitId":"jianhandev"},"content":"        assert isSaveSuccess : \"Save tasks supposed to return true.\";"},{"lineNumber":37,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":38,"author":{"gitId":"jianhandev"},"content":"        return ui.deleteSuccess(deletedTask, taskList.count());"},{"lineNumber":39,"author":{"gitId":"jianhandev"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"jianhandev"},"content":"}"}],"authorContributionMap":{"jianhandev":40}},{"path":"src/main/java/chatbot/commands/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jianhandev"},"content":"package chatbot.commands;"},{"lineNumber":2,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":3,"author":{"gitId":"jianhandev"},"content":"import chatbot.data.Task;"},{"lineNumber":4,"author":{"gitId":"jianhandev"},"content":"import chatbot.data.TaskList;"},{"lineNumber":5,"author":{"gitId":"jianhandev"},"content":"import chatbot.exception.ChatbotException;"},{"lineNumber":6,"author":{"gitId":"jianhandev"},"content":"import chatbot.storage.Storage;"},{"lineNumber":7,"author":{"gitId":"jianhandev"},"content":"import chatbot.ui.Ui;"},{"lineNumber":8,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":9,"author":{"gitId":"jianhandev"},"content":"public class DoneCommand extends Command {"},{"lineNumber":10,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":11,"author":{"gitId":"jianhandev"},"content":"    private final int index;"},{"lineNumber":12,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":13,"author":{"gitId":"jianhandev"},"content":"    public DoneCommand(int index) {"},{"lineNumber":14,"author":{"gitId":"jianhandev"},"content":"        this.index \u003d index;"},{"lineNumber":15,"author":{"gitId":"jianhandev"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":17,"author":{"gitId":"jianhandev"},"content":"    public int getIndex() {"},{"lineNumber":18,"author":{"gitId":"jianhandev"},"content":"        return index + 1;"},{"lineNumber":19,"author":{"gitId":"jianhandev"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":21,"author":{"gitId":"jianhandev"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"jianhandev"},"content":"    public boolean isExit() {"},{"lineNumber":23,"author":{"gitId":"jianhandev"},"content":"        return false;"},{"lineNumber":24,"author":{"gitId":"jianhandev"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":26,"author":{"gitId":"jianhandev"},"content":"    @Override"},{"lineNumber":27,"author":{"gitId":"jianhandev"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws ChatbotException {"},{"lineNumber":28,"author":{"gitId":"jianhandev"},"content":"        Task taskDone \u003d taskList.markAsDone(index);"},{"lineNumber":29,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":30,"author":{"gitId":"jianhandev"},"content":"        boolean isSaveSuccess \u003d storage.saveTasks(taskList.getTasks());"},{"lineNumber":31,"author":{"gitId":"jianhandev"},"content":"        assert isSaveSuccess : \"Save tasks supposed to return true.\";"},{"lineNumber":32,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":33,"author":{"gitId":"jianhandev"},"content":"        return ui.markDoneSuccess(taskDone);"},{"lineNumber":34,"author":{"gitId":"jianhandev"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":36,"author":{"gitId":"jianhandev"},"content":"}"}],"authorContributionMap":{"jianhandev":36}},{"path":"src/main/java/chatbot/commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jianhandev"},"content":"package chatbot.commands;"},{"lineNumber":2,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":3,"author":{"gitId":"jianhandev"},"content":"import chatbot.common.Message;"},{"lineNumber":4,"author":{"gitId":"jianhandev"},"content":"import chatbot.data.TaskList;"},{"lineNumber":5,"author":{"gitId":"jianhandev"},"content":"import chatbot.storage.Storage;"},{"lineNumber":6,"author":{"gitId":"jianhandev"},"content":"import chatbot.ui.Ui;"},{"lineNumber":7,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":8,"author":{"gitId":"jianhandev"},"content":"public class ExitCommand extends Command {"},{"lineNumber":9,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":10,"author":{"gitId":"jianhandev"},"content":"    @Override"},{"lineNumber":11,"author":{"gitId":"jianhandev"},"content":"    public boolean isExit() {"},{"lineNumber":12,"author":{"gitId":"jianhandev"},"content":"        return true;"},{"lineNumber":13,"author":{"gitId":"jianhandev"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":15,"author":{"gitId":"jianhandev"},"content":"    @Override"},{"lineNumber":16,"author":{"gitId":"jianhandev"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {"},{"lineNumber":17,"author":{"gitId":"jianhandev"},"content":"        return ui.errorMessage(Message.MESSAGE_EXIT);"},{"lineNumber":18,"author":{"gitId":"jianhandev"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"jianhandev"},"content":"}"}],"authorContributionMap":{"jianhandev":19}},{"path":"src/main/java/chatbot/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jianhandev"},"content":"package chatbot.commands;"},{"lineNumber":2,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":3,"author":{"gitId":"jianhandev"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"jianhandev"},"content":"import java.util.function.Predicate;"},{"lineNumber":5,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":6,"author":{"gitId":"jianhandev"},"content":"import chatbot.data.Task;"},{"lineNumber":7,"author":{"gitId":"jianhandev"},"content":"import chatbot.data.TaskList;"},{"lineNumber":8,"author":{"gitId":"jianhandev"},"content":"import chatbot.storage.Storage;"},{"lineNumber":9,"author":{"gitId":"jianhandev"},"content":"import chatbot.ui.Ui;"},{"lineNumber":10,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":11,"author":{"gitId":"jianhandev"},"content":"public class FindCommand extends Command {"},{"lineNumber":12,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":13,"author":{"gitId":"jianhandev"},"content":"    private final Predicate\u003cTask\u003e pred;"},{"lineNumber":14,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":15,"author":{"gitId":"jianhandev"},"content":"    public FindCommand(Predicate\u003cTask\u003e pred) {"},{"lineNumber":16,"author":{"gitId":"jianhandev"},"content":"        this.pred \u003d pred;"},{"lineNumber":17,"author":{"gitId":"jianhandev"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":19,"author":{"gitId":"jianhandev"},"content":"    public Predicate\u003cTask\u003e getPred() {"},{"lineNumber":20,"author":{"gitId":"jianhandev"},"content":"        return pred;"},{"lineNumber":21,"author":{"gitId":"jianhandev"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":23,"author":{"gitId":"jianhandev"},"content":"    @Override"},{"lineNumber":24,"author":{"gitId":"jianhandev"},"content":"    public boolean isExit() {"},{"lineNumber":25,"author":{"gitId":"jianhandev"},"content":"        return false;"},{"lineNumber":26,"author":{"gitId":"jianhandev"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":28,"author":{"gitId":"jianhandev"},"content":"    @Override"},{"lineNumber":29,"author":{"gitId":"jianhandev"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {"},{"lineNumber":30,"author":{"gitId":"jianhandev"},"content":"        ArrayList\u003cTask\u003e tasks \u003d taskList.retrieveTasksByPred(pred);"},{"lineNumber":31,"author":{"gitId":"jianhandev"},"content":"        return ui.list(tasks);"},{"lineNumber":32,"author":{"gitId":"jianhandev"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"jianhandev"},"content":"}"}],"authorContributionMap":{"jianhandev":33}},{"path":"src/main/java/chatbot/commands/ShowAllCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jianhandev"},"content":"package chatbot.commands;"},{"lineNumber":2,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":3,"author":{"gitId":"jianhandev"},"content":"import chatbot.data.TaskList;"},{"lineNumber":4,"author":{"gitId":"jianhandev"},"content":"import chatbot.storage.Storage;"},{"lineNumber":5,"author":{"gitId":"jianhandev"},"content":"import chatbot.ui.Ui;"},{"lineNumber":6,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":7,"author":{"gitId":"jianhandev"},"content":"public class ShowAllCommand extends Command {"},{"lineNumber":8,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":9,"author":{"gitId":"jianhandev"},"content":"    @Override"},{"lineNumber":10,"author":{"gitId":"jianhandev"},"content":"    public boolean isExit() {"},{"lineNumber":11,"author":{"gitId":"jianhandev"},"content":"        return false;"},{"lineNumber":12,"author":{"gitId":"jianhandev"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":14,"author":{"gitId":"jianhandev"},"content":"    @Override"},{"lineNumber":15,"author":{"gitId":"jianhandev"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {"},{"lineNumber":16,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":17,"author":{"gitId":"jianhandev"},"content":"        return ui.list(taskList.getTasks());"},{"lineNumber":18,"author":{"gitId":"jianhandev"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"jianhandev"},"content":"}"}],"authorContributionMap":{"jianhandev":19}},{"path":"src/main/java/chatbot/commands/SortCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jianhandev"},"content":"package chatbot.commands;"},{"lineNumber":2,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":3,"author":{"gitId":"jianhandev"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"jianhandev"},"content":"import java.util.Comparator;"},{"lineNumber":5,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":6,"author":{"gitId":"jianhandev"},"content":"import chatbot.data.Task;"},{"lineNumber":7,"author":{"gitId":"jianhandev"},"content":"import chatbot.data.TaskList;"},{"lineNumber":8,"author":{"gitId":"jianhandev"},"content":"import chatbot.storage.Storage;"},{"lineNumber":9,"author":{"gitId":"jianhandev"},"content":"import chatbot.ui.Ui;"},{"lineNumber":10,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":11,"author":{"gitId":"jianhandev"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"jianhandev"},"content":" * A command that sorts and returns user tasks chronologically."},{"lineNumber":13,"author":{"gitId":"jianhandev"},"content":" */"},{"lineNumber":14,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":15,"author":{"gitId":"jianhandev"},"content":"public class SortCommand extends Command {"},{"lineNumber":16,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":17,"author":{"gitId":"jianhandev"},"content":"    private final Comparator\u003cTask\u003e comparator;"},{"lineNumber":18,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":19,"author":{"gitId":"jianhandev"},"content":"    public SortCommand(Comparator\u003cTask\u003e comp) {"},{"lineNumber":20,"author":{"gitId":"jianhandev"},"content":"        this.comparator \u003d comp;"},{"lineNumber":21,"author":{"gitId":"jianhandev"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":23,"author":{"gitId":"jianhandev"},"content":"    public Comparator\u003cTask\u003e getComparator() {"},{"lineNumber":24,"author":{"gitId":"jianhandev"},"content":"        return comparator;"},{"lineNumber":25,"author":{"gitId":"jianhandev"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":27,"author":{"gitId":"jianhandev"},"content":"    @Override"},{"lineNumber":28,"author":{"gitId":"jianhandev"},"content":"    public boolean isExit() {"},{"lineNumber":29,"author":{"gitId":"jianhandev"},"content":"        return false;"},{"lineNumber":30,"author":{"gitId":"jianhandev"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":32,"author":{"gitId":"jianhandev"},"content":"    @Override"},{"lineNumber":33,"author":{"gitId":"jianhandev"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {"},{"lineNumber":34,"author":{"gitId":"jianhandev"},"content":"        ArrayList\u003cTask\u003e tasks \u003d taskList.retrieveTasksByOrder(comparator);"},{"lineNumber":35,"author":{"gitId":"jianhandev"},"content":"        return ui.list(tasks);"},{"lineNumber":36,"author":{"gitId":"jianhandev"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"jianhandev"},"content":"}"}],"authorContributionMap":{"jianhandev":37}},{"path":"src/main/java/chatbot/common/CommandType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jianhandev"},"content":"package chatbot.common;"},{"lineNumber":2,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":3,"author":{"gitId":"jianhandev"},"content":"public enum CommandType {"},{"lineNumber":4,"author":{"gitId":"jianhandev"},"content":"    DATE, LIST, TODO, DEADLINE, EVENT, DELETE, DONE, BYE, FIND, SORT"},{"lineNumber":5,"author":{"gitId":"jianhandev"},"content":"}"}],"authorContributionMap":{"jianhandev":5}},{"path":"src/main/java/chatbot/common/Message.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jianhandev"},"content":"package chatbot.common;"},{"lineNumber":2,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":3,"author":{"gitId":"jianhandev"},"content":"public class Message {"},{"lineNumber":4,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":5,"author":{"gitId":"jianhandev"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"I\u0027m not sure what you mean.\";"},{"lineNumber":6,"author":{"gitId":"jianhandev"},"content":"    public static final String MESSAGE_INVALID_DATE_FORMAT \u003d \"Please enter a valid date or date format (yyyy-mm-dd).\";"},{"lineNumber":7,"author":{"gitId":"jianhandev"},"content":"    public static final String MESSAGE_EXIT \u003d \"Bye, hope to see you again soon.\";"},{"lineNumber":8,"author":{"gitId":"jianhandev"},"content":"    public static final String MESSAGE_EMPTY_TASK \u003d \"Task cannot be empty.\";"},{"lineNumber":9,"author":{"gitId":"jianhandev"},"content":"    public static final String MESSAGE_EMPTY_DATE \u003d \"Ah oh, you forgot the date.\";"},{"lineNumber":10,"author":{"gitId":"jianhandev"},"content":"    public static final String MESSAGE_FAIL_LOAD \u003d \"Ooops, I couldn\u0027t load the tasks.\";"},{"lineNumber":11,"author":{"gitId":"jianhandev"},"content":"    public static final String MESSAGE_FAIL_SAVE \u003d \"Oooops, I couldn\u0027t save the tasks.\";"},{"lineNumber":12,"author":{"gitId":"jianhandev"},"content":"    public static final String MESSAGE_ITEM_DO_NOT_EXIST \u003d \"That item does not exist!\";"},{"lineNumber":13,"author":{"gitId":"jianhandev"},"content":"}"}],"authorContributionMap":{"jianhandev":13}},{"path":"src/main/java/chatbot/common/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jianhandev"},"content":"package chatbot.common;"},{"lineNumber":2,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":3,"author":{"gitId":"jianhandev"},"content":"public enum TaskType {"},{"lineNumber":4,"author":{"gitId":"jianhandev"},"content":"    TODO, DEADLINE, EVENT"},{"lineNumber":5,"author":{"gitId":"jianhandev"},"content":"}"}],"authorContributionMap":{"jianhandev":5}},{"path":"src/main/java/chatbot/data/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jianhandev"},"content":"package chatbot.data;"},{"lineNumber":2,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":3,"author":{"gitId":"jianhandev"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"jianhandev"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":6,"author":{"gitId":"jianhandev"},"content":"public class Deadline extends Task {"},{"lineNumber":7,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":8,"author":{"gitId":"jianhandev"},"content":"    public Deadline(String description, boolean isDone, LocalDate date) {"},{"lineNumber":9,"author":{"gitId":"jianhandev"},"content":"        super(description, \"D\", isDone, date);"},{"lineNumber":10,"author":{"gitId":"jianhandev"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":12,"author":{"gitId":"jianhandev"},"content":"    public static Deadline newDeadline(String description, LocalDate date) {"},{"lineNumber":13,"author":{"gitId":"jianhandev"},"content":"        return new Deadline(description, false, date);"},{"lineNumber":14,"author":{"gitId":"jianhandev"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":16,"author":{"gitId":"jianhandev"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"jianhandev"},"content":"    public Deadline markDone() {"},{"lineNumber":18,"author":{"gitId":"jianhandev"},"content":"        return new Deadline(this.description, true, this.date);"},{"lineNumber":19,"author":{"gitId":"jianhandev"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":21,"author":{"gitId":"jianhandev"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"jianhandev"},"content":"    public String toString() {"},{"lineNumber":23,"author":{"gitId":"jianhandev"},"content":"        String formattedDate \u003d this.date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"},{"lineNumber":24,"author":{"gitId":"jianhandev"},"content":"        return super.toString() + \" (by: \" + formattedDate + \")\";"},{"lineNumber":25,"author":{"gitId":"jianhandev"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"jianhandev"},"content":"}"}],"authorContributionMap":{"jianhandev":26}},{"path":"src/main/java/chatbot/data/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jianhandev"},"content":"package chatbot.data;"},{"lineNumber":2,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":3,"author":{"gitId":"jianhandev"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"jianhandev"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":6,"author":{"gitId":"jianhandev"},"content":"public class Event extends Task {"},{"lineNumber":7,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":8,"author":{"gitId":"jianhandev"},"content":"    public Event(String description, boolean isDone, LocalDate date) {"},{"lineNumber":9,"author":{"gitId":"jianhandev"},"content":"        super(description, \"E\", isDone, date);"},{"lineNumber":10,"author":{"gitId":"jianhandev"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":12,"author":{"gitId":"jianhandev"},"content":"    public static Event newEvent(String description, LocalDate date) {"},{"lineNumber":13,"author":{"gitId":"jianhandev"},"content":"        return new Event(description, false, date);"},{"lineNumber":14,"author":{"gitId":"jianhandev"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":16,"author":{"gitId":"jianhandev"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"jianhandev"},"content":"    public Event markDone() {"},{"lineNumber":18,"author":{"gitId":"jianhandev"},"content":"        return new Event(this.description, true, this.date);"},{"lineNumber":19,"author":{"gitId":"jianhandev"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":21,"author":{"gitId":"jianhandev"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"jianhandev"},"content":"    public String toString() {"},{"lineNumber":23,"author":{"gitId":"jianhandev"},"content":"        String formattedDate \u003d this.date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"},{"lineNumber":24,"author":{"gitId":"jianhandev"},"content":"        return super.toString() + \" (at: \" + formattedDate + \")\";"},{"lineNumber":25,"author":{"gitId":"jianhandev"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"jianhandev"},"content":"}"}],"authorContributionMap":{"jianhandev":26}},{"path":"src/main/java/chatbot/data/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jianhandev"},"content":"package chatbot.data;"},{"lineNumber":2,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":3,"author":{"gitId":"jianhandev"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":5,"author":{"gitId":"jianhandev"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"jianhandev"},"content":" * Represents a task (e.g todo, deadline, event) with a description, type, completion status and date."},{"lineNumber":7,"author":{"gitId":"jianhandev"},"content":" */"},{"lineNumber":8,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":9,"author":{"gitId":"jianhandev"},"content":"public class Task {"},{"lineNumber":10,"author":{"gitId":"jianhandev"},"content":"    protected final String description;"},{"lineNumber":11,"author":{"gitId":"jianhandev"},"content":"    protected final String type;"},{"lineNumber":12,"author":{"gitId":"jianhandev"},"content":"    protected final boolean isDone;"},{"lineNumber":13,"author":{"gitId":"jianhandev"},"content":"    protected final LocalDate date;"},{"lineNumber":14,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":15,"author":{"gitId":"jianhandev"},"content":"    protected Task(String description, String type, boolean isDone, LocalDate date) {"},{"lineNumber":16,"author":{"gitId":"jianhandev"},"content":"        this.description \u003d description;"},{"lineNumber":17,"author":{"gitId":"jianhandev"},"content":"        this.isDone \u003d isDone;"},{"lineNumber":18,"author":{"gitId":"jianhandev"},"content":"        this.type \u003d type;"},{"lineNumber":19,"author":{"gitId":"jianhandev"},"content":"        this.date \u003d date;"},{"lineNumber":20,"author":{"gitId":"jianhandev"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":22,"author":{"gitId":"jianhandev"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"jianhandev"},"content":"     * Returns a description of the task."},{"lineNumber":24,"author":{"gitId":"jianhandev"},"content":"     * @return description"},{"lineNumber":25,"author":{"gitId":"jianhandev"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"jianhandev"},"content":"    public String getDescription() {"},{"lineNumber":27,"author":{"gitId":"jianhandev"},"content":"        return this.description;"},{"lineNumber":28,"author":{"gitId":"jianhandev"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":30,"author":{"gitId":"jianhandev"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"jianhandev"},"content":"     * Returns the status of the task (\"1\" - complete, \"0\" - incomplete)."},{"lineNumber":32,"author":{"gitId":"jianhandev"},"content":"     * @return task status"},{"lineNumber":33,"author":{"gitId":"jianhandev"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"jianhandev"},"content":"    public String getStatus() {"},{"lineNumber":35,"author":{"gitId":"jianhandev"},"content":"        return isDone ? \"1\" : \"0\";"},{"lineNumber":36,"author":{"gitId":"jianhandev"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":38,"author":{"gitId":"jianhandev"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"jianhandev"},"content":"     * Returns the status of the task as symbol (tick or cross)."},{"lineNumber":40,"author":{"gitId":"jianhandev"},"content":"     * @return task status"},{"lineNumber":41,"author":{"gitId":"jianhandev"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"jianhandev"},"content":"    public String getStatusIcon() {"},{"lineNumber":43,"author":{"gitId":"jianhandev"},"content":"        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"},{"lineNumber":44,"author":{"gitId":"jianhandev"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":46,"author":{"gitId":"jianhandev"},"content":"    /**"},{"lineNumber":47,"author":{"gitId":"jianhandev"},"content":"     * Returns a date, of the format (yyyy-mm-dd), associated with the task."},{"lineNumber":48,"author":{"gitId":"jianhandev"},"content":"     * @return the date of the task"},{"lineNumber":49,"author":{"gitId":"jianhandev"},"content":"     */"},{"lineNumber":50,"author":{"gitId":"jianhandev"},"content":"    public LocalDate getDate() {"},{"lineNumber":51,"author":{"gitId":"jianhandev"},"content":"        return this.date;"},{"lineNumber":52,"author":{"gitId":"jianhandev"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":54,"author":{"gitId":"jianhandev"},"content":"    public String getType() {"},{"lineNumber":55,"author":{"gitId":"jianhandev"},"content":"        return this.type;"},{"lineNumber":56,"author":{"gitId":"jianhandev"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":58,"author":{"gitId":"jianhandev"},"content":"    /**"},{"lineNumber":59,"author":{"gitId":"jianhandev"},"content":"     * Marks the task as done. A new copy of the object is returned."},{"lineNumber":60,"author":{"gitId":"jianhandev"},"content":"     * @return a task object marked as done"},{"lineNumber":61,"author":{"gitId":"jianhandev"},"content":"     */"},{"lineNumber":62,"author":{"gitId":"jianhandev"},"content":"    public Task markDone() {"},{"lineNumber":63,"author":{"gitId":"jianhandev"},"content":"        return new Task(this.description, this.type, true, this.date);"},{"lineNumber":64,"author":{"gitId":"jianhandev"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":66,"author":{"gitId":"jianhandev"},"content":"    @Override"},{"lineNumber":67,"author":{"gitId":"jianhandev"},"content":"    public String toString() {"},{"lineNumber":68,"author":{"gitId":"jianhandev"},"content":"        return \"[\" + this.type + \"]\" + \"[\" + getStatusIcon() + \"]\""},{"lineNumber":69,"author":{"gitId":"jianhandev"},"content":"                + \" \" + this.description;"},{"lineNumber":70,"author":{"gitId":"jianhandev"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"jianhandev"},"content":"}"}],"authorContributionMap":{"jianhandev":71}},{"path":"src/main/java/chatbot/data/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jianhandev"},"content":"package chatbot.data;"},{"lineNumber":2,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":3,"author":{"gitId":"jianhandev"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"jianhandev"},"content":"import java.util.Comparator;"},{"lineNumber":5,"author":{"gitId":"jianhandev"},"content":"import java.util.Iterator;"},{"lineNumber":6,"author":{"gitId":"jianhandev"},"content":"import java.util.function.Predicate;"},{"lineNumber":7,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":8,"author":{"gitId":"jianhandev"},"content":"import chatbot.common.Message;"},{"lineNumber":9,"author":{"gitId":"jianhandev"},"content":"import chatbot.exception.ChatbotException;"},{"lineNumber":10,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":11,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":12,"author":{"gitId":"jianhandev"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"jianhandev"},"content":" * A class containing a list of tasks, with methods for adding new tasks, deleting and returning"},{"lineNumber":14,"author":{"gitId":"jianhandev"},"content":" * tasks due on a specific date."},{"lineNumber":15,"author":{"gitId":"jianhandev"},"content":" */"},{"lineNumber":16,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":17,"author":{"gitId":"jianhandev"},"content":"public class TaskList {"},{"lineNumber":18,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":19,"author":{"gitId":"jianhandev"},"content":"    private final ArrayList\u003cTask\u003e tasks;"},{"lineNumber":20,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":21,"author":{"gitId":"jianhandev"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {"},{"lineNumber":22,"author":{"gitId":"jianhandev"},"content":"        this.tasks \u003d tasks;"},{"lineNumber":23,"author":{"gitId":"jianhandev"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":25,"author":{"gitId":"jianhandev"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"jianhandev"},"content":"     * Returns the current list of tasks."},{"lineNumber":27,"author":{"gitId":"jianhandev"},"content":"     * @return list of tasks"},{"lineNumber":28,"author":{"gitId":"jianhandev"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"jianhandev"},"content":"    public ArrayList\u003cTask\u003e getTasks() {"},{"lineNumber":30,"author":{"gitId":"jianhandev"},"content":"        return this.tasks;"},{"lineNumber":31,"author":{"gitId":"jianhandev"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":33,"author":{"gitId":"jianhandev"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"jianhandev"},"content":"     * Returns a task at the specified index."},{"lineNumber":35,"author":{"gitId":"jianhandev"},"content":"     * @param index index to locate task"},{"lineNumber":36,"author":{"gitId":"jianhandev"},"content":"     * @return task at the given index"},{"lineNumber":37,"author":{"gitId":"jianhandev"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"jianhandev"},"content":"    public Task getTask(int index) {"},{"lineNumber":39,"author":{"gitId":"jianhandev"},"content":"        return this.tasks.get(index);"},{"lineNumber":40,"author":{"gitId":"jianhandev"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":42,"author":{"gitId":"jianhandev"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"jianhandev"},"content":"     * Returns the current total number of tasks."},{"lineNumber":44,"author":{"gitId":"jianhandev"},"content":"     * @return total number of tasks"},{"lineNumber":45,"author":{"gitId":"jianhandev"},"content":"     */"},{"lineNumber":46,"author":{"gitId":"jianhandev"},"content":"    public int count() {"},{"lineNumber":47,"author":{"gitId":"jianhandev"},"content":"        return this.tasks.size();"},{"lineNumber":48,"author":{"gitId":"jianhandev"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":50,"author":{"gitId":"jianhandev"},"content":"    /**"},{"lineNumber":51,"author":{"gitId":"jianhandev"},"content":"     * Adds a new task to the list of tasks."},{"lineNumber":52,"author":{"gitId":"jianhandev"},"content":"     * @param task new task to be added"},{"lineNumber":53,"author":{"gitId":"jianhandev"},"content":"     */"},{"lineNumber":54,"author":{"gitId":"jianhandev"},"content":"    public void addTask(Task task) {"},{"lineNumber":55,"author":{"gitId":"jianhandev"},"content":"        tasks.add(task);"},{"lineNumber":56,"author":{"gitId":"jianhandev"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":58,"author":{"gitId":"jianhandev"},"content":"    /**"},{"lineNumber":59,"author":{"gitId":"jianhandev"},"content":"     * Deletes the task at a specified index on the list."},{"lineNumber":60,"author":{"gitId":"jianhandev"},"content":"     * @param index index to locate task"},{"lineNumber":61,"author":{"gitId":"jianhandev"},"content":"     * @return task that is removed"},{"lineNumber":62,"author":{"gitId":"jianhandev"},"content":"     * @throws ChatbotException if given index is out-of-bounds"},{"lineNumber":63,"author":{"gitId":"jianhandev"},"content":"     */"},{"lineNumber":64,"author":{"gitId":"jianhandev"},"content":"    public Task removeTask(int index) throws ChatbotException {"},{"lineNumber":65,"author":{"gitId":"jianhandev"},"content":"        Task removed;"},{"lineNumber":66,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":67,"author":{"gitId":"jianhandev"},"content":"        try {"},{"lineNumber":68,"author":{"gitId":"jianhandev"},"content":"            removed \u003d this.tasks.remove(index);"},{"lineNumber":69,"author":{"gitId":"jianhandev"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":70,"author":{"gitId":"jianhandev"},"content":"            throw new ChatbotException(Message.MESSAGE_ITEM_DO_NOT_EXIST);"},{"lineNumber":71,"author":{"gitId":"jianhandev"},"content":"        }"},{"lineNumber":72,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":73,"author":{"gitId":"jianhandev"},"content":"        return removed;"},{"lineNumber":74,"author":{"gitId":"jianhandev"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":76,"author":{"gitId":"jianhandev"},"content":"    /**"},{"lineNumber":77,"author":{"gitId":"jianhandev"},"content":"     * Marks a task on the list as done."},{"lineNumber":78,"author":{"gitId":"jianhandev"},"content":"     * @param index index to locate the task"},{"lineNumber":79,"author":{"gitId":"jianhandev"},"content":"     * @return task to be marked as done"},{"lineNumber":80,"author":{"gitId":"jianhandev"},"content":"     * @throws ChatbotException if given index is out-of-bounds"},{"lineNumber":81,"author":{"gitId":"jianhandev"},"content":"     */"},{"lineNumber":82,"author":{"gitId":"jianhandev"},"content":"    public Task markAsDone(int index) throws ChatbotException {"},{"lineNumber":83,"author":{"gitId":"jianhandev"},"content":"        Task taskDone;"},{"lineNumber":84,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":85,"author":{"gitId":"jianhandev"},"content":"        try {"},{"lineNumber":86,"author":{"gitId":"jianhandev"},"content":"            taskDone \u003d getTask(index).markDone();"},{"lineNumber":87,"author":{"gitId":"jianhandev"},"content":"            this.tasks.set(index, taskDone);"},{"lineNumber":88,"author":{"gitId":"jianhandev"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":89,"author":{"gitId":"jianhandev"},"content":"            throw new ChatbotException(Message.MESSAGE_ITEM_DO_NOT_EXIST);"},{"lineNumber":90,"author":{"gitId":"jianhandev"},"content":"        }"},{"lineNumber":91,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":92,"author":{"gitId":"jianhandev"},"content":"        return taskDone;"},{"lineNumber":93,"author":{"gitId":"jianhandev"},"content":"    }"},{"lineNumber":94,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":95,"author":{"gitId":"jianhandev"},"content":"    /**"},{"lineNumber":96,"author":{"gitId":"jianhandev"},"content":"     * Returns a list of tasks that fulfills the given predicate."},{"lineNumber":97,"author":{"gitId":"jianhandev"},"content":"     * @param pred given predicate"},{"lineNumber":98,"author":{"gitId":"jianhandev"},"content":"     * @return list of tasks"},{"lineNumber":99,"author":{"gitId":"jianhandev"},"content":"     */"},{"lineNumber":100,"author":{"gitId":"jianhandev"},"content":"    public ArrayList\u003cTask\u003e retrieveTasksByPred(Predicate\u003cTask\u003e pred) {"},{"lineNumber":101,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":102,"author":{"gitId":"jianhandev"},"content":"        Iterator\u003cTask\u003e iter \u003d this.tasks.iterator();"},{"lineNumber":103,"author":{"gitId":"jianhandev"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":104,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":105,"author":{"gitId":"jianhandev"},"content":"        while (iter.hasNext()) {"},{"lineNumber":106,"author":{"gitId":"jianhandev"},"content":"            Task task \u003d iter.next();"},{"lineNumber":107,"author":{"gitId":"jianhandev"},"content":"            if (pred.test(task)) {"},{"lineNumber":108,"author":{"gitId":"jianhandev"},"content":"                tasks.add(task);"},{"lineNumber":109,"author":{"gitId":"jianhandev"},"content":"            }"},{"lineNumber":110,"author":{"gitId":"jianhandev"},"content":"        }"},{"lineNumber":111,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":112,"author":{"gitId":"jianhandev"},"content":"        return tasks;"},{"lineNumber":113,"author":{"gitId":"jianhandev"},"content":"    }"},{"lineNumber":114,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":115,"author":{"gitId":"jianhandev"},"content":"    /**"},{"lineNumber":116,"author":{"gitId":"jianhandev"},"content":"     * Retrieve tasks by order, specified by a comparator."},{"lineNumber":117,"author":{"gitId":"jianhandev"},"content":"     * @param comp comparator to decide order"},{"lineNumber":118,"author":{"gitId":"jianhandev"},"content":"     * @return list of tasks in the specified order"},{"lineNumber":119,"author":{"gitId":"jianhandev"},"content":"     */"},{"lineNumber":120,"author":{"gitId":"jianhandev"},"content":"    public ArrayList\u003cTask\u003e retrieveTasksByOrder(Comparator\u003cTask\u003e comp) {"},{"lineNumber":121,"author":{"gitId":"jianhandev"},"content":"        ArrayList\u003cTask\u003e copyOfTasks \u003d new ArrayList\u003c\u003e(tasks);"},{"lineNumber":122,"author":{"gitId":"jianhandev"},"content":"        copyOfTasks.sort(comp);"},{"lineNumber":123,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":124,"author":{"gitId":"jianhandev"},"content":"        return copyOfTasks;"},{"lineNumber":125,"author":{"gitId":"jianhandev"},"content":"    }"},{"lineNumber":126,"author":{"gitId":"jianhandev"},"content":"}"}],"authorContributionMap":{"jianhandev":126}},{"path":"src/main/java/chatbot/data/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jianhandev"},"content":"package chatbot.data;"},{"lineNumber":2,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":3,"author":{"gitId":"jianhandev"},"content":"public class Todo extends Task {"},{"lineNumber":4,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":5,"author":{"gitId":"jianhandev"},"content":"    public Todo(String description, boolean isDone) {"},{"lineNumber":6,"author":{"gitId":"jianhandev"},"content":"        super(description, \"T\", isDone, null);"},{"lineNumber":7,"author":{"gitId":"jianhandev"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":9,"author":{"gitId":"jianhandev"},"content":"    public static Todo newTodo(String description) {"},{"lineNumber":10,"author":{"gitId":"jianhandev"},"content":"        return new Todo(description, false);"},{"lineNumber":11,"author":{"gitId":"jianhandev"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":13,"author":{"gitId":"jianhandev"},"content":"    @Override"},{"lineNumber":14,"author":{"gitId":"jianhandev"},"content":"    public Todo markDone() {"},{"lineNumber":15,"author":{"gitId":"jianhandev"},"content":"        return new Todo(this.description, true);"},{"lineNumber":16,"author":{"gitId":"jianhandev"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"jianhandev"},"content":"}"}],"authorContributionMap":{"jianhandev":17}},{"path":"src/main/java/chatbot/exception/ChatbotException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jianhandev"},"content":"package chatbot.exception;"},{"lineNumber":2,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":3,"author":{"gitId":"jianhandev"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"jianhandev"},"content":" * This exception is thrown by the chatbot to indicate that an invalid command is given,"},{"lineNumber":5,"author":{"gitId":"jianhandev"},"content":" * or an invalid action is encountered."},{"lineNumber":6,"author":{"gitId":"jianhandev"},"content":" */"},{"lineNumber":7,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":8,"author":{"gitId":"jianhandev"},"content":"public class ChatbotException extends Exception {"},{"lineNumber":9,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":10,"author":{"gitId":"jianhandev"},"content":"    protected final String message;"},{"lineNumber":11,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":12,"author":{"gitId":"jianhandev"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"jianhandev"},"content":"     * Constructs an exception specific to the chatbot."},{"lineNumber":14,"author":{"gitId":"jianhandev"},"content":"     * @param message"},{"lineNumber":15,"author":{"gitId":"jianhandev"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"jianhandev"},"content":"    public ChatbotException(String message) {"},{"lineNumber":17,"author":{"gitId":"jianhandev"},"content":"        super(message);"},{"lineNumber":18,"author":{"gitId":"jianhandev"},"content":"        this.message \u003d message;"},{"lineNumber":19,"author":{"gitId":"jianhandev"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"jianhandev"},"content":"}"}],"authorContributionMap":{"jianhandev":20}},{"path":"src/main/java/chatbot/exception/InvalidDateFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jianhandev"},"content":"package chatbot.exception;"},{"lineNumber":2,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":3,"author":{"gitId":"jianhandev"},"content":"import chatbot.common.Message;"},{"lineNumber":4,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":5,"author":{"gitId":"jianhandev"},"content":"public class InvalidDateFormatException extends ChatbotException {"},{"lineNumber":6,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":7,"author":{"gitId":"jianhandev"},"content":"    public InvalidDateFormatException() {"},{"lineNumber":8,"author":{"gitId":"jianhandev"},"content":"        super(Message.MESSAGE_INVALID_DATE_FORMAT);"},{"lineNumber":9,"author":{"gitId":"jianhandev"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":11,"author":{"gitId":"jianhandev"},"content":"    public InvalidDateFormatException(String message) {"},{"lineNumber":12,"author":{"gitId":"jianhandev"},"content":"        super(message);"},{"lineNumber":13,"author":{"gitId":"jianhandev"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"jianhandev"},"content":"}"}],"authorContributionMap":{"jianhandev":14}},{"path":"src/main/java/chatbot/exception/NoArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jianhandev"},"content":"package chatbot.exception;"},{"lineNumber":2,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":3,"author":{"gitId":"jianhandev"},"content":"public class NoArgumentException extends ChatbotException {"},{"lineNumber":4,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":5,"author":{"gitId":"jianhandev"},"content":"    public NoArgumentException(String message) {"},{"lineNumber":6,"author":{"gitId":"jianhandev"},"content":"        super(message);"},{"lineNumber":7,"author":{"gitId":"jianhandev"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"jianhandev"},"content":"}"}],"authorContributionMap":{"jianhandev":8}},{"path":"src/main/java/chatbot/exception/ParseException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jianhandev"},"content":"package chatbot.exception;"},{"lineNumber":2,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":3,"author":{"gitId":"jianhandev"},"content":"import chatbot.common.Message;"},{"lineNumber":4,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":5,"author":{"gitId":"jianhandev"},"content":"public class ParseException extends ChatbotException {"},{"lineNumber":6,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":7,"author":{"gitId":"jianhandev"},"content":"    public ParseException() {"},{"lineNumber":8,"author":{"gitId":"jianhandev"},"content":"        super(Message.MESSAGE_UNKNOWN_COMMAND);"},{"lineNumber":9,"author":{"gitId":"jianhandev"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":11,"author":{"gitId":"jianhandev"},"content":"    public ParseException(String message) {"},{"lineNumber":12,"author":{"gitId":"jianhandev"},"content":"        super(message);"},{"lineNumber":13,"author":{"gitId":"jianhandev"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"jianhandev"},"content":"}"}],"authorContributionMap":{"jianhandev":14}},{"path":"src/main/java/chatbot/parser/AddCommandParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jianhandev"},"content":"package chatbot.parser;"},{"lineNumber":2,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":3,"author":{"gitId":"jianhandev"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"jianhandev"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":5,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":6,"author":{"gitId":"jianhandev"},"content":"import chatbot.commands.AddCommand;"},{"lineNumber":7,"author":{"gitId":"jianhandev"},"content":"import chatbot.commands.Command;"},{"lineNumber":8,"author":{"gitId":"jianhandev"},"content":"import chatbot.common.Message;"},{"lineNumber":9,"author":{"gitId":"jianhandev"},"content":"import chatbot.common.TaskType;"},{"lineNumber":10,"author":{"gitId":"jianhandev"},"content":"import chatbot.data.Deadline;"},{"lineNumber":11,"author":{"gitId":"jianhandev"},"content":"import chatbot.data.Event;"},{"lineNumber":12,"author":{"gitId":"jianhandev"},"content":"import chatbot.data.Todo;"},{"lineNumber":13,"author":{"gitId":"jianhandev"},"content":"import chatbot.exception.ChatbotException;"},{"lineNumber":14,"author":{"gitId":"jianhandev"},"content":"import chatbot.exception.InvalidDateFormatException;"},{"lineNumber":15,"author":{"gitId":"jianhandev"},"content":"import chatbot.exception.NoArgumentException;"},{"lineNumber":16,"author":{"gitId":"jianhandev"},"content":"import chatbot.exception.ParseException;"},{"lineNumber":17,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":18,"author":{"gitId":"jianhandev"},"content":"public class AddCommandParser implements Parser {"},{"lineNumber":19,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":20,"author":{"gitId":"jianhandev"},"content":"    private final TaskType type;"},{"lineNumber":21,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":22,"author":{"gitId":"jianhandev"},"content":"    public AddCommandParser(TaskType type) {"},{"lineNumber":23,"author":{"gitId":"jianhandev"},"content":"        this.type \u003d type;"},{"lineNumber":24,"author":{"gitId":"jianhandev"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":26,"author":{"gitId":"jianhandev"},"content":"    @Override"},{"lineNumber":27,"author":{"gitId":"jianhandev"},"content":"    public Command parse(String args) throws ChatbotException {"},{"lineNumber":28,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":29,"author":{"gitId":"jianhandev"},"content":"        if (args.length() \u003d\u003d 0) {"},{"lineNumber":30,"author":{"gitId":"jianhandev"},"content":"            throw new NoArgumentException(Message.MESSAGE_EMPTY_TASK);"},{"lineNumber":31,"author":{"gitId":"jianhandev"},"content":"        }"},{"lineNumber":32,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":33,"author":{"gitId":"jianhandev"},"content":"        switch (type) {"},{"lineNumber":34,"author":{"gitId":"jianhandev"},"content":"        case TODO:"},{"lineNumber":35,"author":{"gitId":"jianhandev"},"content":"            Todo task \u003d Todo.newTodo(args);"},{"lineNumber":36,"author":{"gitId":"jianhandev"},"content":"            return new AddCommand(task);"},{"lineNumber":37,"author":{"gitId":"jianhandev"},"content":"        case EVENT:"},{"lineNumber":38,"author":{"gitId":"jianhandev"},"content":"            try {"},{"lineNumber":39,"author":{"gitId":"jianhandev"},"content":"                String description \u003d args.split(\"/at\")[0].trim();"},{"lineNumber":40,"author":{"gitId":"jianhandev"},"content":"                if (description.length() \u003d\u003d 0) {"},{"lineNumber":41,"author":{"gitId":"jianhandev"},"content":"                    throw new NoArgumentException(Message.MESSAGE_EMPTY_TASK);"},{"lineNumber":42,"author":{"gitId":"jianhandev"},"content":"                }"},{"lineNumber":43,"author":{"gitId":"jianhandev"},"content":"                String dateString \u003d args.split(\"/at\")[1].trim();"},{"lineNumber":44,"author":{"gitId":"jianhandev"},"content":"                LocalDate date \u003d LocalDate.parse(dateString);"},{"lineNumber":45,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":46,"author":{"gitId":"jianhandev"},"content":"                Event e \u003d Event.newEvent(description, date);"},{"lineNumber":47,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":48,"author":{"gitId":"jianhandev"},"content":"                return new AddCommand(e);"},{"lineNumber":49,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":50,"author":{"gitId":"jianhandev"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":51,"author":{"gitId":"jianhandev"},"content":"                throw new NoArgumentException(Message.MESSAGE_EMPTY_DATE);"},{"lineNumber":52,"author":{"gitId":"jianhandev"},"content":"            } catch (DateTimeParseException e) {"},{"lineNumber":53,"author":{"gitId":"jianhandev"},"content":"                throw new InvalidDateFormatException();"},{"lineNumber":54,"author":{"gitId":"jianhandev"},"content":"            }"},{"lineNumber":55,"author":{"gitId":"jianhandev"},"content":"        case DEADLINE:"},{"lineNumber":56,"author":{"gitId":"jianhandev"},"content":"            try {"},{"lineNumber":57,"author":{"gitId":"jianhandev"},"content":"                String description \u003d args.split(\"/by\")[0].trim();"},{"lineNumber":58,"author":{"gitId":"jianhandev"},"content":"                if (description.length() \u003d\u003d 0) {"},{"lineNumber":59,"author":{"gitId":"jianhandev"},"content":"                    throw new NoArgumentException(Message.MESSAGE_EMPTY_TASK);"},{"lineNumber":60,"author":{"gitId":"jianhandev"},"content":"                }"},{"lineNumber":61,"author":{"gitId":"jianhandev"},"content":"                String dateString \u003d args.split(\"/by\")[1].trim();"},{"lineNumber":62,"author":{"gitId":"jianhandev"},"content":"                LocalDate date \u003d LocalDate.parse(dateString);"},{"lineNumber":63,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":64,"author":{"gitId":"jianhandev"},"content":"                Deadline dl \u003d Deadline.newDeadline(description, date);"},{"lineNumber":65,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":66,"author":{"gitId":"jianhandev"},"content":"                return new AddCommand(dl);"},{"lineNumber":67,"author":{"gitId":"jianhandev"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":68,"author":{"gitId":"jianhandev"},"content":"                throw new NoArgumentException(Message.MESSAGE_EMPTY_DATE);"},{"lineNumber":69,"author":{"gitId":"jianhandev"},"content":"            } catch (DateTimeParseException e) {"},{"lineNumber":70,"author":{"gitId":"jianhandev"},"content":"                throw new InvalidDateFormatException();"},{"lineNumber":71,"author":{"gitId":"jianhandev"},"content":"            }"},{"lineNumber":72,"author":{"gitId":"jianhandev"},"content":"        default:"},{"lineNumber":73,"author":{"gitId":"jianhandev"},"content":"            break;"},{"lineNumber":74,"author":{"gitId":"jianhandev"},"content":"        }"},{"lineNumber":75,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":76,"author":{"gitId":"jianhandev"},"content":"        throw new ParseException();"},{"lineNumber":77,"author":{"gitId":"jianhandev"},"content":"    }"},{"lineNumber":78,"author":{"gitId":"jianhandev"},"content":"}"}],"authorContributionMap":{"jianhandev":78}},{"path":"src/main/java/chatbot/parser/ChatbotParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jianhandev"},"content":"package chatbot.parser;"},{"lineNumber":2,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":3,"author":{"gitId":"jianhandev"},"content":"import chatbot.commands.Command;"},{"lineNumber":4,"author":{"gitId":"jianhandev"},"content":"import chatbot.commands.ExitCommand;"},{"lineNumber":5,"author":{"gitId":"jianhandev"},"content":"import chatbot.commands.ShowAllCommand;"},{"lineNumber":6,"author":{"gitId":"jianhandev"},"content":"import chatbot.common.CommandType;"},{"lineNumber":7,"author":{"gitId":"jianhandev"},"content":"import chatbot.common.Message;"},{"lineNumber":8,"author":{"gitId":"jianhandev"},"content":"import chatbot.common.TaskType;"},{"lineNumber":9,"author":{"gitId":"jianhandev"},"content":"import chatbot.exception.ChatbotException;"},{"lineNumber":10,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":11,"author":{"gitId":"jianhandev"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"jianhandev"},"content":" * A class that parses the command input given by the user."},{"lineNumber":13,"author":{"gitId":"jianhandev"},"content":" */"},{"lineNumber":14,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":15,"author":{"gitId":"jianhandev"},"content":"public class ChatbotParser {"},{"lineNumber":16,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":17,"author":{"gitId":"jianhandev"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"jianhandev"},"content":"     * Parses the user input and returns an executable command."},{"lineNumber":19,"author":{"gitId":"jianhandev"},"content":"     * @param fullCmd the user input"},{"lineNumber":20,"author":{"gitId":"jianhandev"},"content":"     * @return command matching the user input"},{"lineNumber":21,"author":{"gitId":"jianhandev"},"content":"     * @throws ChatbotException if command is invalid"},{"lineNumber":22,"author":{"gitId":"jianhandev"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"jianhandev"},"content":"    public static Command parseCommand(String fullCmd) throws ChatbotException {"},{"lineNumber":24,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":25,"author":{"gitId":"jianhandev"},"content":"        CommandType type;"},{"lineNumber":26,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":27,"author":{"gitId":"jianhandev"},"content":"        // extract type of command"},{"lineNumber":28,"author":{"gitId":"jianhandev"},"content":"        String text \u003d fullCmd.trim();"},{"lineNumber":29,"author":{"gitId":"jianhandev"},"content":"        String typeStr \u003d text.split(\" \")[0].trim();"},{"lineNumber":30,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":31,"author":{"gitId":"jianhandev"},"content":"        // extract arguments from command"},{"lineNumber":32,"author":{"gitId":"jianhandev"},"content":"        int index \u003d typeStr.length();"},{"lineNumber":33,"author":{"gitId":"jianhandev"},"content":"        String arguments \u003d text.substring(index).trim();"},{"lineNumber":34,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":35,"author":{"gitId":"jianhandev"},"content":"        try {"},{"lineNumber":36,"author":{"gitId":"jianhandev"},"content":"            type \u003d CommandType.valueOf(typeStr.toUpperCase());"},{"lineNumber":37,"author":{"gitId":"jianhandev"},"content":"        } catch (IllegalArgumentException e) {"},{"lineNumber":38,"author":{"gitId":"jianhandev"},"content":"            throw new ChatbotException(Message.MESSAGE_UNKNOWN_COMMAND);"},{"lineNumber":39,"author":{"gitId":"jianhandev"},"content":"        }"},{"lineNumber":40,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":41,"author":{"gitId":"jianhandev"},"content":"        switch (type) {"},{"lineNumber":42,"author":{"gitId":"jianhandev"},"content":"        case BYE:"},{"lineNumber":43,"author":{"gitId":"jianhandev"},"content":"            return new ExitCommand();"},{"lineNumber":44,"author":{"gitId":"jianhandev"},"content":"        case DATE:"},{"lineNumber":45,"author":{"gitId":"jianhandev"},"content":"            return new FindCommandParser(CommandType.DATE).parse(arguments);"},{"lineNumber":46,"author":{"gitId":"jianhandev"},"content":"        case DELETE:"},{"lineNumber":47,"author":{"gitId":"jianhandev"},"content":"            return new DeleteCommandParser().parse(arguments);"},{"lineNumber":48,"author":{"gitId":"jianhandev"},"content":"        case DEADLINE:"},{"lineNumber":49,"author":{"gitId":"jianhandev"},"content":"            return new AddCommandParser(TaskType.DEADLINE).parse(arguments);"},{"lineNumber":50,"author":{"gitId":"jianhandev"},"content":"        case DONE:"},{"lineNumber":51,"author":{"gitId":"jianhandev"},"content":"            return new DoneCommandParser().parse(arguments);"},{"lineNumber":52,"author":{"gitId":"jianhandev"},"content":"        case EVENT:"},{"lineNumber":53,"author":{"gitId":"jianhandev"},"content":"            return new AddCommandParser(TaskType.EVENT).parse(arguments);"},{"lineNumber":54,"author":{"gitId":"jianhandev"},"content":"        case FIND:"},{"lineNumber":55,"author":{"gitId":"jianhandev"},"content":"            return new FindCommandParser(CommandType.FIND).parse(arguments);"},{"lineNumber":56,"author":{"gitId":"jianhandev"},"content":"        case LIST:"},{"lineNumber":57,"author":{"gitId":"jianhandev"},"content":"            return new ShowAllCommand();"},{"lineNumber":58,"author":{"gitId":"jianhandev"},"content":"        case SORT:"},{"lineNumber":59,"author":{"gitId":"jianhandev"},"content":"            return new SortCommandParser().parse(arguments);"},{"lineNumber":60,"author":{"gitId":"jianhandev"},"content":"        case TODO:"},{"lineNumber":61,"author":{"gitId":"jianhandev"},"content":"            return new AddCommandParser(TaskType.TODO).parse(arguments);"},{"lineNumber":62,"author":{"gitId":"jianhandev"},"content":"        default:"},{"lineNumber":63,"author":{"gitId":"jianhandev"},"content":"            throw new ChatbotException(Message.MESSAGE_UNKNOWN_COMMAND);"},{"lineNumber":64,"author":{"gitId":"jianhandev"},"content":"        }"},{"lineNumber":65,"author":{"gitId":"jianhandev"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"jianhandev"},"content":"}"}],"authorContributionMap":{"jianhandev":66}},{"path":"src/main/java/chatbot/parser/DeleteCommandParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jianhandev"},"content":"package chatbot.parser;"},{"lineNumber":2,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":3,"author":{"gitId":"jianhandev"},"content":"import chatbot.commands.Command;"},{"lineNumber":4,"author":{"gitId":"jianhandev"},"content":"import chatbot.commands.DeleteCommand;"},{"lineNumber":5,"author":{"gitId":"jianhandev"},"content":"import chatbot.exception.ChatbotException;"},{"lineNumber":6,"author":{"gitId":"jianhandev"},"content":"import chatbot.exception.ParseException;"},{"lineNumber":7,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":8,"author":{"gitId":"jianhandev"},"content":"public class DeleteCommandParser implements Parser {"},{"lineNumber":9,"author":{"gitId":"jianhandev"},"content":"    @Override"},{"lineNumber":10,"author":{"gitId":"jianhandev"},"content":"    public Command parse(String args) throws ChatbotException {"},{"lineNumber":11,"author":{"gitId":"jianhandev"},"content":"        try {"},{"lineNumber":12,"author":{"gitId":"jianhandev"},"content":"            int index \u003d Integer.parseInt(args) - 1;"},{"lineNumber":13,"author":{"gitId":"jianhandev"},"content":"            return new DeleteCommand(index);"},{"lineNumber":14,"author":{"gitId":"jianhandev"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":15,"author":{"gitId":"jianhandev"},"content":"            throw new ParseException();"},{"lineNumber":16,"author":{"gitId":"jianhandev"},"content":"        }"},{"lineNumber":17,"author":{"gitId":"jianhandev"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"jianhandev"},"content":"}"}],"authorContributionMap":{"jianhandev":18}},{"path":"src/main/java/chatbot/parser/DoneCommandParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jianhandev"},"content":"package chatbot.parser;"},{"lineNumber":2,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":3,"author":{"gitId":"jianhandev"},"content":"import chatbot.commands.Command;"},{"lineNumber":4,"author":{"gitId":"jianhandev"},"content":"import chatbot.commands.DoneCommand;"},{"lineNumber":5,"author":{"gitId":"jianhandev"},"content":"import chatbot.exception.ChatbotException;"},{"lineNumber":6,"author":{"gitId":"jianhandev"},"content":"import chatbot.exception.ParseException;"},{"lineNumber":7,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":8,"author":{"gitId":"jianhandev"},"content":"public class DoneCommandParser implements Parser {"},{"lineNumber":9,"author":{"gitId":"jianhandev"},"content":"    @Override"},{"lineNumber":10,"author":{"gitId":"jianhandev"},"content":"    public Command parse(String args) throws ChatbotException {"},{"lineNumber":11,"author":{"gitId":"jianhandev"},"content":"        try {"},{"lineNumber":12,"author":{"gitId":"jianhandev"},"content":"            int index \u003d Integer.parseInt(args) - 1;"},{"lineNumber":13,"author":{"gitId":"jianhandev"},"content":"            return new DoneCommand(index);"},{"lineNumber":14,"author":{"gitId":"jianhandev"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":15,"author":{"gitId":"jianhandev"},"content":"            throw new ParseException();"},{"lineNumber":16,"author":{"gitId":"jianhandev"},"content":"        }"},{"lineNumber":17,"author":{"gitId":"jianhandev"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"jianhandev"},"content":"}"}],"authorContributionMap":{"jianhandev":18}},{"path":"src/main/java/chatbot/parser/FindCommandParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jianhandev"},"content":"package chatbot.parser;"},{"lineNumber":2,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":3,"author":{"gitId":"jianhandev"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"jianhandev"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":5,"author":{"gitId":"jianhandev"},"content":"import java.util.function.Predicate;"},{"lineNumber":6,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":7,"author":{"gitId":"jianhandev"},"content":"import chatbot.commands.Command;"},{"lineNumber":8,"author":{"gitId":"jianhandev"},"content":"import chatbot.commands.FindCommand;"},{"lineNumber":9,"author":{"gitId":"jianhandev"},"content":"import chatbot.common.CommandType;"},{"lineNumber":10,"author":{"gitId":"jianhandev"},"content":"import chatbot.data.Task;"},{"lineNumber":11,"author":{"gitId":"jianhandev"},"content":"import chatbot.exception.ChatbotException;"},{"lineNumber":12,"author":{"gitId":"jianhandev"},"content":"import chatbot.exception.InvalidDateFormatException;"},{"lineNumber":13,"author":{"gitId":"jianhandev"},"content":"import chatbot.exception.ParseException;"},{"lineNumber":14,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":15,"author":{"gitId":"jianhandev"},"content":"public class FindCommandParser implements Parser {"},{"lineNumber":16,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":17,"author":{"gitId":"jianhandev"},"content":"    private final CommandType type;"},{"lineNumber":18,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":19,"author":{"gitId":"jianhandev"},"content":"    public FindCommandParser(CommandType type) {"},{"lineNumber":20,"author":{"gitId":"jianhandev"},"content":"        this.type \u003d type;"},{"lineNumber":21,"author":{"gitId":"jianhandev"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":23,"author":{"gitId":"jianhandev"},"content":"    @Override"},{"lineNumber":24,"author":{"gitId":"jianhandev"},"content":"    public Command parse(String args) throws ChatbotException {"},{"lineNumber":25,"author":{"gitId":"jianhandev"},"content":"        switch (type) {"},{"lineNumber":26,"author":{"gitId":"jianhandev"},"content":"        case DATE:"},{"lineNumber":27,"author":{"gitId":"jianhandev"},"content":"            try {"},{"lineNumber":28,"author":{"gitId":"jianhandev"},"content":"                LocalDate date \u003d LocalDate.parse(args);"},{"lineNumber":29,"author":{"gitId":"jianhandev"},"content":"                Predicate\u003cTask\u003e pred \u003d task -\u003e ("},{"lineNumber":30,"author":{"gitId":"jianhandev"},"content":"                        task.getDate() !\u003d null \u0026\u0026 task.getDate().equals(date));"},{"lineNumber":31,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":32,"author":{"gitId":"jianhandev"},"content":"                return new FindCommand(pred);"},{"lineNumber":33,"author":{"gitId":"jianhandev"},"content":"            } catch (DateTimeParseException e) {"},{"lineNumber":34,"author":{"gitId":"jianhandev"},"content":"                throw new InvalidDateFormatException();"},{"lineNumber":35,"author":{"gitId":"jianhandev"},"content":"            }"},{"lineNumber":36,"author":{"gitId":"jianhandev"},"content":"        case FIND:"},{"lineNumber":37,"author":{"gitId":"jianhandev"},"content":"            Predicate\u003cTask\u003e pred \u003d task -\u003e (task.getDescription().contains(args));"},{"lineNumber":38,"author":{"gitId":"jianhandev"},"content":"            return new FindCommand(pred);"},{"lineNumber":39,"author":{"gitId":"jianhandev"},"content":"        default:"},{"lineNumber":40,"author":{"gitId":"jianhandev"},"content":"            break;"},{"lineNumber":41,"author":{"gitId":"jianhandev"},"content":"        }"},{"lineNumber":42,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":43,"author":{"gitId":"jianhandev"},"content":"        throw new ParseException();"},{"lineNumber":44,"author":{"gitId":"jianhandev"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"jianhandev"},"content":"}"}],"authorContributionMap":{"jianhandev":45}},{"path":"src/main/java/chatbot/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jianhandev"},"content":"package chatbot.parser;"},{"lineNumber":2,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":3,"author":{"gitId":"jianhandev"},"content":"import chatbot.commands.Command;"},{"lineNumber":4,"author":{"gitId":"jianhandev"},"content":"import chatbot.exception.ChatbotException;"},{"lineNumber":5,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":6,"author":{"gitId":"jianhandev"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"jianhandev"},"content":" * Represents a Parser that is able to parse user input into a {@code Command} of type {@code T}."},{"lineNumber":8,"author":{"gitId":"jianhandev"},"content":" */"},{"lineNumber":9,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":10,"author":{"gitId":"jianhandev"},"content":"public interface Parser {"},{"lineNumber":11,"author":{"gitId":"jianhandev"},"content":"    Command parse(String args) throws ChatbotException;"},{"lineNumber":12,"author":{"gitId":"jianhandev"},"content":"}"}],"authorContributionMap":{"jianhandev":12}},{"path":"src/main/java/chatbot/parser/SortCommandParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jianhandev"},"content":"package chatbot.parser;"},{"lineNumber":2,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":3,"author":{"gitId":"jianhandev"},"content":"import chatbot.commands.Command;"},{"lineNumber":4,"author":{"gitId":"jianhandev"},"content":"import chatbot.commands.SortCommand;"},{"lineNumber":5,"author":{"gitId":"jianhandev"},"content":"import chatbot.exception.ChatbotException;"},{"lineNumber":6,"author":{"gitId":"jianhandev"},"content":"import chatbot.exception.ParseException;"},{"lineNumber":7,"author":{"gitId":"jianhandev"},"content":"import chatbot.util.comparator.TaskByDateComparator;"},{"lineNumber":8,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":9,"author":{"gitId":"jianhandev"},"content":"public class SortCommandParser implements Parser {"},{"lineNumber":10,"author":{"gitId":"jianhandev"},"content":"    @Override"},{"lineNumber":11,"author":{"gitId":"jianhandev"},"content":"    public Command parse(String args) throws ChatbotException {"},{"lineNumber":12,"author":{"gitId":"jianhandev"},"content":"        String[] arr \u003d args.split(\"/by\");"},{"lineNumber":13,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":14,"author":{"gitId":"jianhandev"},"content":"        if (arr.length \u003d\u003d 0 || arr.length \u003d\u003d 1) {"},{"lineNumber":15,"author":{"gitId":"jianhandev"},"content":"            throw new ParseException();"},{"lineNumber":16,"author":{"gitId":"jianhandev"},"content":"        }"},{"lineNumber":17,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":18,"author":{"gitId":"jianhandev"},"content":"        String descriptor \u003d arr[1].trim();"},{"lineNumber":19,"author":{"gitId":"jianhandev"},"content":"        TaskByDateComparator comp \u003d new TaskByDateComparator();"},{"lineNumber":20,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":21,"author":{"gitId":"jianhandev"},"content":"        if (descriptor.equals(\"earliest\")) {"},{"lineNumber":22,"author":{"gitId":"jianhandev"},"content":"            return new SortCommand(comp);"},{"lineNumber":23,"author":{"gitId":"jianhandev"},"content":"        } else if (descriptor.equals(\"latest\")) {"},{"lineNumber":24,"author":{"gitId":"jianhandev"},"content":"            return new SortCommand(comp.reversed());"},{"lineNumber":25,"author":{"gitId":"jianhandev"},"content":"        } else {"},{"lineNumber":26,"author":{"gitId":"jianhandev"},"content":"            throw new ParseException();"},{"lineNumber":27,"author":{"gitId":"jianhandev"},"content":"        }"},{"lineNumber":28,"author":{"gitId":"jianhandev"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"jianhandev"},"content":"}"}],"authorContributionMap":{"jianhandev":29}},{"path":"src/main/java/chatbot/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jianhandev"},"content":"package chatbot.storage;"},{"lineNumber":2,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":3,"author":{"gitId":"jianhandev"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"jianhandev"},"content":"import java.nio.file.Files;"},{"lineNumber":5,"author":{"gitId":"jianhandev"},"content":"import java.nio.file.Path;"},{"lineNumber":6,"author":{"gitId":"jianhandev"},"content":"import java.time.LocalDate;"},{"lineNumber":7,"author":{"gitId":"jianhandev"},"content":"import java.util.ArrayList;"},{"lineNumber":8,"author":{"gitId":"jianhandev"},"content":"import java.util.Iterator;"},{"lineNumber":9,"author":{"gitId":"jianhandev"},"content":"import java.util.stream.Stream;"},{"lineNumber":10,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":11,"author":{"gitId":"jianhandev"},"content":"import chatbot.common.Message;"},{"lineNumber":12,"author":{"gitId":"jianhandev"},"content":"import chatbot.data.Deadline;"},{"lineNumber":13,"author":{"gitId":"jianhandev"},"content":"import chatbot.data.Event;"},{"lineNumber":14,"author":{"gitId":"jianhandev"},"content":"import chatbot.data.Task;"},{"lineNumber":15,"author":{"gitId":"jianhandev"},"content":"import chatbot.data.Todo;"},{"lineNumber":16,"author":{"gitId":"jianhandev"},"content":"import chatbot.exception.ChatbotException;"},{"lineNumber":17,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":18,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":19,"author":{"gitId":"jianhandev"},"content":"/**"},{"lineNumber":20,"author":{"gitId":"jianhandev"},"content":" * A storage class that contains methods for loading and saving tasks."},{"lineNumber":21,"author":{"gitId":"jianhandev"},"content":" */"},{"lineNumber":22,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":23,"author":{"gitId":"jianhandev"},"content":"public class Storage {"},{"lineNumber":24,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":25,"author":{"gitId":"jianhandev"},"content":"    private final Path location;"},{"lineNumber":26,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":27,"author":{"gitId":"jianhandev"},"content":"    public Storage(Path location) {"},{"lineNumber":28,"author":{"gitId":"jianhandev"},"content":"        this.location \u003d location;"},{"lineNumber":29,"author":{"gitId":"jianhandev"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":31,"author":{"gitId":"jianhandev"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"jianhandev"},"content":"     * Loads a list of tasks from a file on the disk. If no such file exists, create a new file."},{"lineNumber":33,"author":{"gitId":"jianhandev"},"content":"     * @return list of tasks saved to the disk"},{"lineNumber":34,"author":{"gitId":"jianhandev"},"content":"     * @throws ChatbotException if could not load file"},{"lineNumber":35,"author":{"gitId":"jianhandev"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"jianhandev"},"content":"    public ArrayList\u003cTask\u003e loadTasks() throws ChatbotException {"},{"lineNumber":37,"author":{"gitId":"jianhandev"},"content":"        try {"},{"lineNumber":38,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":39,"author":{"gitId":"jianhandev"},"content":"            assert location !\u003d null : \"File path is not supposed to be null.\";"},{"lineNumber":40,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":41,"author":{"gitId":"jianhandev"},"content":"            // File does not exist"},{"lineNumber":42,"author":{"gitId":"jianhandev"},"content":"            if (!Files.exists(location)) {"},{"lineNumber":43,"author":{"gitId":"jianhandev"},"content":"                Files.createFile(location);"},{"lineNumber":44,"author":{"gitId":"jianhandev"},"content":"                return new ArrayList\u003c\u003e();"},{"lineNumber":45,"author":{"gitId":"jianhandev"},"content":"            }"},{"lineNumber":46,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":47,"author":{"gitId":"jianhandev"},"content":"            // File exists, load data"},{"lineNumber":48,"author":{"gitId":"jianhandev"},"content":"            Stream\u003cTask\u003e taskStream \u003d Files.lines(location).map(line -\u003e {"},{"lineNumber":49,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":50,"author":{"gitId":"jianhandev"},"content":"                // split by separator"},{"lineNumber":51,"author":{"gitId":"jianhandev"},"content":"                String[] lineData \u003d line.split(\"\\\\|\");"},{"lineNumber":52,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":53,"author":{"gitId":"jianhandev"},"content":"                // trim and extract data"},{"lineNumber":54,"author":{"gitId":"jianhandev"},"content":"                boolean isDone \u003d lineData[1].trim().equals(\"1\");"},{"lineNumber":55,"author":{"gitId":"jianhandev"},"content":"                String type \u003d lineData[0].trim();"},{"lineNumber":56,"author":{"gitId":"jianhandev"},"content":"                String description \u003d lineData[2].trim();"},{"lineNumber":57,"author":{"gitId":"jianhandev"},"content":"                String timestamp \u003d lineData[3].trim();"},{"lineNumber":58,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":59,"author":{"gitId":"jianhandev"},"content":"                Task task \u003d null;"},{"lineNumber":60,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":61,"author":{"gitId":"jianhandev"},"content":"                switch (type) {"},{"lineNumber":62,"author":{"gitId":"jianhandev"},"content":"                case \"T\":"},{"lineNumber":63,"author":{"gitId":"jianhandev"},"content":"                    task \u003d new Todo(description, isDone);"},{"lineNumber":64,"author":{"gitId":"jianhandev"},"content":"                    break;"},{"lineNumber":65,"author":{"gitId":"jianhandev"},"content":"                case \"D\":"},{"lineNumber":66,"author":{"gitId":"jianhandev"},"content":"                    task \u003d new Deadline(description, isDone, LocalDate.parse(timestamp));"},{"lineNumber":67,"author":{"gitId":"jianhandev"},"content":"                    break;"},{"lineNumber":68,"author":{"gitId":"jianhandev"},"content":"                case \"E\":"},{"lineNumber":69,"author":{"gitId":"jianhandev"},"content":"                    task \u003d new Event(description, isDone, LocalDate.parse(timestamp));"},{"lineNumber":70,"author":{"gitId":"jianhandev"},"content":"                    break;"},{"lineNumber":71,"author":{"gitId":"jianhandev"},"content":"                default:"},{"lineNumber":72,"author":{"gitId":"jianhandev"},"content":"                    break;"},{"lineNumber":73,"author":{"gitId":"jianhandev"},"content":"                }"},{"lineNumber":74,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":75,"author":{"gitId":"jianhandev"},"content":"                return task;"},{"lineNumber":76,"author":{"gitId":"jianhandev"},"content":"            });"},{"lineNumber":77,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":78,"author":{"gitId":"jianhandev"},"content":"            ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":79,"author":{"gitId":"jianhandev"},"content":"            taskStream.forEach(taskList::add);"},{"lineNumber":80,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":81,"author":{"gitId":"jianhandev"},"content":"            return taskList;"},{"lineNumber":82,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":83,"author":{"gitId":"jianhandev"},"content":"        } catch (IOException e) {"},{"lineNumber":84,"author":{"gitId":"jianhandev"},"content":"            throw new ChatbotException(Message.MESSAGE_FAIL_LOAD);"},{"lineNumber":85,"author":{"gitId":"jianhandev"},"content":"        }"},{"lineNumber":86,"author":{"gitId":"jianhandev"},"content":"    }"},{"lineNumber":87,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":88,"author":{"gitId":"jianhandev"},"content":"    /**"},{"lineNumber":89,"author":{"gitId":"jianhandev"},"content":"     * Save the current tasks to disk."},{"lineNumber":90,"author":{"gitId":"jianhandev"},"content":"     * @param taskList list of tasks"},{"lineNumber":91,"author":{"gitId":"jianhandev"},"content":"     * @return true if save is successful"},{"lineNumber":92,"author":{"gitId":"jianhandev"},"content":"     * @throws ChatbotException if save is unsuccessful"},{"lineNumber":93,"author":{"gitId":"jianhandev"},"content":"     */"},{"lineNumber":94,"author":{"gitId":"jianhandev"},"content":"    public boolean saveTasks(ArrayList\u003cTask\u003e taskList) throws ChatbotException {"},{"lineNumber":95,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":96,"author":{"gitId":"jianhandev"},"content":"        Iterator\u003cTask\u003e iter \u003d taskList.iterator();"},{"lineNumber":97,"author":{"gitId":"jianhandev"},"content":"        String dataStr \u003d \"\";"},{"lineNumber":98,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":99,"author":{"gitId":"jianhandev"},"content":"        while (iter.hasNext()) {"},{"lineNumber":100,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":101,"author":{"gitId":"jianhandev"},"content":"            String separator \u003d \" | \";"},{"lineNumber":102,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":103,"author":{"gitId":"jianhandev"},"content":"            Task tsk \u003d iter.next();"},{"lineNumber":104,"author":{"gitId":"jianhandev"},"content":"            String timestamp \u003d tsk.getDate() \u003d\u003d null ? \"-\" : tsk.getDate().toString();"},{"lineNumber":105,"author":{"gitId":"jianhandev"},"content":"            String entry \u003d tsk.getType() + separator"},{"lineNumber":106,"author":{"gitId":"jianhandev"},"content":"                    + tsk.getStatus() + separator"},{"lineNumber":107,"author":{"gitId":"jianhandev"},"content":"                    + tsk.getDescription()"},{"lineNumber":108,"author":{"gitId":"jianhandev"},"content":"                    + separator"},{"lineNumber":109,"author":{"gitId":"jianhandev"},"content":"                    + timestamp"},{"lineNumber":110,"author":{"gitId":"jianhandev"},"content":"                    + System.lineSeparator();"},{"lineNumber":111,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":112,"author":{"gitId":"jianhandev"},"content":"            dataStr \u003d dataStr.concat(entry);"},{"lineNumber":113,"author":{"gitId":"jianhandev"},"content":"        }"},{"lineNumber":114,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":115,"author":{"gitId":"jianhandev"},"content":"        try {"},{"lineNumber":116,"author":{"gitId":"jianhandev"},"content":"            Files.write(location, dataStr.getBytes());"},{"lineNumber":117,"author":{"gitId":"jianhandev"},"content":"            System.out.print(\"Wrote to file...\");"},{"lineNumber":118,"author":{"gitId":"jianhandev"},"content":"        } catch (IOException e) {"},{"lineNumber":119,"author":{"gitId":"jianhandev"},"content":"            throw new ChatbotException(Message.MESSAGE_FAIL_SAVE);"},{"lineNumber":120,"author":{"gitId":"jianhandev"},"content":"        }"},{"lineNumber":121,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":122,"author":{"gitId":"jianhandev"},"content":"        return true;"},{"lineNumber":123,"author":{"gitId":"jianhandev"},"content":"    }"},{"lineNumber":124,"author":{"gitId":"jianhandev"},"content":"}"}],"authorContributionMap":{"jianhandev":124}},{"path":"src/main/java/chatbot/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jianhandev"},"content":"package chatbot.ui;"},{"lineNumber":2,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":3,"author":{"gitId":"jianhandev"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":5,"author":{"gitId":"jianhandev"},"content":"import chatbot.data.Task;"},{"lineNumber":6,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":7,"author":{"gitId":"jianhandev"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"jianhandev"},"content":" * A class representing the command line level user interface. Responsible for reading commands"},{"lineNumber":9,"author":{"gitId":"jianhandev"},"content":" * from the user and displaying data, success/error messages to the user."},{"lineNumber":10,"author":{"gitId":"jianhandev"},"content":" */"},{"lineNumber":11,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":12,"author":{"gitId":"jianhandev"},"content":"public class Ui {"},{"lineNumber":13,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":14,"author":{"gitId":"jianhandev"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"jianhandev"},"content":"     * Prints out a welcome message."},{"lineNumber":16,"author":{"gitId":"jianhandev"},"content":"     * @return welcome message"},{"lineNumber":17,"author":{"gitId":"jianhandev"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"jianhandev"},"content":"    public String getWelcomeMessage() {"},{"lineNumber":19,"author":{"gitId":"jianhandev"},"content":"        return \"Hey there, I\u0027m Fukuyama Masaharu the 24/7 Chatbot. What can I do for you (deep voice).\";"},{"lineNumber":20,"author":{"gitId":"jianhandev"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":22,"author":{"gitId":"jianhandev"},"content":"    public void exit() {"},{"lineNumber":23,"author":{"gitId":"jianhandev"},"content":"        System.exit(0);"},{"lineNumber":24,"author":{"gitId":"jianhandev"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":26,"author":{"gitId":"jianhandev"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"jianhandev"},"content":"     * Prints out a success message for adding a task."},{"lineNumber":28,"author":{"gitId":"jianhandev"},"content":"     * @param task task added"},{"lineNumber":29,"author":{"gitId":"jianhandev"},"content":"     * @param count current number of tasks in the task list"},{"lineNumber":30,"author":{"gitId":"jianhandev"},"content":"     * @return success message"},{"lineNumber":31,"author":{"gitId":"jianhandev"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"jianhandev"},"content":"    public String addSuccess(Task task, int count) {"},{"lineNumber":33,"author":{"gitId":"jianhandev"},"content":"        return \"Got it. I\u0027ve added this task:\\n\" + task + \"\\n\""},{"lineNumber":34,"author":{"gitId":"jianhandev"},"content":"                + String.format(\"Now you have %d task(s) in the list.\", count);"},{"lineNumber":35,"author":{"gitId":"jianhandev"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":37,"author":{"gitId":"jianhandev"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"jianhandev"},"content":"     * Prints out a success message for deleting a task."},{"lineNumber":39,"author":{"gitId":"jianhandev"},"content":"     * @param task task deleted"},{"lineNumber":40,"author":{"gitId":"jianhandev"},"content":"     * @param count current number of tasks in the task list"},{"lineNumber":41,"author":{"gitId":"jianhandev"},"content":"     * @return success message"},{"lineNumber":42,"author":{"gitId":"jianhandev"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"jianhandev"},"content":"    public String deleteSuccess(Task task, int count) {"},{"lineNumber":44,"author":{"gitId":"jianhandev"},"content":"        return \"Alright. I\u0027ve removed this task:\\n\" + task + \"\\n\""},{"lineNumber":45,"author":{"gitId":"jianhandev"},"content":"                + String.format(\"Now you have %d task(s) in the list.\", count);"},{"lineNumber":46,"author":{"gitId":"jianhandev"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":48,"author":{"gitId":"jianhandev"},"content":"    /**"},{"lineNumber":49,"author":{"gitId":"jianhandev"},"content":"     * Prints out a success message for marking a task as done."},{"lineNumber":50,"author":{"gitId":"jianhandev"},"content":"     * @param task task marked as done"},{"lineNumber":51,"author":{"gitId":"jianhandev"},"content":"     * @return success message"},{"lineNumber":52,"author":{"gitId":"jianhandev"},"content":"     */"},{"lineNumber":53,"author":{"gitId":"jianhandev"},"content":"    public String markDoneSuccess(Task task) {"},{"lineNumber":54,"author":{"gitId":"jianhandev"},"content":"        return \"Nice! I\u0027ve marked this task as done:\\n\" + task;"},{"lineNumber":55,"author":{"gitId":"jianhandev"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":57,"author":{"gitId":"jianhandev"},"content":"    /**"},{"lineNumber":58,"author":{"gitId":"jianhandev"},"content":"     * Prints out the given error message."},{"lineNumber":59,"author":{"gitId":"jianhandev"},"content":"     * @param message the error message"},{"lineNumber":60,"author":{"gitId":"jianhandev"},"content":"     * @return error message"},{"lineNumber":61,"author":{"gitId":"jianhandev"},"content":"     */"},{"lineNumber":62,"author":{"gitId":"jianhandev"},"content":"    public String errorMessage(String message) {"},{"lineNumber":63,"author":{"gitId":"jianhandev"},"content":"        return message;"},{"lineNumber":64,"author":{"gitId":"jianhandev"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":66,"author":{"gitId":"jianhandev"},"content":"    /**"},{"lineNumber":67,"author":{"gitId":"jianhandev"},"content":"     * Lists out the given tasks."},{"lineNumber":68,"author":{"gitId":"jianhandev"},"content":"     * @param ls list of tasks"},{"lineNumber":69,"author":{"gitId":"jianhandev"},"content":"     * @return list of tasks"},{"lineNumber":70,"author":{"gitId":"jianhandev"},"content":"     */"},{"lineNumber":71,"author":{"gitId":"jianhandev"},"content":"    public String list(ArrayList\u003cTask\u003e ls) {"},{"lineNumber":72,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":73,"author":{"gitId":"jianhandev"},"content":"        if (ls.size() \u003d\u003d 0) {"},{"lineNumber":74,"author":{"gitId":"jianhandev"},"content":"            return \"No tasks.\";"},{"lineNumber":75,"author":{"gitId":"jianhandev"},"content":"        }"},{"lineNumber":76,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":77,"author":{"gitId":"jianhandev"},"content":"        int index \u003d 1;"},{"lineNumber":78,"author":{"gitId":"jianhandev"},"content":"        String response \u003d \"\";"},{"lineNumber":79,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":80,"author":{"gitId":"jianhandev"},"content":"        for (Task l : ls) {"},{"lineNumber":81,"author":{"gitId":"jianhandev"},"content":"            response \u003d response.concat(index + \". \" + l + \"\\n\");"},{"lineNumber":82,"author":{"gitId":"jianhandev"},"content":"            index++;"},{"lineNumber":83,"author":{"gitId":"jianhandev"},"content":"        }"},{"lineNumber":84,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":85,"author":{"gitId":"jianhandev"},"content":"        return response;"},{"lineNumber":86,"author":{"gitId":"jianhandev"},"content":"    }"},{"lineNumber":87,"author":{"gitId":"jianhandev"},"content":"}"}],"authorContributionMap":{"jianhandev":87}},{"path":"src/main/java/chatbot/util/comparator/TaskByDateComparator.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jianhandev"},"content":"package chatbot.util.comparator;"},{"lineNumber":2,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":3,"author":{"gitId":"jianhandev"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"jianhandev"},"content":"import java.util.Comparator;"},{"lineNumber":5,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":6,"author":{"gitId":"jianhandev"},"content":"import chatbot.data.Task;"},{"lineNumber":7,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":8,"author":{"gitId":"jianhandev"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"jianhandev"},"content":" * Compares tasks by chronological order. Tasks which are not dated are preceded"},{"lineNumber":10,"author":{"gitId":"jianhandev"},"content":" * by those which contains a date."},{"lineNumber":11,"author":{"gitId":"jianhandev"},"content":" */"},{"lineNumber":12,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":13,"author":{"gitId":"jianhandev"},"content":"public class TaskByDateComparator implements Comparator\u003cTask\u003e {"},{"lineNumber":14,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":15,"author":{"gitId":"jianhandev"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"jianhandev"},"content":"     * Compares tasks such that more recent tasks comes before older tasks."},{"lineNumber":17,"author":{"gitId":"jianhandev"},"content":"     * @param t1 first task"},{"lineNumber":18,"author":{"gitId":"jianhandev"},"content":"     * @param t2 second task"},{"lineNumber":19,"author":{"gitId":"jianhandev"},"content":"     * @return -1 if d1 is before d2, 1 if d1 is after d2 and 0 if d1 equals d2"},{"lineNumber":20,"author":{"gitId":"jianhandev"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"jianhandev"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"jianhandev"},"content":"    public int compare(Task t1, Task t2) {"},{"lineNumber":23,"author":{"gitId":"jianhandev"},"content":"        LocalDate d1 \u003d t1.getDate();"},{"lineNumber":24,"author":{"gitId":"jianhandev"},"content":"        LocalDate d2 \u003d t2.getDate();"},{"lineNumber":25,"author":{"gitId":"jianhandev"},"content":"        return d1 \u003d\u003d null || d2 \u003d\u003d null || d1.isBefore(d2)"},{"lineNumber":26,"author":{"gitId":"jianhandev"},"content":"                ? -1"},{"lineNumber":27,"author":{"gitId":"jianhandev"},"content":"                : d1.isAfter(d2)"},{"lineNumber":28,"author":{"gitId":"jianhandev"},"content":"                    ? 1"},{"lineNumber":29,"author":{"gitId":"jianhandev"},"content":"                    : 0;"},{"lineNumber":30,"author":{"gitId":"jianhandev"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":32,"author":{"gitId":"jianhandev"},"content":"    @Override"},{"lineNumber":33,"author":{"gitId":"jianhandev"},"content":"    public Comparator\u003cTask\u003e reversed() {"},{"lineNumber":34,"author":{"gitId":"jianhandev"},"content":"        return new TaskByDateReverseComparator();"},{"lineNumber":35,"author":{"gitId":"jianhandev"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"jianhandev"},"content":"}"}],"authorContributionMap":{"jianhandev":36}},{"path":"src/main/java/chatbot/util/comparator/TaskByDateReverseComparator.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jianhandev"},"content":"package chatbot.util.comparator;"},{"lineNumber":2,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":3,"author":{"gitId":"jianhandev"},"content":"import java.util.Comparator;"},{"lineNumber":4,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":5,"author":{"gitId":"jianhandev"},"content":"import chatbot.data.Task;"},{"lineNumber":6,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":7,"author":{"gitId":"jianhandev"},"content":"public class TaskByDateReverseComparator implements Comparator\u003cTask\u003e {"},{"lineNumber":8,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":9,"author":{"gitId":"jianhandev"},"content":"    @Override"},{"lineNumber":10,"author":{"gitId":"jianhandev"},"content":"    public int compare(Task t1, Task t2) {"},{"lineNumber":11,"author":{"gitId":"jianhandev"},"content":"        return new TaskByDateComparator().compare(t2, t1);"},{"lineNumber":12,"author":{"gitId":"jianhandev"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"jianhandev"},"content":"}"}],"authorContributionMap":{"jianhandev":13}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"jianhandev"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":3,"author":{"gitId":"jianhandev"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"jianhandev"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"jianhandev"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":6,"author":{"gitId":"jianhandev"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":7,"author":{"gitId":"jianhandev"},"content":"\u003c?import javafx.scene.text.Font?\u003e"},{"lineNumber":8,"author":{"gitId":"jianhandev"},"content":"\u003c?import javafx.scene.shape.Circle?\u003e"},{"lineNumber":9,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":10,"author":{"gitId":"jianhandev"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\""},{"lineNumber":11,"author":{"gitId":"jianhandev"},"content":"         maxHeight\u003d\"1.7976931348623157E308\""},{"lineNumber":12,"author":{"gitId":"jianhandev"},"content":"         maxWidth\u003d\"1.7976931348623157E308\""},{"lineNumber":13,"author":{"gitId":"jianhandev"},"content":"         prefWidth\u003d\"400.0\""},{"lineNumber":14,"author":{"gitId":"jianhandev"},"content":"         type\u003d\"javafx.scene.layout.HBox\""},{"lineNumber":15,"author":{"gitId":"jianhandev"},"content":"         xmlns\u003d\"http://javafx.com/javafx/8.0.171\""},{"lineNumber":16,"author":{"gitId":"jianhandev"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":17,"author":{"gitId":"jianhandev"},"content":"    \u003cchildren\u003e"},{"lineNumber":18,"author":{"gitId":"jianhandev"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e"},{"lineNumber":19,"author":{"gitId":"jianhandev"},"content":"            \u003cfont\u003e"},{"lineNumber":20,"author":{"gitId":"jianhandev"},"content":"                \u003cFont name\u003d\"Helvetica\" size\u003d\"13.0\" /\u003e"},{"lineNumber":21,"author":{"gitId":"jianhandev"},"content":"            \u003c/font\u003e"},{"lineNumber":22,"author":{"gitId":"jianhandev"},"content":"            \u003cpadding\u003e"},{"lineNumber":23,"author":{"gitId":"jianhandev"},"content":"                \u003cInsets bottom\u003d\"5.0\" left\u003d\"15.0\" right\u003d\"15.0\" top\u003d\"5.0\" /\u003e"},{"lineNumber":24,"author":{"gitId":"jianhandev"},"content":"            \u003c/padding\u003e"},{"lineNumber":25,"author":{"gitId":"jianhandev"},"content":"        \u003c/Label\u003e"},{"lineNumber":26,"author":{"gitId":"jianhandev"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e"},{"lineNumber":27,"author":{"gitId":"jianhandev"},"content":"            \u003cclip\u003e"},{"lineNumber":28,"author":{"gitId":"jianhandev"},"content":"                \u003cCircle centerX\u003d\"48.0\" centerY\u003d\"48.0\" radius\u003d\"48.0\"/\u003e"},{"lineNumber":29,"author":{"gitId":"jianhandev"},"content":"            \u003c/clip\u003e"},{"lineNumber":30,"author":{"gitId":"jianhandev"},"content":"        \u003c/ImageView\u003e"},{"lineNumber":31,"author":{"gitId":"jianhandev"},"content":"    \u003c/children\u003e"},{"lineNumber":32,"author":{"gitId":"jianhandev"},"content":"    \u003cpadding\u003e"},{"lineNumber":33,"author":{"gitId":"jianhandev"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"15.0\" right\u003d\"15.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":34,"author":{"gitId":"jianhandev"},"content":"    \u003c/padding\u003e"},{"lineNumber":35,"author":{"gitId":"jianhandev"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"jianhandev":35}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"jianhandev"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":3,"author":{"gitId":"jianhandev"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":4,"author":{"gitId":"jianhandev"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":5,"author":{"gitId":"jianhandev"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":6,"author":{"gitId":"jianhandev"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":7,"author":{"gitId":"jianhandev"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":8,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":9,"author":{"gitId":"jianhandev"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\""},{"lineNumber":10,"author":{"gitId":"jianhandev"},"content":"            maxWidth\u003d\"-Infinity\""},{"lineNumber":11,"author":{"gitId":"jianhandev"},"content":"            minHeight\u003d\"-Infinity\""},{"lineNumber":12,"author":{"gitId":"jianhandev"},"content":"            minWidth\u003d\"-Infinity\""},{"lineNumber":13,"author":{"gitId":"jianhandev"},"content":"            prefHeight\u003d\"600.0\""},{"lineNumber":14,"author":{"gitId":"jianhandev"},"content":"            prefWidth\u003d\"400.0\""},{"lineNumber":15,"author":{"gitId":"jianhandev"},"content":"            xmlns\u003d\"http://javafx.com/javafx/8.0.171\""},{"lineNumber":16,"author":{"gitId":"jianhandev"},"content":"            xmlns:fx\u003d\"http://javafx.com/fxml/1\""},{"lineNumber":17,"author":{"gitId":"jianhandev"},"content":"            fx:controller\u003d\"chatbot.MainWindow\"\u003e"},{"lineNumber":18,"author":{"gitId":"jianhandev"},"content":"    \u003cchildren\u003e"},{"lineNumber":19,"author":{"gitId":"jianhandev"},"content":"        \u003cTextField fx:id\u003d\"userInput\""},{"lineNumber":20,"author":{"gitId":"jianhandev"},"content":"                   layoutY\u003d\"558.0\""},{"lineNumber":21,"author":{"gitId":"jianhandev"},"content":"                   onAction\u003d\"#handleUserInput\""},{"lineNumber":22,"author":{"gitId":"jianhandev"},"content":"                   prefHeight\u003d\"41.0\""},{"lineNumber":23,"author":{"gitId":"jianhandev"},"content":"                   prefWidth\u003d\"324.0\""},{"lineNumber":24,"author":{"gitId":"jianhandev"},"content":"                   AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"},{"lineNumber":25,"author":{"gitId":"jianhandev"},"content":"        \u003cButton fx:id\u003d\"sendButton\""},{"lineNumber":26,"author":{"gitId":"jianhandev"},"content":"                layoutX\u003d\"324.0\""},{"lineNumber":27,"author":{"gitId":"jianhandev"},"content":"                layoutY\u003d\"558.0\""},{"lineNumber":28,"author":{"gitId":"jianhandev"},"content":"                mnemonicParsing\u003d\"false\""},{"lineNumber":29,"author":{"gitId":"jianhandev"},"content":"                onAction\u003d\"#handleUserInput\""},{"lineNumber":30,"author":{"gitId":"jianhandev"},"content":"                prefHeight\u003d\"41.0\""},{"lineNumber":31,"author":{"gitId":"jianhandev"},"content":"                prefWidth\u003d\"76.0\""},{"lineNumber":32,"author":{"gitId":"jianhandev"},"content":"                text\u003d\"Send\" /\u003e"},{"lineNumber":33,"author":{"gitId":"jianhandev"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"},{"lineNumber":34,"author":{"gitId":"jianhandev"},"content":"            \u003ccontent\u003e"},{"lineNumber":35,"author":{"gitId":"jianhandev"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"},{"lineNumber":36,"author":{"gitId":"jianhandev"},"content":"            \u003c/content\u003e"},{"lineNumber":37,"author":{"gitId":"jianhandev"},"content":"        \u003c/ScrollPane\u003e"},{"lineNumber":38,"author":{"gitId":"jianhandev"},"content":"    \u003c/children\u003e"},{"lineNumber":39,"author":{"gitId":"jianhandev"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"jianhandev":39}},{"path":"src/test/java/chatbot/data/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jianhandev"},"content":"package chatbot.data;"},{"lineNumber":2,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":3,"author":{"gitId":"jianhandev"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":5,"author":{"gitId":"jianhandev"},"content":"import java.time.LocalDate;"},{"lineNumber":6,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":7,"author":{"gitId":"jianhandev"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":8,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":9,"author":{"gitId":"jianhandev"},"content":"public class DeadlineTest {"},{"lineNumber":10,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":11,"author":{"gitId":"jianhandev"},"content":"    private final Deadline dl \u003d Deadline.newDeadline("},{"lineNumber":12,"author":{"gitId":"jianhandev"},"content":"            \"return book\", LocalDate.parse(\"2020-08-25\"));"},{"lineNumber":13,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":14,"author":{"gitId":"jianhandev"},"content":"    @Test"},{"lineNumber":15,"author":{"gitId":"jianhandev"},"content":"    public void factoryMethod_validArguments_correctAttributes() {"},{"lineNumber":16,"author":{"gitId":"jianhandev"},"content":"        assertEquals(dl.getDescription(), \"return book\");"},{"lineNumber":17,"author":{"gitId":"jianhandev"},"content":"        assertEquals(dl.getDate().toString(), \"2020-08-25\");"},{"lineNumber":18,"author":{"gitId":"jianhandev"},"content":"        assertEquals(dl.getStatus(), \"0\");"},{"lineNumber":19,"author":{"gitId":"jianhandev"},"content":"        assertEquals(dl.getType(), \"D\");"},{"lineNumber":20,"author":{"gitId":"jianhandev"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":22,"author":{"gitId":"jianhandev"},"content":"    @Test"},{"lineNumber":23,"author":{"gitId":"jianhandev"},"content":"    public void markDone_correctStatus() {"},{"lineNumber":24,"author":{"gitId":"jianhandev"},"content":"        assertEquals(dl.markDone().getStatus(), \"1\");"},{"lineNumber":25,"author":{"gitId":"jianhandev"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":27,"author":{"gitId":"jianhandev"},"content":"}"}],"authorContributionMap":{"jianhandev":27}},{"path":"src/test/java/chatbot/data/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jianhandev"},"content":"package chatbot.data;"},{"lineNumber":2,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":3,"author":{"gitId":"jianhandev"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":5,"author":{"gitId":"jianhandev"},"content":"import java.time.LocalDate;"},{"lineNumber":6,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":7,"author":{"gitId":"jianhandev"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":8,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":9,"author":{"gitId":"jianhandev"},"content":"public class EventTest {"},{"lineNumber":10,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":11,"author":{"gitId":"jianhandev"},"content":"    private final Event event \u003d Event.newEvent(\"meeting\", LocalDate.parse(\"2020-08-25\"));"},{"lineNumber":12,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":13,"author":{"gitId":"jianhandev"},"content":"    @Test"},{"lineNumber":14,"author":{"gitId":"jianhandev"},"content":"    public void factoryMethod_validArguments_correctAttributes() {"},{"lineNumber":15,"author":{"gitId":"jianhandev"},"content":"        assertEquals(event.getDescription(), \"meeting\");"},{"lineNumber":16,"author":{"gitId":"jianhandev"},"content":"        assertEquals(event.getDate().toString(), \"2020-08-25\");"},{"lineNumber":17,"author":{"gitId":"jianhandev"},"content":"        assertEquals(event.getStatus(), \"0\");"},{"lineNumber":18,"author":{"gitId":"jianhandev"},"content":"        assertEquals(event.getType(), \"E\");"},{"lineNumber":19,"author":{"gitId":"jianhandev"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":21,"author":{"gitId":"jianhandev"},"content":"    @Test"},{"lineNumber":22,"author":{"gitId":"jianhandev"},"content":"    public void markDone_correctStatus() {"},{"lineNumber":23,"author":{"gitId":"jianhandev"},"content":"        assertEquals(event.markDone().getStatus(), \"1\");"},{"lineNumber":24,"author":{"gitId":"jianhandev"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"jianhandev"},"content":"}"}],"authorContributionMap":{"jianhandev":25}},{"path":"src/test/java/chatbot/data/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jianhandev"},"content":"package chatbot.data;"},{"lineNumber":2,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":3,"author":{"gitId":"jianhandev"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":5,"author":{"gitId":"jianhandev"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":7,"author":{"gitId":"jianhandev"},"content":"public class TodoTest {"},{"lineNumber":8,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":9,"author":{"gitId":"jianhandev"},"content":"    private final Todo todo \u003d Todo.newTodo(\"Read book\");"},{"lineNumber":10,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":11,"author":{"gitId":"jianhandev"},"content":"    @Test"},{"lineNumber":12,"author":{"gitId":"jianhandev"},"content":"    public void factoryMethod_validArguments_correctAttributes() {"},{"lineNumber":13,"author":{"gitId":"jianhandev"},"content":"        assertEquals(todo.getDescription(), \"Read book\");"},{"lineNumber":14,"author":{"gitId":"jianhandev"},"content":"        assertEquals(todo.getStatus(), \"0\");"},{"lineNumber":15,"author":{"gitId":"jianhandev"},"content":"        assertEquals(todo.getType(), \"T\");"},{"lineNumber":16,"author":{"gitId":"jianhandev"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":18,"author":{"gitId":"jianhandev"},"content":"    @Test"},{"lineNumber":19,"author":{"gitId":"jianhandev"},"content":"    public void markDone_correctStatus() {"},{"lineNumber":20,"author":{"gitId":"jianhandev"},"content":"        assertEquals(todo.markDone().getStatus(), \"1\");"},{"lineNumber":21,"author":{"gitId":"jianhandev"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"jianhandev"},"content":"}"}],"authorContributionMap":{"jianhandev":22}},{"path":"src/test/java/chatbot/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jianhandev"},"content":"package chatbot.parser;"},{"lineNumber":2,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":3,"author":{"gitId":"jianhandev"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"jianhandev"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;"},{"lineNumber":5,"author":{"gitId":"jianhandev"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;"},{"lineNumber":6,"author":{"gitId":"jianhandev"},"content":"import static org.junit.jupiter.api.Assertions.fail;"},{"lineNumber":7,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":8,"author":{"gitId":"jianhandev"},"content":"import java.time.LocalDate;"},{"lineNumber":9,"author":{"gitId":"jianhandev"},"content":"import java.util.Comparator;"},{"lineNumber":10,"author":{"gitId":"jianhandev"},"content":"import java.util.function.Predicate;"},{"lineNumber":11,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":12,"author":{"gitId":"jianhandev"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":13,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":14,"author":{"gitId":"jianhandev"},"content":"import chatbot.commands.AddCommand;"},{"lineNumber":15,"author":{"gitId":"jianhandev"},"content":"import chatbot.commands.Command;"},{"lineNumber":16,"author":{"gitId":"jianhandev"},"content":"import chatbot.commands.DeleteCommand;"},{"lineNumber":17,"author":{"gitId":"jianhandev"},"content":"import chatbot.commands.DoneCommand;"},{"lineNumber":18,"author":{"gitId":"jianhandev"},"content":"import chatbot.commands.FindCommand;"},{"lineNumber":19,"author":{"gitId":"jianhandev"},"content":"import chatbot.commands.SortCommand;"},{"lineNumber":20,"author":{"gitId":"jianhandev"},"content":"import chatbot.common.Message;"},{"lineNumber":21,"author":{"gitId":"jianhandev"},"content":"import chatbot.data.Deadline;"},{"lineNumber":22,"author":{"gitId":"jianhandev"},"content":"import chatbot.data.Task;"},{"lineNumber":23,"author":{"gitId":"jianhandev"},"content":"import chatbot.data.Todo;"},{"lineNumber":24,"author":{"gitId":"jianhandev"},"content":"import chatbot.exception.ChatbotException;"},{"lineNumber":25,"author":{"gitId":"jianhandev"},"content":"import chatbot.exception.ParseException;"},{"lineNumber":26,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":27,"author":{"gitId":"jianhandev"},"content":"public class ParserTest {"},{"lineNumber":28,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":29,"author":{"gitId":"jianhandev"},"content":"    @Test"},{"lineNumber":30,"author":{"gitId":"jianhandev"},"content":"    public void parseAddCommand_validCommand_success() throws ChatbotException {"},{"lineNumber":31,"author":{"gitId":"jianhandev"},"content":"        // Test add todo task"},{"lineNumber":32,"author":{"gitId":"jianhandev"},"content":"        Command addTodoCmd \u003d ChatbotParser.parseCommand(\"todo read book\");"},{"lineNumber":33,"author":{"gitId":"jianhandev"},"content":"        assertTrue(addTodoCmd instanceof AddCommand);"},{"lineNumber":34,"author":{"gitId":"jianhandev"},"content":"        assertEquals(((AddCommand) addTodoCmd).getToAdd().getDescription(), \"read book\");"},{"lineNumber":35,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":36,"author":{"gitId":"jianhandev"},"content":"        // Test add deadline"},{"lineNumber":37,"author":{"gitId":"jianhandev"},"content":"        Command addDeadlineCmd \u003d ChatbotParser.parseCommand(\"deadline return book /by 2020-10-10\");"},{"lineNumber":38,"author":{"gitId":"jianhandev"},"content":"        assertTrue(addDeadlineCmd instanceof AddCommand);"},{"lineNumber":39,"author":{"gitId":"jianhandev"},"content":"        assertEquals(((AddCommand) addDeadlineCmd).getToAdd().getDescription(), \"return book\");"},{"lineNumber":40,"author":{"gitId":"jianhandev"},"content":"        assertEquals(((AddCommand) addDeadlineCmd).getToAdd().getDate().toString(), \"2020-10-10\");"},{"lineNumber":41,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":42,"author":{"gitId":"jianhandev"},"content":"        // Test add event"},{"lineNumber":43,"author":{"gitId":"jianhandev"},"content":"        Command addEventCmd \u003d ChatbotParser.parseCommand(\"event attend wedding /at 2020-11-11\");"},{"lineNumber":44,"author":{"gitId":"jianhandev"},"content":"        assertTrue(addEventCmd instanceof AddCommand);"},{"lineNumber":45,"author":{"gitId":"jianhandev"},"content":"        assertEquals(((AddCommand) addEventCmd).getToAdd().getDescription(), \"attend wedding\");"},{"lineNumber":46,"author":{"gitId":"jianhandev"},"content":"        assertEquals(((AddCommand) addEventCmd).getToAdd().getDate().toString(), \"2020-11-11\");"},{"lineNumber":47,"author":{"gitId":"jianhandev"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":49,"author":{"gitId":"jianhandev"},"content":"    @Test"},{"lineNumber":50,"author":{"gitId":"jianhandev"},"content":"    public void parseAddCommand_emptyToDoDescription_exceptionThrown() {"},{"lineNumber":51,"author":{"gitId":"jianhandev"},"content":"        try {"},{"lineNumber":52,"author":{"gitId":"jianhandev"},"content":"            ChatbotParser.parseCommand(\"todo \");"},{"lineNumber":53,"author":{"gitId":"jianhandev"},"content":"        } catch (ChatbotException ex) {"},{"lineNumber":54,"author":{"gitId":"jianhandev"},"content":"            assertEquals(ex.getMessage(), Message.MESSAGE_EMPTY_TASK);"},{"lineNumber":55,"author":{"gitId":"jianhandev"},"content":"        }"},{"lineNumber":56,"author":{"gitId":"jianhandev"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":58,"author":{"gitId":"jianhandev"},"content":"    @Test"},{"lineNumber":59,"author":{"gitId":"jianhandev"},"content":"    public void parseAddCommand_emptyDeadlineDescription_exceptionThrown() {"},{"lineNumber":60,"author":{"gitId":"jianhandev"},"content":"        try {"},{"lineNumber":61,"author":{"gitId":"jianhandev"},"content":"            ChatbotParser.parseCommand(\"deadline /by 2020-20-20 \");"},{"lineNumber":62,"author":{"gitId":"jianhandev"},"content":"        } catch (ChatbotException ex) {"},{"lineNumber":63,"author":{"gitId":"jianhandev"},"content":"            assertEquals(ex.getMessage(), Message.MESSAGE_EMPTY_TASK);"},{"lineNumber":64,"author":{"gitId":"jianhandev"},"content":"        }"},{"lineNumber":65,"author":{"gitId":"jianhandev"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":67,"author":{"gitId":"jianhandev"},"content":"    @Test"},{"lineNumber":68,"author":{"gitId":"jianhandev"},"content":"    public void parseAddCommand_emptyEventDescription_exceptionThrown() {"},{"lineNumber":69,"author":{"gitId":"jianhandev"},"content":"        try {"},{"lineNumber":70,"author":{"gitId":"jianhandev"},"content":"            ChatbotParser.parseCommand(\"event /at 2020-20-20 \");"},{"lineNumber":71,"author":{"gitId":"jianhandev"},"content":"        } catch (ChatbotException ex) {"},{"lineNumber":72,"author":{"gitId":"jianhandev"},"content":"            assertEquals(ex.getMessage(), Message.MESSAGE_EMPTY_TASK);"},{"lineNumber":73,"author":{"gitId":"jianhandev"},"content":"        }"},{"lineNumber":74,"author":{"gitId":"jianhandev"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":76,"author":{"gitId":"jianhandev"},"content":"    @Test"},{"lineNumber":77,"author":{"gitId":"jianhandev"},"content":"    public void parseAddCommand_deadlineEmptyDate_exceptionThrown() {"},{"lineNumber":78,"author":{"gitId":"jianhandev"},"content":"        try {"},{"lineNumber":79,"author":{"gitId":"jianhandev"},"content":"            ChatbotParser.parseCommand(\"deadline return book /by \");"},{"lineNumber":80,"author":{"gitId":"jianhandev"},"content":"        } catch (ChatbotException ex) {"},{"lineNumber":81,"author":{"gitId":"jianhandev"},"content":"            assertEquals(ex.getMessage(), Message.MESSAGE_EMPTY_DATE);"},{"lineNumber":82,"author":{"gitId":"jianhandev"},"content":"        }"},{"lineNumber":83,"author":{"gitId":"jianhandev"},"content":"    }"},{"lineNumber":84,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":85,"author":{"gitId":"jianhandev"},"content":"    @Test"},{"lineNumber":86,"author":{"gitId":"jianhandev"},"content":"    public void parseAddCommand_eventEmptyDate_exceptionThrown() {"},{"lineNumber":87,"author":{"gitId":"jianhandev"},"content":"        try {"},{"lineNumber":88,"author":{"gitId":"jianhandev"},"content":"            ChatbotParser.parseCommand(\"event attend wedding /at \");"},{"lineNumber":89,"author":{"gitId":"jianhandev"},"content":"        } catch (ChatbotException ex) {"},{"lineNumber":90,"author":{"gitId":"jianhandev"},"content":"            assertEquals(ex.getMessage(), Message.MESSAGE_EMPTY_DATE);"},{"lineNumber":91,"author":{"gitId":"jianhandev"},"content":"        }"},{"lineNumber":92,"author":{"gitId":"jianhandev"},"content":"    }"},{"lineNumber":93,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":94,"author":{"gitId":"jianhandev"},"content":"    @Test"},{"lineNumber":95,"author":{"gitId":"jianhandev"},"content":"    public void parseDeleteCommand_validCommand_success() throws ChatbotException {"},{"lineNumber":96,"author":{"gitId":"jianhandev"},"content":"        Command deleteCmd1 \u003d ChatbotParser.parseCommand(\"delete 1\");"},{"lineNumber":97,"author":{"gitId":"jianhandev"},"content":"        assertTrue(deleteCmd1 instanceof DeleteCommand);"},{"lineNumber":98,"author":{"gitId":"jianhandev"},"content":"        assertEquals(((DeleteCommand) deleteCmd1).getIndex(), 1);"},{"lineNumber":99,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":100,"author":{"gitId":"jianhandev"},"content":"        Command deleteCmd2 \u003d ChatbotParser.parseCommand(\"delete 2\");"},{"lineNumber":101,"author":{"gitId":"jianhandev"},"content":"        assertTrue(deleteCmd2 instanceof DeleteCommand);"},{"lineNumber":102,"author":{"gitId":"jianhandev"},"content":"        assertEquals(((DeleteCommand) deleteCmd2).getIndex(), 2);"},{"lineNumber":103,"author":{"gitId":"jianhandev"},"content":"    }"},{"lineNumber":104,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":105,"author":{"gitId":"jianhandev"},"content":"    @Test"},{"lineNumber":106,"author":{"gitId":"jianhandev"},"content":"    public void parseDeleteCommand_invalidIndex_exceptionThrown() throws ChatbotException {"},{"lineNumber":107,"author":{"gitId":"jianhandev"},"content":"        try {"},{"lineNumber":108,"author":{"gitId":"jianhandev"},"content":"            ChatbotParser.parseCommand(\"delete -1\");"},{"lineNumber":109,"author":{"gitId":"jianhandev"},"content":"        } catch (ParseException ex) {"},{"lineNumber":110,"author":{"gitId":"jianhandev"},"content":"            assertEquals(ex.getMessage(), Message.MESSAGE_ITEM_DO_NOT_EXIST);"},{"lineNumber":111,"author":{"gitId":"jianhandev"},"content":"        }"},{"lineNumber":112,"author":{"gitId":"jianhandev"},"content":"    }"},{"lineNumber":113,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":114,"author":{"gitId":"jianhandev"},"content":"    @Test"},{"lineNumber":115,"author":{"gitId":"jianhandev"},"content":"    public void parseDoneCommand_validCommand_success() throws ChatbotException {"},{"lineNumber":116,"author":{"gitId":"jianhandev"},"content":"        Command doneCmd1 \u003d ChatbotParser.parseCommand(\"done 1\");"},{"lineNumber":117,"author":{"gitId":"jianhandev"},"content":"        assertTrue(doneCmd1 instanceof DoneCommand);"},{"lineNumber":118,"author":{"gitId":"jianhandev"},"content":"        assertEquals(((DoneCommand) doneCmd1).getIndex(), 1);"},{"lineNumber":119,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":120,"author":{"gitId":"jianhandev"},"content":"        Command doneCmd2 \u003d ChatbotParser.parseCommand(\"done 2\");"},{"lineNumber":121,"author":{"gitId":"jianhandev"},"content":"        assertTrue(doneCmd2 instanceof DoneCommand);"},{"lineNumber":122,"author":{"gitId":"jianhandev"},"content":"        assertEquals(((DoneCommand) doneCmd2).getIndex(), 2);"},{"lineNumber":123,"author":{"gitId":"jianhandev"},"content":"    }"},{"lineNumber":124,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":125,"author":{"gitId":"jianhandev"},"content":"    @Test"},{"lineNumber":126,"author":{"gitId":"jianhandev"},"content":"    public void parseDoneCommand_invalidIndex_exceptionThrown() throws ChatbotException {"},{"lineNumber":127,"author":{"gitId":"jianhandev"},"content":"        try {"},{"lineNumber":128,"author":{"gitId":"jianhandev"},"content":"            ChatbotParser.parseCommand(\"done -1\");"},{"lineNumber":129,"author":{"gitId":"jianhandev"},"content":"        } catch (ParseException ex) {"},{"lineNumber":130,"author":{"gitId":"jianhandev"},"content":"            assertEquals(ex.getMessage(), Message.MESSAGE_ITEM_DO_NOT_EXIST);"},{"lineNumber":131,"author":{"gitId":"jianhandev"},"content":"        }"},{"lineNumber":132,"author":{"gitId":"jianhandev"},"content":"    }"},{"lineNumber":133,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":134,"author":{"gitId":"jianhandev"},"content":"    @Test"},{"lineNumber":135,"author":{"gitId":"jianhandev"},"content":"    public void parseFindByKeywordCommand_validCommand_success() throws ChatbotException {"},{"lineNumber":136,"author":{"gitId":"jianhandev"},"content":"        Todo task1 \u003d Todo.newTodo(\"todo with the keyword submit\");"},{"lineNumber":137,"author":{"gitId":"jianhandev"},"content":"        Todo task2 \u003d Todo.newTodo(\"todo without the keyword\");"},{"lineNumber":138,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":139,"author":{"gitId":"jianhandev"},"content":"        Command findCmd \u003d ChatbotParser.parseCommand(\"find submit\");"},{"lineNumber":140,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":141,"author":{"gitId":"jianhandev"},"content":"        assertTrue(findCmd instanceof FindCommand);"},{"lineNumber":142,"author":{"gitId":"jianhandev"},"content":"        Predicate\u003cTask\u003e findByKeyWordPred \u003d ((FindCommand) findCmd).getPred();"},{"lineNumber":143,"author":{"gitId":"jianhandev"},"content":"        assertTrue(findByKeyWordPred.test(task1));"},{"lineNumber":144,"author":{"gitId":"jianhandev"},"content":"        assertFalse(findByKeyWordPred.test(task2));"},{"lineNumber":145,"author":{"gitId":"jianhandev"},"content":"    }"},{"lineNumber":146,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":147,"author":{"gitId":"jianhandev"},"content":"    @Test"},{"lineNumber":148,"author":{"gitId":"jianhandev"},"content":"    public void parseFindByDateCommand_validCommand_success() throws ChatbotException {"},{"lineNumber":149,"author":{"gitId":"jianhandev"},"content":"        Deadline dl1 \u003d Deadline.newDeadline(\"return book\", LocalDate.parse(\"2020-08-25\"));"},{"lineNumber":150,"author":{"gitId":"jianhandev"},"content":"        Deadline dl2 \u003d Deadline.newDeadline(\"return book\", LocalDate.parse(\"2020-01-25\"));"},{"lineNumber":151,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":152,"author":{"gitId":"jianhandev"},"content":"        Command findCmd \u003d ChatbotParser.parseCommand(\"date 2020-08-25\");"},{"lineNumber":153,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":154,"author":{"gitId":"jianhandev"},"content":"        assertTrue(findCmd instanceof FindCommand);"},{"lineNumber":155,"author":{"gitId":"jianhandev"},"content":"        Predicate\u003cTask\u003e findByDatePred \u003d ((FindCommand) findCmd).getPred();"},{"lineNumber":156,"author":{"gitId":"jianhandev"},"content":"        assertTrue(findByDatePred.test(dl1));"},{"lineNumber":157,"author":{"gitId":"jianhandev"},"content":"        assertFalse(findByDatePred.test(dl2));"},{"lineNumber":158,"author":{"gitId":"jianhandev"},"content":"    }"},{"lineNumber":159,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":160,"author":{"gitId":"jianhandev"},"content":"    @Test"},{"lineNumber":161,"author":{"gitId":"jianhandev"},"content":"    public void parseSortByDateCommand_validCommand_sucess() throws ChatbotException {"},{"lineNumber":162,"author":{"gitId":"jianhandev"},"content":"        Deadline laterTask \u003d Deadline.newDeadline(\"later event\", LocalDate.parse(\"2020-08-25\"));"},{"lineNumber":163,"author":{"gitId":"jianhandev"},"content":"        Deadline earlierTask \u003d Deadline.newDeadline(\"earlier event\", LocalDate.parse(\"2020-01-25\"));"},{"lineNumber":164,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":165,"author":{"gitId":"jianhandev"},"content":"        Command sortCmd \u003d ChatbotParser.parseCommand(\"sort /by latest\");"},{"lineNumber":166,"author":{"gitId":"jianhandev"},"content":"        assertTrue(sortCmd instanceof SortCommand);"},{"lineNumber":167,"author":{"gitId":"jianhandev"},"content":"        Comparator\u003cTask\u003e comparator \u003d ((SortCommand) sortCmd).getComparator();"},{"lineNumber":168,"author":{"gitId":"jianhandev"},"content":"        assertEquals(comparator.compare(laterTask, earlierTask), -1);"},{"lineNumber":169,"author":{"gitId":"jianhandev"},"content":"        assertEquals(comparator.compare(earlierTask, laterTask), 1);"},{"lineNumber":170,"author":{"gitId":"jianhandev"},"content":"    }"},{"lineNumber":171,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":172,"author":{"gitId":"jianhandev"},"content":"    @Test"},{"lineNumber":173,"author":{"gitId":"jianhandev"},"content":"    public void parseCommand_invalidCommand_exceptionThrown() {"},{"lineNumber":174,"author":{"gitId":"jianhandev"},"content":"        try {"},{"lineNumber":175,"author":{"gitId":"jianhandev"},"content":"            ChatbotParser.parseCommand(\"Some Unrecognized Command\");"},{"lineNumber":176,"author":{"gitId":"jianhandev"},"content":"            fail();"},{"lineNumber":177,"author":{"gitId":"jianhandev"},"content":"        } catch (ChatbotException e) {"},{"lineNumber":178,"author":{"gitId":"jianhandev"},"content":"            assertEquals(e.getMessage(), Message.MESSAGE_UNKNOWN_COMMAND);"},{"lineNumber":179,"author":{"gitId":"jianhandev"},"content":"        }"},{"lineNumber":180,"author":{"gitId":"jianhandev"},"content":"    }"},{"lineNumber":181,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":182,"author":{"gitId":"jianhandev"},"content":"}"}],"authorContributionMap":{"jianhandev":182}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jianhandev"},"content":"todo read book"},{"lineNumber":2,"author":{"gitId":"jianhandev"},"content":"deadline return book /by 2020-08-20"},{"lineNumber":3,"author":{"gitId":"jianhandev"},"content":"event project meeting /at 2020-08-20"},{"lineNumber":4,"author":{"gitId":"jianhandev"},"content":"list"},{"lineNumber":5,"author":{"gitId":"jianhandev"},"content":"done 1"},{"lineNumber":6,"author":{"gitId":"jianhandev"},"content":"done 2"},{"lineNumber":7,"author":{"gitId":"jianhandev"},"content":"done 3"},{"lineNumber":8,"author":{"gitId":"jianhandev"},"content":"list"},{"lineNumber":9,"author":{"gitId":"jianhandev"},"content":"delete 1"},{"lineNumber":10,"author":{"gitId":"jianhandev"},"content":"delete 2"},{"lineNumber":11,"author":{"gitId":"jianhandev"},"content":"delete 3"},{"lineNumber":12,"author":{"gitId":"jianhandev"},"content":"todo"},{"lineNumber":13,"author":{"gitId":"jianhandev"},"content":"deadline"},{"lineNumber":14,"author":{"gitId":"jianhandev"},"content":"event"},{"lineNumber":15,"author":{"gitId":"jianhandev"},"content":"blah"},{"lineNumber":16,"author":{"gitId":"jianhandev"},"content":"deadline homework submit"},{"lineNumber":17,"author":{"gitId":"jianhandev"},"content":"deadline homework submit .by"},{"lineNumber":18,"author":{"gitId":"jianhandev"},"content":"deadline homework submit /by invalid-format"},{"lineNumber":19,"author":{"gitId":"jianhandev"},"content":"event run"},{"lineNumber":20,"author":{"gitId":"jianhandev"},"content":"event run /at"},{"lineNumber":21,"author":{"gitId":"jianhandev"},"content":"event run /at invalid-format"},{"lineNumber":22,"author":{"gitId":"jianhandev"},"content":"date invalid-format"},{"lineNumber":23,"author":{"gitId":"jianhandev"},"content":"date 2020-08-20"},{"lineNumber":24,"author":{"gitId":"jianhandev"},"content":"done 1000"},{"lineNumber":25,"author":{"gitId":"jianhandev"},"content":"delete 1000"},{"lineNumber":26,"author":{"gitId":"jianhandev"},"content":"bye"}],"authorContributionMap":{"jianhandev":26}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"jianhandev"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\Chatbot.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"jianhandev"},"content":"java -classpath ..\\bin Chatbot \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"jianhandev":2,"-":19}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"jianhandev"},"content":"export LC_ALL\u003den_GB.UTF-8"},{"lineNumber":4,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist"},{"lineNumber":6,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]"},{"lineNumber":7,"author":{"gitId":"-"},"content":"then"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mkdir ../bin"},{"lineNumber":9,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"# delete output from previous run"},{"lineNumber":12,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]"},{"lineNumber":13,"author":{"gitId":"-"},"content":"then"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT"},{"lineNumber":15,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred"},{"lineNumber":18,"author":{"gitId":"jianhandev"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/Main.java"},{"lineNumber":19,"author":{"gitId":"-"},"content":"then"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\""},{"lineNumber":21,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":22,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":25,"author":{"gitId":"jianhandev"},"content":"java -classpath ../bin Main \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"-"},"content":"# convert to UNIX format"},{"lineNumber":28,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT"},{"lineNumber":29,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"# compare the output to the expected output"},{"lineNumber":32,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":33,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]"},{"lineNumber":34,"author":{"gitId":"-"},"content":"then"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\""},{"lineNumber":36,"author":{"gitId":"-"},"content":"    exit 0"},{"lineNumber":37,"author":{"gitId":"-"},"content":"else"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\""},{"lineNumber":39,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":40,"author":{"gitId":"-"},"content":"fi"}],"authorContributionMap":{"jianhandev":4,"-":36}}]
