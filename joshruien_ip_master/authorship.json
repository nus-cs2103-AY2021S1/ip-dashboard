[
  {
    "path": "src/main/java1/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joshruien"
        },
        "content": "import java1.exception.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joshruien"
        },
        "content": "import java1.parser.Parser;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joshruien"
        },
        "content": "import java1.tasklist.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joshruien"
        },
        "content": "import java1.storage.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joshruien"
        },
        "content": "import java1.ui.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joshruien"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joshruien"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joshruien"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joshruien"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joshruien"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    public final static String FILEPATH \u003d System.getProperty(\"user.dir\") + \"/data/duke.txt\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joshruien"
        },
        "content": "     * Creates and initialises a Duke."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joshruien"
        },
        "content": "     * @param filePath The path of duke.txt file"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joshruien"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            File f \u003d new File(filePath);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            File newFile \u003d new File(filePath);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                boolean success \u003d newFile.createNewFile();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            } catch (IOException ex) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                System.out.println(\"An error occurred, file could not be created.\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "joshruien"
        },
        "content": "     * Runs the Duke object after it has been initialised."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "joshruien"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        ui.greeting();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        while (sc.hasNext()) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            String input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            ui.showLine();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                String[] splitInput \u003d input.split(\" \");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                if (splitInput[0].equals(\"bye\")) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                    ui.sayBye();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                    return;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                    Parser.commandParser(input, tasks);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        sc.close();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        new Duke(FILEPATH).run();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "joshruien"
        },
        "content": "}"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "joshruien": 76
    }
  },
  {
    "path": "src/main/java1/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joshruien"
        },
        "content": "package java1.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joshruien"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joshruien"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joshruien": 7
    }
  },
  {
    "path": "src/main/java1/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joshruien"
        },
        "content": "package java1.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joshruien"
        },
        "content": "import java1.tasklist.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joshruien"
        },
        "content": "import java1.exception.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joshruien"
        },
        "content": "import java.time.DateTimeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joshruien"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joshruien"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joshruien"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joshruien"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joshruien"
        },
        "content": " * The Parser class is responsible for handling input commands."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joshruien"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joshruien"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joshruien"
        },
        "content": "     * Handles commands regarding tasks(ie. todos, deadlines, events)."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joshruien"
        },
        "content": "     * @param input The command input."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joshruien"
        },
        "content": "     * @param newList The current TaskList."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joshruien"
        },
        "content": "     * @throws DukeException if there is an error with the input or input is not given in the correct format."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joshruien"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    public static void commandTask(String input, TaskList newList) throws DukeException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        String[] splitString \u003d input.split(\" \",2);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        if (splitString[0].equals(\"todo\")) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            if (splitString.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                throw new DukeException(\"    ☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                String info \u003d splitString[1];"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                Todos newTodo \u003d new Todos(info);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                newList.addTask(newTodo);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        } else if (splitString[0].equals(\"deadline\")) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            if (splitString.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                throw new DukeException(\"    ☹ OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                String info \u003d splitString[1];"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                String[] information \u003d info.split(\" /by \");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                if (information.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                    throw new DukeException(\"    ☹ OOPS!!! Please specify the deadline time\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                    String description \u003d information[0];"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                    String by \u003d information[1];"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                        LocalDateTime dateTime \u003d LocalDateTime.parse(by, formatter);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                        Deadlines newDeadline \u003d new Deadlines(description, dateTime);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                        newList.addTask(newDeadline);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                    } catch (DateTimeException ex) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                        System.out.println(\"    Please specify the date and time in this format dd/MM/yyy HH:mm\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        } else if (splitString[0].equals(\"event\")) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            if (splitString.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                throw new DukeException(\"    ☹ OOPS!!! The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                String info \u003d splitString[1];"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                String[] information \u003d info.split(\" /at \");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                if (information.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                    throw new DukeException(\"    ☹ OOPS!!! Please state the event time\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                    String description \u003d information[0];"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                    String at \u003d information[1];"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                        LocalDateTime dateTime \u003d LocalDateTime.parse(at, formatter);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                        Events newEvent \u003d new Events(description, dateTime);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                        newList.addTask(newEvent);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                    } catch (DateTimeException ex) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                        System.out.println(\"    Please specify the date and time in this format dd/MM/yyy HH:mm\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            throw new DukeException(\"    ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "joshruien"
        },
        "content": "     * Handles all non-task related commands(commands that do not begin with a task type)."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "joshruien"
        },
        "content": "     * @param input The input command."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "joshruien"
        },
        "content": "     * @param newList The current TaskList."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "joshruien"
        },
        "content": "     * @throws DukeException if there is an error with the input or input is not given in the correct format."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "joshruien"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    public static void commandParser(String input, TaskList newList) throws DukeException {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        String[] splitInput \u003d input.split(\" \");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        if (splitInput[0].equals(\"list\")) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            newList.listTasks();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        } else if (splitInput[0].equals(\"done\")) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            if (splitInput.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                throw new DukeException(\"    ☹ OOPS!!! Please specify which task is done\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                String taskNumberString \u003d splitInput[1];"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                    int taskNumberInt \u003d Integer.parseInt(taskNumberString) - 1;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                    if (taskNumberInt + 1 \u003e newList.getLength()) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                        throw new DukeException(\"    ☹ OOPS!!! Your task number is out of bounds\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                        Task t \u003d newList.get(taskNumberInt);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                        t.markDone();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                        newList.updateDone();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                    throw new DukeException(\"    ☹ OOPS!!! Invalid task number.\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        } else if (splitInput[0].equals(\"delete\")) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            if (splitInput.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                throw new DukeException(\"    ☹ OOPS!!! Please specify which task you want to delete\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                String taskNumberString \u003d splitInput[1];"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                    int taskNumberInt \u003d Integer.parseInt(taskNumberString) - 1;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                    if (taskNumberInt + 1 \u003e newList.getLength()) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                        throw new DukeException(\"    ☹ OOPS!!! Your task number is out of bounds\");"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                        newList.removeTask(taskNumberInt);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                    throw new DukeException(\"    ☹ OOPS!!! Invalid task number.\");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        } else if (splitInput[0].equals(\"find\")) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            if (splitInput.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                throw new DukeException(\"    ☹ OOPS!!! Please specify the keyword to find\");"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                String[] findArray \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                String keywords \u003d findArray[1];"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                ArrayList\u003cTask\u003e temp \u003d newList.findTasks(keywords);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                System.out.println(\"     Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                for (int i \u003d 0; i \u003c temp.size(); i++) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                    int listNumber \u003d i + 1;"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                    Task currentTask \u003d temp.get(i);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                    System.out.println(\"     \" + listNumber + \".\" + currentTask.toString());"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                commandTask(input,newList);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "joshruien"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 2,
      "joshruien": 160
    }
  },
  {
    "path": "src/main/java1/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joshruien"
        },
        "content": "package java1.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joshruien"
        },
        "content": "import java1.tasklist.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joshruien"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joshruien"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joshruien"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joshruien"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joshruien"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joshruien"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joshruien"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joshruien"
        },
        "content": " * The Storage class can (i) load the data from duke.txt, (ii) save a task onto duke.txt,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joshruien"
        },
        "content": " *  (iii) rewrite duke.txt when a task is removed or updated."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joshruien"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joshruien"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    protected File f;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joshruien"
        },
        "content": "     * Creates and initialises a Storage object"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joshruien"
        },
        "content": "     * @param filePath the path of the file to be read"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joshruien"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        this.f \u003d new File(filePath);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joshruien"
        },
        "content": "     * Loads the data on duke.txt."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joshruien"
        },
        "content": "     * @return An ArrayList of tasks from duke.txt."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joshruien"
        },
        "content": "     * @throws FileNotFoundException if there is no file found to load from."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joshruien"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws FileNotFoundException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        Scanner s \u003d new Scanner(this.f);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        while (s.hasNext()) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            String[] taskInfo \u003d s.nextLine().split(\",\", 4);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            if (taskInfo[0].equals(\"T\")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                if (taskInfo[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                    Todos todo \u003d new Todos(taskInfo[2], true);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                    list.add(todo);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                    Todos todo \u003d new Todos(taskInfo[2], false);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                    list.add(todo);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            } else if (taskInfo[0].equals(\"D\")) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                if (taskInfo[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                    Deadlines deadline \u003d new Deadlines(taskInfo[2], taskInfo[3], true);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                    list.add(deadline);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                    Deadlines deadline \u003d new Deadlines(taskInfo[2], taskInfo[3], false);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                    list.add(deadline);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                if (taskInfo[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                    Events event \u003d new Events(taskInfo[2], taskInfo[3], true);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                    list.add(event);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                    Events event \u003d new Events(taskInfo[2], taskInfo[3], false);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                    list.add(event);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "joshruien"
        },
        "content": "     * Saves a task onto duke.txt"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "joshruien"
        },
        "content": "     * @param path The file path of duke.txt."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "joshruien"
        },
        "content": "     * @param todoList The current task ArrayList"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "joshruien"
        },
        "content": "     * @param task The task to be saved"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "joshruien"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    public static void saveTask(String path, ArrayList\u003cTask\u003e todoList, Task task) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            String s \u003d formatString(task);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            if (todoList.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                appendToFile(path, s);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                appendToFile(path, System.lineSeparator() + s);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            System.out.println(\"exception\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "joshruien"
        },
        "content": "     * Rewrites duke.txt with the tasks from the todoList"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "joshruien"
        },
        "content": "     * @param path The file path of duke.txt"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "joshruien"
        },
        "content": "     * @param todoList The current task ArrayList"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "joshruien"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    public static void rewriteList(String path, ArrayList\u003cTask\u003e todoList ) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            String allTasks \u003d formatString(todoList.get(0));"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            for (int i \u003d 1; i \u003c todoList.size(); i++) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                Task t \u003d todoList.get(i);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                String s \u003d formatString(t);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                allTasks \u003d allTasks + \"\\n\" + s;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            writeToFile(path, allTasks);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            System.out.println(\"exception\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    private static String formatString(Task task) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        if (task instanceof Todos) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            if (task.checkDone()) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                String s \u003d \"T,1,\" + task.getDescription();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                return s;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                String s \u003d \"T,0,\" + task.getDescription();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                return s;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        } else if (task instanceof Deadlines) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            if (task.checkDone()) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                String s \u003d \"D,1,\" + task.getDescription() + \",\" + ((Deadlines) task).getDeadline();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                return s;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                String s \u003d \"D,0,\" + task.getDescription() + \",\" + ((Deadlines) task).getDeadline();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                return s;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            if (task.checkDone()) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                String s \u003d \"E,1,\" + task.getDescription() + \",\" + ((Events) task).checkAt();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                return s;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                String s \u003d \"E,0,\" + task.getDescription() + \",\" + ((Events) task).checkAt();"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                return s;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    private static void appendToFile(String filePath, String textToAppend) throws IOException {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath, true); // create a FileWriter in append mode"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        fw.write(textToAppend);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    private static void writeToFile(String filePath, String textToAdd) throws IOException {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        fw.write(textToAdd);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "joshruien"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joshruien": 146
    }
  },
  {
    "path": "src/main/java1/tasklist/Deadlines.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joshruien"
        },
        "content": "package java1.tasklist;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joshruien"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joshruien"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joshruien"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joshruien"
        },
        "content": " * Encapsulates a Deadlines object in Duke."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joshruien"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joshruien"
        },
        "content": "public class Deadlines extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    protected LocalDateTime deadline;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    public Deadlines(String task, LocalDateTime deadline) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        super(task);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    public Deadlines(String task, String deadline, boolean isDone) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        super(task,isDone);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        LocalDateTime dateTime \u003d LocalDateTime.parse(deadline, DateTimeFormatter.ISO_LOCAL_DATE_TIME);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        this.deadline \u003d dateTime;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    public LocalDateTime getDeadline() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        return this.deadline;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        String dateTime \u003d deadline.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy HH:mm\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + dateTime + \")\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joshruien"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joshruien": 33
    }
  },
  {
    "path": "src/main/java1/tasklist/Events.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joshruien"
        },
        "content": "package java1.tasklist;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joshruien"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joshruien"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joshruien"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joshruien"
        },
        "content": " * Encapsulates an Events object in Duke."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joshruien"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joshruien"
        },
        "content": "public class Events extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    protected LocalDateTime at;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    public Events(String task, LocalDateTime at) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        super(task);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    public Events(String task, String at, boolean isDone) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        super(task, isDone);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        LocalDateTime dateTime \u003d LocalDateTime.parse(at, DateTimeFormatter.ISO_LOCAL_DATE_TIME);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        this.at \u003d dateTime;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    public LocalDateTime checkAt() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        return this.at;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        String dateTime \u003d at.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy HH:mm\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + dateTime + \")\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joshruien"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joshruien": 32
    }
  },
  {
    "path": "src/main/java1/tasklist/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joshruien"
        },
        "content": "package java1.tasklist;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joshruien"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joshruien"
        },
        "content": " * Encapsulates a Task object in the Duke."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joshruien"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joshruien"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    public Task(String description, boolean isDone) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joshruien"
        },
        "content": "     * Gets the status icon, if status is done a tick symbol is returned, else a cross symbol is returned."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joshruien"
        },
        "content": "     * @return A string object of the status symbol."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joshruien"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        return (isDone ? \"[\" + \"\\u2713\" + \"]\" : \"[\" + \"\\u2718\" + \"]\"); //return tick or X symbols"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    public boolean checkDone() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        return this.isDone;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "joshruien"
        },
        "content": "     * Marks the task as done."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "joshruien"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    public void markDone() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        if (this.isDone \u003d\u003d false) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            this.isDone \u003d true;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            System.out.println(\"     Nice! I\u0027ve marked this task as done: \" + \"\\n\" + \"       \" + this.toString());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            System.out.println(\"    Task is already done.\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        return this.getStatusIcon() + \" \" + this.description;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "joshruien"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joshruien": 53
    }
  },
  {
    "path": "src/main/java1/tasklist/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joshruien"
        },
        "content": "package java1.tasklist;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joshruien"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joshruien"
        },
        "content": "import java1.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joshruien"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joshruien"
        },
        "content": " * The TaskList class encapsulates information regarding the list of tasks in Duke."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joshruien"
        },
        "content": " * This class can (i) add tasks to the list, (ii) remove tasks from the list, (iii)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joshruien"
        },
        "content": " * list all tasks in Duke, (iv) update the status of a task as done."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joshruien"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joshruien"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    private ArrayList\u003cTask\u003e todoList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        this.todoList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e allTask) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        this.todoList \u003d allTask;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joshruien"
        },
        "content": "     * Adds a task to the list and store it in storage."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joshruien"
        },
        "content": "     * @param task The task to be added."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joshruien"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        String path \u003d System.getProperty(\"user.dir\") + \"/data/duke.txt\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        Storage.saveTask(path, this.todoList, task);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        this.todoList.add(task);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        System.out.println(\"     Got it. I\u0027ve added this task:\" + \"\\n\" + \"       \" + task.toString());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        System.out.println(\"     Now you have \" + this.todoList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    public Task get(int index) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        return this.todoList.get(index);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    public int getLength() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        return this.todoList.size();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "joshruien"
        },
        "content": "     * Removes a task from the list and update storage."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "joshruien"
        },
        "content": "     * @param index The task number to be removed."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "joshruien"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    public void removeTask(int index) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        String path \u003d System.getProperty(\"user.dir\") + \"/data/duke.txt\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        Task removedTask \u003d this.todoList.get(index);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        this.todoList.remove(index);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        System.out.println(\"     Noted. I\u0027ve removed this task:\" + \"\\n\" + \"      \" + removedTask.toString());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        System.out.println(\"     Now you have \" + this.todoList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        Storage.rewriteList(path, this.todoList);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "joshruien"
        },
        "content": "     * Lists all the tasks in the TaskList."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "joshruien"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    public void listTasks() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        System.out.println(\"     Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        for (int i \u003d 0; i \u003c this.todoList.size(); i++) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            int listNumber \u003d i + 1;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            Task currentTask \u003d todoList.get(i);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            System.out.println(\"     \" + listNumber + \".\" + currentTask.toString());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    public ArrayList\u003cTask\u003e findTasks(String keyword) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        ArrayList\u003cTask\u003e temp \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        for (int i  \u003d 0; i \u003c this.todoList.size(); i++) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            if(this.todoList.get(i).getDescription().contains(keyword)) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                temp.add(this.todoList.get(i));"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        return temp;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "joshruien"
        },
        "content": "     * Updates a task as done and update storage."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "joshruien"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    public void updateDone() {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        String path \u003d System.getProperty(\"user.dir\") + \"/data/duke.txt\";"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        Storage.rewriteList(path, this.todoList);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "joshruien"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joshruien": 90
    }
  },
  {
    "path": "src/main/java1/tasklist/Todos.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joshruien"
        },
        "content": "package java1.tasklist;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joshruien"
        },
        "content": "public class Todos extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    public Todos(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    public Todos(String description, boolean isDone) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        super(description,isDone);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joshruien"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joshruien": 18
    }
  },
  {
    "path": "src/main/java1/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joshruien"
        },
        "content": "package java1.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joshruien"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    public Ui() { };"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    public static void greeting() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        String border \u003d \"    \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        System.out.println(border);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        System.out.println(\"    Hello! I\u0027m Duke\" + \"\\n\" + \"    What can I do for you?\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        System.out.println(border);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        String line \u003d \"    ____________________________________________________________\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    public void sayBye() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        System.out.println(\"     Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joshruien"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joshruien": 26
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joshruien"
        },
        "content": "import java1.tasklist.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joshruien"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joshruien"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joshruien"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joshruien"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joshruien"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    public void dummyTest(){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    public void todoTest() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        assertEquals(\"[T][✘] buy groceries\", new Todos(\"buy groceries\").toString());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    public void eventTest() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        String by \u003d \"12/09/2020 20:00\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        LocalDateTime dateTime \u003d LocalDateTime.parse(by, formatter);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        Events e \u003d new Events(\"concert\", dateTime);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        assertEquals(\"[E][✘] concert (at: 12 Sep 2020 20:00)\", e.toString() );"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joshruien"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joshruien": 28
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joshruien"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joshruien"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joshruien"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joshruien"
        },
        "content": "event project meeting /at 30/08/2020 20:00"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joshruien"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joshruien"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "joshruien": 6
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joshruien"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java1/Duke.java ../src/main/java1/*/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joshruien"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "-": 36,
      "joshruien": 2
    }
  }
]
