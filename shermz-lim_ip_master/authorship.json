[
  {
    "path": "src/main/java/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": " * Represents a command to add a task to the task list."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    private final CommandType addType;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    private final String description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    private final String datetime;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     * Initializes the add command."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     * @param addType The type of task to add."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     * @param description The description of the task."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     * @param datetime The datetime for the task if any."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    public AddCommand(CommandType addType, String description, String datetime) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        this.addType \u003d addType;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        this.datetime \u003d datetime;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     * Adds the task to the task list provided and shows the output to the user."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     * Saves the new task list to the disk as well."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        if (addType \u003d\u003d CommandType.TODO) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "            if (description.equals(\"\")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "                throw new DukeException(\"The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "            task \u003d new Todo(description);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        } else if (addType \u003d\u003d CommandType.DEADLINE) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "            if (description.equals(\"\")) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "                throw new DukeException(\"The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "            } else if (datetime.equals(\"\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "                throw new DukeException(\"The date of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "                task \u003d new Deadline(description, datetime);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        } else if (addType \u003d\u003d CommandType.EVENT) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "            if (description.equals(\"\")) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "                throw new DukeException(\"The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "            } else if (datetime.equals(\"\")) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "                throw new DukeException(\"The date of an event cannot be empty.\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "                task \u003d new Event(description, datetime);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "            throw new DukeException(\"Unknown add command.\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        tasks.addTask(task);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        ui.showTaskAdded(task, tasks.size());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        storage.saveTaskList(tasks);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shermz-lim": 56
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": " * Represents an executable command that can be given by the user."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     * @param tasks The current task list."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     * @param ui UI class for user interaction."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     * @param storage Storage class for saving task list."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     * @throws DukeException Throws DukeException if there is an error executing the command."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     * Returns whether the program should be exited after executing this command."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     * @return Whether the program should be exited."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shermz-lim": 22
    }
  },
  {
    "path": "src/main/java/CommandType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": " * Represents the different types of command that the user can input"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "public enum CommandType {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    BYE(\"bye\"),"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    LIST(\"list\"),"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    DONE(\"done\"),"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    DELETE(\"delete\"),"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    TODO(\"todo\"),"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    DEADLINE(\"deadline\"),"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    EVENT(\"event\"),"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    FIND(\"find\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    private final String name;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    CommandType(String name) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        return this.name;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shermz-lim": 22
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": " * Represents a deadline that the user has."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    private String by;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    private LocalDate byDate;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    private LocalDateTime byDateTime;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     * Initializes a deadline with its description, and when it will be."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     * @param description The description of the deadline."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     * @param by When the deadline will be."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        this.setByDateAndTime();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     * Initializes a deadline with its description, whether it is done, and when it will be."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     * @param description The description of the deadline."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     * @param isDone Whether the deadline is done."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     * @param by When the event will be."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    public Deadline(String description, boolean isDone, String by) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        this.setByDateAndTime();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     * Sets the date or datetime object of when this deadline will be upon initializing it, based on the String \"by\" input."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     * If the input cannot be parsed, no action will be done."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     * To set just the date, the format of \"by\" has to be \"YYYY-MM-DD\" e.g. \"2019-03-04\"."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     * To set both the datetime and date, the format of \"by\" has to be \"YYYY-MM-DD\u0027T\u0027HH:mm:ss\" e.g. \"2019-03-04T00:05:02\"."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    private void setByDateAndTime() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "            this.byDateTime \u003d LocalDateTime.parse(this.by);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "            this.byDate \u003d this.byDateTime.toLocalDate();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "                this.byDate \u003d LocalDate.parse(this.by);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "            } catch (DateTimeParseException ignored) { }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    public String getBy() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        return this.by;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    private String getFormattedBy() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        if (this.byDateTime !\u003d null) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "            return this.byDateTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy, HH:mm:ss a\"));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        } else if (this.byDate !\u003d null) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "            return this.byDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "            return this.by;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     * Returns whether the deadline is happening on a particular date."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     * @param date The date."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     * @return Whether the deadline is due by the date."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    public boolean isOnDate(LocalDate date) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        if (this.byDate !\u003d null) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "            return date.compareTo(this.byDate) \u003d\u003d 0;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + getFormattedBy() + \")\";"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shermz-lim": 85
    }
  },
  {
    "path": "src/main/java/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": " * Represents a command to delete a task from the task list."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    private final int index;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     * Initializes delete command with the index the user inputted."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     * @param index The index of the task which the user wants to delete."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    public DeleteCommand(int index) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     * Deletes the task from the task list and shows the task deleted to the user."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     * Saves the new task list to the disk as well."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        ui.showTaskDeleted(tasks.deleteTask(index - 1), tasks.size());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        storage.saveTaskList(tasks);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shermz-lim": 24
    }
  },
  {
    "path": "src/main/java/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": " * Represents a command to mark a task as done."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    private final int index;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     * Initializes done command with the index the user inputted."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     * @param index The index of the task which the user wants to mark as done."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    public DoneCommand(int index) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     * Marks the task from the task list as done and shows the task to the user."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     * Saves the new task list to the disk as well."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        ui.showTaskDone(tasks.markTaskDone(index - 1));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        storage.saveTaskList(tasks);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shermz-lim": 24
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": " * Represents the chat bot program"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     * Initializes Duke with the file path of the data file to be used for storage"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     * Also initializes the Ui and TaskList."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     * @param filePath The file path to the data file"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        this.storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "            this.tasks \u003d new TaskList(this.storage.load());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "            this.tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        new Duke(\"data/duke.txt\").run();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     * Runs the chat bot program continuously until the user gives the exit program command."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        boolean exitProgram \u003d false;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        while (!exitProgram) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "                ui.showBlankLine();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "                exitProgram \u003d c.isExit();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "            } catch (DukeException err) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "                ui.showError(err.getMessage());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shermz-lim": 47,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": " * Represents exceptions for the Duke program"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    public DukeException(String errorMessage) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        return \"OOPS!!! \" + super.toString();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shermz-lim": 14
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": " * Represents an event that the user has."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    private String at;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    private LocalDate atDate;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    private LocalDateTime atDateTime;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     * Initializes an event with its description, and when it will be."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     * @param description The description of the event."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     * @param at When the event will be at."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        this.setAtDateAndTime();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     * Initializes an event with its description, whether it is done, and when it will be."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     * @param description The description of the event."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     * @param isDone Whether the event is done."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     * @param at When the event will be at."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    public Event(String description, boolean isDone, String at) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        this.setAtDateAndTime();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     * Sets the date or datetime object of when this event will be upon initializing it, based on the String \"at\" input."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     * If the input cannot be parsed, no action will be done."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     * To set just the date, the format of \"at\" has to be \"YYYY-MM-DD\" e.g. \"2019-03-04\"."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     * To set both the datetime and date, the format of \"at\" has to be \"YYYY-MM-DD\u0027T\u0027HH:mm:ss\" e.g. \"2019-03-04T00:05:02\"."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    private void setAtDateAndTime() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "            this.atDateTime \u003d LocalDateTime.parse(this.at);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "            this.atDate \u003d this.atDateTime.toLocalDate();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "                this.atDate \u003d LocalDate.parse(this.at);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "            } catch (DateTimeParseException ignored) { }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    public String getAt() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        return this.at;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    private String getFormattedAt() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        if (this.atDateTime !\u003d null) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "            return this.atDateTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy, HH:mm:ss a\"));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        } else if (this.atDate !\u003d null) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "            return this.atDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "            return this.at;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     * Returns whether this event is happening on a particular date."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     * @param date The date."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     * @return Whether this event is on the date input."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    public boolean isOnDate(LocalDate date) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        if (this.atDate !\u003d null) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "            return date.compareTo(this.atDate) \u003d\u003d 0;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + this.getFormattedAt() + \")\";"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shermz-lim": 85
    }
  },
  {
    "path": "src/main/java/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": " * Represents a command to exit from the program."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     * Shows the goodbye message to the user."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        ui.showGoodbye();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     * Returns that this is an exit program command."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shermz-lim": 21
    }
  },
  {
    "path": "src/main/java/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": " * Represents a command to find all the tasks with a particular keyword."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    private final String keyword;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     * Initializes the command with the keyword."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     * @param keyword The keyword to be used to filter the tasks that have a matching description."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    public FindCommand(String keyword) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     * Filters the task list with the keyword and show it to the user."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        ui.showTasksFound(tasks.getListOfTasks(this.keyword));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shermz-lim": 22
    }
  },
  {
    "path": "src/main/java/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": " * Represents a command to list tasks."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    private LocalDate date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    public ListCommand() {}"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    public ListCommand(LocalDate date) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     * Lists tasks that can be filtered by the date if initialized with it."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        if (date !\u003d null) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "            ui.showTasksOnDate(tasks.getListOfTasks(date), date);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "            ui.showAllTasks(tasks.getListOfTasks());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shermz-lim": 26
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": " * Handles the parsing of user input to identify the command given by user."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     * Parses the string input provided by the user and returns the executable Command object."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     * @param fullCommand The string input provided by the user."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     * @return The Command identified from the user\u0027s input."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     * @throws DukeException Throws DukeException when the command cannot be identified, or is not valid."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    public static Command parse(String fullCommand) throws DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        String[] commandArgs \u003d fullCommand.split(\" \");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        if (commandArgs[0].equals(CommandType.BYE.getName())) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        } else if (commandArgs[0].equals(CommandType.LIST.getName())) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "                return new ListCommand(LocalDate.parse(commandArgs[1]));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException | DateTimeParseException e) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "                return new ListCommand();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "            }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        } else if (commandArgs[0].equals(CommandType.DONE.getName())) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "                return new DoneCommand(Integer.parseInt(commandArgs[1]));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "            } catch (NumberFormatException | ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "                throw new DukeException(\"The number of the task to be marked as done has to be provided.\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        } else if (commandArgs[0].equals(CommandType.DELETE.getName())) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "                return new DeleteCommand(Integer.parseInt(commandArgs[1]));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "            } catch (NumberFormatException | ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "                throw new DukeException(\"The number of the task to be deleted has to be provided.\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        } else if (commandArgs[0].equals(CommandType.TODO.getName())) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "            String description \u003d Parser.reassembleString(commandArgs, 1, commandArgs.length);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "            return new AddCommand(CommandType.TODO, description, null);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        } else if (commandArgs[0].equals(CommandType.DEADLINE.getName())) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "            int byIdx \u003d Arrays.asList(commandArgs).indexOf(\"/by\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "            if (byIdx \u003c 0) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "                throw new DukeException(\"The deadline date has to be provided to the deadline task.\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "            String description \u003d Parser.reassembleString(commandArgs, 1, byIdx);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "            String by \u003d Parser.reassembleString(commandArgs, byIdx + 1, commandArgs.length);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "            return new AddCommand(CommandType.DEADLINE, description, by);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        } else if (commandArgs[0].equals(CommandType.EVENT.getName())) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "            int atIdx \u003d Arrays.asList(commandArgs).indexOf(\"/at\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "            if (atIdx \u003c 0) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "                throw new DukeException(\"The event date has to be provided to the event task.\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "            String description \u003d Parser.reassembleString(commandArgs, 1, atIdx);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "            String at \u003d Parser.reassembleString(commandArgs, atIdx + 1, commandArgs.length);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "            return new AddCommand(CommandType.EVENT, description, at);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        } else if (commandArgs[0].equals(CommandType.FIND.getName())) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "            String keyword \u003d Parser.reassembleString(commandArgs, 1, commandArgs.length);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "            if (keyword.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "                throw new DukeException(\"The keyword has to be provided for the find command\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "            return new FindCommand(keyword);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "            throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means...\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    private static String reassembleString(String[] arr, int from, int to) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        return String.join(\" \", Arrays.copyOfRange(arr, from, to));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shermz-lim": 71
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": " * Handles the loading of task list data from the disk and the saving of task list data to the disk."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    private static final String TODO_FORMAT \u003d \"T\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    private static final String EVENT_FORMAT \u003d \"E\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    private static final String DEADLINE_FORMAT \u003d \"D\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    private static final String SEPARATOR \u003d \"/\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    private final File file;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     * Initializes storage with the path to the data file."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     * @param filePath The relative path to the file which data is to be loaded from and saved to."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        this.file \u003d new File(filePath);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     * Loads the task list data from the file and returns the task list as a List of tasks."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     * If the file does not exist, create it and then return an empty list as the task list."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     * @return List of tasks."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     * @throws DukeException Throws DukeException when the task cannot be loaded from the file."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    public List\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "            if (this.file.exists()) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "                ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "                Scanner scn \u003d new Scanner(this.file);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "                while (scn.hasNextLine()) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "                    String[] data \u003d scn.nextLine().split(SEPARATOR);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "                    switch (data[0]) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "                    case Storage.TODO_FORMAT:"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "                        taskList.add(new Todo(data[2], convertFormatToIsDone(data[1])));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "                    case Storage.EVENT_FORMAT:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "                        taskList.add(new Event(data[2], convertFormatToIsDone(data[1]), data[3]));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "                    case Storage.DEADLINE_FORMAT:"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "                        taskList.add(new Deadline(data[2], convertFormatToIsDone(data[1]), data[3]));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "                }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "                scn.close();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "                return taskList;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "                this.file.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "                this.file.createNewFile();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "                return new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "            throw new DukeException(\"Sorry, there is an error loading the data\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     * Saves the task list provided to the file."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     * @param tasks The task list to be saved."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     * @throws DukeException Throws DukeException when the task list cannot be saved to the file."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    public void saveTaskList(TaskList tasks) throws DukeException {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        FileWriter fileWriter;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "            fileWriter \u003d new FileWriter(this.file);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "            for (Task task : tasks.getListOfTasks()) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "                if (task instanceof Todo) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "                    fileWriter.write(String.join(Storage.SEPARATOR,"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "                            Storage.TODO_FORMAT, convertIsDoneToFormat(task.getIsDone()), task.getDescription()));"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "                } else if (task instanceof Event) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "                    fileWriter.write(String.join(Storage.SEPARATOR,"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "                            Storage.EVENT_FORMAT, convertIsDoneToFormat(task.getIsDone()), task.getDescription(), ((Event) task).getAt()));"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "                } else if (task instanceof Deadline) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "                    fileWriter.write(String.join(Storage.SEPARATOR,"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "                            Storage.DEADLINE_FORMAT, convertIsDoneToFormat(task.getIsDone()), task.getDescription(), ((Deadline) task).getBy()));"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "                    throw new DukeException(\"Sorry, there is an error saving the task list here.\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "                }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "                fileWriter.write(System.lineSeparator());"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "            }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "            fileWriter.close();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "            throw new DukeException(\"Sorry, there is an error saving the task list here.\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    private boolean convertFormatToIsDone(String taskDoneFormat) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        return taskDoneFormat.equals(\"1\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    private String convertIsDoneToFormat(boolean isDone) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        return isDone ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shermz-lim": 101
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": " * Represents a task that the user has to do."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     * Initializes a task that is by default not done yet, and with a description."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     * @param description The description for this task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     * Initializes a task with both the description, and whether it is done."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     * @param description The description for this task."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     * @param isDone Whether this task is completed."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    public Task(String description, boolean isDone) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     * Returns the description of the task."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     * @return Description of task."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     * Returns whether the task is done."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     * @return Whether the task is done."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    public boolean getIsDone() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        return this.isDone;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     * Returns a tick icon if this task is done, and a cross icon if this task is not yet done."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     * @return The Icon as a String."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        return String.format(\"[%s] %s\", getStatusIcon(), this.description);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     * Marks this task as done."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shermz-lim": 62
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": " * Represents a list of tasks, and provide methods for user to modify this list of tasks."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    List\u003cTask\u003e listOfTasks;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     * Initializes an empty list of tasks."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        this.listOfTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     * Initializes the list of tasks with a pre-existing list."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     * @param listOfTasks The pre-existing list of tasks."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    public TaskList(List\u003cTask\u003e listOfTasks) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        this.listOfTasks \u003d listOfTasks;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     * Returns the list of tasks as a List."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     * @return List of tasks."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    public List\u003cTask\u003e getListOfTasks() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        return this.listOfTasks;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     * Returns the deadlines and events filtered by a particular date."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     * @param date The date used to filter the tasks."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     * @return List of deadlines and events occurring on the date."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    public List\u003cTask\u003e getListOfTasks(LocalDate date) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        return this.listOfTasks.stream().filter(task -\u003e (task instanceof Event \u0026\u0026 ((Event) task).isOnDate(date))"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "                || (task instanceof Deadline \u0026\u0026 ((Deadline) task).isOnDate(date))).collect(Collectors.toList());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     * Returns list of tasks which description contains the keyword."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     * @param keyword The keyword to be used to filter the tasks."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     * @return The list of tasks."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    public List\u003cTask\u003e getListOfTasks(String keyword) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        return this.listOfTasks.stream().filter("
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "                task -\u003e task.getDescription().contains(keyword)).collect(Collectors.toList());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     * Marks the task at that particular index as done and returns that task."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     * @param idx The index to identify the task to be marked as done."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     * @return The task that has been marked as done."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     * @throws DukeException Throws DukeException when the index given is not valid."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    public Task markTaskDone(int idx) throws DukeException {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        if (idx \u003c 0 || idx \u003e\u003d listOfTasks.size()) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "            throw new DukeException(\"The task cannot be found.\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        Task task \u003d listOfTasks.get(idx);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        task.markAsDone();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     * Delete the task at that particular index and returns that task."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     * @param idx The index to identify the task to be deleted."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     * @return The task that has been deleted."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     * @throws DukeException Throws DukeException when the index given is not valid."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    public Task deleteTask(int idx) throws DukeException {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        if (idx \u003c 0 || idx \u003e\u003d listOfTasks.size()) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "            throw new DukeException(\"The task cannot be found.\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        Task task \u003d listOfTasks.get(idx);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        listOfTasks.remove(idx);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     * Adds a task to the list."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     * @param task The task to be added."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        this.listOfTasks.add(task);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     * Returns the current size of the task list."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     * @return Size of the task list."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        return this.listOfTasks.size();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shermz-lim": 100
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": " * Represents a Todo that the user has."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     * Initializes the Todo with the description."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     * @param description The description of this todo."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     * Initializes the Todo with the description, and whether it is done."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     * @param description The description of this todo."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     * @param isDone Whether this todo is done."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    public Todo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shermz-lim": 27
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": " * Handles all interaction with the user, including the reading of user input and outputting text."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    private final Scanner scanner;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     * Initializes the Ui object."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     * Reads the user input and return it."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     * @return User\u0027s input."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        return scanner.nextLine();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     * Shows welcome message to user."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        String name \u003d \"Omega\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        printHorizontalLine();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        System.out.println(\"Hi! I am \" + name + \", your personal assistant.\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        System.out.println(\"How may I help you today?\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        printHorizontalLine();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     * Shows goodbye message to user."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    public void showGoodbye() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        System.out.println(\"Goodbye! Shutting down now...\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     * Shows loading data from disk error to user."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        printHorizontalLine();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        System.out.println(\"Sorry, there is an error loading the data\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        printHorizontalLine();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     * Shows user the errorMessage passed to method."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     * @param errorMessage Error message to be shown to the user."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    public void showError(String errorMessage) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        System.out.println(errorMessage);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     * Shows all the tasks in the task list to the user."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     * @param taskList The list of tasks to be shown."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    public void showAllTasks(List\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        showTasks(taskList);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     * Shows all the deadlines and events for a particular date."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     * @param taskList The list of tasks to retrieve the deadlines and events."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     * @param date The date used to filter the deadlines and events."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    public void showTasksOnDate(List\u003cTask\u003e taskList, LocalDate date) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        System.out.println(String.format("
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "                \"Here are the tasks in your list on %s:\","
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "                date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))));"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        showTasks(taskList);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     * Shows a task list that has been filtered with a keyword."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     * @param taskList The filtered task list."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    public void showTasksFound(List\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        if (taskList.size() \u003e 0) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "            System.out.println(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "            showTasks(taskList);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "            System.out.println(\"There are no matching tasks in your list :(\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    public void showTasks(List\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        int idx \u003d 1;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        for (Task task : taskList) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "            System.out.println(String.format(\"%d.%s\", idx, task.toString()));"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "            idx +\u003d 1;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     * Shows the user the task that has been marked done."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     * @param task The task that has been marked as done."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    public void showTaskDone(Task task) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        printWithIndent(task.toString());"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     * Shows the user the task that has been deleted, as well as the total number of tasks left."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     * @param task The task that has been deleted."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     * @param numTasksLeft The total number of tasks left."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    public void showTaskDeleted(Task task, int numTasksLeft) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        printWithIndent(task.toString());"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        System.out.println(String.format(\"Now you have %d tasks in the list.\", numTasksLeft));"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     * Shows the user the task that has been added, as well as the total number of tasks left in the list."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     * @param task The task that has been added."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     * @param numTasksLeft The total number of tasks left."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    public void showTaskAdded(Task task, int numTasksLeft) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        printWithIndent(task.toString());"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        System.out.println(String.format(\"Now you have %d tasks in the list.\", numTasksLeft));"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     * Shows a blank line to the user."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    public void showBlankLine() {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     * Shows a horizontal line to the user."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        this.printHorizontalLine();"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    private void printHorizontalLine() {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        String horizontalLine \u003d \"---------------------------------------------\";"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        System.out.println(horizontalLine);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    private void printWithIndent(String str) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        System.out.println(\"  \" + str);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shermz-lim": 157
    }
  },
  {
    "path": "src/test/java/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    public void markTaskDone_indexGiven_success() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        List\u003cTask\u003e taskList \u003d List.of(new Todo(\"abc\"), new Todo(\"def\"), new Todo(\"ghi\"));"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        TaskList tasks \u003d new TaskList(taskList);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "            tasks.markTaskDone(1);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "            assertTrue(taskList.get(1).getIsDone());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    public void addTask_taskGiven_success() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        TaskList tasks \u003d new TaskList(taskList);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        tasks.addTask(new Todo(\"abc\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        assertEquals(tasks.size(), 1);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shermz-lim": 28
    }
  },
  {
    "path": "src/test/java/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "public class TodoTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    public void testGetDescription() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        Todo todo \u003d new Todo(\"abc\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        assertEquals(todo.getDescription(), \"abc\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    public void testGetIsDone_default_false() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        Todo todo \u003d new Todo(\"abc\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "        assertFalse(todo.getIsDone());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shermz-lim": 20
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "list"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "deadline return book /by 30 Aug 0000"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "event dinner with friends /at 25 Aug 1100"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "event exercise /at monday, wednesday, friday"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "deadline CS2103 project tasks /by this thursday"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "todo do my laundry"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "list"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "done 6"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "list"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "done 7"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "done 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "done"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "done abc"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "todo"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "deadline /by"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "deadline buy coffee /by"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "deadline buy coffee /by 4 aug"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "event"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "event /at"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "event watch movie /at"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "event watch movie /at 5 aug"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "delete"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "delete abc"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "delete 0"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "delete 10"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "list"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "list"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "blah"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "event coffee chat /at 2019-03-05"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "event tea chat /at 2019-03-06T00:05:01"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "deadline cs2103 project /by 2020-08-20"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "deadline cs2103 project /by 2020-08-20T12:05:20"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "list 2019-03-05"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "list abc"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "find chat"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "find random things"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "find cs2103 project"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "shermz-lim": 44
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "# clean up data file created by program"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": "rm -rf data"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shermz-lim"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "shermz-lim": 4,
      "-": 37
    }
  }
]
