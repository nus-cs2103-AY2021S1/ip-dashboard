[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    id \"com.github.johnrengelman.shadow\" version \"6.0.0\""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "group \u0027farrell.duke\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "version \u00270.1\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "sourceSets {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    main {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        java {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            srcDirs \u003d [\u0027src\u0027]"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "}"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    toolVersion \u003d \u00278.29\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "test {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.4.0\u0027"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.4.0\u0027"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    compile \u0027junit:junit:4.12\u0027"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "}"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "mainClassName \u003d \u0027main.java.farrell.duke.Duke\u0027"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "apply plugin: \u0027com.github.johnrengelman.shadow\u0027"
      }
    ],
    "authorContributionMap": {
      "boundtotheearth": 53
    }
  },
  {
    "path": "gradlew.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "@rem  Gradle startup script for Windows"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "@rem Set local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "set DIRNAME\u003d%~dp0"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "set APP_BASE_NAME\u003d%~n0"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "set APP_HOME\u003d%DIRNAME%"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "@rem Find java.exe"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "if defined JAVA_HOME goto findJavaFromJavaHome"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "set JAVA_EXE\u003djava.exe"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "echo."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "echo."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ":findJavaFromJavaHome"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "if exist \"%JAVA_EXE%\" goto init"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "echo."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "echo."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ":init"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "@rem Get command-line arguments, handling Windows variants"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ":win9xME_args"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "@rem Slurp the command line arguments."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "set CMD_LINE_ARGS\u003d"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "set _SKIP\u003d2"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ":win9xME_args_slurp"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "if \"x%~1\" \u003d\u003d \"x\" goto execute"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "set CMD_LINE_ARGS\u003d%*"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ":execute"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "@rem Setup the command line"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "@rem Execute Gradle"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ":end"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "@rem End local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ":fail"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "rem the _cmd.exe /c_ return code!"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "exit /b 1"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ":mainEnd"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ":omega"
      }
    ],
    "authorContributionMap": {
      "boundtotheearth": 84
    }
  },
  {
    "path": "settings.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "rootProject.name \u003d \u0027ip\u0027"
      }
    ],
    "authorContributionMap": {
      "boundtotheearth": 1
    }
  },
  {
    "path": "src/main/java/farrell/duke/CommandType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "package main.java.farrell.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": " * Enumeration of the commands accepted by the program."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": " * Unsupported commands will fall under UNDEFINED."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "public enum CommandType {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    TODO,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    EVENT,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    DEADLINE,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    DONE,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    LIST,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    DELETE,"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    BYE,"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    FIND,"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    UNDEFINED;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "     * Maps a string to its corresponding CommandType value."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "     * @param string The string to be mapped."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "     * @return The CommandType value associated with the string."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "     * @throws DukeException If the string cannot be mapped to a valid command."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    public static CommandType enumFromString(String string) throws DukeException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            return CommandType.valueOf(string.toUpperCase());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        } catch (IllegalArgumentException exception) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            throw new DukeException(\"I don\u0027t know what that means!\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "boundtotheearth": 32
    }
  },
  {
    "path": "src/main/java/farrell/duke/DataManager.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "package main.java.farrell.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": " * Encapsulates behavior for reading and writing to files."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "public class DataManager {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    /** The file path to save and load data from */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    private final String filePath \u003d \"data/data.txt\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "     * Writes the contents of a list of tasks to a file."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "     * @param taskList The list of tasks to save."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "     * @throws DukeException If a problem is encountered when writing to the file."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    public void save(TaskList taskList) throws DukeException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        List\u003cTask\u003e tasks \u003d taskList.getAllTasks();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            File dataFile \u003d new File(filePath);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            dataFile.createNewFile();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            FileWriter fw \u003d new FileWriter(dataFile);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            String stringToWrite \u003d \"\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            for (Task task : tasks) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "                switch (task.taskType) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "                case TODO:"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "                    ToDo todo \u003d (ToDo) task;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "                    stringToWrite \u003d todo.taskType.name() + \"|\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "                            + (todo.isDone() ? \"true\" : \"false\") + \"|\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "                            + todo.getDescription();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "                case EVENT:"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "                    Event event \u003d (Event) task;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "                    stringToWrite \u003d event.taskType.name() + \"|\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "                            + (event.isDone() ? \"true\" : \"false\") + \"|\""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "                            + event.getDescription() + \"|\""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "                            + event.getTime().format(DateTimeFormatter.ISO_LOCAL_DATE);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "                case DEADLINE:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "                    Deadline deadline \u003d (Deadline) task;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "                    stringToWrite \u003d deadline.taskType.name() + \"|\""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "                            + (deadline.isDone() ? \"true\" : \"false\") + \"|\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "                            + deadline.getDescription() + \"|\""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "                            + deadline.getTime().format(DateTimeFormatter.ISO_LOCAL_DATE);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "                    throw new DukeException(\"Invalid Task Type Encountered.\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "                }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "                fw.write(stringToWrite + \"\\n\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        } catch (IOException exception) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            throw new DukeException(\"Could not save file!\\nReason: \" + exception.getMessage());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "     * Loads task data from a file."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "     *"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "     * @return A list of tasks."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "     * @throws DukeException If a problem is encountered when opening the file"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    public TaskList load() throws DukeException {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        File dataFile \u003d new File(filePath);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        if (!dataFile.exists()) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            return new TaskList();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            Scanner sc \u003d new Scanner(dataFile);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "                String dataLine \u003d sc.nextLine();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "                String[] data \u003d dataLine.split(\"\\\\|\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "                TaskType taskType \u003d TaskType.enumFromString(data[0]);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "                    switch (taskType) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "                    case TODO:"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "                        taskList.add(new ToDo(data[2],"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "                                Boolean.parseBoolean(data[1])));"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "                    case EVENT:"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "                        taskList.add(new Event(data[2],"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "                                Boolean.parseBoolean(data[1]),"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "                                LocalDate.parse(data[3])));"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "                    case DEADLINE:"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "                        taskList.add(new Deadline(data[2],"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "                                Boolean.parseBoolean(data[1]),"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "                                LocalDate.parse(data[3])));"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "                    default:"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "                        throw new DukeException(\"Invalid data format provided!\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "                } catch (IndexOutOfBoundsException exception) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "                    throw new DukeException(\"Not enough data provided!\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "                }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            return new TaskList(taskList);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        } catch (FileNotFoundException exception) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            throw new DukeException(\"File could not be loaded!\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "boundtotheearth": 116
    }
  },
  {
    "path": "src/main/java/farrell/duke/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "package main.java.farrell.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "import java.time.format.FormatStyle;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": " * Encapsulates data for a deadline task."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    /** The deadline for the task */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    private LocalDate time;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    Deadline(String description, LocalDate time) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        this(description, false, time);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    Deadline(String description, boolean isDone, LocalDate time) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        taskType \u003d TaskType.DEADLINE;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    public LocalDate getTime() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        return time;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        String formattedTime \u003d time.format(DateTimeFormatter.ofLocalizedDate(FormatStyle.MEDIUM));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + formattedTime + \")\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "boundtotheearth": 33
    }
  },
  {
    "path": "src/main/java/farrell/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "package main.java.farrell.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": " * A personal assistant chatbot that helps to keep track of tasks."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    /** The list of tasks being tracked */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    /** An object that handles saving and loading data */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    private DataManager dataManager \u003d new DataManager();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    /** An object that handles user interaction */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    private UiManager uiManager;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    private boolean shouldExit \u003d false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    public Duke(UiManager uiManager) throws DukeException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        this.uiManager \u003d uiManager;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        taskList \u003d dataManager.load();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        uiManager.displayStartMessage();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "     * Displays a welcome message, then runs the main program loop."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "     * The main program loop consists of the following:"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "     * 1. Obtaining user input."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "     * 2. Parsing user input to the corresponding command."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "     * 3. Execute the command."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "     * 4. Display the program output to the user."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    public void run(String input) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            //String input \u003d uiManager.getNextInput();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            uiManager.sendUserMessage(input);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            String[] splitInput \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            CommandType command \u003d CommandType.enumFromString(splitInput[0]);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            String parameters \u003d splitInput.length \u003e 1 ? splitInput[1] : null;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            processCommand(command, parameters);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        } catch (DukeException exception) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "                uiManager.sendDukeMessage(exception.getMessage());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    public boolean shouldExit() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        return shouldExit;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "     * Executes a command."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "     * @param command The command to execute."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "     * @param parameters Parameters relevant to the execution of the command."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "     * @return 1 if the program should continue. 0 if the program should exit."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "     * @throws DukeException If an invalid command is given."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    public void processCommand(CommandType command, String parameters) throws DukeException{"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        switch(command) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        case TODO:"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            ToDo todo \u003d new ToDo(parameters);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            taskList.addTask(todo);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            dataManager.save(taskList);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            uiManager.sendDukeMessage(\"Added: \" + todo.toString());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        case EVENT:"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            String[] eventParameters \u003d parameters.split(\" /at \");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            Event event \u003d new Event(eventParameters[0], LocalDate.parse(eventParameters[1]));"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            taskList.addTask(event);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            dataManager.save(taskList);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            uiManager.sendDukeMessage(\"Added: \" + event.toString());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        case DEADLINE:"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            String[] deadlineParameters \u003d parameters.split(\" /by \");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            Deadline deadline \u003d new Deadline(deadlineParameters[0], LocalDate.parse(deadlineParameters[1]));"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            taskList.addTask(deadline);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            dataManager.save(taskList);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            uiManager.sendDukeMessage(\"Added: \" + deadline.toString());"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        case DONE:"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            int doneNumber \u003d Integer.parseInt(parameters);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            taskList.updateDone(doneNumber);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            dataManager.save(taskList);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            uiManager.sendDukeMessage(\"Nice! I\u0027ve marked the this as done.\\n\""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "                    + taskList.getTask(doneNumber).toString());"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        case LIST:"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            uiManager.sendDukeMessage(taskList.toString());"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        case DELETE:"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            int deleteNumber \u003d Integer.parseInt(parameters);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            Task deleteTask \u003d taskList.getTask(deleteNumber);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            taskList.deleteTask(deleteNumber);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            dataManager.save(taskList);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            uiManager.sendDukeMessage(\"I\u0027ve removed this task:\\n\""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "                    + deleteTask.toString());"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        case BYE:"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            shouldExit \u003d true;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            uiManager.sendDukeMessage(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        case FIND:"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            String filteredList \u003d taskList.filteredToString(parameters);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            uiManager.sendDukeMessage(\"Here are the matching tasks in your list:\\n\" + filteredList);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        case UNDEFINED:"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            throw new DukeException(\"I don\u0027t know what that means!\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            throw new DukeException(\"This command has not yet been implemented!\");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "boundtotheearth": 115,
      "-": 2
    }
  },
  {
    "path": "src/main/java/farrell/duke/DukeDialog.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "package main.java.farrell.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "public class DukeDialog extends HBox {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    private Label textLabel;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    private Image image \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    public DukeDialog(String text) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        textLabel \u003d new Label(text);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        displayPicture \u003d new ImageView(image);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        textLabel.setWrapText(true);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        displayPicture.setFitWidth(100);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        displayPicture.setFitHeight(100);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        this.setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        this.getChildren().addAll(displayPicture, textLabel);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "boundtotheearth": 25
    }
  },
  {
    "path": "src/main/java/farrell/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "package main.java.farrell.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": " * Signals that the program has encountered a problem."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    DukeException(String message) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        super(\"Error! \" + message);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        return getMessage();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "boundtotheearth": 15
    }
  },
  {
    "path": "src/main/java/farrell/duke/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "package main.java.farrell.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "import java.time.format.FormatStyle;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": " * Encapsulates data for an event task"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    /** The time when the event is occurring */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    private LocalDate time;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    Event(String description, LocalDate time) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        this(description, false, time);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    Event(String description, boolean isDone, LocalDate time) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        taskType \u003d TaskType.EVENT;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    public LocalDate getTime() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        return time;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        String formattedTime \u003d time.format(DateTimeFormatter.ofLocalizedDate(FormatStyle.MEDIUM));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + formattedTime + \")\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "boundtotheearth": 33
    }
  },
  {
    "path": "src/main/java/farrell/duke/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "package main.java.farrell.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "public class Main {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        Application.launch(UiManager.class, args);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "boundtotheearth": 9
    }
  },
  {
    "path": "src/main/java/farrell/duke/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "package main.java.farrell.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": " * Encapsulates data common to a task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": " * This is the base class that all tasks inherit from."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    /** The type of task involved */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    protected TaskType taskType;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    /** The task\u0027s details */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    /** The completion status of the task */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    Task(String description) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        this(description, false);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    Task(String description, boolean isDone) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    public TaskType getTaskType() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        return taskType;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "     * Changes the completion status of the task."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "     * @param done The new status of the task."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    public void markAsDone(boolean done) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        isDone \u003d done;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "     * Formats the completion status of the task in a pretty way."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "     * @return The formatted string."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    public String getStatusString() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        return \"[\" + getStatusString() + \"]\" + \" \" + description;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "boundtotheearth": 60
    }
  },
  {
    "path": "src/main/java/farrell/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "package main.java.farrell.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": " * Represents a list of tasks and actions that can be performed on the list."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    /** The list of tasks */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    private List\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    TaskList() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        this.taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    TaskList(List\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "     * Returns the task at the specified index"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "     * @param taskNumber Index of the task to get."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "     * @return The task at the index."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    public Task getTask(int taskNumber) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        return taskList.get(taskNumber - 1);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "     * Returns a list of all tasks being tracked."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "     * @return A list of Tasks."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    public List\u003cTask\u003e getAllTasks() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "     * Adds a task to the list."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "     * @param task The task to add."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        taskList.add(task);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "     * Deletes the task at the specified index."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "     * @param taskNumber Index of the task to delete."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    public void deleteTask(int taskNumber) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        Task deleteTask \u003d taskList.get(taskNumber - 1);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        taskList.remove(taskNumber - 1);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "     * Updates the completion status of the task at the specified index."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "     *"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "     * @param taskNumber Index of the task to update."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    public void updateDone(int taskNumber) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        Task task \u003d taskList.get(taskNumber - 1);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        task.markAsDone(true);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "     * Returns a formatted string representing a list of tasks filtered by a string."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "     *"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "     * @param matchString The string to filter by."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "     * @return The list of tasks as a formatted string"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    public String filteredToString(String matchString) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            if (taskList.get(i).getDescription().contains(matchString)) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "                sb.append(i + 1)"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "                        .append(\". \")"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "                        .append(taskList.get(i).toString());"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "                if (i \u003c taskList.size() - 1) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "                    sb.append(\"\\n\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "                }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            sb.append(i + 1)"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "                    .append(\". \")"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "                    .append(taskList.get(i).toString());"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            if (i \u003c taskList.size() - 1) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "                sb.append(\"\\n\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "boundtotheearth": 103
    }
  },
  {
    "path": "src/main/java/farrell/duke/TaskType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "package main.java.farrell.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": " * Enumeration of the types of tasks handled by the program."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "public enum TaskType {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    TODO,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    EVENT,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    DEADLINE;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "     * Maps a string to its corresponding TaskType value."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "     * @param string The string to be mapped."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "     * @return The TaskType value associated with the string."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    public static TaskType enumFromString(String string) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        return TaskType.valueOf(string.toUpperCase());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "boundtotheearth": 20
    }
  },
  {
    "path": "src/main/java/farrell/duke/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "package main.java.farrell.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": " * Encapsulates data for a todo task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    ToDo(String description) throws DukeException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        this(description, false);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    ToDo(String description, boolean isDone) throws DukeException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        taskType \u003d TaskType.TODO;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        if (description \u003d\u003d null || description.isEmpty()) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            throw new DukeException(\"The description of a todo cannot be empty!\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "boundtotheearth": 24
    }
  },
  {
    "path": "src/main/java/farrell/duke/UiManager.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "package main.java.farrell.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "import java.util.*;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": " * Encapsulates behavior for interacting with the user."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": " * This class uses System.in to receive inputs from the user and System.out to display its output."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "public class UiManager extends Application {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    public void start(Stage primaryStage) throws Exception {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        // Initialising Components"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        dialogContainer \u003d new VBox();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        userInput \u003d new TextField();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        ScrollPane scrollPane \u003d new ScrollPane();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        Button sendButton \u003d new Button(\"Send\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        AnchorPane mainLayout \u003d new AnchorPane();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        //Formatting and Style"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        scrollPane.setContent(dialogContainer);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        scrollPane.setPrefSize(385, 535);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        scrollPane.setVvalue(1.0);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        scrollPane.setFitToWidth(true);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        userInput.setPrefWidth(325.0);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        sendButton.setPrefWidth(55.0);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        AnchorPane.setTopAnchor(scrollPane, 1.0);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        AnchorPane.setBottomAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        AnchorPane.setRightAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        AnchorPane.setLeftAnchor(userInput , 1.0);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        AnchorPane.setBottomAnchor(userInput, 1.0);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        mainLayout.setPrefSize(400, 600);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        Scene scene \u003d new Scene(mainLayout);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        primaryStage.setScene(scene);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        primaryStage.setTitle(\"Duke\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        primaryStage.setResizable(false);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        primaryStage.setMinWidth(400);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        primaryStage.setMinHeight(600);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        // Setup event handlers"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            handleUserInput(userInput.getText());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        });"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            handleUserInput(userInput.getText());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        });"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        primaryStage.show();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        // Initialise program"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            duke \u003d new Duke(this);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        } catch (DukeException exception) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            sendDukeMessage(exception.getMessage());"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    public void stop() throws Exception {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        System.exit(0);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        super.stop();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    private void handleUserInput(String input) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        duke.run(input);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "     * Returns the string for the welcome message."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "     */"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    public void displayStartMessage() {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        sendDukeMessage(\"Hello, I\u0027m a banana.\\nWhat can I do for you?\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "     * Displays text inside a formatted window."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "     *"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "     * @param text The text to display."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "     */"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    public void sendDukeMessage(String text) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        dialogContainer.getChildren().add(new DukeDialog(text));"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    public void sendUserMessage(String text) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        dialogContainer.getChildren().add(new UserDialog(text));"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "boundtotheearth": 123
    }
  },
  {
    "path": "src/main/java/farrell/duke/UserDialog.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "package main.java.farrell.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "public class UserDialog extends HBox {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    private Label textLabel;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    private Image image \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    public UserDialog(String text) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        textLabel \u003d new Label(text);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        displayPicture \u003d new ImageView(image);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        textLabel.setWrapText(true);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        displayPicture.setFitWidth(100);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        displayPicture.setFitHeight(100);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        this.setAlignment(Pos.TOP_RIGHT);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        this.getChildren().addAll(textLabel, displayPicture);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "boundtotheearth": 25
    }
  },
  {
    "path": "src/test/ExpectedOutputs/CreateToDo.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": " _"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "//\\"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "V  \\"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": " \\  \\_"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "  \\,\u0027.`-."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "   |\\ `. `."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "   ( \\  `. `-.                        _,.-:\\"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    \\ \\   `.  `-._             __..--\u0027 ,-\u0027;/"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "     \\ `.   `-.   `-..___..---\u0027   _.--\u0027 ,\u0027/"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "      `. `.    `-._        __..--\u0027    ,\u0027 /"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        `. `-_     ``--..\u0027\u0027       _.-\u0027 ,\u0027"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "          `-_ `-.___        __,--\u0027   ,\u0027"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "             `-.__  `----\"\"\"    __.-\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "                   `--..____..--\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "---------------------------------------------"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "Hello, I\u0027m a banana."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "What can I do for you?"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "---------------------------------------------"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "---------------------------------------------"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "Added: [T][✘] read book"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "---------------------------------------------"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "---------------------------------------------"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "1. [T][✘] read book"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "---------------------------------------------"
      }
    ],
    "authorContributionMap": {
      "boundtotheearth": 24
    }
  },
  {
    "path": "src/test/ExpectedOutputs/DisplayStartMessage.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": " _"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "//\\"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "V  \\"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": " \\  \\_"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "  \\,\u0027.`-."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "   |\\ `. `."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "   ( \\  `. `-.                        _,.-:\\"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    \\ \\   `.  `-._             __..--\u0027 ,-\u0027;/"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "     \\ `.   `-.   `-..___..---\u0027   _.--\u0027 ,\u0027/"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "      `. `.    `-._        __..--\u0027    ,\u0027 /"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        `. `-_     ``--..\u0027\u0027       _.-\u0027 ,\u0027"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "          `-_ `-.___        __,--\u0027   ,\u0027"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "             `-.__  `----\"\"\"    __.-\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "                   `--..____..--\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "---------------------------------------------"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "Hello, I\u0027m a banana."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "What can I do for you?"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "---------------------------------------------"
      }
    ],
    "authorContributionMap": {
      "boundtotheearth": 18
    }
  },
  {
    "path": "src/test/ExpectedOutputs/PrintInWindow.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "---------------------------------------------"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "test"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "---------------------------------------------"
      }
    ],
    "authorContributionMap": {
      "boundtotheearth": 3
    }
  },
  {
    "path": "src/test/TestInputs/CreateToDo.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "list"
      }
    ],
    "authorContributionMap": {
      "boundtotheearth": 2
    }
  },
  {
    "path": "src/test/java/farrell/duke/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "package farrell.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "import static org.junit.Assert.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "import org.junit.After;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "import org.junit.Before;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "import org.junit.Test;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "import main.java.farrell.duke.Duke;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    private TestManager testManager \u003d new TestManager();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    @Before"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    public void setUp() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        testManager.init();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    @After"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    public void cleanUp() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        testManager.cleanUp();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    public void duke_createToDo_toDoCreated() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            String output \u003d Files.readString(Paths.get(\"ExpectedOutputs\", \"CreateToDo.txt\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            String input \u003d Files.readString(Paths.get(\"TestInputs\", \"CreateToDo.txt\"));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            testManager.giveInput(input);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            Duke.main(new String[0]);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            assertEquals(output, testManager.getOutput());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "boundtotheearth": 39
    }
  },
  {
    "path": "src/test/java/farrell/duke/TestManager.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "package farrell.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "import java.io.ByteArrayInputStream;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "import java.io.ByteArrayOutputStream;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "import java.io.InputStream;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "public class TestManager {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    private final ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    private final PrintStream originalOut \u003d System.out;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    private final InputStream originalIn \u003d System.in;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "     * Initialize the test manager to redirect input and output"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    public void init() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        System.setOut(new PrintStream(outContent));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            Files.deleteIfExists(Paths.get(\"data\", \"data.txt\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "     * Returns the input and output to their original sources"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    public void cleanUp() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        System.setOut(originalOut);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        System.setIn(originalIn);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "     * Simulates entering input into System.in."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "     * @param input The input string to give to System.in."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    public void giveInput(String input) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        System.setIn(new ByteArrayInputStream(input.getBytes()));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "     * Retrieves output from System.out."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "     * @return The output string from System.out."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    public String getOutput() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        return outContent.toString();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "boundtotheearth": 51
    }
  },
  {
    "path": "src/test/java/farrell/duke/UiManagerTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "package farrell.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "import static org.junit.Assert.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "import org.junit.After;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "import org.junit.Before;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "import org.junit.Test;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "import main.java.farrell.duke.UiManager;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "public class UiManagerTest {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    private TestManager testManager \u003d new TestManager();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    @Before"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    public void setUp() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        testManager.init();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    @After"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    public void cleanUp() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        testManager.cleanUp();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    public void printInWindow_normalText_printCorrectly() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            String output \u003d Files.readString(Paths.get(\"ExpectedOutputs\", \"PrintInWindow.txt\"));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            UiManager manager \u003d new UiManager();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            manager.sendDukeMessage(\"test\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            assertEquals(output, testManager.getOutput());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    public void displayStartMessage_displayCorrectly() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            String output \u003d Files.readString(Paths.get(\"ExpectedOutput\", \"DisplayStartMessage\"));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            UiManager manager \u003d new UiManager();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            manager.displayStartMessage();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            assertEquals(output, testManager.getOutput());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "boundtotheearth": 51
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "todo say hello"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "event read book /at Sunday"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "deadline return book /by Monday 4-6pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "list"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "alsdk;fjn"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "todo"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "boundtotheearth": 15
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/Duke.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "java -classpath ../bin main/java/Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "boundtotheearth": 2,
      "-": 36
    }
  }
]
