[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    mainClassName \u003d \"duke.Launcher\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    archiveBaseName \u003d \"Launcher\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    toolVersion \u003d \u00278.32\u0027"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Robinho98": 18,
      "-": 43
    }
  },
  {
    "path": "data/fileInfo.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "D | 1 | pore | 2012-02-19 | NIL"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "T | 0 | pretty | NIL"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "D | 0 | yas | 2012-01-01 | NIL"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "T | 0 | pepega | NIL"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "D | 0 | trauma | 2012-09-04 | hard"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "E | 1 | why | 2020-03-04 | hard"
      }
    ],
    "authorContributionMap": {
      "Robinho98": 6
    }
  },
  {
    "path": "src/main/java/duke/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Robinho98"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Robinho98"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Robinho98"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Robinho98"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        dialog.setStyle(\"-fx-font-family: monospace\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Robinho98": 62
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import duke.common.DukeException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import duke.common.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Robinho98"
        },
        "content": " * Entry point of the Duke application."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Robinho98"
        },
        "content": " * Initializes the application and starts the interaction with the user."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Robinho98"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * Sets up the required objects and loads up the data from the storage file."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        storage \u003d new Storage(\"data/fileInfo.txt\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * Displays welcome message and accesses storage for saved list."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public void welcome() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        Ui.displayWelcome();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            ArrayList\u003cTask\u003e currenttasks \u003d Storage.readFile();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            tasks \u003d new TaskList(currenttasks);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            if (!currenttasks.isEmpty()) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "                Ui.displayTasks(tasks);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "                Ui.display(\"No current list available. Start by adding a task!\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            tasks \u003d new TaskList(new ArrayList\u003cTask\u003e());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * Runs the program until termination."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            } catch (DukeException | IOException e) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "                Ui.display(e.getMessage());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * Parses user input and executes command accordingly."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public void parseInput(String input) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            Command c \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "//            Ui.displayTasks(tasks);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        } catch (DukeException | IOException e) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            Ui.display(e.getMessage());"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Robinho98": 77,
      "-": 3
    }
  },
  {
    "path": "src/main/java/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Robinho98"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Robinho98"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Robinho98": 12
    }
  },
  {
    "path": "src/main/java/duke/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Robinho98"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Robinho98"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    private static MainWindow window;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            window \u003d fxmlLoader.getController();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            duke.welcome();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public static MainWindow getWindow() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        return window;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public static void closeWindow() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        Platform.exit();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Robinho98": 43
    }
  },
  {
    "path": "src/main/java/duke/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Robinho98"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Robinho98"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.jpg\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.jpg\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "                DialogBox.getUserDialog(input, userImage));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        duke.parseInput(input);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * Displays text on the separate window."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * param s text to be displayed."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public void displayText(String s) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "                DialogBox.getDukeDialog(s, dukeImage)"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        );"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Robinho98": 59
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import duke.common.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import duke.common.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Robinho98"
        },
        "content": " * Represents an executable command."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Robinho98"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @param tasks list of tasks."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @param ui object to output messages."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @param storage object to write TaskList to file."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public abstract void execute (TaskList tasks, Ui ui, Storage storage) throws DukeException, IOException;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * Checks if command will exit the program."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Robinho98": 30
    }
  },
  {
    "path": "src/main/java/duke/command/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import duke.common.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import duke.common.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Robinho98"
        },
        "content": " * Adds a deadline task."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Robinho98"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "public class DeadlineCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    private static String description;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    private static String by;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * Constructor for a new DeadlineCommand object."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @param description details about the Deadline."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @param by date the deadline is due by in yyyy-mm-dd format."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public DeadlineCommand(String description, String by) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        DeadlineCommand.description \u003d description;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        DeadlineCommand.by \u003d by;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @param tasks list of tasks."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @param ui object to output messages."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @param storage object to write TaskList to file."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            Task temp \u003d new Deadline(description, by);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            tasks.addTask(temp);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            Storage.appendToFile(temp);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            Ui.display(\"Yay! New task added:\\n   \" + temp);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            Ui.displayRemainingTasks(tasks);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            throw new DukeException(\"Please input a suitable date of \u003cyyyy-mm-dd\u003e format!\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Robinho98": 46
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import duke.common.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import duke.common.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Robinho98"
        },
        "content": " * Deletes a task."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Robinho98"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    private static int taskIndex;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * Constructor for a new DeleteCommand object."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @param taskIndex index of task in task list to be deleted."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public DeleteCommand(int taskIndex) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        DeleteCommand.taskIndex \u003d taskIndex - 1;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @param tasks list of tasks."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @param ui object to output messages."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @param storage object to write TaskList to file."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public void execute (TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            Ui.display(\"Noted. I\u0027ve removed this task:\\n   \""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "                    + tasks.getTask(taskIndex));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            tasks.deleteTask(taskIndex);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            Ui.displayRemainingTasks(tasks);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            Storage.writeToFile(tasks.getList());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            throw new DukeException(\"This task does not exist!\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Robinho98": 41
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import duke.common.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import duke.common.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Robinho98"
        },
        "content": " * Marks a task as done."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Robinho98"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    private static int taskIndex;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * Constructor for a new DoneCommand object."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @param taskIndex index of task in task list to be mark as done."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public DoneCommand(int taskIndex) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        DoneCommand.taskIndex \u003d taskIndex - 1;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @param tasks list of tasks."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @param ui object to output messages."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @param storage object to write TaskList to file."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public void execute (TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            tasks.markAsDone(taskIndex);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            Ui.display(\"Nice! I\u0027ve marked this task as done:\\n   \""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "                    + tasks.getTask(taskIndex));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            Storage.writeToFile(tasks.getList());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            throw new DukeException(\"This task does not exist!\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Robinho98": 40
    }
  },
  {
    "path": "src/main/java/duke/command/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import duke.common.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import duke.common.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Robinho98"
        },
        "content": " * Adds a event task."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Robinho98"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "public class EventCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    private static String description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    private static String at;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * Constructor for a new EventCommand object."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @param description details about the Deadline."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @param at date the event is held at in yyyy-mm-dd format."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public EventCommand(String description, String at) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        EventCommand.description \u003d description;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        EventCommand.at \u003d at;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @param tasks list of tasks."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @param ui object to output messages."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @param storage object to write TaskList to file."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException, IOException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            Task temp \u003d new Event(description, at);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            tasks.addTask(temp);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            Storage.appendToFile(temp);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            Ui.display(\"Yay! New task added:\\n   \""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "                    + temp);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            Ui.displayRemainingTasks(tasks);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            throw new DukeException(\"Please input a suitable date of \u003cyyyy-mm-dd\u003e format!\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Robinho98": 49
    }
  },
  {
    "path": "src/main/java/duke/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import duke.Main;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import duke.common.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import duke.common.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Robinho98"
        },
        "content": " * Command to exit the program."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Robinho98"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @param tasks list of tasks."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @param ui object to output messages."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @param storage object to write TaskList to file."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public void execute (TaskList tasks, Ui ui, Storage storage) throws DukeException, IOException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        Storage.writeToFile(tasks.getList());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        Ui.display(\"Bye! Hope to see you again! :D\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        Main.closeWindow();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * Checks if command will exit the program."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Robinho98": 36
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import duke.common.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import duke.common.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Robinho98"
        },
        "content": " * Command to search for keywords."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Robinho98"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    private static String keyword;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * Constructor for a new FindCommand object."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @param keyword keyword that user is searching for."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public FindCommand(String keyword) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        duke.command.FindCommand.keyword \u003d keyword;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @param tasks list of tasks."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @param ui object to output messages."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @param storage object to write TaskList to file."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            TaskList matching \u003d new TaskList (tasks.findTask(keyword));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            if (!matching.isEmpty()) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "                Ui.displayMatchingTasks(matching);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "                Ui.display(\"No matching tasks!\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            throw new DukeException(\"Please include a keyword to search for!\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Robinho98": 44
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import duke.common.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import duke.common.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Robinho98"
        },
        "content": " * Lists all tasks in the current task list."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Robinho98"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @param tasks list of tasks."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @param ui object to output messages."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @param storage object to write TaskList to file."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public void execute (TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        Ui.displayTasks(tasks);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Robinho98": 23
    }
  },
  {
    "path": "src/main/java/duke/command/TagCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import duke.common.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import duke.common.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Robinho98"
        },
        "content": " * Adds a tag to a task."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Robinho98"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "public class TagCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    private int taskIndex;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    private String tagDescription;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * Constructor for a new TagCommand object."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @param taskIndex index of task in task list to be tagged."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @param tagDescription tag description."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public TagCommand(int taskIndex, String tagDescription) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        this.taskIndex \u003d taskIndex - 1;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        this.tagDescription \u003d tagDescription;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @param tasks list of tasks."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @param ui object to output messages."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @param storage object to write TaskList to file."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public void execute (TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            tasks.setTag(taskIndex, tagDescription);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            Ui.display(\"Nice! I\u0027ve tagged this task:\\n   \""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "                    + tasks.getTask(taskIndex));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            Storage.writeToFile(tasks.getList());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            throw new DukeException(\"This task does not exist!\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Robinho98": 43
    }
  },
  {
    "path": "src/main/java/duke/command/ToDoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import duke.common.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import duke.common.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Robinho98"
        },
        "content": " * Adds a ToDo task."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Robinho98"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "public class ToDoCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    private static String description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * Constructor for a new ToDoCommand object."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @param description details about the ToDo task."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public ToDoCommand(String description) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        ToDoCommand.description \u003d description;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @param tasks list of tasks."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @param ui object to output messages."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @param storage object to write TaskList to file."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException, IOException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        Task temp \u003d new ToDo(description);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        tasks.addTask(temp);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        Storage.appendToFile(temp);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        Ui.display(\"Yay! New task added:\\n   \""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "                + temp);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        Ui.displayRemainingTasks(tasks);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Robinho98": 42
    }
  },
  {
    "path": "src/main/java/duke/common/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "package duke.common;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Robinho98"
        },
        "content": " * Signals custom errors and outputs a corresponding message."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Robinho98"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Robinho98": 11
    }
  },
  {
    "path": "src/main/java/duke/common/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "package duke.common;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import duke.Main;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Robinho98"
        },
        "content": " * Text UI of the application."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Robinho98"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    private final Scanner sc;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        this.sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    private static void displayString(String s) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        assert (s !\u003d null) : \"Display String only\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        Main.getWindow().displayText(s);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * Generates and prints a custom string."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @param s text to be displayed to the user."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public static void display(String s) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        displayString(s);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * Generates and prints the current task list of the user."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @param tasks list of tasks the user has inputted thus far."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public static void displayTasks(TaskList tasks) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        StringBuilder s \u003d new StringBuilder();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        s.append(\"Here is your current list: \\n\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.getSize(); i++) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            s.append(i + 1).append(\". \").append(tasks.getTask(i)).append(\"\\n\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        displayString(s.toString());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * Generates and prints the remaining task list of the user."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @param tasks list of tasks the user has inputted thus far."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public static void displayRemainingTasks(TaskList tasks) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        display(\"\\nNow you have \""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "                + tasks.getSize()"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "                + \" tasks in your list.\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * Generates and prints the matching task list of the user."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @param tasks list of tasks that matches the users keyword."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public static void displayMatchingTasks(TaskList tasks) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        StringBuilder s \u003d new StringBuilder();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        s.append(\"Here is the matching list: \\n\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.getSize(); i++) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            s.append(i + 1).append(\". \").append(tasks.getTask(i)).append(\"\\n\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        displayString(s.toString());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * Generates and prints the welcome message upon the start of the application."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public static void displayWelcome() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        displayString(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        displayString(\"Hello! I\u0027m Duke\\n\""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "                + \"     What can I do for you?\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * Uses scanner to read the next line that the user input."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @return next command."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        return sc.nextLine();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Robinho98": 91
    }
  },
  {
    "path": "src/main/java/duke/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import duke.command.DeadlineCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import duke.command.DoneCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import duke.command.EventCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import duke.command.ExitCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import duke.command.FindCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import duke.command.TagCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import duke.command.ToDoCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import duke.common.DukeException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Robinho98"
        },
        "content": " * Parses user input."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Robinho98"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * Parses user input into command for execution."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @param command full user input string."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @return the command based on the user input."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public static Command parse(String command) throws DukeException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        String[] parts \u003d command.split(\" \", 2);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        switch (parts[0].toLowerCase()) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            String doneTaskIndex \u003d parts[1].trim();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            return new DoneCommand(Integer.parseInt(doneTaskIndex));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            String deleteTaskIndex \u003d parts[1].trim();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            return new DeleteCommand(Integer.parseInt(deleteTaskIndex));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        case \"tag\":"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            String[] tag \u003d parts[1].split(\" \");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            String tagTaskIndex \u003d tag[0].trim();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            String tagDesription \u003d tag[1].trim();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            return new TagCommand(Integer.parseInt(tag[0]), tag[1]);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            String keyword \u003d parts[1].trim();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            return new FindCommand(keyword);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            String toDoDescription \u003d parts[1].trim();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            return new ToDoCommand(toDoDescription);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "                String[] deadline \u003d parts[1].split(\"/by\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "                String deadlineDescription \u003d deadline[0].trim();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "                String dateBy \u003d deadline[1].trim();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "                return new DeadlineCommand(deadlineDescription, dateBy);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "                throw new DukeException(\"Deadline formatting is wrong! Please include /by.\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "                String[] event \u003d parts[1].split(\"/at\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "                String eventDescription \u003d event[0].trim();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "                String dateAt \u003d event[1].trim();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "                return new EventCommand(eventDescription, dateAt);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "                throw new DukeException(\"Event formatting is wrong! Please include /at.\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            throw new DukeException(\"Please try again!\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Robinho98": 73
    }
  },
  {
    "path": "src/main/java/duke/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Robinho98"
        },
        "content": " * Stores user data."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Robinho98"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    private static String filePath;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * Constructor for a new Storage object."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @param filePath directory of the file which saves user inputs."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        Storage.filePath \u003d filePath;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            File f \u003d new File(filePath);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            f.getParentFile().mkdir();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            f.createNewFile();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * Writes task list to file."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @param toDoList list of tasks that user has inputted that needs to be saved."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public static void writeToFile(ArrayList\u003cTask\u003e toDoList) throws IOException {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        for (int i \u003d 0; i \u003c toDoList.size(); i++) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            fw.write(toDoList.get(i).infoString());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            fw.write(System.lineSeparator());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * Adds an additional task to file."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @param task the task that needs to be added to the file to be saved."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public static void appendToFile(Task task) throws IOException {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath, true); // create a FileWriter in append mode"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        fw.write(task.infoString());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        fw.write(System.lineSeparator());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * Reads file and generates the task list that was saved."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @return the tasklist that was saved in the file."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public static ArrayList\u003cTask\u003e readFile() throws FileNotFoundException {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        File f \u003d new File(filePath);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        if (!f.exists()) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            return new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        Scanner s \u003d new Scanner(f);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        ArrayList\u003cTask\u003e listOfTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        while (s.hasNext()) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            listOfTasks.add(createTask(s.nextLine()));"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        return listOfTasks;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * Converts infoString format into a Task."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @param s infoString of the task."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @return task represented by the infoString."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public static Task createTask(String s) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        String[] parts \u003d s.split(\"\\\\|\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        switch (parts[0].trim()) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        case \"T\":"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            return new ToDo(parts[2].trim(), parts[1].trim().equals(\"1\"), parts[3].trim());"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        case \"D\":"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            assert parts[4].trim() !\u003d null : \"Tag is empty\";"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            if (parts[4].trim() \u003d\u003d \"NIL\") {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "                return new Deadline(parts[2].trim(), parts[1].trim().equals(\"1\"), parts[3].trim());"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "                return new Deadline(parts[2].trim(), parts[1].trim().equals(\"1\"), parts[3].trim(), parts[4].trim());"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        case \"E\":"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            assert parts[4].trim() !\u003d null : \"Tag is empty\";"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            return new Event(parts[2].trim(), parts[1].trim().equals(\"1\"), parts[3].trim(), parts[4].trim());"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Robinho98": 111
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Robinho98"
        },
        "content": " * Deadline task that inherits from Task class, and has an additional condition, which is when it is due by."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Robinho98"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    private LocalDate by;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * Constructor for a new Deadline object."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @param description details about the Deadline."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @param by date the deadline is due by in yyyy-mm-dd format."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        this.by \u003d LocalDate.parse(by.trim());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * Constructor for a new Deadline object."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @param description details about the Deadline."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @param isDone whether Deadline is done or not."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @param by time/date the Deadline is due by in yyyy-mm-dd format."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public Deadline(String description, boolean isDone, String by) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        this.by \u003d LocalDate.parse(by.trim());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * Constructor for a new Deadline object."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @param description details about the Deadline."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @param isDone whether Deadline is done or not."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @param tagDescription description of tag."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @param by time/date the Deadline is due by in yyyy-mm-dd format."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public Deadline(String description, boolean isDone, String by, String tagDescription) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        super(description, isDone, tagDescription);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        this.by \u003d LocalDate.parse(by.trim());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * Checks if task contains the keyword."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @return whether the task contains that keyword."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public boolean hasKeyword(String keyword) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        return description.contains(keyword) || by.format(DateTimeFormatter.ofPattern(\"d MMM yyyy\")).contains(keyword);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * Overrides toString method of Task class."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @return Custom description of the deadline."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        return \"[D] \" + super.toString() + \" (by: \" + by.format(DateTimeFormatter.ofPattern(\"d MMM yyyy\")) + \")\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * Returns task description and its isDone status for saving."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @return string containing its description and its status icon."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public String infoString() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        String infoIsDone \u003d \"0\";"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            infoIsDone \u003d \"1\";"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        return \"D | \" + infoIsDone + \" | \" + this.description + \" | \" + by + \" | \" + this.tagDescription;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Robinho98": 81
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Robinho98"
        },
        "content": " * Event task that inherits from Task class, and has an additional condition, which is when it is held at."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Robinho98"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    private LocalDate at;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * Creates a new Event object."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @param description details about the Event."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @param at time/date the event is held at."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        this.at \u003d LocalDate.parse(at.trim());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * Creates a new Event object."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @param description details about the Event."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @param isDone whether Event is done or not."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @param at time/date the event is held at."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public Event(String description, boolean isDone, String at) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        this.at \u003d LocalDate.parse(at.trim());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * Constructor for a new Event object."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @param description details about the Event."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @param isDone whether Deadline is done or not."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @param tagDescription description of tag."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @param at time/date the Deadline is due by in yyyy-mm-dd format."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public Event(String description, boolean isDone, String at, String tagDescription) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        super(description, isDone, tagDescription);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        this.at \u003d LocalDate.parse(at.trim());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * Checks if task contains the keyword."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @return whether the task contains that keyword."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public boolean hasKeyword(String keyword) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        return description.contains(keyword) || at.format(DateTimeFormatter.ofPattern(\"d MMM yyyy\")).contains(keyword);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * Overrides toString method of Task class."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @return Custom description of the event."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        return \"[E] \" + super.toString() + \" (at: \" + at.format(DateTimeFormatter.ofPattern(\"d MMM yyyy\")) + \")\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * Returns task description and its isDone status for saving."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @return string containing its description and its status icon."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public String infoString() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        String infoIsDone \u003d \"0\";"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            infoIsDone \u003d \"1\";"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        return \"E | \" + infoIsDone + \" | \" + this.description + \" | \" + at + \" | \" + this.tagDescription;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Robinho98": 81
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Robinho98"
        },
        "content": " * Tasks that the user input"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Robinho98"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    protected String tagDescription;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * Creates a new Task object."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @param description details about the Task."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        this.tagDescription \u003d \"NIL\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * Creates a new Task object and set its isDone boolean."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @param description details about the Task."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @param isDone whether Task is done or not."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @return Task with a corresponding description and completed status."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public Task(String description, boolean isDone) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        this.tagDescription \u003d \"NIL\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * Creates a new Task object and set its isDone boolean and its tag."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @param description details about the Task."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @param isDone whether Task is done or not."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @param tagDescription description of tag for this task."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @return Task with a corresponding description and completed status."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public Task(String description, boolean isDone, String tagDescription) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        this.tagDescription \u003d tagDescription;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * Returns either ✓ or ✘, depending on whether task has been done."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @return ✓ or ✘."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public abstract boolean hasKeyword(String keyword);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public void setTag(String tagDescription) { this.tagDescription \u003d tagDescription; }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * Returns task description and its status icon."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @return string containing its description and its status icon."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        if (tagDescription.equals(\"NIL\")) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            return \"[\" + this.getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            return \"[\" + this.getStatusIcon() + \"] \" + this.description + \" #\" + this.tagDescription;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * Returns task description and its isDone status for saving."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @return string containing its description and its status icon."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public abstract String infoString();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Robinho98": 85
    }
  },
  {
    "path": "src/main/java/duke/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import duke.common.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Robinho98"
        },
        "content": " * Represents all of the users tasks in a list."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Robinho98"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * Adds a task to the task list."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @param task The task to be added."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * Deletes a task to the task list."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @param taskindex The index of the task to be deleted in the task list."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public void deleteTask(int taskindex) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        tasks.remove(taskindex);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * Marks a task in the task list as done."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @param taskindex The index of the task in the task list that is to be marked as done."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public void markAsDone(int taskindex) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        tasks.get(taskindex).markAsDone();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * Adds a tag to a task."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @param taskindex The index of the task in the task list that a tag is to be added to."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public void setTag(int taskindex, String tagDescription) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        tasks.get(taskindex).setTag(tagDescription);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * Returns current task list."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @return current task list."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public ArrayList\u003cTask\u003e getList() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * Gets a task to the task list."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @param taskindex The index of the task to get in the task list."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public Task getTask(int taskindex) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        return tasks.get(taskindex);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * Returns number of tasks in the task list."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @return number of tasks."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * Returns if task list is empty or not."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @return boolean if task list is empty or not."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public boolean isEmpty() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        return tasks.isEmpty();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * Filters for tasks that contain the keyword."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @return tasks that contains the keyword in an array list."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public ArrayList\u003cTask\u003e findTask(String keyword) throws DukeException {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        ArrayList\u003cTask\u003e result \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        if (!keyword.isEmpty()) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            for (Task task : tasks) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "                if (task.hasKeyword(keyword)) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "                    result.add(task);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "                }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            throw new DukeException(\"Keyword is left blank.\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Robinho98": 98
    }
  },
  {
    "path": "src/main/java/duke/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Robinho98"
        },
        "content": " * Todo task that inherits from Task class."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Robinho98"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * Creates a new Task object and set its isDone boolean."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @param description details about the Task."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @param isDone whether Task is done or not."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @return Task with a corresponding description and completed status."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public ToDo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * Creates a new Task object and set its isDone boolean and its tag."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @param description details about the Task."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @param isDone whether Task is done or not."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @param tagDescription description of tag for this task."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @return Task with a corresponding description and completed status."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public ToDo(String description, boolean isDone, String tagDescription) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        super(description, isDone, tagDescription);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * Checks if task contains the keyword."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @return whether the task contains that keyword."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public boolean hasKeyword(String keyword) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        return description.contains(keyword);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * Overrides toString method of Task class."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @return Custom description of the todo task."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        return \"[T] \" + super.toString();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * Returns task description and its isDone status for saving."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     * @return string containing its description and its status icon."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public String infoString() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        String infoIsDone \u003d \"0\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            infoIsDone \u003d \"1\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        return \"T | \" + infoIsDone + \" | \" + this.description + \" | \" + this.tagDescription;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Robinho98": 67
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" minHeight\u003d\"-Infinity\"/\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "Robinho98": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "Robinho98": 19
    }
  },
  {
    "path": "src/test/java/duke/task/ToDoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "public class ToDoTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public void descriptionTest() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        assertEquals(new ToDo(\"testing\").description, \"testing\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public void defaultStatusTest() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        assertEquals(new ToDo(\"testing\").isDone, false);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public void overloadedConstructorTest() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        assertEquals(new ToDo(\"testing\", true).isDone, true);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public void toStringTest() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        assertEquals(new ToDo(\"testing\").toString(), \"[T] [✘] testing\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    public void infoStringTest() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "        assertEquals(new ToDo(\"testing\").infoString(), \"T | 0 | testing\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Robinho98": 32
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "todo hi"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "deadline homework /by wednesday"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "event concert /at next month"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "Robinho98": 7
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "SET MY_PATH\u003dC:\\Users\\Robin\\Desktop\\NUS Codes\\Y2S1\\CS2103T\\iP"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Robinho98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Robinho98"
        },
        "content": "javac  -cp \"C:\\Users\\Robin\\Desktop\\NUS Codes\\Y2S1\\CS2103T\\iP\\src\\main\\java\" -Xlint:none -d \"C:\\Users\\Robin\\Desktop\\NUS Codes\\Y2S1\\CS2103T\\iP\\bin\" \"C:\\Users\\Robin\\Desktop\\NUS Codes\\Y2S1\\CS2103T\\iP\\src\\main\\java\\Duke.java\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "Robinho98": 3,
      "-": 20
    }
  }
]
