[
  {
    "path": "data/tasks.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "D | 1 | return book | 2/12/2019 1800"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "T | 0 | 123"
      }
    ],
    "authorContributionMap": {
      "KOH-ZHE-HAO": 2
    }
  },
  {
    "path": "src/main/java/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "import java.time.DateTimeException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    protected final String taskType;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    protected final String description;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    public AddCommand(String taskType, String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        this.taskType \u003d taskType.trim();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        this.description \u003d description.trim();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    public void execute(TaskList list, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        Task current;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "            switch (this.taskType) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                case \"todo\": {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                    current \u003d new ToDo(this.description.trim());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                case \"deadline\": {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                    int byIndex \u003d this.description.indexOf(\" /by \");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                    if (byIndex \u003d\u003d -1) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                        throw new DukeException(\"I need a better description of the task\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                    String deadline \u003d this.description.substring(byIndex + 4).trim();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                    String description \u003d this.description.substring(0, byIndex).trim();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                    current \u003d new Deadline(description, deadline);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                case \"event\": {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                    int atIndex \u003d this.description.indexOf(\" /at \");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                    if (atIndex \u003d\u003d -1) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                        throw new DukeException(\"I need a better description of the task\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                    String deadline \u003d this.description.substring(atIndex + 4).trim();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                    String description \u003d this.description.substring(0, atIndex).trim();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                    current \u003d new Event(description, deadline);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                default: {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                    throw new DukeException(\"I don\u0027t understand you at all...\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "            list.add(current);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "            storage.appendTxt(current);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "            ui.showAdd(current, list);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        } catch (NumberFormatException | DateTimeException e) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "            throw new DukeException(\"Invalid date format detected!\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "            throw new DukeException(\"I need a better description of the task\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KOH-ZHE-HAO": 63
    }
  },
  {
    "path": "src/main/java/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    @ Override"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    public void execute(TaskList list, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        ui.showBye();"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KOH-ZHE-HAO": 13
    }
  },
  {
    "path": "src/main/java/CheckCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "public class CheckCommand extends Command{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    private final String target;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    public CheckCommand(String detail) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        this.target \u003d detail;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    public void execute(TaskList list, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        ui.showCheck();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        for (Task task : list.getList()) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "            if (task.getDate().equals(this.target)) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                System.out.println(task);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "            }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KOH-ZHE-HAO": 22
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    public abstract void execute(TaskList list, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    public abstract boolean isExit();"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KOH-ZHE-HAO": 4
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "public class Deadline extends Task{"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    protected LocalTime time;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        this.by \u003d by.trim();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        String[] timeComponent \u003d by.split(\" \");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        this.date \u003d LocalDate.parse(format(timeComponent[0].trim()));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        String hour \u003d timeComponent[1].substring(0,2);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        String minute \u003d timeComponent[1].substring(2);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        this.time \u003d LocalTime.of(Integer.parseInt(hour),"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                Integer.parseInt(minute));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    private String format(String input) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        String[] component \u003d input.split(\"/\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        if (component[0].length() \u003d\u003d 1) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "            component[0] \u003d \"0\" + component[0];"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        return component[2] + \"-\" + component[1] +"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                \"-\" + component[0];"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + date.format(DateTimeFormatter"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                .ofPattern(\"MMM d yyyy\")) + \" \" + time + \")\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    public String getDate() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        return this.by.split(\" \")[0];"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    public String convertTxt() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        return \"D | \" + (this.status ? \"1\" : \"0\") + \" | \" + name + \" | \" + by;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KOH-ZHE-HAO": 45
    }
  },
  {
    "path": "src/main/java/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    private final int index;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    public DeleteCommand(String number) throws DukeException {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "            this.index \u003d Integer.parseInt(number) - 1;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "            throw new DukeException(\"Sorry, I can\u0027t seem to find the task...\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    public void execute(TaskList list, Ui ui, Storage storage) throws DukeException{"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "            Task task \u003d list.getList().get(index);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "            list.delete(task);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "            ui.showDelete(task, list);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "            storage.generateTxt(list);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "            throw new DukeException(\"Sorry, I can\u0027t seem to find the task...\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KOH-ZHE-HAO": 28
    }
  },
  {
    "path": "src/main/java/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    private final int index;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    public DoneCommand(String number) throws DukeException {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "            this.index \u003d Integer.parseInt(number) - 1;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "            throw new DukeException(\"Sorry, I can\u0027t seem to find the task...\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    public void execute(TaskList list, Ui ui, Storage storage) throws DukeException{"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "            Task task \u003d list.getList().get(index);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "            task.markAsDone();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "            ui.showDone(task);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "            storage.generateTxt(list);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "            throw new DukeException(\"Sorry, I can\u0027t seem to find the task...\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KOH-ZHE-HAO": 28
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        this.tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "            this.storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "            storage.loadData(tasks);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "            ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "            tasks.empty();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                String fullCommand \u003d ui.readLine();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "            }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        new Duke(\"data/tasks.txt\").run();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KOH-ZHE-HAO": 35,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "public class DukeException extends Exception{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    public DukeException() {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KOH-ZHE-HAO": 11
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "public class Event extends Task{"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    protected LocalTime time;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        String[] timeComponent \u003d at.split(\" \");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        this.date \u003d LocalDate.parse(format(timeComponent[0].trim()));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        String hour \u003d timeComponent[1].substring(0,2);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        String minute \u003d timeComponent[1].substring(2);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        this.time \u003d LocalTime.of(Integer.parseInt(hour),"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                Integer.parseInt(minute));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    private String format(String input) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        String[] component \u003d input.split(\"/\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        if (component[0].length() \u003d\u003d 1) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "            component[0] \u003d \"0\" + component[0];"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        return component[2] + \"-\" + component[1] +"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                \"-\" + component[0];"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + date.format(DateTimeFormatter"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                .ofPattern(\"MMM d yyyy\")) + \" \" + time + \")\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    public String getDate() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        return this.at.split(\" \")[0];"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    public String convertTxt() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        return \"E | \" + (this.status ? \"1\" : \"0\") + \" | \" + name + \" | \" + at;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KOH-ZHE-HAO": 45
    }
  },
  {
    "path": "src/main/java/FileErrorException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "public class FileErrorException extends DukeException{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    public FileErrorException() {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        return \"Sorry, I can\u0027t create duke.txt for you :( \";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KOH-ZHE-HAO": 9
    }
  },
  {
    "path": "src/main/java/FolderErrorException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "public class FolderErrorException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    public FolderErrorException() {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        return \"Sorry, I can\u0027t create data folder for you :( \";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KOH-ZHE-HAO": 11
    }
  },
  {
    "path": "src/main/java/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    public void execute(TaskList list, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        ui.showList();"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        int count \u003d 1;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        for (Task task : list.getList()) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "            ui.showListTask(count, task);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "            count++;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KOH-ZHE-HAO": 16
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    public static Command parse(String input) throws DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "            return new ByeCommand();"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        String[] process \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        String first \u003d process[0];"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "            String second \u003d process[1];"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "            if (first.equals(\"done\")) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                return new DoneCommand(second);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "            }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "            if (first.equals(\"delete\")) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                return new DeleteCommand(second);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "            }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "            if (first.equals(\"check\")) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                return new CheckCommand(second);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "            }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "            return new AddCommand(first, second);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "            throw new DukeException(\"The description of the task cannot be empty!\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KOH-ZHE-HAO": 37
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    protected File data;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    public Storage (String filePath) throws DukeException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        String folder \u003d filePath.split(\"/\")[0];"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        String file \u003d filePath.split(\"/\")[1];"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        String dir \u003d System.getProperty(\"user.dir\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        java.nio.file.Path dataFolder \u003d java.nio.file.Paths.get(dir,folder);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        if (!java.nio.file.Files.exists(dataFolder)) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "            if (!new File(dataFolder.toString()).mkdir()) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                throw new FolderErrorException();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "            }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        java.nio.file.Path fileLocation \u003d java.nio.file.Paths"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                .get(dataFolder.toString(),file);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        if (!java.nio.file.Files.exists(fileLocation)) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                if (!fileLocation.toFile().createNewFile()) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                    throw new FileErrorException();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                throw new FolderErrorException();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        this.data \u003d new File(fileLocation.toString());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    public void generateTxt (TaskList list) throws DukeException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "            FileWriter fw \u003d new FileWriter(this.data);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "            List\u003cTask\u003e tasks \u003d list.getList();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "            for (Task task : tasks) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                fw.write(task.convertTxt() + System.lineSeparator());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "            throw new DukeException(\"Unsuccessful txt file update\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    public void appendTxt (Task task) throws DukeException {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "            FileWriter fw \u003d new FileWriter(this.data, true);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "            fw.write(task.convertTxt() + System.lineSeparator());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "            throw new DukeException(\"Unsuccessful txt file update\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    public void loadData(TaskList list) throws DukeException {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "            Scanner s \u003d new Scanner(this.data);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "            while (s.hasNext()) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                String event \u003d s.nextLine();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                String[] component \u003d event.split(\"\\\\|\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                if (component.length \u003e 4) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                    throw new DukeException(\"Corrupted data detected! Loading terminated!\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                switch (component[0].trim()) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                    case \"T\": {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                        Task current \u003d new Task(component[2]);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                        int state \u003d Integer.parseInt(component[1].trim());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                        if (state \u003d\u003d 1) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                            current.markAsDone();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                        list.add(current);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                    case \"D\": {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                        Deadline current \u003d new Deadline(component[2].trim(), component[3].trim());"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                        int state \u003d Integer.parseInt(component[1].trim());"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                        if (state \u003d\u003d 1) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                            current.markAsDone();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                        list.add(current);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                    case \"E\": {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                        Event current \u003d new Event(component[2].trim(), component[3].trim());"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                        int state \u003d Integer.parseInt(component[1].trim());"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                        if (state \u003d\u003d 1) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                            current.markAsDone();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                        list.add(current);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                    default: {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                        throw new DukeException(\"Corrupted data detected! Loading terminated!\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "            }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "            throw new DukeException(\"I can\u0027t seem to find your file...\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KOH-ZHE-HAO": 111
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    protected String name;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    protected boolean status;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    public Task(String name) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        this.status \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        return this.status;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        this.status \u003d true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        return \"[\" + (status ? \"\\u2713\" : \"\\u2718\") + \"] \" + this.name;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    public String convertTxt() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        return \"T | \" + (this.status ? \"1\" : \"0\") + \" | \" + name;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    public String getDate() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KOH-ZHE-HAO": 31
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    protected List\u003cTask\u003e list;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        this.list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    public List\u003cTask\u003e getList() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        return this.list;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    public void add(Task task) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        this.list.add(task);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    public void delete(Task task) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        this.list.remove(task);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        return this.list.size();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    public void empty() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        this.list.clear();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KOH-ZHE-HAO": 31
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "public class ToDo extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KOH-ZHE-HAO": 11
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    private final String LINE_BREAK \u003d \"   ____________________________\" +"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "            \"________________________________\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    private final String SPACE1 \u003d \"    \";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    private final String SPACE2 \u003d \"     \";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    private final String LOGO \u003d \" ____        _\\n\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "            + \"|  _ \\\\ _   _| | _____\\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "            + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "            + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    private Scanner sc;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        System.out.println(\"Hello from\\n\" + LOGO);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        System.out.println(LINE_BREAK);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        System.out.println(SPACE1 + \"Hey, I\u0027m Emilia \\u2764 !\\n\" + SPACE1 +"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                \"What can I do for you?\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        System.out.println(LINE_BREAK);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    public void showError(String errorMessage) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        System.out.println(SPACE1 + errorMessage);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        System.out.println(LINE_BREAK);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    public String readLine() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        return sc.nextLine().trim().toLowerCase();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    public void showBye() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        System.out.println(SPACE1 + \"Welcome back \\u2764 !\" );"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    public void showList() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        System.out.println(SPACE1 + \"Please take a look at the tasks:\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    public void showListTask(int count, Task task) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        System.out.println(SPACE1 + count + \". \" + task);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    public void showDone(Task task) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        System.out.println(SPACE1 + \"Understood, I\u0027ve marked this \" +"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                \"task as done:\\n\" + SPACE2 + task);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    public void showDelete(Task task, TaskList list) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        System.out.println(SPACE1 + \"Understood, I\u0027ve deleted this task\\n\" +"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                SPACE2 + task + \"\\n\" + SPACE1 + \"You have \" + list.getSize() +"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                \" tasks in your list now!\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    public void showCheck() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        System.out.println(\"Hey! I have printed out the tasks that match the date:\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    public void showAdd(Task current, TaskList list) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        System.out.println(SPACE1 + \"Understood! I\u0027ve added this task:\\n\" +"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                SPACE2 + current);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        System.out.println(SPACE1 + \"You have \" +"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                list.getSize() + \" tasks in your list now!\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KOH-ZHE-HAO": 74
    }
  },
  {
    "path": "text-ui-test/data/tasks.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "T | 1 |        read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "T | 0 |  buy milk"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "T | 0 | read book"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "T | 0 | buy milk"
      }
    ],
    "authorContributionMap": {
      "KOH-ZHE-HAO": 4
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "todo      buy milk"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "event                  project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "deadline where is my by"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "event go to sleep/at 8pm"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "list"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "event"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "todo"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "list"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "done 8"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "list"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "why are you so cute ?"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "list"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "delete 10"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "list"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "bye"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "KOH-ZHE-HAO": 23
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "set JAVA_TOOL_OPTIONS\u003d-Dfile.encoding\u003dUTF-8"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "KOH-ZHE-HAO": 3,
      "-": 20
    }
  }
]
