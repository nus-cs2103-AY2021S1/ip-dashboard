[
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sgn00"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sgn00"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sgn00"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sgn00"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sgn00"
        },
        "content": "import duke.util.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sgn00"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sgn00"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sgn00"
        },
        "content": "import duke.util.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sgn00"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sgn00"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sgn00"
        },
        "content": " * Represents the Duke program."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sgn00"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sgn00"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sgn00"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        tasks \u003d storage.load();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sgn00"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        Duke duke \u003d new Duke(\"./data/duke.txt\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        duke.run();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sgn00"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sgn00"
        },
        "content": "     * Starts execution of the Duke program."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sgn00"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        ui.printHello();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        tasks \u003d storage.load();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sgn00"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sgn00"
        },
        "content": "                String input \u003d ui.readInput();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sgn00"
        },
        "content": "                Command c \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sgn00"
        },
        "content": "                c.execute(tasks, ui);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sgn00"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sgn00"
        },
        "content": "                storage.save(tasks);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sgn00"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sgn00"
        },
        "content": "                ui.print(e.getMessage());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sgn00"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 3,
      "sgn00": 46
    }
  },
  {
    "path": "src/main/java/duke/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sgn00"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sgn00"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sgn00"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sgn00"
        },
        "content": "import duke.util.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sgn00"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sgn00"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sgn00"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sgn00"
        },
        "content": " * Represents a command to add a task."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sgn00"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sgn00"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sgn00"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    private Task task;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sgn00"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    public AddCommand(Task task) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sgn00"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sgn00"
        },
        "content": "     * Adds a Task to the TaskList."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sgn00"
        },
        "content": "     * @param taskList TaskList which the Task is added to."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sgn00"
        },
        "content": "     * @param ui Ui which helps prints output."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sgn00"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    public void execute(TaskList taskList, Ui ui) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        taskList.addTask(task);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        ui.print(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        ui.print(task.toString());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        ui.print(String.format(\"Now you have %d tasks in the list\", taskList.getNumberOfTasks()));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sgn00"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sgn00": 29
    }
  },
  {
    "path": "src/main/java/duke/command/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sgn00"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sgn00"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sgn00"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sgn00"
        },
        "content": "import duke.util.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sgn00"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sgn00"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sgn00"
        },
        "content": " * Represents a command to stop the Duke program."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sgn00"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sgn00"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sgn00"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sgn00"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sgn00"
        },
        "content": "     * Prints goodbye message."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sgn00"
        },
        "content": "     * @param taskList TaskList which the Task is added to."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sgn00"
        },
        "content": "     * @param ui Ui which helps prints output."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sgn00"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    public void execute(TaskList taskList, Ui ui) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        ui.print(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sgn00"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sgn00": 24
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sgn00"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sgn00"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sgn00"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sgn00"
        },
        "content": "import duke.util.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sgn00"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sgn00"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sgn00"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    public abstract void execute(TaskList tasks, Ui ui);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sgn00"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sgn00"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sgn00": 13
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sgn00"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sgn00"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sgn00"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sgn00"
        },
        "content": "import duke.util.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sgn00"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sgn00"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sgn00"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sgn00"
        },
        "content": " * Represents a command to delete a task."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sgn00"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sgn00"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sgn00"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    private int taskNumber;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sgn00"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    public DeleteCommand(int taskNumber) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        this.taskNumber \u003d taskNumber;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sgn00"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sgn00"
        },
        "content": "     * Removes a Task from the TaskList."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sgn00"
        },
        "content": "     * @param taskList TaskList which the Task is added to."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sgn00"
        },
        "content": "     * @param ui Ui which helps prints output."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sgn00"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    public void execute(TaskList taskList, Ui ui) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        Task task \u003d taskList.deleteTask(taskNumber);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        ui.print(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        ui.print(task.toString());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        ui.print(String.format(\"Now you have %d tasks in the list\", taskList.getNumberOfTasks()));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sgn00"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sgn00"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sgn00"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sgn00": 31
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sgn00"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sgn00"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sgn00"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sgn00"
        },
        "content": "import duke.util.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sgn00"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sgn00"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sgn00"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sgn00"
        },
        "content": " * Represents a command to mark a task as done."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sgn00"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sgn00"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sgn00"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    private int taskNumber;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sgn00"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    public DoneCommand(int taskNumber) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        this.taskNumber \u003d taskNumber;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sgn00"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sgn00"
        },
        "content": "     * Marks a Task in the TaskList as done."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sgn00"
        },
        "content": "     * @param taskList TaskList which the Task is added to."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sgn00"
        },
        "content": "     * @param ui Ui which helps prints output."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sgn00"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    public void execute(TaskList taskList, Ui ui) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        Task task \u003d taskList.completeTask(taskNumber);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        ui.print(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        ui.print(task.toString());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sgn00"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sgn00": 28
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sgn00"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sgn00"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sgn00"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sgn00"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sgn00"
        },
        "content": "import duke.util.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sgn00"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sgn00"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sgn00"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sgn00"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sgn00"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    private String matchString;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sgn00"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    public FindCommand(String matchString) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        this.matchString \u003d matchString;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sgn00"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    public void execute(TaskList taskList, Ui ui) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        List\u003cTask\u003e store \u003d taskList.getList();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        int count \u003d 0;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        boolean hasMatching \u003d false;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        String lowercaseString \u003d matchString.toLowerCase();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        for (Task task : store) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sgn00"
        },
        "content": "            count++;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sgn00"
        },
        "content": "            if (task.toString().toLowerCase().contains(lowercaseString)) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sgn00"
        },
        "content": "                if (!hasMatching) { // check if this is first match"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sgn00"
        },
        "content": "                    ui.print(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sgn00"
        },
        "content": "                    hasMatching \u003d true;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sgn00"
        },
        "content": "                }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sgn00"
        },
        "content": "                ui.print(String.format(\"%d. %s\", count, task));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sgn00"
        },
        "content": "            }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        if (!hasMatching) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sgn00"
        },
        "content": "            ui.print(String.format(\"You have no tasks matching \u0027%s\u0027\", matchString));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sgn00"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sgn00": 36
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sgn00"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sgn00"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sgn00"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sgn00"
        },
        "content": "import duke.util.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sgn00"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sgn00"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sgn00"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sgn00"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sgn00"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sgn00"
        },
        "content": " * Represents a command to list all tasks."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sgn00"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sgn00"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sgn00"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sgn00"
        },
        "content": "     * Prints all the Tasks in the TaskList."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sgn00"
        },
        "content": "     * @param taskList TaskList which the Task is added to."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sgn00"
        },
        "content": "     * @param ui Ui which helps prints output."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sgn00"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    public void execute(TaskList taskList, Ui ui) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        ui.print(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        List\u003cTask\u003e store \u003d taskList.getList();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        int count \u003d 0;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        for (Task task : store) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sgn00"
        },
        "content": "            count++;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sgn00"
        },
        "content": "            ui.print(String.format(\"%d. %s\", count, task));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sgn00"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sgn00": 28
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sgn00"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sgn00"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sgn00"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sgn00"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sgn00"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sgn00": 8
    }
  },
  {
    "path": "src/main/java/duke/exception/InvalidCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sgn00"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sgn00"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sgn00"
        },
        "content": "public class InvalidCommandException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sgn00"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    public InvalidCommandException() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        super(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sgn00"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sgn00": 8
    }
  },
  {
    "path": "src/main/java/duke/exception/InvalidDateFormatException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sgn00"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sgn00"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sgn00"
        },
        "content": "public class InvalidDateFormatException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sgn00"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    public InvalidDateFormatException() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        super(\"☹ OOPS!!! Your date format is wrong! Make sure it is in yyyy-mm-dd format, eg. 2019-10-15\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sgn00"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sgn00": 8
    }
  },
  {
    "path": "src/main/java/duke/exception/InvalidDeadlineException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sgn00"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sgn00"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sgn00"
        },
        "content": "public class InvalidDeadlineException extends DukeException{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sgn00"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    public InvalidDeadlineException() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        super(\"☹ OOPS!!! Your deadline command format is wrong!\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sgn00"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sgn00": 8
    }
  },
  {
    "path": "src/main/java/duke/exception/InvalidDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sgn00"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sgn00"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sgn00"
        },
        "content": "public class InvalidDescriptionException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sgn00"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    public InvalidDescriptionException() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        super(\"☹ OOPS!!! The description for a task command cannot be empty!\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sgn00"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sgn00": 8
    }
  },
  {
    "path": "src/main/java/duke/exception/InvalidEventException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sgn00"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sgn00"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sgn00"
        },
        "content": "public class InvalidEventException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sgn00"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    public InvalidEventException() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        super(\"☹ OOPS!!! Your event command format is wrong!\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sgn00"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sgn00": 8
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sgn00"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sgn00"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sgn00"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sgn00"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sgn00"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sgn00"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sgn00"
        },
        "content": " * Represents a deadline task."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sgn00"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sgn00"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sgn00"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    private LocalDate date;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sgn00"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    public Deadline(String name, LocalDate date) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sgn00"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        String date \u003d formatter.format(this.date);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        return String.format(\"[D]%s (by: %s)\", super.toString(), date);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sgn00"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sgn00": 24
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sgn00"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sgn00"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sgn00"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sgn00"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sgn00"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sgn00"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sgn00"
        },
        "content": " * Represents an event task."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sgn00"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sgn00"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sgn00"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    private LocalDate date;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sgn00"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    public Event(String name, LocalDate date) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sgn00"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        String date \u003d formatter.format(this.date);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        return String.format(\"[E]%s (at: %s)\", super.toString(), date);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sgn00"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sgn00": 24
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sgn00"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sgn00"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sgn00"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sgn00"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sgn00"
        },
        "content": "public class Task implements Serializable {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sgn00"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    private String name;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sgn00"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    public Task(String name) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sgn00"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sgn00"
        },
        "content": "            return String.format(\"[✓] %s\", name);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sgn00"
        },
        "content": "            return String.format(\"[✗] %s\", name);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sgn00"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    public void setDone() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sgn00"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sgn00": 27
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sgn00"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sgn00"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sgn00"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sgn00"
        },
        "content": " * Represents a todo task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sgn00"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sgn00"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sgn00"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    public Todo(String name) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sgn00"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        return String.format(\"[T]%s\", super.toString());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sgn00"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sgn00": 16
    }
  },
  {
    "path": "src/main/java/duke/util/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sgn00"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sgn00"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sgn00"
        },
        "content": "import duke.command.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sgn00"
        },
        "content": "import duke.exception.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sgn00"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sgn00"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sgn00"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sgn00"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sgn00"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sgn00"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sgn00"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sgn00"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sgn00"
        },
        "content": " * Helps parse user input."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sgn00"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sgn00"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sgn00"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sgn00"
        },
        "content": "     * Parses an input string and returns a Command based on the input."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sgn00"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sgn00"
        },
        "content": "     * @param input User input that is provided."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sgn00"
        },
        "content": "     * @return Command."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sgn00"
        },
        "content": "     * @throws InvalidDescriptionException If description format for new task is wrong."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sgn00"
        },
        "content": "     * @throws InvalidCommandException     If no such command exists."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sgn00"
        },
        "content": "     * @throws InvalidEventException       If event command format is wrong."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sgn00"
        },
        "content": "     * @throws InvalidDeadlineException    If deadline command format is wrong."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sgn00"
        },
        "content": "     * @throws InvalidDateFormatException  If date is not given in correct format."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sgn00"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    public static Command parse(String input) throws InvalidDescriptionException, InvalidCommandException,"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sgn00"
        },
        "content": "            InvalidEventException, InvalidDeadlineException, InvalidDateFormatException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        String[] splitString \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        String command \u003d splitString[0];"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        int num;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        switch (command) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sgn00"
        },
        "content": "            return new ByeCommand();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sgn00"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sgn00"
        },
        "content": "            if (splitString.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sgn00"
        },
        "content": "                throw new InvalidDescriptionException();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sgn00"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sgn00"
        },
        "content": "            return parseTask(command, splitString[1].trim());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sgn00"
        },
        "content": "            num \u003d Integer.parseInt(splitString[1]);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sgn00"
        },
        "content": "            return new DoneCommand(num);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sgn00"
        },
        "content": "            num \u003d Integer.parseInt(splitString[1]);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sgn00"
        },
        "content": "            return new DeleteCommand(num);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sgn00"
        },
        "content": "            String matchString \u003d splitString[1].trim();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sgn00"
        },
        "content": "            return new FindCommand(matchString);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sgn00"
        },
        "content": "            throw new InvalidCommandException();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sgn00"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sgn00"
        },
        "content": "     * Helps parse input related to adding tasks."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sgn00"
        },
        "content": "     *"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sgn00"
        },
        "content": "     * @param command     The command string that was input."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sgn00"
        },
        "content": "     * @param description The remaining part of the command string."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sgn00"
        },
        "content": "     * @return AddCommand."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sgn00"
        },
        "content": "     * @throws InvalidEventException      If event command format is wrong."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sgn00"
        },
        "content": "     * @throws InvalidDeadlineException   If deadline command format is wrong."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sgn00"
        },
        "content": "     * @throws InvalidCommandException    If no such command exists."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sgn00"
        },
        "content": "     * @throws InvalidDateFormatException If date is not given in correct format."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sgn00"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    private static Command parseTask(String command, String description)"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "sgn00"
        },
        "content": "            throws InvalidEventException, InvalidDeadlineException,"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "sgn00"
        },
        "content": "            InvalidCommandException, InvalidDateFormatException {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        String splitted[];"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        LocalDate date;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "sgn00"
        },
        "content": "            switch (command) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "sgn00"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "sgn00"
        },
        "content": "                return new AddCommand(new Todo(description));"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "sgn00"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "sgn00"
        },
        "content": "                splitted \u003d description.split(\" /by \", 2);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "sgn00"
        },
        "content": "                if (splitted.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "sgn00"
        },
        "content": "                    throw new InvalidDeadlineException();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "sgn00"
        },
        "content": "                }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "sgn00"
        },
        "content": "                date \u003d LocalDate.parse(splitted[1]);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "sgn00"
        },
        "content": "                return new AddCommand(new Deadline(splitted[0], date));"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "sgn00"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "sgn00"
        },
        "content": "                splitted \u003d description.split(\" /at \", 2);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "sgn00"
        },
        "content": "                if (splitted.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "sgn00"
        },
        "content": "                    throw new InvalidEventException();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "sgn00"
        },
        "content": "                }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "sgn00"
        },
        "content": "                date \u003d LocalDate.parse(splitted[1]);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "sgn00"
        },
        "content": "                return new AddCommand(new Event(splitted[0], date));"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "sgn00"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "sgn00"
        },
        "content": "                throw new InvalidCommandException();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "sgn00"
        },
        "content": "            }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "sgn00"
        },
        "content": "            throw new InvalidDateFormatException();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "sgn00"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sgn00": 100
    }
  },
  {
    "path": "src/main/java/duke/util/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sgn00"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sgn00"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sgn00"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sgn00"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sgn00"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sgn00"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sgn00"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sgn00"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sgn00"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sgn00"
        },
        "content": " * Responsible for local disk file operations."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sgn00"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sgn00"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sgn00"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sgn00"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sgn00"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sgn00"
        },
        "content": "     * Loads a list of tasks from disk."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sgn00"
        },
        "content": "     * @return TaskList with loaded list."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sgn00"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    public TaskList load() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        List\u003cTask\u003e lst;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sgn00"
        },
        "content": "            ObjectInputStream ois \u003d new ObjectInputStream(new FileInputStream(filePath));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sgn00"
        },
        "content": "            lst \u003d (List\u003cTask\u003e) ois.readObject();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sgn00"
        },
        "content": "            ois.close();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sgn00"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sgn00"
        },
        "content": "            lst \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        return new TaskList(lst);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sgn00"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sgn00"
        },
        "content": "     * Saves a list of tasks to disk."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sgn00"
        },
        "content": "     * @param lst The TaskList to save to disk."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sgn00"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    public void save(TaskList lst) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sgn00"
        },
        "content": "            new File(filePath).getParentFile().mkdirs();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sgn00"
        },
        "content": "            ObjectOutputStream oos \u003d new ObjectOutputStream(new FileOutputStream(filePath));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sgn00"
        },
        "content": "            oos.writeObject(lst.getList());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sgn00"
        },
        "content": "            oos.flush();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sgn00"
        },
        "content": "            oos.close();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sgn00"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sgn00"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sgn00": 52
    }
  },
  {
    "path": "src/main/java/duke/util/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sgn00"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sgn00"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sgn00"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sgn00"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sgn00"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sgn00"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sgn00"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sgn00"
        },
        "content": " * Represents the list of tasks."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sgn00"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sgn00"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sgn00"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    private List\u003cTask\u003e store;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sgn00"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    public TaskList(List\u003cTask\u003e lst) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        this.store \u003d lst;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sgn00"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    public List\u003cTask\u003e getList() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        return store;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sgn00"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sgn00"
        },
        "content": "     * Returns number of tasks in the list of tasks."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sgn00"
        },
        "content": "     * @return Number of tasks."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sgn00"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    public int getNumberOfTasks() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        return store.size();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sgn00"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sgn00"
        },
        "content": "     * Marks a task in the list of tasks as done."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sgn00"
        },
        "content": "     * @param num The task number of the Task."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sgn00"
        },
        "content": "     * @return Task which was marked as done."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sgn00"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    public Task completeTask(int num) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        store.get(num - 1).setDone();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        return store.get(num - 1);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sgn00"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sgn00"
        },
        "content": "     * Deletes a task from the list of tasks."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sgn00"
        },
        "content": "     * @param num The task number of the Task."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sgn00"
        },
        "content": "     * @return Task which was deleted."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sgn00"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    public Task deleteTask(int num) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        Task task \u003d store.get(num - 1);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        store.remove(task);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sgn00"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sgn00"
        },
        "content": "     * Adds a Task to the list of tasks."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sgn00"
        },
        "content": "     * @param task The Task to be added."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sgn00"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        store.add(task);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sgn00"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sgn00"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sgn00": 59
    }
  },
  {
    "path": "src/main/java/duke/util/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sgn00"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sgn00"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sgn00"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sgn00"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sgn00"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sgn00"
        },
        "content": " * Deals with user interaction (input and output)."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sgn00"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sgn00"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sgn00"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    private Scanner scanner;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sgn00"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sgn00"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sgn00"
        },
        "content": "     * Prints the greeting message."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sgn00"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    public void printHello() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sgn00"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sgn00"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sgn00"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sgn00"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\\nWhat can I do for you?\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sgn00"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sgn00"
        },
        "content": "     * Helps print any message to standard out."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sgn00"
        },
        "content": "     * @param message Message to be printed."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sgn00"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    public void print(String message) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sgn00"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sgn00"
        },
        "content": "     * Obtains a line of input from user and trims whitespace."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sgn00"
        },
        "content": "     * @return Input as a string."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sgn00"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    public String readInput() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        return scanner.nextLine().trim();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sgn00"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sgn00": 44
    }
  },
  {
    "path": "src/test/java/duke/util/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sgn00"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sgn00"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sgn00"
        },
        "content": "import duke.command.AddCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sgn00"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sgn00"
        },
        "content": "import duke.exception.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sgn00"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sgn00"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sgn00"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sgn00"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sgn00"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sgn00"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    public void parse_deadlineTask_correctCommand() throws InvalidDescriptionException, InvalidCommandException,"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sgn00"
        },
        "content": "            InvalidEventException, InvalidDeadlineException, InvalidDateFormatException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        Command command \u003d Parser.parse(\"deadline dsaasd /by 2016-03-23\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        assertTrue(command instanceof AddCommand);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sgn00"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    public void parse_invalidDateFormat_exceptionThrown() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        assertThrows(InvalidDateFormatException.class, ()-\u003e {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sgn00"
        },
        "content": "            Parser.parse(\"event dasda /at 2034-23232-12\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        });"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sgn00"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sgn00": 25
    }
  },
  {
    "path": "src/test/java/duke/util/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sgn00"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sgn00"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sgn00"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sgn00"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sgn00"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sgn00"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sgn00"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sgn00"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sgn00"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sgn00"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sgn00"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sgn00"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sgn00"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sgn00"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sgn00"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sgn00"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sgn00"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    public void addTask_validInput_storedCorrectly() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        TaskList tasks \u003d new TaskList(new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        Todo todo \u003d new Todo(\"test1\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        Deadline deadline \u003d new Deadline(\"test2\", LocalDate.now());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        Event event \u003d new Event(\"test3\", LocalDate.now());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        tasks.addTask(todo);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        tasks.addTask(deadline);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        tasks.addTask(event);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        List\u003cTask\u003e lst \u003d new ArrayList\u003c\u003e(Arrays.asList(todo, deadline, event));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        assertIterableEquals(lst, tasks.getList());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sgn00"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    public void deleteTask_validInput_successfulDelete() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        Todo todo \u003d new Todo(\"test1\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        Deadline deadline \u003d new Deadline(\"test2\", LocalDate.now());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        Event event \u003d new Event(\"test3\", LocalDate.now());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        TaskList tasks \u003d new TaskList(new ArrayList\u003c\u003e(Arrays.asList(todo, deadline, event)));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        tasks.deleteTask(1);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        List\u003cTask\u003e lst \u003d new ArrayList\u003c\u003e(Arrays.asList(deadline, event));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        assertIterableEquals(lst, tasks.getList());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sgn00"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sgn00": 41
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sgn00"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sgn00"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sgn00"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sgn00"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sgn00"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "sgn00": 5
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sgn00"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "-": 37,
      "sgn00": 1
    }
  }
]
