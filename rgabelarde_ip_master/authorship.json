[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "# Moco project template"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "1. Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Open or Import`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "1. After the importing is complete, locate the `src/main/java/Moco.java` file, right-click it, and choose `Run Moco.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    ____        _        "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      }
    ],
    "authorContributionMap": {
      "rgabelarde": 2,
      "-": 24
    }
  },
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    mainClassName \u003d \"duke.Launcher\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    archiveBaseName \u003d \"Moco\""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    archiveVersion \u003d \"2.0\""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    toolVersion \u003d \u00278.32\u0027"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rgabelarde": 18,
      "-": 43
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "Moco is a Personal Assistance Chatbot that helps you to "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "keep track of various things. It was designed to learn how to build"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "small software incrementally."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "### `help` - shows a message explaining how to use the application"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "Shows commands with format to use Moco"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "`help`"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "### `Todo` - Creates task without any date/time attached"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "Creates task without any date/time attached to it and "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "adds it to the task list"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "`todo (task description)`"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "`Got it. I\u0027ve added this task:` \\"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "`[T][✗] borrow book`\\"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "`Now you have x tasks in the list.`"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "### `Deadline` - Creates task that needs to be done before a specific date/time"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "Creates task that needs to be done before a specific date/time and "
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "adds it to the task list"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "`deadline (task description) /by dd-mm-yyyy`"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "`Got it. I\u0027ve added this task:`\\"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "`[D][✗] return book (by: 12 Dec 2020)`\\"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "`Now you have x tasks in the list.`"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "### `Event` - Creates task that start at a specific time and ends at a specific time"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "Creates task that start at a specific time and ends at a specific time "
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "and adds it to the task list"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "`event (task description) /at dd-mm-yyyy`"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "`Got it. I\u0027ve added this task:`\\"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "`[E][✗] project meeting (at: 20 May 2021)`\\"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "`Now you have x tasks in the list.`"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "### `list` - returns list of tasks entered/created"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "Store tasks entered and display them back to"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "the user when requested (Shows list of tasks entered)"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "`list`"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "`Here are the tasks in your list` \\"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "`1. [T][✗] borrow book` \\"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "`2. [D][✗] return book (by: 12 Dec 2020)` \\"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "`3. [E][✗] project meeting (at: 20 May 2021)`"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "### `done` - marks selected task as done"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "Shows that task has been marked done"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "`done 1`"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "`Nice! I\u0027ve marked this task as done:` \\"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "`[T][✓] borrow book` "
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "### `find` - finds tasks with specified keyword"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "Shows a list of the tasks within task listed"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "with the specified keyword"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "`find book`"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "`Here are the tasks in your list with your requested keyword:` \\"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "`1. [T][✗] borrow book` \\"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "`2. [D][✗] return book (by: 12 Dec 2020)`"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "### `delete` - delete tasks at specified index"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "Deletes task listed at specified index from"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "current task list created/saved"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "`delete 1`"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "`Noted. I\u0027ve removed this task:` \\"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "`1. [T][✗] borrow book`"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "###Saving the data"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "Moco Task Bot task list is saved in the hard disk automatically after any command that changes the data. "
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "There is no need to save manually."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "rgabelarde": 123,
      "-": 13
    }
  },
  {
    "path": "output/test/test/moco/logic/tasklist.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "T | ✘ | for testing"
      }
    ],
    "authorContributionMap": {
      "rgabelarde": 1
    }
  },
  {
    "path": "src/main/java/duke/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "import javafx.geometry.Insets;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "import javafx.scene.layout.Background;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "import javafx.scene.layout.BackgroundFill;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "import javafx.scene.layout.CornerRadii;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "import javafx.scene.paint.Color;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "/**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": " */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        db.setBackground(new Background(new BackgroundFill(Color.LIGHTGREY, CornerRadii.EMPTY, Insets.EMPTY)));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rgabelarde": 67
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "import duke.logic.Parser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "import duke.logic.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "import duke.logic.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     * Constructor to initialise Moco with specific filepath"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     * If expected error is met, MocoException is thrown and"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     * user is prompted."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     * @param /filepath file path of saved tasklist."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    public Duke(String filePath) throws MocoException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        ui \u003d new Ui(tasks);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     * You should have your own function to generate a response to user input."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     * Replace this stub with your completed method."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        String parsed;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            parsed \u003d Parser.parse(input, tasks, ui, storage);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        } catch (MocoException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            parsed \u003d e.getMessage();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        return parsed;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     * Starts Moco"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     * If the user inputs \"bye\", Moco closes, saving task list"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        String command \u003d \"\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        while (!command.equals(\"bye\")) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                String input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                command \u003d Parser.parse(input, tasks, ui, storage);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            } catch (MocoException e) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        sc.close();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    public static void main(String[] args) throws MocoException {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        new Duke(\"tasklist.txt\").run();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rgabelarde": 61,
      "-": 2
    }
  },
  {
    "path": "src/main/java/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rgabelarde": 12
    }
  },
  {
    "path": "src/main/java/duke/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    private Duke duke \u003d new Duke(\"tasklist.txt\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    public Main() throws MocoException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            stage.setTitle(\"Moco Task Bot\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rgabelarde": 32
    }
  },
  {
    "path": "src/main/java/duke/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "import static java.lang.Thread.sleep;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.png\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/duke.png\"));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        String response \u003d Ui.printGreeting();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        response +\u003d Ui.showStartingTaskList();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        );"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        );"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "//        if (response.equals(\"Goodbye\")) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "//            Platform.exit();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "//        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rgabelarde": 64
    }
  },
  {
    "path": "src/main/java/duke/MocoException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "public class MocoException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     * Constructor to throw exception for Moco"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     * If expected error is met, Exception is thrown and"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     * user is prompted."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     *"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     * @param errorMessage message for error that occurred."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    public MocoException(String errorMessage) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rgabelarde": 14
    }
  },
  {
    "path": "src/main/java/duke/logic/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "package duke.logic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "import duke.MocoException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    private enum type {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        DEADLINE {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            public String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                return \"deadline\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        },"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        DELETE {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                return \"delete\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        },"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        EVENT {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            public String toString() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                return \"event\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        },"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        FIND {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            public String toString() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                return \"find\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        },"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        TODO {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            public String toString() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                return \"todo\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        },"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     * Processes/parses commands input to Moco"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     * If the command is invalid, Exception is thrown and"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     * user is prompted for a different command."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     * @param input   user input (command)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     * @param tasks   TaskList to keep tasks"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     * @param ui      ui"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     * @param storage to save tasks from tasklist"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     * @return whether or not a command/userInput is valid"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     * @throws MocoException If command is not valid."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    public static String parse(String input, TaskList tasks, Ui ui, Storage storage) throws MocoException {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        String result;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        if (input.equals((\"bye\"))) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            storage.Save();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            result \u003d ui.stopBot();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        } else if (input.equals(\"hi\") || input.equals(\"hello\")) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            result \u003d ui.printGreeting();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        } else if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            if (tasks.size() \u003e 0) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                assert tasks.size() \u003d\u003d 0;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                result \u003d ui.showTaskList(tasks);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                result \u003d \"You have no tasks\";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            result \u003d ui.showTaskList(tasks);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        } else if (input.equals(\"help\")) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            result \u003d helpCommand();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        } else if (input.contains(\"done\")) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            result \u003d doneCommand(input, tasks, storage, ui);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            if (input.contains(type.TODO.toString())) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                result \u003d toDoCommand(input, tasks, storage, ui);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            } else if (input.contains(type.DEADLINE.toString())) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                result \u003d deadlineCommand(input, tasks, storage, ui);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            } else if (input.contains(type.EVENT.toString())) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                result \u003d eventCommand(input, tasks, storage, ui);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            } else if (input.contains(type.DELETE.toString())) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                result \u003d deleteCommand(input, tasks, storage, ui);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            } else if (input.contains(type.FIND.toString())) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                result \u003d findCommand(input, tasks, storage, ui);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                throw new MocoException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    private static String helpCommand() {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        String intro \u003d \"Hello! Here are the current commands you can use to make your tasklist:\\n\\n\";"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        String list \u003d \"list: prints current task list\\n\";"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        String done \u003d \"done [index]: marks task at index done\\n\";"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        String todo \u003d \"todo [description]: creates todo task\\n\";"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        String deadline \u003d \"deadline [description] /by dd-mm-yyyy: creates deadline task with deadline\\n\";"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        String event \u003d \"event [description] /at dd-mm-yyyy: creates event task with date\\n\";"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        String find \u003d \"find [keyword] : prints tasks with keyword in current task list\\n\";"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        String help \u003d intro + list + done + todo + deadline + event + find;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        return help;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    private static String findCommand(String input, TaskList tasks, Storage storage, Ui ui) throws MocoException {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            if (input.length() \u003e 5) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                String keyword \u003d input.substring(5);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                TaskList tl \u003d tasks.findTasks(keyword);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                if (tl.size() \u003e 0) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                    return ui.findTasks(tl);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                    throw new MocoException(\" ☹ OOPS!!! You have no task that contains the keyword \" + keyword + \"!\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                throw new MocoException(\" ☹ OOPS! What task are you looking for? Please specify a keyword.\");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        } catch (MocoException e) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            throw new MocoException(e.getMessage());"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    private static String doneCommand(String input, TaskList tasks, Storage storage, Ui ui) throws MocoException {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            if (input.length() \u003e 5) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                int index \u003d Integer.parseInt(input.substring(5)) - 1;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                tasks.get(index).markAsDone();"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                storage.Save();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                return ui.doneTask(tasks.get(index));"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                throw new MocoException(\" ☹ OOPS!!! What task did you complete? Please specific a valid task index.\");"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            throw new MocoException(\" ☹ OOPS!!! You went out of the valid values, please specific a valid task index.\");"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        } catch (MocoException e) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            throw new MocoException(e.getMessage());"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    private static String toDoCommand(String input, TaskList tasks, Storage storage, Ui ui) throws MocoException {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            if (input.length() \u003e 5) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                Todo t \u003d new Todo(input.substring(5));"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                tasks.addTask(t);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                storage.Save();"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                return ui.addTask(t, tasks);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                throw new MocoException(\"☹ Insufficient details! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            throw new MocoException(e.getMessage());"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    private static String deadlineCommand(String input, TaskList tasks, Storage storage, Ui ui) throws MocoException {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            String[] s \u003d input.split(\"/by \", 2);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            if (s[0].length() \u003e 9) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                String[] s2 \u003d s[1].split(\"-\", 3);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                LocalDate by \u003d LocalDate.parse(s2[2] + \"-\" + s2[1] + \"-\" + s2[0]);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                String[] desc \u003d s[0].split(\" \", 2);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                Deadline dl \u003d new Deadline(desc[1], by);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                tasks.addTask(dl);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                storage.Save();"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                return ui.addTask(dl, tasks);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                throw new MocoException(\" ☹ Insufficient details! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            throw new MocoException(\"Date not/wrongly entered! \""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                    + \"(Please provide in this format: deadline description /by dd-mm-yyyy\");"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            throw new MocoException(\" ☹ Date wrongly entered, please remember to format date in dd-MM-yyyy\");"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    private static String eventCommand(String input, TaskList tasks, Storage storage, Ui ui) throws MocoException {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            String[] s \u003d input.split(\"/at \", 2);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            if (s[0].length() \u003e 6) {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                String[] s2 \u003d s[1].split(\"-\", 3);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                LocalDate at \u003d LocalDate.parse(s2[2] + \"-\" + s2[1] + \"-\" + s2[0]);"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                String[] desc \u003d s[0].split(\" \", 2);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                Event e \u003d new Event(desc[1], at);"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                tasks.addTask(e);"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                storage.Save();"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                return ui.addTask(e, tasks);"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                throw new MocoException(\" ☹ Insufficient details! The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            throw new MocoException(\"Date not/wrongly entered! (Please provide in this format: \""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                    + \"event description /at dd-mm-yyyy\");"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            throw new MocoException(\" ☹ Date wrongly entered, please remember to format date in dd-MM-yyyy!\");"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        }"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    }"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    private static String deleteCommand(String input, TaskList tasks, Storage storage, Ui ui) throws MocoException {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            if (input.length() \u003e 7) {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                int index \u003d Integer.parseInt(input.substring(7)) - 1;"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                Task t \u003d tasks.get(index);"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                tasks.deleteTask(index);"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                storage.Save();"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                return ui.deleteTask(t);"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                throw new MocoException(\"Please provide the index of the task you would like to remove.\");"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            }"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            throw new MocoException(\"The index you specified is not valid. Please try again.\");"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            throw new MocoException(e.getMessage());"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        }"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    }"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "}"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "rgabelarde": 221
    }
  },
  {
    "path": "src/main/java/duke/logic/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "package duke.logic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "import duke.MocoException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    private File taskList;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     * Constructor for Storage"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     * @param filePath File path for previously saved task list."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        this.taskList \u003d new File(filePath);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     * Returns arraylist of tasks loaded from given file name."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     * If no file is found, a new one is created with an empty arraylist"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     * @return Task ArrayList"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     * @throws MocoException If failure to create file or access file."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws MocoException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            if (taskList.exists()) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                FileReader fr \u003d new FileReader(taskList);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                BufferedReader br \u003d new BufferedReader(fr);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                String input;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                while ((input \u003d br.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                    String[] task \u003d input.split(\" \\\\| \", 4);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                    addToTaskList(task, tasks);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                fr.close();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                    taskList.createNewFile();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                } catch (IOException ex) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                    throw new MocoException(ex.getMessage());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            throw new MocoException(\"Unable to find file of name \u0027tasklist :(\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            throw new MocoException(\"Error accessing file :(\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    private void addToTaskList(String[] s, ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        boolean isDone \u003d s[1].equals(\"\\u2713\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        System.out.println(\"s[1]: \" + s[1]);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        System.out.println(isDone);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        switch (s[0]) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            case \"T\":"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                Todo t \u003d new Todo(s[2], isDone);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                tasks.add(t);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            case \"D\":"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                LocalDate by \u003d LocalDate.parse(s[3]);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                Deadline dl \u003d new Deadline(s[2], isDone, by);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                tasks.add(dl);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            case \"E\":"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                LocalDate at \u003d LocalDate.parse(s[3]);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                Event e \u003d new Event(s[2], isDone, at);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                tasks.add(e);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    protected void Save() throws MocoException {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            FileWriter newList \u003d new FileWriter(taskList);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            for (Task t : tasks) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                newList.write(t.saveText());"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            newList.flush();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            newList.close();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            throw new MocoException(\"Error saving update to task list\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rgabelarde": 101
    }
  },
  {
    "path": "src/main/java/duke/logic/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "package duke.logic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     * Constructor for Tasklist for those without a saved tasklist."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     * Constructor for Tasklist for those with saved tasklist."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     * @param tasks tasks in the saved task list."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     * Add specified task to tasklist."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     * @param t task to be added to task list."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    public void addTask(Task t) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        tasks.add(t);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     * Retrieved task with specified index."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     * @param index index of task to be retrieved."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     * @return Task of specified index."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    public Task get(int index) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        return tasks.get(index);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     * Delete specified task from tasklist."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     * @param index index of task to be deleted."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     * @return Task of specified index."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    public Task deleteTask(int index) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        return tasks.remove(index);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     * Returns current size of task list."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     *"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     * @return Task list size."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        return this.tasks.size();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     * Find tasks with specified keyword from tasklist."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     *"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     * @param keyword keyword of tasks to search for."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     * @return TaskList of tasks with specified keyword."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    public TaskList findTasks(String keyword) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        TaskList tl \u003d new TaskList();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        for (Task t : tasks) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            if (t.toString().contains(keyword)) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                tl.addTask(t);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        return tl;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        String s \u003d \"\";"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            s +\u003d (i + 1) + \". \" + tasks.get(i) + \"\\n\";"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        return s;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rgabelarde": 88
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    protected LocalDate by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     * Constructor for Deadline"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     * @param description description of deadline task."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     * @param by          due date of deadline task (in dd-mm-yyyy format)."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    public Deadline(String description, LocalDate by) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     * Constructor for Deadline"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     * @param description description of deadline task."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     * @param isDone      whether or not a task has been done."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     * @param by          due date of deadline task (in dd-mm-yyyy format)."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    public Deadline(String description, boolean isDone, LocalDate by) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     * Returns task printing with proper formatting."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     * @return String with task formatting"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    public String saveText() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        return \"D | \" + getStatusIcon() + \" | \" + description + \" | \" + by + \"\\n\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        return \"[D]\" + super.toString() + \"(by: \" + by.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy\")) + \")\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rgabelarde": 46
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    protected LocalDate at;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     * Constructor for Event"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     * @param description description of event task."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     * @param at          due date of event task (in dd-mm-yyyy format)."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    public Event(String description, LocalDate at) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     * Constructor for Event"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     * @param description description of event task."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     * @param isDone      whether or not a task has been done."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     * @param at          due date of event task (in dd-mm-yyyy format)."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    public Event(String description, boolean isDone, LocalDate at) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     * Returns task printing with proper formatting."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     * @return String with task formatting"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    public String saveText() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        return \"E | \" + getStatusIcon() + \" | \" + description + \" | \" + at + \"\\n\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        return \"[E]\" + super.toString() + \"(at: \" + at.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy\")) + \")\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rgabelarde": 46
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     * Constructor for Task"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     * @param description description of task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     * @param isDone      whether or not a task has been done."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     * Changes task completion symbol from boolean value"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     * @return String with symbol formatting"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //returns tick or X symbol accordingly"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    public abstract String saveText();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rgabelarde": 37
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     * Constructor for Todo"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     * @param description description of todo task."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     * Constructor for Todo"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     * @param description description of todo task."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     * @param isDone      whether or not a task has been done."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    public Todo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     * Returns task printing with proper formatting."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     * @return String with task formatting"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    public String saveText() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        return \"T | \" + getStatusIcon() + \" | \" + description + \"\\n\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rgabelarde": 38
    }
  },
  {
    "path": "src/main/java/duke/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "import duke.logic.TaskList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    protected static TaskList tasks;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     * Constructor for Ui, initialises allowing for user inputs"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    public Ui(TaskList tasks) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     * Prints previously saved task list for user"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    public static String showStartingTaskList() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        if (tasks.size() \u003e 0) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            return \"\\nYou have a saved list! Here: \\n\" + tasks.toString();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            return \"\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "//    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "//     * Gets user input to Moco"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "//     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "//     * @return new user input/command."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "//     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "//    public String getInput() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "//        return userInput.nextLine();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     * Prints statements to user when Moco starts up (initialises)."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    public String startBot() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "//        printBorder();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "//        System.out.println(\"Hello I\u0027m Moco, a task list bot to help you stay on top of your tasks!\\n\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "//        System.out.println(\"What can I do for you?\\n\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "//        printBorder();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        return \"Hello I\u0027m Moco, a task list bot to help you stay on top of your tasks!\\n\""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                + \"What can I do for you?\\n\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     * Prints statements to user when Moco stops (end)."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    public String stopBot() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        //printBorder();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        //System.out.println(\"Bye. Moco hopes to see you again soon!\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        //printBorder();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        return \"Bye. Moco hopes to see you again soon!\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     * Prints statements to user when user says \"hi\" or \"hello\"."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    public static String printGreeting() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "//        printBorder();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "//        System.out.println(\"Hello! My name is Moco, I am excited to help! c:\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "//        printBorder();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        return \"Hello! My name is Moco, I am excited to help! c:\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     * Prints border frame for user (easier readability)"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    public void printBorder() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        System.out.println(\"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     * Prints requested task list for user"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     *"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     * @param tasks tasks to print as a list"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    public String showTaskList(TaskList tasks) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "//        printBorder();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "//        System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "//        System.out.println(tasks);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "//        printBorder();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        return \"Here are the tasks in your list:\\n\" + tasks;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     * Prints a prompt to congratulate user for completing specified task"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     *"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     * @param t specified task that is completed"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    public String doneTask(Task t) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "//        printBorder();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "//        System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "//        System.out.println(t);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "//        printBorder();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        return \"Nice! I\u0027ve marked this task as done:\\n\" + t;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     * Prints requested task list for user"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     * for \"Find\" command with specified keyword"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     *"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     * @param taskList tasks to print as a list"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     */"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    public String findTasks(TaskList taskList) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "//        System.out.println(\"Here are the tasks in your list with your requested keyword: \\n\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "//        System.out.println(taskList);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "//        printBorder();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        return \"Here are the tasks in your list with your requested keyword: \\n\""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                + taskList;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     * Prints confirmation that specified task has been deleted"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     *"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     * @param task task to be deleted"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     */"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    public String deleteTask(Task task) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "//        System.out.println(\"Noted. I\u0027ve removed this task:\\n\" + task);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "//        printBorder();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        return \"Noted. I\u0027ve removed this task:\\n\" + task;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     * Prints confirmation that specified task has been added"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     * to specified task list, along with current number of tasks."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     *"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     * @param task  task to be deleted"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     * @param tasks taskList that task has been added to"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "     */"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    public String addTask(Task task, TaskList tasks) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "//        System.out.println(\"Got it. I\u0027ve added this task:\\n\" + task);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "//        System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\\n\");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "//        printBorder();"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        String result \u003d \"Got it. I\u0027ve added this task:\\n\" + task"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                + \"\\nNow you have \" + tasks.size() + \" tasks in the list.\\n\";"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rgabelarde": 141
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" fillHeight\u003d\"false\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"400.0\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "         minWidth\u003d\"-Infinity\" prefHeight\u003d\"90.0\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "         xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" alignment\u003d\"CENTER\" contentDisplay\u003d\"CENTER\" minHeight\u003d\"-Infinity\" prefWidth\u003d\"266.0\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            \u003cfont\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                \u003cFont name\u003d\"Calibri\" size\u003d\"14.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            \u003c/font\u003e\u003c/Label\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"60.0\" fitWidth\u003d\"60.0\" preserveRatio\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                \u003cInsets right\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            \u003c/HBox.margin\u003e\u003c/ImageView\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "rgabelarde": 25
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            prefWidth\u003d\"800.0\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            fx:controller\u003d\"duke.MainWindow\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"42.0\" prefWidth\u003d\"320.0\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                   promptText\u003d\"Enter command here\" AnchorPane.bottomAnchor\u003d\"1.0\"/\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"320.0\" layoutY\u003d\"557.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                prefHeight\u003d\"42.0\" prefWidth\u003d\"88.0\" text\u003d\"Send\"/\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" layoutY\u003d\"-1.0\" prefHeight\u003d\"559.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"555.0\" prefWidth\u003d\"375.0\" /\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "rgabelarde": 23
    }
  },
  {
    "path": "src/test/java/duke/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    public void dummyTest() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rgabelarde": 12
    }
  },
  {
    "path": "src/test/java/duke/logic/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "package duke.logic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "import duke.logic.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    public void addTest1() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        ArrayList\u003cTask\u003e al \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        al.add(new Todo(\"Test task 1: Todo\"));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        TaskList tasks \u003d new TaskList(al);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        tasks.addTask(new Event(\"Test task 2: Event\", LocalDate.parse(\"12-02-2020\")));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        tasks.addTask(new Deadline(\"Test task 3: Deadline\", LocalDate.parse(\"12-12-2020\")));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        assertEquals(3, al.size());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    public void deleteTest1() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        ArrayList\u003cTask\u003e al \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        al.add(new Todo(\"Test task 1: Todo\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        TaskList tasks \u003d new TaskList(al);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        tasks.addTask(new Event(\"Test task 2: Event\", LocalDate.parse(\"12-02-2020\")));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        tasks.addTask(new Deadline(\"Test task 3: Deadline\", LocalDate.parse(\"12-12-2020\")));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        tasks.addTask(new Todo(\"Test task 4: Todo\"));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        tasks.addTask(new Todo(\"Test task 5: Todo\"));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        tasks.deleteTask(1);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        tasks.deleteTask(1);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        assertEquals(3, al.size());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    public void sizeTest1() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        ArrayList\u003cTask\u003e al \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        al.add(new Todo(\"Test task 1: Todo\"));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        TaskList tasks \u003d new TaskList(al);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        tasks.addTask(new Event(\"Test task 2: Event\", LocalDate.parse(\"12-02-2020\")));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        tasks.addTask(new Deadline(\"Test task 3: Deadline\", LocalDate.parse(\"12-12-2020\")));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        tasks.addTask(new Todo(\"Test task 4: Todo\"));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        tasks.addTask(new Todo(\"Test task 5: Todo\"));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        assertEquals(5, tasks.size());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rgabelarde": 55
    }
  },
  {
    "path": "src/test/java/duke/logic/tasklist.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "T | ✘ | for testing"
      }
    ],
    "authorContributionMap": {
      "rgabelarde": 1
    }
  },
  {
    "path": "tasklist.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "E | ✘ | eventTask  | 2020-10-10"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "T | ✓ | 123"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "D | ✘ | test  | 2020-12-12"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "E | ✘ | fasdf  | 2020-10-12"
      }
    ],
    "authorContributionMap": {
      "rgabelarde": 4
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "todo"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "todo working example"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "deadline no date"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "deadline test /by wrong format"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "deadline test /by no date"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "deadline /by 12-12-2020"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "event"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "event no date"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "event test /by wrong format"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "event test /by no date"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "event /by 12-12-2020"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "list"
      }
    ],
    "authorContributionMap": {
      "rgabelarde": 13
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\Moco.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "java -classpath ..\\bin Moco \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "rgabelarde": 2,
      "-": 19
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "java -classpath ../bin Moco \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "rgabelarde": 2,
      "-": 36
    }
  }
]
