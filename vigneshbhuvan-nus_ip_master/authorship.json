[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    archiveVersion \u003d \"0.2.0\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "sourceCompatibility\u003dJavaVersion.VERSION_11"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "targetCompatibility\u003dJavaVersion.VERSION_11"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027  "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "group \u0027duke\u0027"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "application {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    mainClassName \u003d \"Launcher\""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "vigneshbhuvan-nus": 33,
      "-": 26
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "T|false|Rule the 7 Kingdoms"
      }
    ],
    "authorContributionMap": {
      "vigneshbhuvan-nus": 1
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "Duke is a Personal Assistant Chatbot that helps a person to keep track of various things."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "### Adding a task"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "Duke allows a user to add a todo (task without any date/time attached to it), deadline (task that needs to be done before a specific date/time) or an event (task that starts at a specific time and ends at a specific time) task."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "### Deleting a task"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "Duke allows a user to remove an existing task from the list."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "### Viewing the tasks list"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "Duke allows a user to view all the tasks available in the list."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "### Marking a task as done"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "Duke allows a user to mark a task as done."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "### Finding a task"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": " Duke allows a user to find a task by searching for a keyword."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "### `todo` - Adds a todo task."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "By typing the `todo` command together with the description of the task, a user can insert a todo task into the tasks list."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "`todo read book`"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     [T][!!!!] read book"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    Now you have 1 task(s) in the list."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    "
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "### `deadline` - Adds a deadline task."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "By typing the `deadline` command together with the description of the task, followed by a `/by` and the date of the deadline, a user can insert a deadline task into the tasks list. *Ensure* that the date entered is of the format: \"YYYY-MM-DD\"."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "`deadline submission /by 2020-02-19 1800`"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     [D][!!!!] submission (by: Feb 19 2020 1800)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    Now you have 2 task(s) in the list."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    "
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "### `event` - Adds an event task."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "By typing the `event` command together with the description of the task, followed by an `/at` and the date of the event, a user can insert an event task into the tasks list. *Ensure* that the date entered is of the format: \"YYYY-MM-DD\"."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "`event party /at 2020-02-06 1400`"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     [E][!!!!] party (at: Feb 6 2020 1400)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    Now you have 3 task(s) in the list."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "### `list` - Displays all the tasks in the tasks list."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "By typing the `list` command, a user can see all the tasks available in the tasks list."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "`list`"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    1.[T][!!!!] read book"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    2.[D][!!!!] submission (by: Feb 19 2020 1800)"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    3.[E][!!!!] party (at: Feb 6 2020 1400)"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    "
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "### `done` - Marks a task as done."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "By typing the `done` command followed by the index of the task, a user can mark that task as done."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "`done 1`"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    [T][Done] read book"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "### `delete` - Deletes the task from the tasks list."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "By typing the `delete` command followed by the index of the task, a user can delete that task from the tasks list."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "`delete 2`"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    Noted. I\u0027ve removed this task:"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     [D][!!!!] submission (by: Feb 19 2020 1800)"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    Now you have 2 task(s) in the list."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        "
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "### `find` - Displays all the tasks that contains the keyword provided."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "By typing the `find` command followed by the keyword, a user can see the list of tasks matching that keyword."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "`find book`"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    Here are the matching tasks in your list:"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    1.[T][Done] read book"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        "
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "### `bye` - Terminates the app."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "By typing the `bye` command, a user can exit from the duke program."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "`bye`"
      }
    ],
    "authorContributionMap": {
      "vigneshbhuvan-nus": 95,
      "-": 21
    }
  },
  {
    "path": "gradlew.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "@rem  Gradle startup script for Windows"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Set local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "set DIRNAME\u003d%~dp0"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "set APP_BASE_NAME\u003d%~n0"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "set APP_HOME\u003d%DIRNAME%"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Find java.exe"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "if defined JAVA_HOME goto findJavaFromJavaHome"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_EXE\u003djava.exe"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ":findJavaFromJavaHome"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "if exist \"%JAVA_EXE%\" goto init"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ":init"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Get command-line arguments, handling Windows variants"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ":win9xME_args"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Slurp the command line arguments."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "set CMD_LINE_ARGS\u003d"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "set _SKIP\u003d2"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ":win9xME_args_slurp"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "if \"x%~1\" \u003d\u003d \"x\" goto execute"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "set CMD_LINE_ARGS\u003d%*"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ":execute"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Setup the command line"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Execute Gradle"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ":end"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "@rem End local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ":fail"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "rem the _cmd.exe /c_ return code!"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "exit /b 1"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ":mainEnd"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": ":omega"
      }
    ],
    "authorContributionMap": {
      "vigneshbhuvan-nus": 1,
      "-": 83
    }
  },
  {
    "path": "settings.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "rootProject.name \u003d \u0027duke\u0027"
      }
    ],
    "authorContributionMap": {
      "vigneshbhuvan-nus": 1
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": " * Represents a Deadline task which has a description, a deadline date and a time."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    protected String time;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * Constructs a new Deadline instance."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * @param description Description of the task."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * @param date Date when the task is due."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * @param time Time when the task is due."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    public Deadline(String description, LocalDate date, String time) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * Overrides the Task\u0027s toString method"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * and it contains the mark, the description, as well as"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * the due date and time of the deadline."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * @return The String that represents the deadline\u0027s details."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        assert date !\u003d null : \"A due date should be entered to this deadline.\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \" \""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "                + time + \")\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "}"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "vigneshbhuvan-nus": 40
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * Constructs a DialogBox instance."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * @param text The message that is being displayed."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * @param img The image of the sender."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text is on the right."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * Creates a dialog box when the user wants to send a command."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * @param text The command message that the user wants to send to Duke."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * @param img The image of the user."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * @return The DialogBox instance."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * Creates a dialog box when Duke wants to send a message."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * @param text The message that Duke wants to show."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * @param img The Duke image."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * @return The DialogBox instance."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "vigneshbhuvan-nus": 80
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "import java.io.ByteArrayOutputStream;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": " * The Duke class is the main class,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": " * where the command processing happens."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    public static Ui uI;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    private static Parser parser;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    private static Storage storage;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * Construct a new Duke instance."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        uI \u003d new Ui();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        parser \u003d new Parser();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        storage \u003d new Storage();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * Function to generate a response to user input."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * @param input Command entered by the user"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * @return String representing Duke\u0027s response to the input command."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * @throws IOException If the file is corrupted or some error occurred during reading the data."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    protected String getResponse(String input) throws IOException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        // Create a stream to hold the output"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        ByteArrayOutputStream baos \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        PrintStream ps \u003d new PrintStream(baos);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        // Save the old System.out!"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        PrintStream old \u003d System.out;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        // Tell Java to use your special stream"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        System.setOut(ps);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        tasks \u003d storage.loadFile();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        if (input.contains(\"bye\")) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "            uI.printBye();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "                run(input);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "            } catch (DukeException d) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "                uI.printError(d);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "            } catch (DateTimeParseException d) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "                uI.printInvalidDateFormatError();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        return baos.toString();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    private static List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * Parses the input entered by the user."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * The following are valid commands that Duke can process:"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * list - lists all the tasks that are stored."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * done [index] - marks the task of a particular index as done."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * delete [index] - deletes the task of a particular index."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * todo [description] - adds the Todo task to the list."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * deadline [description] /by [date] [time] - adds the Deadline task to the list."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * event [description] /at [date] [time] - adds the Event task to the list."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * @param input Command entered by the user."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * @throws DukeException If the command is invalid or the task enquired doesn\u0027t exists."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * @throws DateTimeParseException If the date of the deadline or event is not formatted properly."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * @throws IOException If the file is corrupted or some error occurred during reading the data."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    private static void run(String input) throws DukeException, DateTimeParseException, IOException {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        TaskList taskList \u003d new TaskList(tasks);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        String command \u003d input;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        if (command.equals(\"list\")) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "            uI.displayTasks(tasks);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        } else if (command.contains(\"find\")) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "            uI.displayFoundTasks(taskList.findTask(parser.trimCommand(\"find\", command)));"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "            switch (parser.checkCommand(command)) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "                tasks \u003d taskList.markAsDone(command);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "                tasks \u003d taskList.deleteTask(command);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "                tasks \u003d taskList.addTask(command);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "            }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        storage.saveFile(tasks);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "vigneshbhuvan-nus": 98,
      "-": 3
    }
  },
  {
    "path": "src/main/java/DukeDuplicateTaskException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": " * The DukeDuplicateTaskException class extends the DukeException"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": " * class and it handles the duplicate task entered by the client."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "public class DukeDuplicateTaskException extends DukeException {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * Constructs a new DukeDuplicateTaskException instance."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * @param message User-friendly error message"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    public DukeDuplicateTaskException(String message) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * Overrides the toString method to show the error message."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * @return The error message."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        return getMessage();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "vigneshbhuvan-nus": 27
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": " * The DukeException class extends the Exception class and"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": " * it handles the input error by the client, such as invalid"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": " * command, as well as non-existent task enquired"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": " * by the client."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * Constructs a new DukeException instance."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * @param message User-friendly error message"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * Overrides the toString method to show the error message."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * @return The error message."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        return getMessage();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "vigneshbhuvan-nus": 29
    }
  },
  {
    "path": "src/main/java/DukeInvalidCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": " * The DukeInvalidCommandException class extends the DukeException"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": " * class and it handles the invalid command format entered by the client."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "public class DukeInvalidCommandException extends DukeException {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * Constructs a new DukeInvalidCommandException instance."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * @param message User-friendly error message"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    public DukeInvalidCommandException(String message) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * Overrides the toString method to show the error message."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * @return The error message."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        return getMessage();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "vigneshbhuvan-nus": 27
    }
  },
  {
    "path": "src/main/java/DukeInvalidTaskException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": " * The DukeInvalidTaskException class extends the DukeException"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": " * class and it handles the non-existent task enquired by the client."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "public class DukeInvalidTaskException extends DukeException {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * Constructs a new DukeInvalidTaskException instance."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * @param message User-friendly error message"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    public DukeInvalidTaskException(String message) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * Overrides the toString method to show the error message."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * @return The error message."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        return getMessage();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "vigneshbhuvan-nus": 27
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": " * Represents an Event task which has a description, a date and a time."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    protected String time;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * Constructs a new Event instance."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * @param description Description of the task."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * @param date Date when the task is due."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * @param time Time when the task is due."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    public Event(String description, LocalDate date, String time) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * Overrides the Task\u0027s toString method"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * and it contains the mark, the description, as well as"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * the due date and time of the event."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * @return The String that represents the event\u0027s details."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        assert time !\u003d null : \"A due time should be entered to this event.\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \" \""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "                + time + \")\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "vigneshbhuvan-nus": 39
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "vigneshbhuvan-nus": 11
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    private static final String STAGE_TITLE \u003d \"Duke\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * Starts the app\u0027s GUI by loading the resources from MainWindow.fxml."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * @param stage The stage of the GUI."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    public void start(Stage stage) throws IOException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        stage.setTitle(STAGE_TITLE);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        stage.setScene(scene);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        stage.show();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "vigneshbhuvan-nus": 33
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.jpg\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.jpg\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * Initializes the window."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * Stores the Duke instance in a variable."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * @param d The Duke\u0027s instance."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        dialogContainer.getChildren().addAll(DialogBox.getDukeDialog(Duke.uI.greet(), dukeImage));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    private void handleUserInput() throws IOException, DateTimeParseException {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        );"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "vigneshbhuvan-nus": 63
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": " * Parser class describes the behaviour of a"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": " * parser that parses commands entered by the client."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * Constructs a Parser instance."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    public Parser() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    private Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * Verifies whether the string entered"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * is a valid command. It will throw an exception if"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * the command is not valid (i.e. if the argument has no description"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * or the format of the command is not proper)."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * @param command The command string entered by the client."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * @return The String, regarding the type of the command entered."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * @throws DukeInvalidCommandException If the command is not valid."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    public String checkCommand(String command) throws DukeInvalidCommandException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        if (command.split(\" \").length !\u003d 1) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "            return getCommand(command);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        String wrongCmd \u003d getCommand(command);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        if (wrongCmd.equals(\"todo\") || wrongCmd.equals(\"deadline\") || wrongCmd.equals(\"event\")) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "            throw new DukeInvalidCommandException(\":( OOPS!!! The description of a \" + wrongCmd"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "                    + \" cannot be \" + \"empty.\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        throw new DukeInvalidCommandException(\":( OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * Extracts the command from the string entered by the client."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * @param command The String containing the command entered by the client."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * @return The String, regarding the command entered."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    private String getCommand(String command) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        return command.split(\" \")[0];"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * Trims the command of leading and trailing spaces."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * @param command The command string entered by the client."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * @return The String, regarding the command entered."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    public String trimCommand(String excepted, String command) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        return command.replace(excepted, \"\").trim();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "}"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "vigneshbhuvan-nus": 63
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": " * Storage class abstracts the I/O method of"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": " * reading and writing tasks from a file."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    private static ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * Constructs a Storage instance."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    public Storage() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * Loads the tasks from the file."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * @return The List of all the tasks loaded from the file."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * @throws IOException If an I/O error occurred."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    public ArrayList\u003cTask\u003e loadFile() throws IOException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        File file \u003d getFile();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        Scanner sc \u003d new Scanner(file);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "            String[] taskContent \u003d sc.nextLine().split(\"\\\\|\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "            String taskType \u003d taskContent[0];"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "            Boolean task_completion \u003d Boolean.parseBoolean(taskContent[1]);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "            String description \u003d taskContent[2];"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "            switch (taskType) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "            case \"T\":"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "                Task toDo \u003d new ToDo(description);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "                if (task_completion) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "                    toDo.markAsDone();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "                }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "                tasks.add(toDo);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "            case \"D\":"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "                Task deadLine \u003d new Deadline(description, getDate(taskContent[3]), getTime(taskContent[3]));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "                if (task_completion) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "                    deadLine.markAsDone();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "                }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "                tasks.add(deadLine);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "            case \"E\":"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "                Task event \u003d new Event(description, getDate(taskContent[3]), getTime(taskContent[3]));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "                if (task_completion) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "                    event.markAsDone();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "                }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "                tasks.add(event);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * Extracts the date of the task from the given string."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * @param s The string provided."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * @return a LocalDate"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    private LocalDate getDate(String s) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        return LocalDate.parse(s.substring(3, 13));"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * Extracts the time of the task from the given string."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * @param s The string provided."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * @return time in the format of a String"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    private String getTime(String s) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        return s.substring(14);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * Saves the List of tasks to the file."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * @param tasks The list of tasks."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * @throws IOException If an I/O error occurred."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    public void saveFile(List\u003cTask\u003e tasks) throws IOException {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        File file \u003d getFile();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        FileWriter writer \u003d new FileWriter(file);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "            if (task instanceof ToDo) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "                writer.write(\"T|\" + task.isDone + \"|\" + task.description + \"\\n\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "            } else if (task instanceof Deadline) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "                writer.write(\"D|\" + task.isDone + \"|\" + task.description + \"|by \" + ((Deadline) task).date + \" \" + ((Deadline) task).time + \"\\n\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "            } else if (task instanceof Event) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "                writer.write(\"E|\" + task.isDone + \"|\" + task.description + \"|at \" + ((Event) task).date + \" \" + ((Event) task).time + \"\\n\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "            }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        writer.close();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * Creates a file to store Duke\u0027s data if the file does not exist,"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * otherwise returns the existing file containing Duke\u0027s data."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * @return File, the file containing Duke\u0027s data."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * @throws IOException If an I/O error occurred."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    private File getFile() throws IOException {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        Path path \u003d Paths.get(System.getProperty(\"user.dir\"), \"data\", \"duke.txt\");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        if (!Files.exists(path)) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "            Files.createDirectories(path.getParent());"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "            Files.createFile(path);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        return new File(path.toString());"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "}"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "vigneshbhuvan-nus": 127
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": " * The Task class is the parent class of all the different"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": " * types of tasks (e.g. ToDo, Event, Deadline)"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": " * Gives a basic description of all the different types of tasks"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * Constructs a Task instance with isDone variable set to"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * false."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * @param description The description or the details of the task."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * Marks the task to be done"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * by setting the isDone property of a task to be true."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * Overrides the Object\u0027s toString method"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * to describe the details of the task e.g. Type, description"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * @return The String that represents the deadline\u0027s details."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        return String.format(\"[%s] %s\", isDone?  \"Done\" : \"!!!!\", description);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * This method compares this task with another and determine if they are equal."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * @param obj The task that needs to be compared with the current task."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * @return True if this task is equal to obj task."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    public boolean equals(Object obj) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        Task temp \u003d (Task) obj;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        return this.description.equals(temp.description);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "vigneshbhuvan-nus": 52
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": " * TaskList class defines the task management behaviors."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * Constructs a TaskList instance."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * @param tasks The List of tasks."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    public TaskList(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    private List\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    private void print(String s) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        System.out.println(s);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * Deletes the task from the tasks list,"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * then return the updated list."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * @param command The string containing the index of the task in the list to be deleted."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * @return The updated task list after the task deletion."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * @throws DukeInvalidTaskException If the task doesn\u0027t exist in the list."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    public List\u003cTask\u003e deleteTask(String command) throws DukeInvalidTaskException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        int i \u003d Integer.parseInt(command.split(\" \")[1]) - 1;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        if (i \u003e\u003d tasks.size() || i \u003c 0) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "            throw new DukeInvalidTaskException(\"There is no such task in the list, Your Grace!\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        print(\"Noted. I\u0027ve removed this task: \");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        print(\"  \" + tasks.get(i));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        tasks.remove(tasks.get(i));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        print(\"Now you have \" + tasks.size() + \" task(s) in the list.\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * Finds the tasks in the tasks list matching the entered keyword,"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * then return the list containing those tasks."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * @param keyword The string containing the description of the task in the list to be found."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * @return The list of tasks with the matching keyword description."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * @throws DukeInvalidTaskException If the task doesn\u0027t exist in the list."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    public List\u003cTask\u003e findTask(String keyword) throws DukeInvalidTaskException {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        List\u003cTask\u003e temp \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "            if (task.description.contains(keyword)) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "                temp.add(task);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "            }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        if (temp.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "            throw new DukeInvalidTaskException(\"There are no matching tasks in your list, Your Grace\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        return temp;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * Adds the task with the corresponding type,"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * and the description provided by the client."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * @param command The string containing the description of the task to be added in the list."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * @return The updated task list after the addition of the given task."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * @throws DateTimeParseException If the date provided in the task description is in an invalid format."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * @throws DukeInvalidCommandException If the description of the command entered is invalid."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * @throws DukeDuplicateTaskException If the description of the command matches an existing stored task."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    public List\u003cTask\u003e addTask(String command)"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "            throws DateTimeParseException, DukeInvalidCommandException, DukeDuplicateTaskException {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        Task task \u003d null;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        String taskType \u003d command.split(\" \")[0];"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        command \u003d command.substring(command.indexOf(\" \"));"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        switch (taskType) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "            task \u003d new ToDo(command.trim());"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "            task \u003d new Event(getDescription(command, \"/at \"), getDate(command, \"/at \"),"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "                    getTime(command, \"/at \"));"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "            task \u003d new Deadline(getDescription(command, \"/by \"), getDate(command, \"/by \"),"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "                    getTime(command, \"/by \"));"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "            throw new DukeInvalidCommandException(\":( OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        if (tasks.contains(task)) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "            throw new DukeDuplicateTaskException(\"OOPS!!! This task already exists in the list!\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        print(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        print(\"  \" + task);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        print(\"Now you have \" + tasks.size() + \" task(s) in the list.\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * Extracts the time of the task from the string entered by the client."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * @param command The string entered by the client."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * @param s The String to represent an event or a deadline task."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * @return The String, i.e. the time of the event or deadline task entered by the client."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    private String getTime(String command, String s) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        return command.split(s)[1].split(\" \")[1];"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * Extracts the description of the task from the string entered by the client."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * @param command The string entered by the client."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * @param s The String to represent an event or a deadline task."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * @return The String, i.e. the description of the event or deadline task entered by the client."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    private String getDescription(String command, String s) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        return command.split(s)[0].trim();"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * Extracts the date of the task from the string entered by the client."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * @param command The string entered by the client."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * @param s The String to represent an event or a deadline task."
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * @return LocalDate, i.e. the date of the event or deadline task entered by the client."
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    private LocalDate getDate(String command, String s) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        return LocalDate.parse(command.split(s)[1].trim().split(\" \")[0]);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * Marks the task as done in the tasks list,"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * then return the updated list."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * @param command The string containing the index of the task in the list to be marked as done."
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * @return The updated task list after marking the task as done."
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * @throws DukeInvalidTaskException If the task doesn\u0027t exist in the list."
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    public List\u003cTask\u003e markAsDone(String command) throws DukeInvalidTaskException {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        int i \u003d Integer.parseInt(command.split(\" \")[1]) - 1;"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        if (i \u003e\u003d tasks.size() || i \u003c 0) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "            throw new DukeInvalidTaskException(\"There is no such task in the list!\");"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        tasks.get(i).markAsDone();"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        print(\"Nice! I\u0027ve marked this task as done: \");"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        print(tasks.get(i).toString());"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "}"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "vigneshbhuvan-nus": 165
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": " * Represents a ToDo task which has a description."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * Constructs a new ToDo instance."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * @param description Description of the task."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * Overrides the Task\u0027s toString method"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * and it contains the mark and the description of the"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * todo."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * @return The String that represents the todo\u0027s details."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "vigneshbhuvan-nus": 26
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": " * Handles the (command line) user interface provided to the user."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": " * The Ui class provides utility methods to show various message types."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": " * Messages will be displayed in standard output."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * Constructs a Ui instance."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * Prints the string."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * @param s The string."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    private void print(String s) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        System.out.println(s);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * Prints all the tasks stored in the given list."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * @param tasks The list containing all the tasks."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * @throws DukeInvalidTaskException If the list of tasks is empty."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    public void displayTasks(List\u003cTask\u003e tasks) throws DukeInvalidTaskException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        if (tasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "            throw new DukeInvalidTaskException(\"There are no remaining tasks in the list\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        print(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d tasks.size(); i++) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "            print(i + \".\" + tasks.get(i - 1));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * Prints the list of all the tasks matching a string keyword."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * @param tasks The list containing all the tasks."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * @throws DukeInvalidTaskException If the task is not found."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    public void displayFoundTasks(List\u003cTask\u003e tasks) throws DukeInvalidTaskException {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        if (tasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "            throw new DukeInvalidTaskException(\"There are no matching tasks in your list\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        print(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d tasks.size(); i++) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "            print(i + \".\" + tasks.get(i - 1));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * Prints the error message."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * @param e The error that is being raised."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    public void printError(Exception e) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        print(e.toString());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        print(\"Please try again.\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * Prints the invalid date format error message."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    public void printInvalidDateFormatError() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        print(\"Please enter the date as yyyy-mm-dd followed by the time e.g. 2020-01-01 2359\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        print(\"Try again.\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * Displays a greeting by Duke."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    public String greet() {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        return \"Hello King Robert\\nWhat does your Grace need from the Hand?\\n\";"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * Displays the goodbye message."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * followed by a horizontal line."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    public void printBye() {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        print(\"I hope I have served you well my Lord. Seven Blessings to You, Your Grace!\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        System.exit(0);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "vigneshbhuvan-nus": 94
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "vigneshbhuvan-nus": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "vigneshbhuvan-nus": 19
    }
  },
  {
    "path": "src/test/java/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": " * DeadlineTest class is a test class for Deadline class."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * Tests the deadline\u0027s toString method for the valid format."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    public void testDeadlineToString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        LocalDate date \u003d LocalDate.parse(\"2020-02-02\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        Task deadLine \u003d new Deadline(\"return book\", date, \"1800\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        String expectedFormat \u003d \"[D][X] return book (by: Feb 2 2020 1800)\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        assertEquals(expectedFormat, deadLine.toString());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "vigneshbhuvan-nus": 24
    }
  },
  {
    "path": "src/test/java/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": " * EventTest class is a test class for Event class."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "public class EventTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * Tests the event\u0027s toString method for the valid format."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    public void testEventToString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        LocalDate date \u003d LocalDate.parse(\"2020-02-05\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        Task event \u003d new Event(\"project meeting\", date, \"2-4pm\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        String expectedFormat \u003d \"[E][X] project meeting (at: Feb 5 2020 2-4pm)\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        assertEquals(expectedFormat, event.toString());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "vigneshbhuvan-nus": 24
    }
  },
  {
    "path": "src/test/java/ToDoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": " * ToDoTest class is a test class for ToDo class."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "public class ToDoTest {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     * Tests the todo\u0027s toString method for the valid format."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    public void testTodoToString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        Task toDo \u003d new ToDo(\"read book\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        String expectedFormat \u003d \"[T][X] read book\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "        assertEquals(expectedFormat, toDo.toString());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "vigneshbhuvan-nus": 24
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "vigneshbhuvan-nus": 5
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "REM added stuff to compile all"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "dir /s /B ..\\src\\main\\java\\*.java \u003e sources.txt"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin @sources.txt"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "vigneshbhuvan-nus"
        },
        "content": "REM javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "vigneshbhuvan-nus": 7,
      "-": 20
    }
  }
]
