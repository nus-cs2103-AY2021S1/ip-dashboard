[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00276.0.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    mainClassName \u003d \"duke.Launcher\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    toolVersion \u003d \u00278.29\u0027"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aizatazhar": 18,
      "-": 43
    }
  },
  {
    "path": "data/tasks.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "E | 0 | Birthday | 06-05-2020 0000"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "D | 0 | Homework | 14-09-2020 2359"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "E | 1 | Math exam | 20-11-2020 1900"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "T | 0 | Clean room"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "T | 0 | Buy groceries"
      }
    ],
    "authorContributionMap": {
      "aizatazhar": 5
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "# Duke-it Task Manager User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "Duke-it is a desktop application for managing tasks by typing commands, while also having a Graphical User Interface (GUI)"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "* [Features](#features)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "* [Feature Details](#feature-details)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "* [Quick start](#quick-start)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "## Features"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "1. **Bye** - exits the application"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "1. **Deadline** - creates a new deadline task"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "1. **Delete** - deletes a task"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "1. **Done** - marks a task as complete"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "1. **Event** - creates a new event task"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "1. **Find** - finds task containing given keywords"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "1. **Help** - lists all available commands"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "1. **List** - lists all tasks"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "1. **Todo** -- creates a new todo task"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "1. **Sort** - sorts the task list by oldest date first"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "## Feature Details"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "### 1. Bye"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "Exits the application."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "**Usage**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "### `bye` "
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "```"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "bye"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "```"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "`Bye. Hope to see you again soon!` and subsequently app closes."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "---"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "### 2. Deadline"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "Creates a new deadline task with the associated due date. The specified date must follow the format `dd-MM-yyyy HHmm`."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "**Usage**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "### `deadline \u003cDESCRIPTION\u003e /by \u003cDATE\u003e` "
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "```"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "deadline Math homework /by 20-09-2020 2359"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "```"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "```"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "I\u0027ve added this task:"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "[D][✘] Math homework (by: 20 Sep 2020 23:59)"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "Now you have 1 tasks in the list"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "```"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "---"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "### 3. Delete"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "Deletes a task at an index. The specified index must be in the range of the task list size."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "**Usage**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "### `delete \u003cINDEX\u003e` "
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "```"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "```"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "```"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "Noted. I\u0027ve removed this task:"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "[D][✘] Math homework (by: 20 Sep 2020 23:59)"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "Now you have 4 tasks in the list."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "```"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "---"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "### 4. Done"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "Marks a task at an index as completed. The specified index must be in the range of the task list size."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "**Usage**"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "### `done \u003cINDEX\u003e` "
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "```"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "```"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "```"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "[T][✓] Buy groceries"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "```"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "---"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "### 5. Event"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "Creates a new event task with the associated event date. The specified date must follow the format `dd-MM-yyyy HHmm`."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "**Usage**"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "### `event \u003cDESCRIPTION\u003e /at \u003cDATE\u003e` "
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "```"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "event Birthday /at 06-05-2020 0000"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "```"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "```"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "I\u0027ve added this task:"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "[E][✘] Birthday (at: 06 May 2020 00:00)"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "Now you have 5 tasks in the list."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "```"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "---"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "### 6. Find"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "Finds and displays tasks containing given keywords. Keywords is case sensitive. Multiple keywords can be specified using ~ as a separator. "
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "**Usage**"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "### `find \u003cKEYWORDS\u003e` "
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "```"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "find Math ~ Clean ~ Medicine"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "```"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "```"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "Here are the tasks in your list that contain"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "\"Math\""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "\"Clean\""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "\"Medicine\""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "1. [E][✓] Math exam (at: 20 Nov 2020 19:00)"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "2. [T][✘] Clean room"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "```"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "---"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "### 7. Help"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "Displays all available commands."
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "**Usage**"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "### `help` "
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "```"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "help"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "```"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "```"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "Here are all the available commands:"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "bye"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "deadline \u003cdescription\u003e /by \u003cdate\u003e"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "delete \u003ctask index\u003e"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "done \u003ctask index\u003e"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "event \u003cdescription\u003e /at \u003cdate\u003e"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "find \u003ckeywords separated by ~\u003e"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "help"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "list"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "todo \u003cdescription\u003e"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "sort"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "```"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "---"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "### 8. List"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "List all tasks."
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "**Usage**"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "### `list` "
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "```"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "list"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "```"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "```"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "1.[E][✓] Math exam (at: 20 Nov 2020 19:00)"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "2.[T][✘] Clean room"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "3.[D][✘] Homework (by: 14 Sep 2020 23:59)"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "4.[T][✘] Buy groceries"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "5.[E][✘] Birthday (at: 06 May 2020 00:00)"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "```"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "---"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "### 9. Todo"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "Creates a new todo task without any specified date."
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "**Usage**"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "### `todo \u003cDESCRIPTION\u003e` "
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "```"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "todo Buy groceries"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "```"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "```"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "I\u0027ve added this task:"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "[T][✘] Buy groceries"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "Now you have 6 tasks in the list."
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "```"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "---"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "### 10. Sort"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "Sorts the task list by oldest date first. "
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "**Usage**"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "### `sort` "
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "```"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "list"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "sort"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "list"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "```"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "```"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "1.[E][✓] Math exam (at: 20 Nov 2020 19:00)"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "2.[T][✘] Clean room"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "3.[D][✘] Homework (by: 14 Sep 2020 23:59)"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "4.[T][✘] Buy groceries"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "5.[E][✘] Birthday (at: 06 May 2020 00:00)"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "Your task list has been sorted!"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "1.[E][✘] Birthday (at: 06 May 2020 00:00)"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "2.[D][✘] Homework (by: 14 Sep 2020 23:59)"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "3.[E][✓] Math exam (at: 20 Nov 2020 19:00)"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "4.[T][✘] Clean room"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "5.[T][✘] Buy groceries"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "```"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "---"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "## Quick Start"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "1. Ensure you have [Java ```11```](https://www.oracle.com/java/technologies/javase-jdk11-downloads.html) or above installed on your computer."
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "2. Download the latest [`duke.jar`](https://github.com/aizatazhar/ip/releases)."
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "3. Copy the file to the folder you wish to use as the home folder."
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "4. Double-click the file to start the app"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "5. Type your command into the box and press enter to execute it."
      }
    ],
    "authorContributionMap": {
      "aizatazhar": 273,
      "-": 17
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.util.Parser;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": " * Represents the main class for the Duke application."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * Constructs an instance of Duke."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        storage \u003d new Storage(\"tasks.txt\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * Returns Duke\u0027s response to a command after executing it."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * @param input User command."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * @return Duke\u0027s response to the command."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * @throws DukeException if the input does not match any commands."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public String getResponse(String input) throws DukeException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        String response;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            Command command \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            response \u003d command.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            throw e;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        return response;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aizatazhar": 49,
      "-": 1
    }
  },
  {
    "path": "src/main/java/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aizatazhar": 12
    }
  },
  {
    "path": "src/main/java/duke/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.ui.MainWindow;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            scene.getStylesheets().add(\"/view/styles.css\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            stage.setResizable(false);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            stage.setTitle(\"Duke-it\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            stage.getIcons().add(new Image(\"/images/duke.png\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aizatazhar": 38
    }
  },
  {
    "path": "src/main/java/duke/command/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": " * Responsible for executing a bye command."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * Constructs a ByeCommand."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public ByeCommand() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        super(false);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * Executes a bye command and returns a response."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * @param tasks Contains the current tasks."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * @param ui Responsible for displaying information to the user."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * @param storage Reads and stores data into memory."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * @return Bye message."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        assert(!this.shouldLoop());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        return \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        return \"bye\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aizatazhar": 36
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": " * Abstract class that models a command."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    private boolean shouldLoop;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * Constructs a Command."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * @param shouldLoop Boolean representing whether the command should continue looping or not."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public Command(boolean shouldLoop) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        this.shouldLoop \u003d shouldLoop;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * Executes the command and then returns a response."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * @param tasks Contains the current tasks."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * @param ui Responsible for displaying information to the user."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * @param storage Reads and stores data into memory."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * @return String Message when completing the command."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * @throws DukeException If could not execute command."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public abstract String execute(TaskList tasks, Ui ui, Storage storage)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            throws DukeException;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * Checks whether the command should continue the loop or not."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * @return Boolean representing whether to continue looping or not."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public boolean shouldLoop() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        return this.shouldLoop;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aizatazhar": 43
    }
  },
  {
    "path": "src/main/java/duke/command/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": " * Responsible for executing a deadline command."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "public class DeadlineCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    private Date by;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * Constructs a DeadlineCommand."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * @param description The description of the deadline."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * @param by The date of the deadline."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public DeadlineCommand(String description, Date by) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        super(true);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * Executes a deadline command and returns a response."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * @param tasks Contains the current tasks."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * @param ui Responsible for displaying information to the user."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * @param storage Reads and stores data into memory."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * @return Message when command is completed."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        Task task \u003d new Deadline(description, by);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        int previousTaskSize \u003d tasks.size();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        int subsequentTaskSize \u003d tasks.size();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        assert (previousTaskSize + 1 \u003d\u003d subsequentTaskSize);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        return String.format("
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                \"I\u0027ve added this task:\\n%s\\nNow you have %s tasks in the list.\","
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                task, tasks.size()"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        );"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        return \"deadline \u003cdescription\u003e /by \u003cdate\u003e\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aizatazhar": 57
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.exception.InvalidDeleteIndexException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": " * Responsible for executing a delete command."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * Constructs a DeleteCommand."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * @param index The index of the task to delete."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public DeleteCommand (int index) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        super(true);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * Executes a delete command and returns a response."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * @param tasks Contains the current tasks."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * @param ui Responsible for displaying information to the user."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * @param storage Reads and stores data into memory."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * @throws InvalidDeleteIndexException If index is out of bounds."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * @return Message when the command is completed."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            throws InvalidDeleteIndexException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        if (index \u003e tasks.size() || index \u003c 1) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            throw new InvalidDeleteIndexException(tasks.size());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        int previousTaskSize \u003d tasks.size();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        Task task \u003d tasks.remove(index - 1);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        int subsequentTaskSize \u003d tasks.size();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        assert (previousTaskSize \u003d\u003d subsequentTaskSize - 1);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        return String.format(\"Noted. I\u0027ve removed this task:\\n\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                + \"%s\\n\" + \"Now you have %d tasks in the list.\", task, tasks.size());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        return \"delete \u003ctask index\u003e\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aizatazhar": 54
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.exception.InvalidDoneIndexException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": " * Responsible for a done command."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * Constructs a DoneCommand."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * @param index The index of the task to mark as done."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public DoneCommand(int index) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        super(true);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * Executes a done command and returns a response."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * @param tasks Contains the current tasks."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * @param ui Responsible for displaying information to the user."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * @param storage Reads and stores data into memory."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * @throws InvalidDoneIndexException If index is out of bounds."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * @return Message when the command is completed."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            throws InvalidDoneIndexException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        if (index \u003e tasks.size() || index \u003c 1) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            throw new InvalidDoneIndexException(tasks.size());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        Task task \u003d tasks.get(index - 1);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        task.completeTask();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        return \"Nice! I\u0027ve marked this task as done:\\n\" + task.toString();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        return \"done \u003ctask index\u003e\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aizatazhar": 51
    }
  },
  {
    "path": "src/main/java/duke/command/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": " * Responsible for executing an event command."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "public class EventCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    private Date at;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * Constructs an EventCommand."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * @param description The description of the event."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * @param at The date of the event."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public EventCommand(String description, Date at) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        super(true);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * Executes an event command and returns a response."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * @param tasks Contains the current tasks."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * @param ui Responsible for displaying information to the user."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * @param storage Reads and stores data into memory."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * @return Message when the command is completed."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        Task task \u003d new Event(description, at);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        int previousTaskSize \u003d tasks.size();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        int subsequentTaskSize \u003d tasks.size();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        assert (previousTaskSize + 1 \u003d\u003d subsequentTaskSize);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        return String.format("
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                \"I\u0027ve added this task:\\n%s\\nNow you have %s tasks in the list.\","
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                task, tasks.size()"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        );"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        return \"event \u003cdescription\u003e /at \u003cdate\u003e\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aizatazhar": 56
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import java.util.StringJoiner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    private String[] stringsToFind;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * Constructs a FindCommand."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * @param stringsToFind The strings used to search for tasks."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public FindCommand(String ... stringsToFind) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        super(true);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        this.stringsToFind \u003d stringsToFind;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * Executes a find command and returns a response."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * @param tasks Contains the current tasks."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * @param ui Responsible for displaying information to the user."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * @param storage Reads and stores data into memory."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * @return Message when the command is completed."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        StringJoiner response \u003d new StringJoiner(\"\\n\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        StringJoiner userStrings \u003d new StringJoiner(\"\\n\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        for (String string : stringsToFind) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            userStrings.add(String.format(\"\\\"%s\\\"\", string));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        response.add(String.format(\"Here are the tasks in your list that contain \\n%s\\n\","
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                userStrings.toString()));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        int numberOfTasksFound \u003d 0;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        for (String toFind : stringsToFind) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            if (!tasks.find(toFind).equals(\"\")) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                response.add(tasks.find(toFind));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                numberOfTasksFound++;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        if (numberOfTasksFound \u003d\u003d 0) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            return \"No matching tasks found :(\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            return response.toString();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        return \"find \u003ckeywords separated by ~\u003e\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aizatazhar": 60
    }
  },
  {
    "path": "src/main/java/duke/command/HelpCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import java.util.StringJoiner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": " * Responsible for executing a help command."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "public class HelpCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * List of all possible commands."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    private static List\u003cCommand\u003e allCommands \u003d Arrays.asList("
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            new ByeCommand(),"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            new DeadlineCommand(\"dummy value\", new Date()),"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            new DeleteCommand(0),"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            new DoneCommand(0),"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            new EventCommand(\"dummy value\", new Date()),"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            new FindCommand(\"dummy value\"),"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            new ListCommand(),"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            new ToDoCommand(\"dummy value\"),"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            new SortCommand()"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    );"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * Constructs a HelpCommand."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public HelpCommand() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        super(true);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * Executes a help command and returns a response."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * @param tasks Contains the current tasks."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * @param ui Responsible for displaying information to the user."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * @param storage Reads and stores data into memory."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * @return Message when the command is completed."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        StringJoiner response \u003d new StringJoiner(\"\\n\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        response.add(\"Here are all the available commands:\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        for (Command command : allCommands) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            response.add(command.toString());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        return response.toString();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aizatazhar": 55
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import java.util.StringJoiner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": " * Responsible for executing a list command."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * Constructs a ListCommand."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public ListCommand() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        super(true);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * Executes a list command and returns a response."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * @param tasks Contains the current tasks."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * @param ui Responsible for displaying information to the user."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * @param storage Reads and stores data into memory."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * @return Message when the command is completed."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        StringJoiner response \u003d new StringJoiner(\"\\n\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            response.add(String.format(\"%d.%s\", i + 1, tasks.get(i)));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        return response.toString().isEmpty()"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                ? \"You have no tasks at the moment :)\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                : response.toString();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        return \"list\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aizatazhar": 43
    }
  },
  {
    "path": "src/main/java/duke/command/SortCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "public class SortCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public SortCommand() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        super(true);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        tasks.sort();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        return \"Your task list has been sorted!\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        return \"sort\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aizatazhar": 24
    }
  },
  {
    "path": "src/main/java/duke/command/ToDoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": " * Responsible for executing a todo command."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "public class ToDoCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * Constructs a ToDoCommand."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * @param description The description of the todo."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public ToDoCommand(String description) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        super(true);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * Executes a todo command and returns a response."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * @param tasks Contains the current tasks."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * @param ui Responsible for displaying information to the user."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * @param storage Reads and stores data into memory."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * @return Message when the command is completed."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        Task task \u003d new ToDo(description);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        int previousTaskSize \u003d tasks.size();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        int subsequentTaskSize \u003d tasks.size();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        assert (previousTaskSize + 1 \u003d\u003d subsequentTaskSize);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        return String.format("
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                \"I\u0027ve added this task:\\n%s\\nNow you have %s tasks in the list.\","
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                task, tasks.size()"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        );"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        return \"todo \u003cdescription\u003e\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aizatazhar": 51
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": " * General exception when an unknown command is used."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    /** Default constructor with a default error message. */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public DukeException() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        super(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                + \"To see all commands, type \\\"help\\\"\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * Overloaded constructor that accepts a custom error message."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * @param errorMessage Custom error message."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public DukeException(String errorMessage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aizatazhar": 22
    }
  },
  {
    "path": "src/main/java/duke/exception/InvalidDateException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": " * Exception thrown when a given date has an invalid format."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "public class InvalidDateException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * Constructs an InvalidDateException."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public InvalidDateException(String errorMessage) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aizatazhar": 13
    }
  },
  {
    "path": "src/main/java/duke/exception/InvalidDeadlineException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": " * Exception thrown when a deadline command is entered incorrectly."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "public class InvalidDeadlineException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * Constructs an InvalidDeadlineException."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public InvalidDeadlineException() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        super(\"You entered the deadline command incorrectly :(\\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                + \"The command format is \\\"deadline \u003cdescription\u003e /by \u003cdd-MM-yyyy HHmm\u003e\\\"\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aizatazhar": 14
    }
  },
  {
    "path": "src/main/java/duke/exception/InvalidDeleteIndexException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": " * Exception thrown when a delete command uses an invalid index."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "public class InvalidDeleteIndexException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * Constructs an InvalidDeleteIndexException."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * @param tasksSize The number of tasks in the tasklist."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public InvalidDeleteIndexException(int tasksSize) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        super(String.format(\"No such task :(\\nYou have %d tasks.\", tasksSize));"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aizatazhar": 15
    }
  },
  {
    "path": "src/main/java/duke/exception/InvalidDoneIndexException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": " * Exception thrown when a done command uses an invalid index."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "public class InvalidDoneIndexException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * Constructs an InvalidDoneIndexException."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * @param tasksSize The number of tasks in the tasklist."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public InvalidDoneIndexException(int tasksSize) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        super(String.format(\"No such task :(\\nYou have %d tasks.\", tasksSize));"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aizatazhar": 15
    }
  },
  {
    "path": "src/main/java/duke/exception/InvalidEventException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": " * Exception thrown when an event command is entered incorrectly"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "public class InvalidEventException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * Constructs an InvalidEventException."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public InvalidEventException() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        super(\"You entered the event command incorrectly :(\\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                + \"The command format is \\\"event \u003cdescription\u003e /at \u003cdd-MM-yyyy HHmm\u003e\\\"\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aizatazhar": 14
    }
  },
  {
    "path": "src/main/java/duke/exception/InvalidFindException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": " * Exception thrown when a find command is entered incorrectly."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "public class InvalidFindException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * Constructs an InvalidDeadlineException."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public InvalidFindException() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        super(\"The find keywords can\u0027t be empty :(\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aizatazhar": 13
    }
  },
  {
    "path": "src/main/java/duke/exception/InvalidToDoException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": " * Exception thrown when a todo command has no description."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "public class InvalidToDoException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * Constructs an InvalidToDoException."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public InvalidToDoException() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        super(\"The description of a todo cannot be empty :(\\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                + \"The command format is \\\"todo \u003cdescription\u003e\\\"\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aizatazhar": 14
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.util.DateFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": " * Models a deadline task."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    protected Date by;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * Constructs a Deadline."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * @param description The description of the deadline."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * @param by The date of the deadline."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public Deadline(String description, Date by) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        super(description, by);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        assert (this.by !\u003d null);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * Returns a String representation of the task for saving."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * @return String representation of the task for saving purposes."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public String toSaveFormat() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        return String.format(\"D | %d | %s | %s\", this.isDone ? 1 : 0,"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                this.description, DateFormatter.formatSave(this.by));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        return String.format(\"[D]%s (by: %s)\", super.toString(),"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                DateFormatter.formatDisplay(this.by));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aizatazhar": 41
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.util.DateFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": " * Models an event task."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    protected Date at;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * Constructs an Event."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * @param description The description of the event."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * @param at The date of the event."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public Event(String description, Date at) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        super(description, at);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        assert (this.at !\u003d null);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * Returns a String representation of the task for saving."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * @return String representation of the task for saving purposes."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public String toSaveFormat() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        return String.format(\"E | %d | %s | %s\", this.isDone ? 1 : 0,"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                this.description, DateFormatter.formatSave(this.at));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        return String.format(\"[E]%s (at: %s)\", super.toString(),"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                DateFormatter.formatDisplay(this.at));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aizatazhar": 41
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": " * Abstract class that models a task."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "public abstract class Task implements Comparable\u003cTask\u003e {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    protected Date date;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * Constructs a Task."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * @param description The description of the task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public Task(String description, Date date) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * Returns icon representing whether the task is done or not."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * @return Icon representing whether the task is done or not."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * Sets the task to be done."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public void completeTask() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * Returns a String representation of the task for saving."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * @return String representation of the task for saving purposes."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public abstract String toSaveFormat();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * Returns true if the task contains the description."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * @param givenDescription The given description."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * @return True if the task contains the description, false otherwise."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public boolean contains(String givenDescription) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        return this.description.contains(givenDescription);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * Compares 2 tasks by date."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * @param other The other Task to compare."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * @return int corresponding to the order."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public int compareTo(Task other) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        if (this.date \u003d\u003d null \u0026\u0026 other.date \u003d\u003d null) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            return 0;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        } else if (this.date !\u003d null \u0026\u0026 other.date \u003d\u003d null) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            return -1;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        } else if (this.date \u003d\u003d null \u0026\u0026 other.date !\u003d null) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            return 1;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            return this.date.compareTo(other.date);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        return String.format(\"[%s] %s\", getStatusIcon(), this.description);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aizatazhar": 80
    }
  },
  {
    "path": "src/main/java/duke/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": " * Models a todo task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        super(description, null);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * Returns a String representation of the task for saving."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * @return String representation of the task for saving purposes."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public String toSaveFormat() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        return String.format(\"T | %d | %s\", this.isDone ? 1 : 0, this.description);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        return String.format(\"[T][%s] %s\", getStatusIcon(), this.description);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aizatazhar": 25
    }
  },
  {
    "path": "src/main/java/duke/ui/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import javafx.scene.shape.Circle;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "// @@author aizatazhar-reused"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "// Reused from https://se-education.org/guides/tutorials/javaFxPart4.html with minor modifications"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String USER_BACKGROUND \u003d"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "            \"-fx-background-color: rgba(114, 205, 247, 0.9); -fx-background-radius: 15; -fx-font-weight: bold;\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String DUKE_BACKGROUND \u003d"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "            \"-fx-background-color: rgba(68, 242, 117, 0.9); -fx-background-radius: 15; -fx-font-weight: bold;\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String ERROR_STYLE \u003d"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "            \"-fx-background-color: rgba(243, 156, 150, 0.9); -fx-background-radius: 15;\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "                    + \"-fx-font-size: 16px; -fx-font-weight: bold;\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    private DialogBox(String text, Image img, boolean isErrorMessage, boolean isDukeResponse) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        super(10);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        // Sets different background depending on nature of message"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        if (isDukeResponse) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "            dialog.setStyle(DUKE_BACKGROUND);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "            dialog.setStyle(USER_BACKGROUND);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        if (isErrorMessage) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "            dialog.setStyle(ERROR_STYLE);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        final Circle clip \u003d new Circle(50, 50, 50);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        displayPicture.setClip(clip);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        return new DialogBox(text, img, false, false);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img, boolean isErrorMessage) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "        var db \u003d new DialogBox(text, img, isErrorMessage, true);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "    // @@author"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aizatazhar": 18,
      "-": 67
    }
  },
  {
    "path": "src/main/java/duke/ui/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "// @@author aizatazhar-reused"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "// Reused from https://se-education.org/guides/tutorials/javaFxPart4.html with minor modifications"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.jpg\"));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/duke.png\"));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "     * Initialises the main window with Duke\u0027s greeting."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "                DialogBox.getDukeDialog(new Ui().greet(), dukeImage, false)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        );"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "     private void handleUserInput() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        String response;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        boolean isErrorMessage;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "            response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "            isErrorMessage \u003d false;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "            response \u003d e.getMessage();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "            isErrorMessage \u003d true;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage, isErrorMessage)"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        );"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        if (response.equals(\"Bye. Hope to see you again soon!\")) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "            Platform.exit();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "// @@author"
      }
    ],
    "authorContributionMap": {
      "aizatazhar": 13,
      "-": 64
    }
  },
  {
    "path": "src/main/java/duke/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": " * Responsible for displaying information to the user."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * Prints out a greeting."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public String greet() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        return \"Hello! I\u0027m Duke.\\nWhat can I do for you?\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * Prints out an loading error message."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        printResponse(\"Error loading file\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * Prints out the error message of an error."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * @param e The error that occurred."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public void showError(Exception e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        printResponse(e.getMessage());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * Prints a given string with indentation and horizontal lines at the top and bottom."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * @param string The string to print in this format."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public void printResponse(String string) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        String line \u003d \"----------------------------------------------------------------\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        String response \u003d String.format(\"%s\\n%s\\n%s\", line, string, line)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                .replaceAll(\"(?m)^\", \"\\t\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        System.out.println(response);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aizatazhar": 41
    }
  },
  {
    "path": "src/main/java/duke/util/DateFormatter.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import java.text.DateFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.exception.InvalidDateException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": " * Contains utility methods for converting between Dates and Strings."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "public class DateFormatter {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    // @@author aizatazhar-reused"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    // Reused from https://stackoverflow.com/a/16990333/12003017 with minor modifications"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    private static List\u003cString\u003e dateFormats \u003d Arrays.asList("
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "            \"dd-MM-yyyy HHmm\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    );"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "     * Parses a String representation of a date and returns a Date object."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param strDate String representation of a date."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return Date object corresponding to the String given."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws DukeException If the String representation does not match any defined date format."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    public static Date parseDate(String strDate) throws DukeException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        for (String format: dateFormats) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "            SimpleDateFormat sdf \u003d new SimpleDateFormat(format);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "            sdf.setLenient(false);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "                return sdf.parse(strDate);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "            } catch (ParseException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "                // intentionally empty to check the other date formats"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        throw new InvalidDateException(\"Invalid input for date. Given \u0027\" + strDate + \"\u0027, \""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"expecting format dd-MM-yyyy HHmm\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    // @@author"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * Formats a date for displaying on the UI."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * @param date Date object to format."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * @return String representation of the date in a display-friendly format."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public static String formatDisplay(Date date) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        DateFormat dateFormat \u003d new SimpleDateFormat(\"dd MMM yyyy HH:mm\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        return dateFormat.format(date);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * Formats a date for saving."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * @param date Date object to format."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * @return String representation of the date in a save-friendly format."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public static String formatSave(Date date) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        DateFormat dateFormat \u003d new SimpleDateFormat(\"dd-MM-yyyy HHmm\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        return dateFormat.format(date);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aizatazhar": 39,
      "-": 28
    }
  },
  {
    "path": "src/main/java/duke/util/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.command.ByeCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.command.DeadlineCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.command.DoneCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.command.EventCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.command.FindCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.command.HelpCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.command.SortCommand;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.command.ToDoCommand;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.exception.InvalidDeadlineException;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.exception.InvalidEventException;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.exception.InvalidFindException;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.exception.InvalidToDoException;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "/**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": " * Parses an input into a command."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": " */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * Parses a String input into a command."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * @param input The input to parse."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * @return Command associated with the input."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * @throws DukeException If the input does not match any command."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public static Command parse(String input) throws DukeException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            return new ByeCommand();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        } else if (input.equals(\"help\")) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            return new HelpCommand();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        } else if (input.startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            return parseDeadline(input);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        } else if (input.matches(\"delete \\\\d+\")) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            return parseDelete(input);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        } else if (input.matches(\"done \\\\d+\")) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            return parseDone(input);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        } else if (input.startsWith(\"event\")) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            return parseEvent(input);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        } else if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        } else if (input.startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            return parseTodo(input);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        } else if (input.startsWith(\"find\")) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            return parseFind(input);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        } else if (input.equals(\"sort\")) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            return new SortCommand();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    private static Command parseDeadline(String input) throws InvalidDeadlineException {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            String[] inputArray \u003d input.substring(input.indexOf(\u0027 \u0027) + 1).split(\" /by \");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            String description \u003d inputArray[0];"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            Date by \u003d DateFormatter.parseDate(inputArray[1]);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            return new DeadlineCommand(description, by);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException | DukeException e) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            throw new InvalidDeadlineException();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    private static Command parseDelete(String input) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        int index \u003d Integer.parseInt(input.split(\" \")[1]);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        return new DeleteCommand(index);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    private static Command parseDone(String input) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        int index \u003d Integer.parseInt(input.split(\" \")[1]);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        return new DoneCommand(index);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    private static Command parseEvent(String input) throws InvalidEventException {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            String[] inputArray \u003d input.substring(input.indexOf(\u0027 \u0027) + 1).split(\" /at \");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            String description \u003d inputArray[0];"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            Date at \u003d DateFormatter.parseDate(inputArray[1]);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            return new EventCommand(description, at);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException | DukeException e) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            throw new InvalidEventException();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    private static Command parseTodo(String input) throws InvalidToDoException {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        String[] split \u003d input.split(\" \");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        if (split.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            throw new InvalidToDoException();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        String[] descriptionArray \u003d Arrays.copyOfRange(split, 1, split.length);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        String description \u003d String.join(\" \", descriptionArray);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        return new ToDoCommand(description);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    private static Command parseFind(String input) throws InvalidFindException {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        String[] split \u003d input.split(\"find \");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        if (split.length \u003d\u003d 0 || split.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            throw new InvalidFindException();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        String restOfInput \u003d split[1];"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        String[] keywords \u003d restOfInput.split(\"\\\\s*~\\\\s*\"); // splits and trims"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        return new FindCommand(keywords);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aizatazhar": 112
    }
  },
  {
    "path": "src/main/java/duke/util/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": " * Responsible for loading and saving tasks to memory."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    private String dirName \u003d \"data/\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        this.filePath \u003d dirName + filePath;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * Loads the tasks from the storage directory."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * @return {@code ArrayList\u003cTask\u003e} of the tasks stored in the storage directory."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * @throws DukeException If the tasks were not saved in appropriate format."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        ArrayList\u003cTask\u003e result \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            // Create the directory if it does not exist"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            File dir \u003d new File(dirName);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            if (!dir.exists()) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                dir.mkdirs();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            File f \u003d new File(filePath);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            Scanner sc \u003d new Scanner(f);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            while (sc.hasNext()) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                String nextLine \u003d sc.nextLine();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                String[] taskDetails \u003d nextLine.split(\" \\\\| \");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                Task task;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                if (taskDetails[0].equals(\"T\")) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                    task \u003d new ToDo(taskDetails[2]);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                } else if (taskDetails[0].equals(\"D\")) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                    task \u003d new Deadline(taskDetails[2],"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                            DateFormatter.parseDate(taskDetails[3]));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                } else if (taskDetails[0].equals(\"E\")) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                    task \u003d new Event(taskDetails[2],"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                            DateFormatter.parseDate(taskDetails[3]));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                    throw new DukeException();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                if (taskDetails[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                    task.completeTask();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                result.add(task);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            // Create the .txt file if it does not exist"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                File f \u003d new File(filePath);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                f.createNewFile();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            } catch (IOException e2) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                e2.printStackTrace();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * Saves tasks to the storage directory."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * @param tasks The tasks to save."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public void save(TaskList tasks) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            fw.write(tasks.getSaveFormat());"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aizatazhar": 92
    }
  },
  {
    "path": "src/main/java/duke/util/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import java.util.StringJoiner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": " * Models a list of tasks and the associated operations."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * Constructs a TaskList from an ArrayList of Tasks."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * @param tasks The tasks to construct a TaskList."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * Empty constructor for TaskList."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * Adds a task to the list of tasks."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * @param task The task to add."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public void add(Task task) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * Removes and returns a task from the list of tasks."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * @param index The index of the task to remove"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * @return The task that was removed."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public Task remove(int index) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        return tasks.remove(index);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * Returns the size of the list of tasks."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * @return The size of the list of tasks."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * Returns a task from the list of tasks without removing it."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * @param index The index of the task to return."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * @return The task corresponding to the given index."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public Task get(int index) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        return tasks.get(index);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * Returns a String representation of all the tasks in a save-friendly format."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * @return String representation of all the tasks in a save-friendly format."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public String getSaveFormat() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        StringJoiner text \u003d new StringJoiner(\"\\n\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            text.add(task.toSaveFormat());"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        return text.toString();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * Returns a String representation of all tasks which contain the parameter."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * @param toFind The string used to find tasks."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * @return String representation of all tasks containing the parameter."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public String find(String toFind) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        StringJoiner response \u003d new StringJoiner(\"\\n\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            if (tasks.get(i).contains(toFind)) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                response.add(String.format(\"%d.%s\", i + 1, tasks.get(i)));"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        return response.toString();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * Sorts the task list by date."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public void sort() {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        Collections.sort(this.tasks);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aizatazhar": 105
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "\u003cfx:root styleClass\u003d\"root\" alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "  \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    \u003cLabel fx:id\u003d\"dialog\" styleClass\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" lineSpacing\u003d\"5.0\" maxHeight\u003d\"-Infinity\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    \u003cImageView fx:id\u003d\"displayPicture\" styleClass\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "  \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "  \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "  \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "aizatazhar": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"777\" prefWidth\u003d\"541\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.ui.MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "  \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    \u003cTextField fx:id\u003d\"userInput\" styleClass\u003d\"userInput\" layoutY\u003d\"558\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"465.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    \u003cButton fx:id\u003d\"sendButton\" styleClass\u003d\"sendButton\" layoutX\u003d\"465\" layoutY\u003d\"735\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    \u003cScrollPane fx:id\u003d\"scrollPane\" styleClass\u003d\"scrollPane\" vbarPolicy\u003d\"ALWAYS\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"736\" prefWidth\u003d\"541\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "      \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        \u003cVBox fx:id\u003d\"dialogContainer\" styleClass\u003d\"dialogContainer\" prefWidth\u003d\"541\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "      \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "  \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "aizatazhar": 19
    }
  },
  {
    "path": "src/test/java/duke/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public void dummyTest() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aizatazhar": 12
    }
  },
  {
    "path": "src/test/java/duke/util/DateFormatterTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "public class DateFormatterTest {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public void extractTimestampInput_dateString_dateObject() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            SimpleDateFormat sdf \u003d new SimpleDateFormat(\"dd-MM-yyyy hhmm\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            Date expected \u003d sdf.parse(\"10-10-2020 1800\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            Date actual \u003d DateFormatter.parseDate(\"10-10-2020 1800\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            assertEquals(expected, actual);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        } catch (DukeException | ParseException e) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            fail(\"Exception thrown:\" + e.getMessage());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public void extractTimestampInput_invalidDateString_dukeExceptionThrown() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            Date actual \u003d DateFormatter.parseDate(\"2020 Oct 10 1021\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            fail(\"Exception not thrown\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            String expectedError \u003d \"Invalid input for date. Given \u0027\" + \"2020 Oct 10 1021\" + \"\u0027, \""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                    + \"expecting format dd-MM-yyyy HHmm\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            assertEquals(e.getMessage(), expectedError);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public void formatDisplay_validDate_validFormat() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            SimpleDateFormat sdf \u003d new SimpleDateFormat(\"yyyy-MM-dd hhmm\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            Date date \u003d sdf.parse(\"2020-10-10 1800\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            String actual \u003d DateFormatter.formatDisplay(date);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            assertEquals(\"10 Oct 2020 18:00\", actual);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            fail(\"Exception thrown:\" + e.getMessage());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aizatazhar": 50
    }
  },
  {
    "path": "src/test/java/duke/util/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public void add_toDo_tasksSizeIsOne() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        tasks.add(new ToDo(\"hello world\"));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        assertEquals(1, tasks.size());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public void get_taskIndex_taskReturned() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        Task task \u003d new ToDo(\"hello world :)\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        assertEquals(task, tasks.get(0));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public void get_outOfBoundsIndex_errorThrown() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            Task task \u003d new ToDo(\"hello world :)\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            tasks.add(task);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            assertEquals(task, tasks.get(1));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            fail(\"No exception thrown\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            String expected \u003d \"Index 1 out of bounds for length 1\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            assertEquals(expected, e.getMessage());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aizatazhar": 40
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "todo off myself"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "todo"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "deadline die /by next year"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "deadline die /at next year"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "event death /at soon pls"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "event death /by soon pls"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "list"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "fake command"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "done 100"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "list"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "todo hello world"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "delete 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "aizatazhar": 17
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "set JAVA_TOOL_OPTIONS\u003d-Dfile.encoding\u003dUTF-8"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "aizatazhar": 2,
      "-": 19
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/duke.Duke.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "java -classpath ../bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "aizatazhar": 2,
      "-": 36
    }
  }
]
