[
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Persdre"
        },
        "content": "todo read book"
      }
    ],
    "authorContributionMap": {
      "Persdre": 1
    }
  },
  {
    "path": "src/main/data.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Persdre"
        },
        "content": "[T][✘] read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Persdre"
        },
        "content": "[T][✘] read book"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Persdre"
        },
        "content": "[T][✘] buy bread"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Persdre"
        },
        "content": "[T][✘] wash clothes"
      }
    ],
    "authorContributionMap": {
      "Persdre": 4
    }
  },
  {
    "path": "src/main/java/duke/ActionType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Persdre"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Persdre"
        },
        "content": "public enum ActionType {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    MARK_DONE,"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    DELETE,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    ADD_TODO,"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    ADD_DEADLINE,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    ADD_EVENT"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Persdre"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Persdre": 9
    }
  },
  {
    "path": "src/main/java/duke/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Persdre"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Persdre"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Persdre"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Persdre"
        },
        "content": " * Command for adding tasks into list"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Persdre"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Persdre"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    private final String input;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    private final ActionType actionType;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * AddCommand constructor"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * @param input User input (without type of task written in front)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * @param actionType Dictates type of task to be added"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public AddCommand(String input, ActionType actionType) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        super(false);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        this.actionType \u003d actionType;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * Creates new task and adds it into list, then makes Ui print the task info"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * @param tasks List of tasks"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * @param ui User interface to print task"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * @param storage File storage object"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * @throws DukeException if exception encountered"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        Task newTask \u003d null;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        switch(actionType) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        case ADD_TODO:"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            if (input.length() \u003c 6) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                throw new DukeException(\"You need enter a task information.\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                newTask \u003d new ToDo(input.substring(5), false);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        case ADD_EVENT:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            if (input.length() \u003c 7) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                throw new DukeException(\"You should enter an event information.\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                String[] split \u003d input.substring(6).split(\" /at \");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                String eventDesc \u003d split[0];"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                LocalDate eventTime \u003d LocalDate.parse(split[1]);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                newTask \u003d new Event(eventDesc, eventTime, false);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        case ADD_DEADLINE:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            if (input.length() \u003c 10) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                throw new DukeException(\"You should enter a deadline information.\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                String[] split \u003d input.substring(9).split(\" /by \");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                String deadlineDesc \u003d split[0];"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                LocalDate deadline \u003d LocalDate.parse(split[1]);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                newTask \u003d new Deadline(deadlineDesc, deadline, false);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        tasks.addTask(newTask);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        storage.updateFile(tasks);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        ui.printTask(newTask, actionType);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        ui.printTotalTasks(tasks);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Persdre"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Persdre": 70
    }
  },
  {
    "path": "src/main/java/duke/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Persdre"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Persdre"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Persdre"
        },
        "content": " * Abstract class for all commands"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Persdre"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Persdre"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    private final boolean isExit;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public Command(boolean isExit) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        this.isExit \u003d isExit;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * Executes command"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * @param tasks Tasks\u0027 list"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * @param ui User interface to print task"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * @param storage File storage object"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * @throws DukeException if exception encountered"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        return isExit;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Persdre"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Persdre": 29
    }
  },
  {
    "path": "src/main/java/duke/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Persdre"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Persdre"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Persdre"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Persdre"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    private final static DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    private final LocalDate deadline;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * Deadline constructor"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * @param description Description string without date"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * @param deadline Deadline LocalDate object"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * @param isDone Completion status of deadline"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public Deadline(String description, LocalDate deadline, boolean isDone) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        return \"[D][\" + super.getStatusIcon() + \"] \" + super.description + \" (by: \" + this.deadline.format(formatter) + \")\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Persdre"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Persdre": 26
    }
  },
  {
    "path": "src/main/java/duke/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Persdre"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Persdre"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Persdre"
        },
        "content": " * Command for deleting tasks"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Persdre"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Persdre"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    private final int taskIndex;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * DeleteCommand constructor"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * @param taskIndex Index of class to be deleted"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public DeleteCommand(int taskIndex) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        super(false);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        this.taskIndex \u003d taskIndex;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * Deletes task from list and prints its info"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * @param tasks List of tasks"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * @param ui User interface to print task"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * @param storage File storage object"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * @throws DukeException if exception encountered"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        if (taskIndex \u003e\u003d tasks.getList().size()) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            throw new DukeException(\"duke.tasks.Task does not exist :(\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            Task deletedTask \u003d tasks.delete(taskIndex);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            storage.updateFile(tasks);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            ui.printTask(deletedTask, ActionType.MARK_DONE);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Persdre"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Persdre": 37
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Persdre"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Persdre"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Persdre"
        },
        "content": " * Duke main class"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Persdre"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    private final Storage storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    private final Ui ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * Duke constructor"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * @param filePath Filepath of .txt file to save tasks in"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            tasks \u003d new TaskList(storage.getTasks());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * Runs the Duke program"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        ui.showInfo();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        new Duke(\"src/main/data.txt\").run();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 3,
      "Persdre": 47
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Persdre"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Persdre"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Persdre"
        },
        "content": " * Special exception class for Duke"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Persdre"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Persdre"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * DukeException constructor"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * @param s Exception error message"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public DukeException(String s){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        return super.getMessage() + \"\\n Please restart!\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Persdre"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Persdre": 20
    }
  },
  {
    "path": "src/main/java/duke/EmptyDeadLineException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Persdre"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Persdre"
        },
        "content": "public class EmptyDeadLineException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    private static final long serialVersionUID \u003d 1L;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    private final static String errorMessage \u003d \"OOPS!!! The description of a deadline cannot be empty.\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * EmptyDeadLineException constructor"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public EmptyDeadLineException() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * Returns error message when occurs empty deadline exception."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * @return error message."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        return errorMessage;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Persdre"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Persdre": 25
    }
  },
  {
    "path": "src/main/java/duke/EmptyDeleteException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Persdre"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Persdre"
        },
        "content": "public class EmptyDeleteException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    private static final long serialVersionUID \u003d 1L;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    private final static String errorMessage \u003d \"OOPS!!! The description of a delete cannot be empty.\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * EmptyDeleteException constructor."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public EmptyDeleteException() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        return errorMessage;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Persdre"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Persdre": 19
    }
  },
  {
    "path": "src/main/java/duke/EmptyDoneException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Persdre"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Persdre"
        },
        "content": "public class EmptyDoneException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     *"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    private static final long serialVersionUID \u003d 1L;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    private final static String errorMessage \u003d \"OOPS!!! The description of a done cannot be empty. \";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public EmptyDoneException() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        return errorMessage;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Persdre"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Persdre": 18
    }
  },
  {
    "path": "src/main/java/duke/EmptyEventException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Persdre"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Persdre"
        },
        "content": "public class EmptyEventException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     *"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    private static final long serialVersionUID \u003d 1L;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    private final static String errorMessage \u003d \"OOPS!!! The description of a event cannot be empty.\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public EmptyEventException() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        return errorMessage;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Persdre"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Persdre": 19
    }
  },
  {
    "path": "src/main/java/duke/EmptyTodoException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Persdre"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Persdre"
        },
        "content": "public class EmptyTodoException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     *"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    private static final long serialVersionUID \u003d 1L;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    private final static String errorMessage \u003d \"OOPS!!! The description of a todo cannot be empty.\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public EmptyTodoException() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        return errorMessage;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Persdre"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Persdre": 19
    }
  },
  {
    "path": "src/main/java/duke/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Persdre"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Persdre"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Persdre"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Persdre"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    private final static DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    private final LocalDate eventTime;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * Event constructor"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * @param description Description string without date"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * @param eventTime Time of event LocalDate object"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * @param isDone Completion status of event"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public Event(String description, LocalDate eventTime, boolean isDone) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        this.eventTime \u003d eventTime;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        return \"[E][\" + super.getStatusIcon() + \"] \" + super.description + \" (at: \" + this.eventTime.format(formatter) + \")\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Persdre"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Persdre": 26
    }
  },
  {
    "path": "src/main/java/duke/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Persdre"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Persdre"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Persdre"
        },
        "content": " * Command to quit Duke"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Persdre"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Persdre"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public ExitCommand() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        super(true);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * Exits program"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * @param tasks List of tasks"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * @param ui User interface to print task"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * @param storage File storage object"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        ui.goodbye();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        System.exit(0);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Persdre"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Persdre": 23
    }
  },
  {
    "path": "src/main/java/duke/FileLoader.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Persdre"
        },
        "content": "// package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Persdre"
        },
        "content": "// import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Persdre"
        },
        "content": "// import java.io.FileWriter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Persdre"
        },
        "content": "// import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Persdre"
        },
        "content": "// import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Persdre"
        },
        "content": "// import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Persdre"
        },
        "content": "// public class FileLoader {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Persdre"
        },
        "content": "//     private static final String directoryPath \u003d \"data\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Persdre"
        },
        "content": "//     private static final String filePath \u003d \"data/duke.txt\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Persdre"
        },
        "content": "//     public static void readSavedFile(TaskList tasks) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Persdre"
        },
        "content": "//         try {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Persdre"
        },
        "content": "//             File directory \u003d new File(directoryPath);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Persdre"
        },
        "content": "//             if (!directory.exists()) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Persdre"
        },
        "content": "//                 System.out.println(\"There is not such a directory, created one for you!\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Persdre"
        },
        "content": "//                 directory.mkdir();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Persdre"
        },
        "content": "//             }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Persdre"
        },
        "content": "//             File f \u003d new File(filePath);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Persdre"
        },
        "content": "//             if (f.createNewFile()) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Persdre"
        },
        "content": "//                 System.out.println(\"Can\u0027t find the file. You can add a file on your own.\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Persdre"
        },
        "content": "//             } else {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Persdre"
        },
        "content": "//                 Scanner sc \u003d new Scanner(f);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Persdre"
        },
        "content": "//                 while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Persdre"
        },
        "content": "//                     String line \u003d sc.nextLine();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Persdre"
        },
        "content": "//                     String[] store \u003d line.split(\" \", 2);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Persdre"
        },
        "content": "//                     tasks.getTasks().add(new Task(store[1]));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Persdre"
        },
        "content": "//                 }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Persdre"
        },
        "content": "//                 sc.close();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Persdre"
        },
        "content": "//                 System.out.println(\"All the data has been loaded!\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Persdre"
        },
        "content": "//             }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Persdre"
        },
        "content": "//         } catch (IOException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Persdre"
        },
        "content": "//             e.printStackTrace();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Persdre"
        },
        "content": "//         }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Persdre"
        },
        "content": "//     }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Persdre"
        },
        "content": "//     public static void saveToFile(TaskList tasks) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Persdre"
        },
        "content": "//         try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Persdre"
        },
        "content": "//             FileWriter writer \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Persdre"
        },
        "content": "//             for (Task task : tasks.getTasks()) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Persdre"
        },
        "content": "//                 String[] store \u003d task.toString().split(\" \");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Persdre"
        },
        "content": "//                 writer.write(store[0] + \" \" + store[1] + \" \" + store[2] + System.lineSeparator());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Persdre"
        },
        "content": "//             }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Persdre"
        },
        "content": "//             writer.close();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Persdre"
        },
        "content": "//         } catch (IOException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Persdre"
        },
        "content": "//             e.printStackTrace();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Persdre"
        },
        "content": "//         }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Persdre"
        },
        "content": "//     }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Persdre"
        },
        "content": "// }"
      }
    ],
    "authorContributionMap": {
      "Persdre": 52
    }
  },
  {
    "path": "src/main/java/duke/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Persdre"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Persdre"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    private final String input;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public FindCommand(String input) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        super(false);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        ui.search(tasks, input);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Persdre"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Persdre": 14
    }
  },
  {
    "path": "src/main/java/duke/InvalidCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Persdre"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Persdre"
        },
        "content": "public class InvalidCommandException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     *"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    private static final long serialVersionUID \u003d 1L;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    private final static String errorMessage \u003d \"OOPS!!! It seems the command you entered is invalid :(\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public InvalidCommandException() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        return errorMessage;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Persdre"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Persdre": 20
    }
  },
  {
    "path": "src/main/java/duke/InvalidNumberException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Persdre"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Persdre"
        },
        "content": "public class InvalidNumberException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     *"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    private static final long serialVersionUID \u003d 1L;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    private final static String errorMessage \u003d \"OOPS!!! It seems the number you entered is invalid!\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public InvalidNumberException() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        return errorMessage;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Persdre"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Persdre": 18
    }
  },
  {
    "path": "src/main/java/duke/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Persdre"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Persdre"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Persdre"
        },
        "content": " * Command to print list of tasks"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Persdre"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Persdre"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public ListCommand() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        super(false);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * Makes Ui print list of tasks"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * @param tasks List of tasks"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * @param ui User interface to print task"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * @param storage File storage object"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        ui.printList(tasks);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Persdre"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Persdre": 23
    }
  },
  {
    "path": "src/main/java/duke/MarkDoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Persdre"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Persdre"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Persdre"
        },
        "content": " * Command to mark a task as done"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Persdre"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Persdre"
        },
        "content": "public class MarkDoneCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    private final int taskIndex;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * MarkDoneCommand constructor"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * @param taskIndex Index of task to be completed"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public MarkDoneCommand(int taskIndex) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        super(false);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        this.taskIndex \u003d taskIndex;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * Marks task as done, then prints info"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * @param tasks List of tasks"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * @param ui User interface to print task"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * @param storage File storage object"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * @throws DukeException if exception encountered"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        if (taskIndex \u003e\u003d tasks.size()) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            throw new DukeException(\"duke.tasks.Task does not exist _(´ཀ`」 ∠)_\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        Task completedTask \u003d tasks.markDone(taskIndex);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        storage.updateFile(tasks);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        ui.printTask(completedTask, ActionType.MARK_DONE);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Persdre"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Persdre": 36
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Persdre"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Persdre"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * Parses user input and returns the correct command to execute"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     *"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * @param input User input"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * @return Correct command for Duke to execute"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * @throws DukeException if exception encountered"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public static Command parse(String input) throws DukeException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        if (input.equalsIgnoreCase(\"bye\")) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        } else if (input.equalsIgnoreCase(\"list\")) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        } else if (input.length() \u003e\u003d 4 \u0026\u0026 input.substring(0, 4).equalsIgnoreCase(\"done\")) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            int taskIndex \u003d Integer.parseInt(input.substring(5)) - 1;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            return new MarkDoneCommand(taskIndex);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        } else if (input.length() \u003e\u003d 4 \u0026\u0026 input.substring(0, 4).equalsIgnoreCase(\"find\")) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                String search \u003d input.substring(5);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                return new FindCommand(search);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        } else if (input.length() \u003e\u003d 6 \u0026\u0026 input.substring(0, 6).equalsIgnoreCase(\"delete\")) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            int taskIndex \u003d Integer.parseInt(input.substring(7)) - 1;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            return new DeleteCommand(taskIndex);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        } else if (input.length() \u003e\u003d 4 \u0026\u0026 input.substring(0, 4).equalsIgnoreCase(\"todo\")) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            return new AddCommand(input, ActionType.ADD_TODO);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        } else if (input.length() \u003e\u003d 5 \u0026\u0026 input.substring(0, 5).equalsIgnoreCase(\"event\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            return new AddCommand(input, ActionType.ADD_EVENT);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        } else if (input.length() \u003e\u003d 8 \u0026\u0026 input.substring(0, 8).equalsIgnoreCase(\"deadline\")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            return new AddCommand(input, ActionType.ADD_DEADLINE);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            throw new DukeException(\"Sorry but I think you enter a wrong command...\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Persdre"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Persdre": 35
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Persdre"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Persdre"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Persdre"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Persdre"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Persdre"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Persdre"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Persdre"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Persdre"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Persdre"
        },
        "content": " * Storage class to manage loading and saving of tasks in text file"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Persdre"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Persdre"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    private final String filePath;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    private File data;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    private final DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * Storage constructor"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * @param filePath Filepath of .txt file to save tasks in"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            data \u003d new File(filePath);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            data.createNewFile();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * Loads saved tasks into list for use"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * @return ArrayList containing all saved tasks"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public ArrayList\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            Scanner dataScanner \u003d new Scanner(data);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            while (dataScanner.hasNext()) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                String next \u003d dataScanner.nextLine();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                char taskType \u003d next.charAt(1);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                boolean isDone \u003d next.charAt(4) \u003d\u003d \u0027\\u2713\u0027;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                String description \u003d next.substring(7);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                if (taskType \u003d\u003d \u0027T\u0027) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                    list.add(new ToDo(description, isDone));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                } else if (taskType \u003d\u003d \u0027D\u0027) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                    String[] split \u003d description.split(\"[(]by: \");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                    String deadlineDesc \u003d split[0];"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                    LocalDate deadline \u003d LocalDate.parse(split[1].substring(0, split[1].length() - 1), formatter);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                    list.add(new Deadline(deadlineDesc, deadline, isDone));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                } else if (taskType \u003d\u003d \u0027E\u0027) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                    String[] split \u003d description.split(\"[(]at: \");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                    String eventDesc \u003d split[0];"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                    LocalDate eventTime \u003d LocalDate.parse(split[1].substring(0, split[1].length() - 1), formatter);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                    list.add(new Event(eventDesc, eventTime, isDone));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                    throw new DukeException(\"File reading error _(´ཀ`」 ∠)_\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * Writes tasks into file"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     *"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * @param tasks List of tasks to be saved"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public void updateFile(TaskList tasks) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            ArrayList\u003cTask\u003e list \u003d tasks.getList();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            for (Task task: list) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                String taskString \u003d task.toString();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                fw.write(taskString + System.lineSeparator());"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Persdre"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Persdre": 88
    }
  },
  {
    "path": "src/main/java/duke/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Persdre"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Persdre"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    protected final String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * Task constructor"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * @param description Description string"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * @param isDone Completion status of task"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public Task(String description, boolean isDone) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        return (this.isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Persdre"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Persdre": 25
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Persdre"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Persdre"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Persdre"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Persdre"
        },
        "content": " * List class to store tasks"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Persdre"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Persdre"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    private final ArrayList\u003cTask\u003e list;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        this.list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        this.list \u003d list;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        return list.size();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public Task get(int index) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        return list.get(index);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public ArrayList\u003cTask\u003e getList() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        list.add(task);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * Marks task as done, then returns it"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * @param index Index of task to be completed"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public Task markDone(int index) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        Task doneTask \u003d list.get(index);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        doneTask.markAsDone();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        return doneTask;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * Deletes task, then returns it"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * @param index Index of task to be deleted"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public Task delete(int index) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        Task deletedTask \u003d list.get(index);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        list.remove(index);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        return deletedTask;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Persdre"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Persdre": 56
    }
  },
  {
    "path": "src/main/java/duke/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Persdre"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Persdre"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * ToDo constructor"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     *"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * @param description Description string"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * @param isDone Completion status of todo"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public ToDo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        return \"[T][\" + super.getStatusIcon() + \"] \" + super.description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Persdre"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Persdre": 18
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Persdre"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Persdre"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Persdre"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Persdre"
        },
        "content": " * Ui class to deal with user interaction"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Persdre"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Persdre"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    private static final Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    private void delimiter() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        System.out.println(\"__________________________________________________________________\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * Returns next line of user input"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * @return Next line of user input"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        return sc.nextLine();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * Prints message when it operates"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public void showInfo() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        delimiter();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        System.out.println(\"    Hello, I\u0027m DukeQ\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        System.out.println(\"    todo then your instructions e.g. todo read book\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        System.out.println(\"    deadline then your instructions e.g. deadline by 2020-09-01\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        System.out.println(\"    type \u0027event\u0027 followed by the description,\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        System.out.println(\"    then \u0027/at\u0027, then timing in yyyy-MM-dd format\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        System.out.println(\"    done followed by the task number \" +"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                \"ok I have marked it as done\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        System.out.println(\"    type list to see the list\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        System.out.println(\"    type find followed by keywords to search for tasks\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        System.out.println(\"    type bye to exit\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        delimiter();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * Prints list of existing tasks"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * @param tasks List of tasks"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public void printList(TaskList tasks) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        delimiter();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        if (tasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            System.out.println(\"    List is empty\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            System.out.println(\"    Items in list:\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                System.out.println(\"      \" + (i + 1) + \". \" + tasks.get(i).toString());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        delimiter();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * Prints appropriate message for task depending on action type"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     *"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * @param task Task to be printed"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * @param action Action type; determines format of text that is printed"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public void printTask(Task task, ActionType action) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        delimiter();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        switch(action){"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        case MARK_DONE:"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            System.out.println(\"    Task marked complete:\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        case DELETE:"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            System.out.println(\"    Task deleted:\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            System.out.println(\"    Added: \");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        System.out.println(\"      \" + task.toString());"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        delimiter();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public void search(TaskList tasks, String input) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        int count \u003d 1;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        delimiter();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        System.out.println(\"    Matching tasks:\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        for (Task task: tasks.getList()) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            String taskString \u003d task.toString();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            if (taskString.contains(input)) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                System.out.println(\"      \" + count + \". \" + taskString);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                count++;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        delimiter();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * Prints total number of tasks"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     *"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * @param tasks List of tasks"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     */"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public void printTotalTasks(TaskList tasks) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        System.out.println(\"    Total tasks: \" + tasks.size());"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        delimiter();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * Prints goodbye message"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     */"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public void goodbye() {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        delimiter();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        System.out.println(\"    Bye!\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        delimiter();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Persdre"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Persdre": 113
    }
  },
  {
    "path": "src/test/java/duke/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Persdre"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Persdre"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Persdre"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Persdre"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public void dummyTest() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Persdre"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Persdre": 12
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Persdre"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Persdre"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Persdre"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Persdre"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Persdre"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Persdre"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Persdre"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "Persdre": 7
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Persdre"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "-": 37,
      "Persdre": 1
    }
  }
]
