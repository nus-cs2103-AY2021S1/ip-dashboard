[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    mainClassName \u003d \"seedu.duke.Duke\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 46,
      "gsmoon97": 15
    }
  },
  {
    "path": "data/luke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "E|1|read book|Aug 4th 3-4pm"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "T|0|return book"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "T|0|do this"
      }
    ],
    "authorContributionMap": {
      "gsmoon97": 3
    }
  },
  {
    "path": "src/main/java/luke/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "package luke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "import luke.exception.*;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "import luke.task.Deadline;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "import luke.task.Event;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "import luke.task.Task;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "import luke.task.Todo;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        File tlFile \u003d new File(\"./data/\", \"luke.txt\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        taskList.readTasks(tlFile);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        System.out.printf(\"Luke:\\n\\tHey there! I\u0027m Luke.\\n\\tPlease tell me what to add to your list.\\nYou:\\n\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "            String input \u003d sc.nextLine().toLowerCase();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "            if (Pattern.matches(\"^(todo) *.*$\", input)) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "                    Todo newTodo \u003d createTodo(input);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "                    taskList.writeTasks(tlFile, newTodo);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "                } catch (EmptyTodoException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "                    System.out.printf(\"Luke:%s\\nYou:\\n\", e.getMessage());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "            } else if (Pattern.matches(\"^(deadline) *.*$\", input)){"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "                    Deadline newDeadline \u003d createDeadline(input);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "                    taskList.writeTasks(tlFile, newDeadline);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "                } catch (EmptyDeadlineException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "                    System.out.printf(\"Luke:%s\\nYou:\\n\", e.getMessßage());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "                } catch (InvalidDeadlineException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "                    System.out.printf(\"Luke:%s\\nYou:\\n\", e.getMessage());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "            } else if (Pattern.matches(\"^(event) *.*$\", input)) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "                    Event newEvent \u003d createEvent(input);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "                    taskList.writeTasks(tlFile, newEvent);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "                } catch (EmptyEventException e) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "                    System.out.printf(\"Luke:%s\\nYou:\\n\", e.getMessage());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "                } catch (InvalidEventException e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "                    System.out.printf(\"Luke:%s\\nYou:\\n\", e.getMessage());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "            } else if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "                if (taskList.getSize() \u003c 1) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "                    System.out.printf(\"Luke:\\n\\tYou don\u0027t have any tasks in your list :(\\nYou:\\n\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "                    String todoSummary \u003d \"Luke:\\n\\tHere are the tasks in your list.\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "                    for (int i \u003d 0; i \u003c taskList.getSize(); i++) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "                        Task current \u003d taskList.getTask(i);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "                        todoSummary +\u003d String.format(\"\\n\\t%d.%s\", i + 1, current);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "                    System.out.printf(\"%s\\nYou:\\n\", todoSummary);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "            } else if (Pattern.matches(\"^(done) *[0-9]*$\", input)) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "               try {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "                   taskList.completeTask(input);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "               } catch (InvalidDoneException e) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "                   System.out.printf(\"Luke:%s\\nYou:\\n\", e.getMessage());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "               } catch (DoneIndexOutofboundsException e) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "                   System.out.printf(\"Luke:%s\\nYou:\\n\", e.getMessage());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "               }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "            } else if (Pattern.matches(\"^(delete) *[0-9]*$\", input)) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "                    taskList.deleteTask(input, tlFile);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "                } catch (InvalidDeleteException e) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "                    System.out.printf(\"Luke:%s\\nYou:\\n\", e.getMessage());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "                } catch (DeleteIndexOutofboundsException e) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "                    System.out.printf(\"Luke:%s\\nYou:\\n\", e.getMessage());"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "            } else if (Pattern.matches(\"^(find) *.*$\", input)) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "                input.replaceAll(\"find \", \"\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "                taskList.findTask(input);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "            } else if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "                System.out.println(\"Luke:\\n\\tOh, are you leaving? Hope to see you soon!\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "                System.out.printf(\"Luke:\\n\\tSorry I do not understand :( Please try another command.\\nYou:\\n\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        Label helloWorld \u003d new Label(\"Hello World!\"); // Creating a new Label control"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        Scene scene \u003d new Scene(helloWorld); // Setting the scene to be our Label"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        stage.setScene(scene); // Setting the stage to show our screen"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        stage.show(); // Render the stage."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "     * Creates a task.Todo object with the given input."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "     * @param input description of the task.Todo object"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "     * @return the todo object with the given input"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    private static Todo createTodo(String input) throws EmptyTodoException {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        String todo \u003d input.replaceAll(\"todo \", \"\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        if (input.equals(\"todo\") || input.equals(\"todo \")) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "            throw new EmptyTodoException(\"\\n\\tThe description of todo cannot be empty.\\n\\tPlease make sure you follow the correct format.\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "            return new Todo(todo);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "     * Creates a task.Deadline object with the given input."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "     * @param input description of the task.Deadline object"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "     * @return the task.Deadline object with the given input"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    private static Deadline createDeadline(String input) throws EmptyDeadlineException, InvalidDeadlineException {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        String[] deadline \u003d input.split(\"deadline | /by \");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        if (input.equals(\"deadline\") || input.equals(\"deadline \")) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "            throw new EmptyDeadlineException(\"\\n\\tThe description of deadline cannot be empty.\\n\\tPlease make sure you follow the correct format.\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        } else if (deadline.length !\u003d 3) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "            throw new InvalidDeadlineException(\"\\n\\tYou have typed in an invalid deadline.\\n\\tPlease make sure you follow the correct format.\");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "            return new Deadline(deadline[1], LocalDate.parse(deadline[2]));"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "     * Creates a task.Event object with the given input."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "     * @param input description of the task.Event object"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "     * @return the task.Event object with the given input"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    private static Event createEvent(String input) throws EmptyEventException, InvalidEventException {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        String[] event \u003d input.split(\"event | /at \");"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        if (input.equals(\"event\") || input.equals(\"event \")) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "            throw new EmptyEventException(\"\\n\\tThe description of event cannot be empty.\\n\\tPlease make sure you follow the correct format.\");"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        } else if (event.length !\u003d 3) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "            throw new InvalidEventException(\"\\n\\tYou have typed in an invalid event.\\n\\tPlease make sure you follow the correct format.\");"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "            return new Event(event[1], event[2]);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gsmoon97": 149
    }
  },
  {
    "path": "src/main/java/luke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "package luke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "import luke.exception.DeleteIndexOutofboundsException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "import luke.exception.DoneIndexOutofboundsException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "import luke.exception.InvalidDeleteException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "import luke.exception.InvalidDoneException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "import luke.task.Deadline;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "import luke.task.Event;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "import luke.task.Task;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "import luke.task.Todo;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    protected ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    public ArrayList\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        return this.tasks;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "     * Retrieves a task.Task object that corresponds to the given index."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "     * @param i index of the task.Task object"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "     * @return the task.Task object that corresponds to the given index"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    public Task getTask(int i) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        return this.tasks.get(i);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "     * Retrieves the number of tasks for the current luke.TaskList."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "     * @return the size of the current luke.TaskList"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        return this.tasks.size();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "     * Reads Tasks from the given file."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "     * @param file destination file"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    public void readTasks(File file) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        // read tasks from hard disk (./data/luke.txt)"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        try (BufferedReader br \u003d new BufferedReader(new FileReader(file))) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "            String readLine \u003d null;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "            while((readLine \u003d br.readLine()) !\u003d null){"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "                String[] readEach \u003d readLine.split(\"\\\\|\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "                Task task \u003d null;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "                if (readEach[0].equals(\"T\")) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "                    task \u003d new Todo(readEach[2]);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "                } else if (readEach[0].equals(\"D\")) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "                    task \u003d new Deadline(readEach[2], LocalDate.parse(readEach[3]));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "                } else if (readEach[0].equals(\"E\")) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "                    task \u003d new Event(readEach[2], readEach[3]);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "                if (readEach[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "                    task.markAsDone();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "                this.tasks.add(task);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "            System.out.println(e);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "     * Writes Tasks for the given file."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "     * @param file destination file"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "     * @param task newly added task"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    public void writeTasks(File file, Task task) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        // add task to the list"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        this.tasks.add(task);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        try (BufferedWriter bw \u003d new BufferedWriter(new FileWriter(file, true))) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "            // write task to hard disk (./data/luke.txt)"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "            String newTask \u003d \"\";"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "            String stat \u003d \"\";"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "            if (task.isDone) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "                stat \u003d \"1|\";"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "                stat +\u003d \"0|\";"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "            if (task instanceof Todo) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "                newTask +\u003d \"T|\" + stat + task.getDescription();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "            } else if (task instanceof Deadline) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "                newTask +\u003d \"T|\" + stat  + task.getDescription() + ((Deadline) task).getBy();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "            } else if (task instanceof Event) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "                newTask +\u003d \"T|\" + stat  + task.getDescription() + ((Event) task).getAt();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "            bw.newLine();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "            bw.write(newTask);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "            bw.flush();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "            printAddSuccess(this.tasks, task);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "            System.out.println(e);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "     * Completes Tasks for the given file."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "     * @param input destination file"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    public void completeTask(String input) throws InvalidDoneException, DoneIndexOutofboundsException {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        if (input.equals(\"done\") || input.equals(\"done \")) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "            throw new InvalidDoneException(\"\\n\\tThe index of done cannot be empty.\\n\\tPlease make sure you follow the correct format.\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        String numbering \u003d input.replaceAll(\"\\\\D+\", \"\"); //extract only the digits from the input"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        int index \u003d Integer.parseInt(numbering) - 1;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        if (index \u003c 0 || index \u003e\u003d this.tasks.size()) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "            throw new DoneIndexOutofboundsException(\"\\n\\tYou have typed in an invalid number.\\n\\tPlease check your list again.\");"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "            Task done \u003d this.tasks.get(index);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "            done.markAsDone();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "            System.out.printf(\"Luke:\\n\\tThe following task has successfully been marked as done!\\n\\t\\t%s\\nYou:\\n\", done);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    public void deleteTask(String input, File file) throws InvalidDeleteException, DeleteIndexOutofboundsException {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        if (input.equals(\"delete\") || input.equals(\"delete \")) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "            throw new InvalidDeleteException(\"\\n\\tThe index of delete cannot be empty.\\n\\tPlease make sure you follow the correct format.\");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        String numbering \u003d input.replaceAll(\"\\\\D+\", \"\"); //extract only the digits from the input"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        int index \u003d Integer.parseInt(numbering) - 1;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        if (index \u003c 0 || index \u003e\u003d this.tasks.size()) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "            throw new DeleteIndexOutofboundsException(\"\\n\\tYou have typed in an invalid number.\\n\\tPlease check your list again.\");"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "            Task delete \u003d this.tasks.get(index);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "            this.tasks.remove(index);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "            File tempFile \u003d new File(\"./data/\", \"temp.txt\");"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "            try (BufferedReader br \u003d new BufferedReader(new FileReader(file));"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "                 BufferedWriter bw \u003d new BufferedWriter(new FileWriter(tempFile))) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "                String readLine \u003d \"\";"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "                int counter \u003d 0;"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "                while((readLine \u003d br.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "                    // remove task from hard disk (./data/luke.txt)"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "                    counter++;"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "                    if (counter \u003d\u003d index + 1) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "                        continue;"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "                    bw.write(readLine);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "                    bw.newLine();"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "                bw.flush();"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "                System.out.println(e);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "            tempFile.renameTo(file);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "            System.out.printf(\"Luke:\\n\\tThe following task has successfully been deleted!\\n\\t\\t%s\\nYou:\\n\", delete);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    public void findTask(String input) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        ArrayList\u003cTask\u003e result \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        for (int i \u003d 0; i \u003c this.tasks.size(); i++) {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "            Task current \u003d this.tasks.get(i);"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "            if (current.getDescription().contains(input)) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "                result.add(current);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        if (result.size() \u003c 1) {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "            System.out.printf(\"Luke:\\n\\tYou don\u0027t have any tasks in your list :(\\nYou:\\n\");"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "            String todoSummary \u003d \"Luke:\\n\\tHere are the tasks in your list.\";"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "            for (int i \u003d 0; i \u003c result.size(); i++) {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "                Task current \u003d result.get(i);"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "                todoSummary +\u003d String.format(\"\\n\\t%d.%s\", i + 1, current);"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "            System.out.printf(\"%s\\nYou:\\n\", todoSummary);"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    private String countTasks(ArrayList\u003cTask\u003e arrayList) {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        int n \u003d arrayList.size();"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        return n \u003c\u003d 1"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "                ? String.format(\"%d task\", n)"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "                : String.format(\"%d tasks\", n);"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    private void printAddSuccess(ArrayList\u003cTask\u003e arrayList, Task task) {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        String number \u003d countTasks(arrayList);"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        System.out.printf(\"Luke:\\n\\tThe following task has been successfully added.\\n\\t\\t%s\\n\\tNow you have %s in your list.\\nYou:\\n\", task, number);"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gsmoon97": 198
    }
  },
  {
    "path": "src/main/java/luke/exception/DeleteIndexOutofboundsException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "package luke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "public class DeleteIndexOutofboundsException extends LukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    public DeleteIndexOutofboundsException(String msg) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gsmoon97": 7
    }
  },
  {
    "path": "src/main/java/luke/exception/DoneIndexOutofboundsException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "package luke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "public class DoneIndexOutofboundsException extends LukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    public DoneIndexOutofboundsException(String msg) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gsmoon97": 7
    }
  },
  {
    "path": "src/main/java/luke/exception/EmptyDeadlineException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "package luke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "public class EmptyDeadlineException extends LukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    public EmptyDeadlineException(String msg) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gsmoon97": 7
    }
  },
  {
    "path": "src/main/java/luke/exception/EmptyEventException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "package luke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "public class EmptyEventException extends LukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    public EmptyEventException(String msg) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gsmoon97": 7
    }
  },
  {
    "path": "src/main/java/luke/exception/EmptyTodoException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "package luke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "public class EmptyTodoException extends LukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    public EmptyTodoException(String msg) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gsmoon97": 7
    }
  },
  {
    "path": "src/main/java/luke/exception/InvalidDeadlineException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "package luke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "public class InvalidDeadlineException extends LukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    public InvalidDeadlineException(String msg) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gsmoon97": 7
    }
  },
  {
    "path": "src/main/java/luke/exception/InvalidDeleteException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "package luke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "public class InvalidDeleteException extends LukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    public InvalidDeleteException(String msg) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gsmoon97": 7
    }
  },
  {
    "path": "src/main/java/luke/exception/InvalidDoneException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "package luke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "public class InvalidDoneException extends LukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    public InvalidDoneException(String msg) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gsmoon97": 7
    }
  },
  {
    "path": "src/main/java/luke/exception/InvalidEventException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "package luke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "public class InvalidEventException extends LukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    public InvalidEventException(String msg) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gsmoon97": 7
    }
  },
  {
    "path": "src/main/java/luke/exception/LukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "package luke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "public class LukeException extends RuntimeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    public LukeException(String msg) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gsmoon97": 7
    }
  },
  {
    "path": "src/main/java/luke/gui/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "package luke.gui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "import luke.Main;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gsmoon97": 13
    }
  },
  {
    "path": "src/main/java/luke/gui/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "package luke.gui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "public class MainWindow {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gsmoon97": 4
    }
  },
  {
    "path": "src/main/java/luke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "package luke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "import java.time.format.FormatStyle;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "//    protected String by;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    protected LocalDate by;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    public Deadline(String description, LocalDate by) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    public String getBy() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        return stringifyBy();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    public String stringifyBy() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        return by.format(DateTimeFormatter.ofLocalizedDate(FormatStyle.LONG));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + stringifyBy() + \")\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gsmoon97": 28
    }
  },
  {
    "path": "src/main/java/luke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "package luke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    public String getAt() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        return at;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + this.at + \")\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gsmoon97": 20
    }
  },
  {
    "path": "src/main/java/luke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "package luke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        this.isDone \u003d true; //mark the progress as done"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        return String.format(\"[%s] %s\", this.getStatusIcon(), this.getDescription());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gsmoon97": 28
    }
  },
  {
    "path": "src/main/java/luke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "package luke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gsmoon97": 13
    }
  },
  {
    "path": "src/test/java/MainTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "public class MainTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    public void dummyTest1(){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        assertEquals(1, 1);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    public void dummyTest2(){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gsmoon97": 15
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "java -classpath ../bin luke.Main \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "-": 31,
      "gsmoon97": 3
    }
  }
]
