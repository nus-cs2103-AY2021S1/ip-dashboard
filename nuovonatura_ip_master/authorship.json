[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "# duke.duke project template"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "1. Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Open or Import`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "1. After the importing is complete, locate the `src/main/java/duke.duke.java` file, right-click it, and choose `Run duke.duke.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    ____        _        "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      }
    ],
    "authorContributionMap": {
      "nuovonatura": 2,
      "-": 24
    }
  },
  {
    "path": "TodoList.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "E | 0 | what | when"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "T | 0 | what"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "D | 1 | what | when"
      }
    ],
    "authorContributionMap": {
      "nuovonatura": 3
    }
  },
  {
    "path": "data/tasks.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "T | 0 | then"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "T | 0 | whats next"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "T | 1 | what"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "T | 1 | how"
      }
    ],
    "authorContributionMap": {
      "nuovonatura": 4
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "import duke.commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                ui.showLine(); // show the divider line (\"_______\")"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                Command c \u003d Parser.translate(fullCommand);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        new Duke(\"data/tasks.txt\").run();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nuovonatura": 48
    }
  },
  {
    "path": "src/main/java/duke/commands/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    protected String commandName;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    protected boolean isExit;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        return isExit;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    abstract public void execute(TaskList list, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nuovonatura": 17
    }
  },
  {
    "path": "src/main/java/duke/commands/CreateTaskCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "public class CreateTaskCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    private final String type;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    private final String description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    private final LocalDate date;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    public CreateTaskCommand(String type, String description, LocalDate... date) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        this.commandName \u003d \"Create\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        this.date \u003d date.length \u003e 0 ? date[0] : null;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        this.isExit \u003d false;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    public void execute(TaskList list, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        Task task \u003d type.equals(\"todo\") ? new Task(type,description) : new Task(type, description, date);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        list.addTask(task);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        storage.write(list.getList());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        ui.showAdd(task);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        list.printList(\"All\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nuovonatura": 32
    }
  },
  {
    "path": "src/main/java/duke/commands/DateFilterCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "public class DateFilterCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    private LocalDate date;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    public DateFilterCommand(LocalDate date) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        this.commandName \u003d \"DateFilter\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        this.isExit \u003d false;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    public void execute(TaskList list, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        ui.showDateFilterList();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        list.printList(date);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nuovonatura": 23
    }
  },
  {
    "path": "src/main/java/duke/commands/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    private final int taskIndex;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    public DeleteCommand(int taskIndex) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        this.commandName \u003d \"Delete\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        this.taskIndex \u003d taskIndex;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        this.isExit \u003d false;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    public void execute(TaskList list, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        Task task \u003d list.getTaskAtIndex(taskIndex);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        list.deleteTask(task);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        storage.write(list.getList());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        ui.showDelete(task);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        list.printList(\"All\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nuovonatura": 26
    }
  },
  {
    "path": "src/main/java/duke/commands/DoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "public class DoCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    private final int taskIndex;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    public DoCommand(int taskIndex) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        this.commandName \u003d \"Do\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        this.taskIndex \u003d taskIndex;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        this.isExit \u003d false;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    public void execute(TaskList list, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        Task task \u003d list.getTaskAtIndex(taskIndex);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        task.setDone();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        list.markTaskAsDone(task);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        storage.write(list.getList());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        ui.showDone(task);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        list.printList(\"Undone\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nuovonatura": 27
    }
  },
  {
    "path": "src/main/java/duke/commands/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    public ExitCommand() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        this.commandName \u003d \"Exit\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        this.isExit \u003d true;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    public void execute(TaskList list, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        ui.showFarewell();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nuovonatura": 17
    }
  },
  {
    "path": "src/main/java/duke/commands/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    public ListCommand() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        this.commandName \u003d \"FullList\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        this.isExit \u003d false;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    public void execute(TaskList list, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        ui.showList();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        list.printList(\"All\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nuovonatura": 18
    }
  },
  {
    "path": "src/main/java/duke/exceptions/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nuovonatura": 7
    }
  },
  {
    "path": "src/main/java/duke/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "import duke.commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "import duke.commands.CreateTaskCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "import duke.commands.DateFilterCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "import duke.commands.DeleteCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "import duke.commands.DoCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "import duke.commands.ExitCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "import duke.commands.ListCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    private static final String DATEREGEX \u003d \"^(19|20)\\\\d\\\\d-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    public static Command translate(String userInput) throws DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        Command command;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        String[] commandParaPair \u003d userInput.split(\" \", 2);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        switch (commandParaPair[0]) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "            case \"bye\":"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                command \u003d new ExitCommand();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                command \u003d new ListCommand();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "            case \"on\":"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                if (commandParaPair.length \u003c 2 || !commandParaPair[1].matches(DATEREGEX)) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                    throw new DukeException(\"\\tCannot recognise date.\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                    command \u003d new DateFilterCommand(LocalDate.parse(commandParaPair[1]));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                if (commandParaPair.length \u003c 2 || !commandParaPair[1].matches(\"\\\\d+\")) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                    throw new DukeException(\"\\tCannot recognise task number.\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                    command \u003d new DoCommand(Integer.parseInt(commandParaPair[1]));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                if (commandParaPair.length \u003c 2 || !commandParaPair[1].matches(\"\\\\d+\")) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                    throw new DukeException(\"\\tCannot recognise task number.\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                    command \u003d new DeleteCommand(Integer.parseInt(commandParaPair[1]));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                if (commandParaPair.length \u003c 2) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                    throw new DukeException(\"\\tCannot create todo without description.\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                    command \u003d new CreateTaskCommand(commandParaPair[0], commandParaPair[1]);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                if (commandParaPair.length \u003c 2) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                    throw new DukeException(\"\\tCannot create deadline / event without description.\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                    String[] descriptionDate \u003d commandParaPair[1].split(\" /by | /at \");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                    if (descriptionDate.length \u003c 2) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                        throw new DukeException(\"\\tCannot create deadline / event without date.\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                    } else if (!descriptionDate[1].matches(DATEREGEX)) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                        throw new DukeException(\"\\tCannot recognise date.\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                        command \u003d new CreateTaskCommand(commandParaPair[0],"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                                descriptionDate[0],"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                                LocalDate.parse(descriptionDate[1]));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                throw new DukeException(\"\\tCannot recognise command.\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        return command;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nuovonatura": 77
    }
  },
  {
    "path": "src/main/java/duke/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "import duke.tasks.TaskType;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    private final File FILE;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        this.FILE \u003d new File(filePath);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        ArrayList\u003cTask\u003e lst \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "            Scanner fileReader \u003d new Scanner(FILE);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "            while (fileReader.hasNextLine()) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                String line \u003d fileReader.nextLine();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                String[] command \u003d line.split(\" \\\\| \");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                switch (command[0]) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                    case \"T\":"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                        Task todo \u003d new Task(\"todo\", command[2]);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                        if (command[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                            todo.setDone();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                        lst.add(todo);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                    case \"D\":"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                        Task deadline \u003d new Task(\"deadline\", command[2], LocalDate.parse(command[3]));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                        if (command[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                            deadline.setDone();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                        lst.add(deadline);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                    case \"E\":"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                        Task event \u003d new Task(\"event\", command[2], LocalDate.parse(command[3]));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                        if (command[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                            event.setDone();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                        lst.add(event);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "            fileReader.close();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "            throw new DukeException(\"\\tFile not Found.\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "            throw new DukeException(\"\\tError loading history. \" + e.getMessage());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        return lst;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    //Write to file"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    public void write(ArrayList\u003cTask\u003e lst) throws DukeException {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "            FILE.getParentFile().mkdir();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "            FileWriter fileWriter \u003d new FileWriter(FILE);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "            String listToString \u003d \"\";"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "            for (Task t : lst) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                if (t.getType() \u003d\u003d TaskType.TODO) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                    listToString +\u003d \"T | \" + (t.getStatus() ? 1 : 0) + \" | \" + t.getDescription() + \"\\n\";"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                } else if (t.getType() \u003d\u003d TaskType.DEADLINE) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                    listToString +\u003d \"D | \" + (t.getStatus() ? 1 : 0) + \" | \" + t.getDescription() + \" | \" +"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                            t.getDate().format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\")) + \"\\n\";"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                    listToString +\u003d \"E | \" + (t.getStatus() ? 1 : 0) + \" | \" + t.getDescription() + \" | \" +"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                            t.getDate().format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\")) + \"\\n\";"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "            }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "            fileWriter.write(listToString);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "            fileWriter.close();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "            throw new DukeException(\"Error during writing. \" + e.getMessage());"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nuovonatura": 88
    }
  },
  {
    "path": "src/main/java/duke/tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    private final TaskType TYPE;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    private LocalDate date;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    public Task(String type, String description, LocalDate... date) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        this.TYPE \u003d TaskType.valueToType(type);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        this.date \u003d date.length \u003e 0 ? date[0] : null;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    public TaskType getType() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        return TYPE;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    public boolean getStatus() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    private String getStatusIcon() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    public LocalDate getDate() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    public void setDone() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    public boolean hasDate() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        return date !\u003d null;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        String string \u003d \"[\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        switch (TYPE) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "            case TODO:"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                string +\u003d \"T][\" + getStatusIcon() + \"] \" + getDescription();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "            case EVENT:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                string +\u003d \"E][\" + getStatusIcon() + \"] \" + getDescription() +"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                \" (at: \" + date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "            case DEADLINE:"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                string +\u003d \"D][\" + getStatusIcon() + \"] \" + getDescription() +"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                        \" (by: \" + date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        return string;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nuovonatura": 65
    }
  },
  {
    "path": "src/main/java/duke/tasks/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    private ArrayList\u003cTask\u003e list;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    private int activeTasks;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        this.list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        this.activeTasks \u003d 0;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        this.list \u003d list;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        activeTasks \u003d 0;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        for (Task t : list) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "            if (t.getStatus()) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                activeTasks++;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "            }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        list.add(task.getStatus() ? list.size() : activeTasks, task);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        activeTasks +\u003d task.getStatus() ? 0 : 1;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    public void deleteTask(Task task) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        list.remove(task);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        activeTasks -\u003d task.getStatus() ? 0 : 1;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    public void moveDoneToLast(Task task) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        deleteTask(task);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        addTask(task);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    public void markTaskAsDone(Task task) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        task.setDone();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        activeTasks--;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        moveDoneToLast(task);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    public Task getTaskAtIndex(int index) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        return list.get(index - 1);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    public ArrayList\u003cTask\u003e getList() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    public void printList(String mode) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        int i \u003d 1;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        for (Task t : list) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "            switch (mode) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                case \"Undone\":"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                    if (t.getStatus()) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                        continue;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "            System.out.println(\"\\t\" + i + \". \" + t);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "            i++;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    public void printList(LocalDate date) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        int i \u003d 1;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        for (Task t : list) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "            if (!t.hasDate() || !t.getDate().equals(date)) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "            }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "            System.out.println(\"\\t\" + i + \". \" + t);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "            i++;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nuovonatura": 79
    }
  },
  {
    "path": "src/main/java/duke/tasks/TaskType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "public enum TaskType {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    TODO(\"todo\"),"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    DEADLINE(\"deadline\"),"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    EVENT(\"event\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    private String type;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        return this.type;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    TaskType(String type) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    public static TaskType valueToType(String value) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        for (TaskType t : values()) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "            if (t.type.equals(value)) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                return t;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "            }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nuovonatura": 26
    }
  },
  {
    "path": "src/main/java/duke/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "import duke.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        System.out.println(\"----------------------------------------------------------------------------------------\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        System.out.println(\"\\tHello!\\n\\tI am Baymax, your personal idle time companion.\" +"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                \"\\n\\tHow may I help you?\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    public void showFarewell() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        System.out.println(\"\\tList saved!\\n\\tIt was my pleasure assisting you.\\n\\tSee you next Time!\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    public void showList() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        System.out.println(\"\\tHere are the tasks in your list:\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    public void showDone(Task task) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        System.out.println(\"\\tYou have finished \" + task + \"!\\n\\tMove on to the next one:\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    public void showAdd(Task task) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        System.out.println(\"\\tYou have added \" + task + \"!\\n\\tNow you have these tasks:\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    public void showDelete(Task task) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        System.out.println(\"\\t\" + task + \" deleted. \\n\\tCheck out other tasks:\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    public void showDateFilterList() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        System.out.println(\"\\tYou have these tasks on this date:\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        return scanner.nextLine();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    public void showError(String error) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        System.out.println(error);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        System.out.println(\"\\tError loading file.\\n\\tNew Duke Todo list created!\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nuovonatura": 57
    }
  },
  {
    "path": "src/test/duke/storage/StorageTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "import duke.tasks.TaskType;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "public class StorageTest {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    Storage storage1 \u003d new Storage(\"./src/test/tasks.txt\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    Storage storage2 \u003d new Storage(\"./tasks.txt\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    void load() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "            ArrayList\u003cTask\u003e list \u003d storage1.load();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "            Task task \u003d list.get(0);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "            assertTrue(list.size() \u003d\u003d 1);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "            assertTrue(task.getDescription().equals(\"what\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "            assertEquals(task.getType(), TaskType.DEADLINE);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "            assertEquals(task.getStatus(), false);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    void load_nonExistingFile() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "            storage2.load();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "            assertTrue(e.getMessage().equals(\"\\tFile not Found.\"));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    void write() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        list.add(new Task(\"deadline\", \"what\", LocalDate.parse(\"2019-01-01\")));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "            storage1.write(list);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nuovonatura": 51
    }
  },
  {
    "path": "src/test/tasks.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "D | 0 | what | 2019-01-01"
      }
    ],
    "authorContributionMap": {
      "nuovonatura": 1
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "blah"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "what"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "todo"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "deadline return book"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "event project meeting"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "deadline homework /by today"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "list"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "done 9"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "todo return book"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "event lesson /at Friday 10-12am"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "list"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "delete 7"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "delete 4"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "list"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "nuovonatura": 19
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "SET JAVA_TOOL_OPTIONS\u003d-Dfile.encoding\u003dUTF-8"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "nuovonatura": 2,
      "-": 20
    }
  }
]
