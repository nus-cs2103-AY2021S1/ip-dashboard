[
  {
    "path": "CHANGELOG.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "therizhao"
        },
        "content": "# Changelog"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "therizhao"
        },
        "content": "All notable changes to this project will be documented in this file. See [standard-version](https://github.com/conventional-changelog/standard-version) for commit guidelines."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "therizhao"
        },
        "content": "## 0.2.0 (2020-08-24)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "therizhao"
        },
        "content": "### Features"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "therizhao"
        },
        "content": "- **level7:** Add save current task list ([bbfcc92](https://github.com/therizhao/ip/commit/bbfcc92aaf191d7389ea03e5b8879583b28df25d))"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "therizhao"
        },
        "content": "- **level8:** add list date command to print deadlines/events occurring on a specific date ([385cda4](https://github.com/therizhao/ip/commit/385cda46f79504ed6f0424105eddbf780f83d909))"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "therizhao"
        },
        "content": "- **level8:** Store actual date object in Event and Deadline class ([9c4abe1](https://github.com/therizhao/ip/commit/9c4abe1b3a0c044aee8ce0ac247a974ef7fef1af))"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "therizhao"
        },
        "content": "### Bug Fixes"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "therizhao"
        },
        "content": "- Fix task type tag of deadline task ([14383a1](https://github.com/therizhao/ip/commit/14383a1f74325eeb218e837858cf22a89f66599a))"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "therizhao"
        },
        "content": "## 0.1.0 (2020-08-17)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "therizhao"
        },
        "content": "### Features"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "therizhao"
        },
        "content": "- **level1:** Add greet, echo and exit functionality ([de60fe6](https://github.com/therizhao/ip/commit/de60fe69a835ac6f41a3a40cd41b968d06639c45))"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "therizhao"
        },
        "content": "- **level2:** Add list and add commands ([ee8bd8f](https://github.com/therizhao/ip/commit/ee8bd8fb91444b8fb4015e451e667870caa79d8b))"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "therizhao"
        },
        "content": "- **level3:** Add done command ([c28d3fe](https://github.com/therizhao/ip/commit/c28d3fe98b0d0bbbf85fd6799dfd2fcd71b95e0b))"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "therizhao"
        },
        "content": "- **level4:** Add input processing for task added ([fa2b191](https://github.com/therizhao/ip/commit/fa2b19161190676df1ef50646435ff6a94165647))"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "therizhao"
        },
        "content": "- **level4:** Add todo, event \u0026 deadline commands and corresponding classes ([9fcc85d](https://github.com/therizhao/ip/commit/9fcc85dd2233641242b571190eb969fa1c7d89dc))"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "therizhao"
        },
        "content": "- **level5:** Add exception handling using DukeException ([7c3258b](https://github.com/therizhao/ip/commit/7c3258b708be13c8d7f5e22f24d3a55fff380ab0))"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "therizhao"
        },
        "content": "- **level6:** Add delete task function ([de94551](https://github.com/therizhao/ip/commit/de94551b18ddd63dbed9205f840521cd40a662ef))"
      }
    ],
    "authorContributionMap": {
      "therizhao": 27
    }
  },
  {
    "path": "CONTRIBUTORS.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# Contributors"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "therizhao"
        },
        "content": "| Display                                                      |        Name         |            Github Profile             |                      Homepage                      |"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "therizhao"
        },
        "content": "| ------------------------------------------------------------ | :-----------------: | :-----------------------------------: | :------------------------------------------------: |"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "therizhao"
        },
        "content": "| ![](https://avatars0.githubusercontent.com/u/22460123?s\u003d100) |     Jeffry Lum      |  [Github](https://github.com/j-lum/)  |        [Homepage](https://se.kasugano.moe)         |"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "therizhao"
        },
        "content": "| ![](https://avatars0.githubusercontent.com/u/1673303?s\u003d100)  | Damith C. Rajapakse | [Github](https://github.com/damithc/) | [Homepage](https://www.comp.nus.edu.sg/~damithch/) |"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "# I would like to join this list. How can I help the project"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "For more information, please refer to our [contributor\u0027s guide](https://oss-generic.github.io/process/)."
      }
    ],
    "authorContributionMap": {
      "-": 5,
      "therizhao": 5
    }
  },
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "therizhao"
        },
        "content": "# Duke"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "therizhao"
        },
        "content": "This project is part of a module for CS2103 Software Engineering in NUS."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "therizhao"
        },
        "content": "It is a todo list that runs on the command line."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "therizhao"
        },
        "content": "I hope my code isn\u0027t too bad :-)."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "therizhao"
        },
        "content": "**Changelog:**  https://github.com/therizhao/ip/blob/master/CHANGELOG.md"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "therizhao"
        },
        "content": "## How are commits done?"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "therizhao"
        },
        "content": "- Commits follow [Conventional Commits](https://www.conventionalcommits.org/en/v1.0.0/) specification"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "therizhao"
        },
        "content": "- An [Intellij IDE tool](https://plugins.jetbrains.com/plugin/9861-git-commit-template) is used to enforce the styling "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "therizhao"
        },
        "content": "## How is the Changelog generated?"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "therizhao"
        },
        "content": "To generate the changelog, run the follow steps"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "therizhao"
        },
        "content": "1. Run `npm i` in cli (to download `standard-version` package)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "therizhao"
        },
        "content": "2. Run `npm run release` in cli"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    - Git tag of the new version will be auto-added"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    - Changelog will be auto-updated"
      }
    ],
    "authorContributionMap": {
      "-": 3,
      "therizhao": 20
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "### Feature 1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "therizhao"
        },
        "content": " "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Description of feature."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "### `Keyword` - Describe action"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "Describe action and its outcome."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "`keyword (optional arguments)`"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "`outcome`"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "therizhao"
        },
        "content": "`"
      }
    ],
    "authorContributionMap": {
      "-": 20,
      "therizhao": 2
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "therizhao"
        },
        "content": "public class Main {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        new Duke(\"tasks.txt\").run();"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "therizhao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "therizhao": 7
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "therizhao"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.scanner.CommandScanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "therizhao"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "therizhao"
        },
        "content": " * Duke class"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "therizhao"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    private String fileString;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public Duke(String fileString) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        this.fileString \u003d fileString;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        this.taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * Runs the duke program"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        Ui.showGreet();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        CommandScanner cmdScanner \u003d new CommandScanner();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            Storage storage \u003d Storage.create(this.fileString);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            while (true) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "therizhao"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "therizhao"
        },
        "content": "                    Command cmd \u003d cmdScanner.nextCommand();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "therizhao"
        },
        "content": "                    cmd.execute(this.taskList);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "therizhao"
        },
        "content": "                    storage.write(this.taskList);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "therizhao"
        },
        "content": "                    if (cmd.isExit()) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "therizhao"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "therizhao"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "therizhao"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "therizhao"
        },
        "content": "                    Ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "therizhao"
        },
        "content": "                }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            Ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            Ui.showUnexpectedError(e.getMessage());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 2,
      "therizhao": 48
    }
  },
  {
    "path": "src/main/java/duke/command/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "therizhao"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "therizhao"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "therizhao"
        },
        "content": " * ByeCommand signals the program should end"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "therizhao"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "therizhao"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public ByeCommand(String commandString) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        super(CommandType.BYE, commandString);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * Prints goodbye output"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public void execute(TaskList tasks) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        Ui.showBye();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "therizhao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "therizhao": 26
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "therizhao"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "therizhao"
        },
        "content": "/** Command is the base class of all commands */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "therizhao"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "therizhao"
        },
        "content": "  private final CommandType commandType;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "therizhao"
        },
        "content": "  private final String commandString;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "therizhao"
        },
        "content": "  public Command(CommandType commandType, String commandString) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    this.commandType \u003d commandType;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    this.commandString \u003d commandString;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "therizhao"
        },
        "content": "  }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "therizhao"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "therizhao"
        },
        "content": "   * Returns a Command subclass object based on the commandType and commandString given"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "therizhao"
        },
        "content": "   *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "therizhao"
        },
        "content": "   * @param commandType of the commandString"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "therizhao"
        },
        "content": "   * @param commandString represent the command"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "therizhao"
        },
        "content": "   * @return a Command subclass object based on the commandType and commandString given"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "therizhao"
        },
        "content": "   * @throws DukeException when the command is invalid"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "therizhao"
        },
        "content": "   */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "therizhao"
        },
        "content": "  public static Command create(CommandType commandType, String commandString) throws DukeException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    switch (commandType) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "therizhao"
        },
        "content": "      case LIST_DATE:"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        return new ListDateCommand(commandString);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "therizhao"
        },
        "content": "      case LIST:"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        return new ListCommand(commandString);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "therizhao"
        },
        "content": "      case DONE:"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        return new DoneCommand(commandString);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "therizhao"
        },
        "content": "      case TODO:"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        return new ToDoCommand(commandString);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "therizhao"
        },
        "content": "      case DEADLINE:"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        return new DeadlineCommand(commandString);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "therizhao"
        },
        "content": "      case EVENT:"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        return new EventCommand(commandString);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "therizhao"
        },
        "content": "      case DELETE:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        return new DeleteCommand(commandString);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "therizhao"
        },
        "content": "      case BYE:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        return new ByeCommand(commandString);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "therizhao"
        },
        "content": "      case FIND:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        return new FindCommand(commandString);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "therizhao"
        },
        "content": "      default:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        throw Ui.commandInvalidException();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "therizhao"
        },
        "content": "  }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "therizhao"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "therizhao"
        },
        "content": "   * Returns the description of the task excluding the command type"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "therizhao"
        },
        "content": "   *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "therizhao"
        },
        "content": "   * @return the description of the task excluding the command type"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "therizhao"
        },
        "content": "   * @throws DukeException when the description is not found"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "therizhao"
        },
        "content": "   */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "therizhao"
        },
        "content": "  public String getTaskDescription() throws DukeException {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    return Parser.getTaskDescription(this.commandType, this.commandString);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "therizhao"
        },
        "content": "  }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "therizhao"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "therizhao"
        },
        "content": "   * Returns the command string of the command"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "therizhao"
        },
        "content": "   *"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "therizhao"
        },
        "content": "   * @return the command string of the command"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "therizhao"
        },
        "content": "   */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "therizhao"
        },
        "content": "  public String getCommandString() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    return commandString;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "therizhao"
        },
        "content": "  }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "therizhao"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "therizhao"
        },
        "content": "   * Returns the command type of the command"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "therizhao"
        },
        "content": "   *"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "therizhao"
        },
        "content": "   * @return the command type of the command"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "therizhao"
        },
        "content": "   */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "therizhao"
        },
        "content": "  public CommandType getCommandType() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    return this.commandType;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "therizhao"
        },
        "content": "  }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "therizhao"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "therizhao"
        },
        "content": "   * Returns true if and only if the program should exit"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "therizhao"
        },
        "content": "   *"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "therizhao"
        },
        "content": "   * @return true if and only if the program should exit"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "therizhao"
        },
        "content": "   */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "therizhao"
        },
        "content": "  public boolean isExit() {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    return false;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "therizhao"
        },
        "content": "  }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "therizhao"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "therizhao"
        },
        "content": "   * Executes the command"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "therizhao"
        },
        "content": "   *"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "therizhao"
        },
        "content": "   * @param tasks TaskList object to be modified / accessed by the command"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "therizhao"
        },
        "content": "   * @throws DukeException when something goes wrong"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "therizhao"
        },
        "content": "   */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "therizhao"
        },
        "content": "  public abstract void execute(TaskList tasks) throws DukeException;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "therizhao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "therizhao": 95
    }
  },
  {
    "path": "src/main/java/duke/command/CommandType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "therizhao"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "therizhao"
        },
        "content": "/** CommandType represents all the valid commands available */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "therizhao"
        },
        "content": "public enum CommandType {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "therizhao"
        },
        "content": "  LIST_DATE(\"date\"),"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "therizhao"
        },
        "content": "  LIST(\"list\"),"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "therizhao"
        },
        "content": "  DEADLINE(\"deadline\"),"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "therizhao"
        },
        "content": "  TODO(\"todo\"),"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "therizhao"
        },
        "content": "  EVENT(\"event\"),"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "therizhao"
        },
        "content": "  DONE(\"done\"),"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "therizhao"
        },
        "content": "  BYE(\"bye\"),"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "therizhao"
        },
        "content": "  DELETE(\"delete\"),"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "therizhao"
        },
        "content": "  FIND(\"find\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "therizhao"
        },
        "content": "  private String name;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "therizhao"
        },
        "content": "  CommandType(String name) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    this.name \u003d name;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "therizhao"
        },
        "content": "  }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "therizhao"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "therizhao"
        },
        "content": "   * Returns true if an only if the command string matches the command type"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "therizhao"
        },
        "content": "   *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "therizhao"
        },
        "content": "   * @param commandString to be checked"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "therizhao"
        },
        "content": "   * @return true if an only if the command string matches the command type"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "therizhao"
        },
        "content": "   */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "therizhao"
        },
        "content": "  public boolean is(String commandString) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    return commandString.startsWith(this.name);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "therizhao"
        },
        "content": "  }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "therizhao"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "therizhao"
        },
        "content": "  public String toString() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    return this.name;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "therizhao"
        },
        "content": "  }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "therizhao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "therizhao": 35
    }
  },
  {
    "path": "src/main/java/duke/command/CreateCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "therizhao"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "therizhao"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "therizhao"
        },
        "content": " * UpdateCommand is the abstract superclass of all command classes that requires adding of new items"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "therizhao"
        },
        "content": " * into the task list"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "therizhao"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "therizhao"
        },
        "content": "public abstract class CreateCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public CreateCommand(CommandType commandType, String commandString) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        super(commandType, commandString);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * Adds a task into the task list and prints the task added"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * @param tasks task list of task"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * @param task  the task to be added"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public void addTask(TaskList tasks, Task task) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        Ui.showAddTask(task);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "therizhao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "therizhao": 26
    }
  },
  {
    "path": "src/main/java/duke/command/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "therizhao"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "therizhao"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "therizhao"
        },
        "content": " * EventCommand adds a deadline task to the task list"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "therizhao"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "therizhao"
        },
        "content": "public class DeadlineCommand extends CreateCommand {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "therizhao"
        },
        "content": "  public DeadlineCommand(String commandString) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    super(CommandType.DEADLINE, commandString);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "therizhao"
        },
        "content": "  }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "therizhao"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "therizhao"
        },
        "content": "   * Adds a deadline event to the task list"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "therizhao"
        },
        "content": "   *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "therizhao"
        },
        "content": "   * @param tasks task list of tasks"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "therizhao"
        },
        "content": "   * @throws DukeException when the command string has no valid date"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "therizhao"
        },
        "content": "   */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "therizhao"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "therizhao"
        },
        "content": "  public void execute(TaskList tasks) throws DukeException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    String description \u003d super.getTaskDescription();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    String[] taskParts \u003d description.split(\" /by \", 2);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    if (taskParts.length !\u003d 2 || taskParts[1].equals(\"\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "therizhao"
        },
        "content": "      throw Ui.taskDateEmptyException(super.getCommandType());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    String name \u003d taskParts[0];"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    String dateString \u003d taskParts[1];"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    super.addTask(tasks, new Deadline(name, Parser.parseDateString(dateString)));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "therizhao"
        },
        "content": "  }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "therizhao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "therizhao": 36
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "therizhao"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "therizhao"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "therizhao"
        },
        "content": " * DeleteComamnd deletes the task specifed in the tasklist"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "therizhao"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "therizhao"
        },
        "content": "public class DeleteCommand extends UpdateCommand {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public DeleteCommand(String commandString) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        super(CommandType.DELETE, commandString);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * Deletes the task specifed in the tasklist"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * @param tasks a list of tasks"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public void execute(TaskList tasks) throws DukeException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        int index \u003d super.getTaskTargetIndex();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        Task task \u003d tasks.remove(index);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        Ui.showDelete(task);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "therizhao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "therizhao": 27
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "therizhao"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "therizhao"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "therizhao"
        },
        "content": " * DoneCommand sets the task specified in the command as done in the task list"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "therizhao"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "therizhao"
        },
        "content": "public class DoneCommand extends UpdateCommand {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public DoneCommand(String commandString) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        super(CommandType.DONE, commandString);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * Sets the task specified in the command as done in the task list"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * @param tasks task list of tasks"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * @throws DukeException when the index in the command string is invalid"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public void execute(TaskList tasks) throws DukeException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        int index \u003d super.getTaskTargetIndex();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        Task task \u003d tasks.get(index);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        task.setDone(true);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        Ui.showDone(task);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "therizhao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "therizhao": 29
    }
  },
  {
    "path": "src/main/java/duke/command/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "therizhao"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "therizhao"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "therizhao"
        },
        "content": " * EventCommand adds an event to the task list"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "therizhao"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "therizhao"
        },
        "content": "public class EventCommand extends CreateCommand {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public EventCommand(String commandString) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        super(CommandType.EVENT, commandString);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * Adds an event to the task list"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * @param tasks task list of tasks"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * @throws DukeException when the command string has no valid date"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public void execute(TaskList tasks) throws DukeException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        String description \u003d super.getTaskDescription();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        String[] taskParts \u003d description.split(\" /at \", 2);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        if (taskParts.length !\u003d 2 || taskParts[1].equals(\"\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            throw Ui.taskDateEmptyException(super.getCommandType());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        String name \u003d taskParts[0];"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        String dateString \u003d taskParts[1];"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        super.addTask(tasks, new Event(name, Parser.parseDateString(dateString)));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "therizhao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "therizhao": 35
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "therizhao"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "therizhao"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "therizhao"
        },
        "content": " * FindCommand finds all tasks matching keyword"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "therizhao"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "therizhao"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public FindCommand(String commandString) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        super(CommandType.FIND, commandString);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * Finds all the tasks in the task list that matches keyword"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * @param tasks task list of tasks"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * @throws DukeException when the command string has no keyword"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public void execute(TaskList tasks) throws DukeException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        String keyword \u003d super.getTaskDescription();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        TaskList filteredTasks \u003d new TaskList();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            if (task.getName().contains(keyword)) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "therizhao"
        },
        "content": "                filteredTasks.add(task);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        Ui.showList(filteredTasks);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "therizhao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "therizhao": 33
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "therizhao"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "therizhao"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "therizhao"
        },
        "content": " * ListCommand lists all the tasks"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "therizhao"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "therizhao"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public ListCommand(String commandString) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        super(CommandType.LIST, commandString);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * Lists all the tasks in the task list"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * @param tasks task list of tasks"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public void execute(TaskList tasks) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        Ui.showList(tasks);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "therizhao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "therizhao": 23
    }
  },
  {
    "path": "src/main/java/duke/command/ListDateCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "therizhao"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "therizhao"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "therizhao"
        },
        "content": " * ListDateCommand lists all the tasks on the date specified"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "therizhao"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "therizhao"
        },
        "content": "public class ListDateCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public ListDateCommand(String commandString) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        super(CommandType.LIST_DATE, commandString);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * ListDateCommand lists all the tasks on the date specified"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * @param tasks task list of tasks"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * @throws DukeException when the date is invalid"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public void execute(TaskList tasks) throws DukeException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        String dateString \u003d this.getTaskDescription();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        LocalDate date \u003d Parser.parseDateString(dateString);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        Ui.showListDate(tasks, date);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "therizhao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "therizhao": 30
    }
  },
  {
    "path": "src/main/java/duke/command/ToDoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "therizhao"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "therizhao"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "therizhao"
        },
        "content": " * ToDo command that adds a todo task"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "therizhao"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "therizhao"
        },
        "content": "public class ToDoCommand extends CreateCommand {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public ToDoCommand(String commandString) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        super(CommandType.TODO, commandString);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * Adds a todo task to the task list"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * @param tasks task list of tasks"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public void execute(TaskList tasks) throws DukeException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        String description \u003d this.getTaskDescription();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        this.addTask(tasks, new ToDo(description));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "therizhao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "therizhao": 25
    }
  },
  {
    "path": "src/main/java/duke/command/UpdateCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "therizhao"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "therizhao"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "therizhao"
        },
        "content": " * UpdateCommand is the abstract superclass of all command classes that requires editing (except"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "therizhao"
        },
        "content": " * adding new items) of the tasklist in the execute command"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "therizhao"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "therizhao"
        },
        "content": "public abstract class UpdateCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public UpdateCommand(CommandType commandType, String commandString) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        super(commandType, commandString);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * Returns the index in the command string"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * @return an int that represent the index in the command string"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * @throws DukeException when the index is invalid, i.e. when it cannot be parsed as an integer"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public int getTaskTargetIndex() throws DukeException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        return Parser.getTaskTargetIndex(super.getCommandType(), super.getCommandString());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "therizhao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "therizhao": 24
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "therizhao"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "therizhao"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "therizhao"
        },
        "content": " * DukeException is the custom exception class of the Duke program"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "therizhao"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "therizhao"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    private static final long serialVersionUID \u003d 50572093442410692L;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "therizhao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "therizhao": 12
    }
  },
  {
    "path": "src/main/java/duke/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "therizhao"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.command.CommandType;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import java.util.stream.Stream;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "therizhao"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "therizhao"
        },
        "content": " * Parser that parses raw user input into digestible output"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "therizhao"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "therizhao"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * Returns the description excluding the command type in the command string"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * @param commandType   of the commandString"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * @param commandString to be parsed to get the description"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * @return a String that represent the description excluding the command type in the command"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * string"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * @throws DukeException when the description is not found"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public static String getTaskDescription(CommandType commandType, String commandString)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            throws DukeException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        String[] cmdParts \u003d commandString.split(commandType.toString() + \" \", 2);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        if (cmdParts.length !\u003d 2 || cmdParts[1].equals(\"\")) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            throw Ui.taskDescriptionEmptyException(commandType);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        return cmdParts[1];"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * Returns the index in the command string"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * @param commandType   of the commandString"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * @param commandString to be parsed to get the index"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * @return an int that represent the index in the command string"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * @throws DukeException when the index is invalid, i.e. when it cannot be parsed as an integer"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public static int getTaskTargetIndex(CommandType commandType, String commandString)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            throws DukeException {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        String description \u003d Parser.getTaskDescription(commandType, commandString);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            return Integer.parseInt(description);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            throw Ui.taskIndexFormatException(commandType);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * Returns a LocalDate object by parsing a date string \u003cbr\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * dateString should be of format yyyy-mm-dd"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * @param dateString to be parsed into the LocalDate"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * @return a LocalDate object that is a representation of the dateString argument"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * @throws DukeException when the date is invalid"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public static LocalDate parseDateString(String dateString) throws DukeException {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            return LocalDate.parse(dateString);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            throw Ui.taskDateFormatException();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * Returns a Command object after parsing the command string"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * @param commandString a string representing the command"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * @return a Command object parsed from the command string"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * @throws DukeException when the command string is invalid"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public static Command parseCommandString(String commandString) throws DukeException {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        Optional\u003cCommandType\u003e commandType \u003d"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "therizhao"
        },
        "content": "                Stream.of(CommandType.values()).filter(command -\u003e command.is(commandString)).findAny();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        if (commandType.isPresent()) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            return Command.create(commandType.get(), commandString);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            throw Ui.commandInvalidException();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "therizhao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "therizhao": 88
    }
  },
  {
    "path": "src/main/java/duke/scanner/CommandScanner.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "therizhao"
        },
        "content": "package duke.scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "therizhao"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "therizhao"
        },
        "content": " * CommandScanner that scans for commands"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "therizhao"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "therizhao"
        },
        "content": "public class CommandScanner {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    private Scanner sc;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public CommandScanner() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        this.sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * Returns next command in the user input"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * @return a Command object that represent the next command in the user input"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * @throws DukeException when the command is invalid"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public Command nextCommand() throws DukeException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        return Parser.parseCommandString(this.sc.nextLine());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "therizhao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "therizhao": 28
    }
  },
  {
    "path": "src/main/java/duke/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "therizhao"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "therizhao"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "therizhao"
        },
        "content": " * Storage class that writes the tasks to a file specified in src/data directory"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "therizhao"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "therizhao"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public static final Path dataDir \u003d Paths.get(System.getProperty(\"user.dir\"), \"data\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    private final BufferedWriter writer;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    private Storage(BufferedWriter writer) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        this.writer \u003d writer;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * Creates a file in the src/data directory"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * @param fileName Name of the file"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * @return a new Storage object"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * @throws DukeException that there is an io error"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public static Storage create(String fileName) throws DukeException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            if (!Files.exists(Storage.dataDir)) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "therizhao"
        },
        "content": "                Files.createDirectory(Storage.dataDir);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            Path filePath \u003d Paths.get(Storage.dataDir.toString(), fileName);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            BufferedWriter writer \u003d Files.newBufferedWriter(filePath);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            return new Storage(writer);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            throw Ui.ioException(e);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * Writes the taskList into the file stream"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * @param taskList to be written into the file stream"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * @throws DukeException when there is an IOException"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public void write(TaskList taskList) throws DukeException {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        this.write(Ui.getListString(taskList));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * Writes the message into the file stream"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * @param message to be written into the file stream"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * @throws DukeException when there is an IOException"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public void write(String message) throws DukeException {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            this.writer.write(message);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            throw Ui.ioException(e);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * Closes the buffered writer, writing the content into the file"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * @throws DukeException when there is an IOException while writing"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public void close() throws DukeException {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            this.writer.close();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            throw Ui.ioException(e);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "therizhao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "therizhao": 80
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "therizhao"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "therizhao"
        },
        "content": "/** Deadline Task with a specified date that that is the time of the Deadline */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "therizhao"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "therizhao"
        },
        "content": "  public Deadline(String name, LocalDate date) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    super(name, TaskType.DEADLINE, date);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "therizhao"
        },
        "content": "  }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "therizhao"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "therizhao"
        },
        "content": "  public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    return String.format("
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        \"%s (by: %s)\","
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        super.toString(), super.getDate().get().format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "therizhao"
        },
        "content": "  }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "therizhao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "therizhao": 18
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "therizhao"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "therizhao"
        },
        "content": "/** Event Task with a specified date that that is the time of the event */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "therizhao"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "therizhao"
        },
        "content": "  public Event(String name, LocalDate date) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    super(name, TaskType.EVENT, date);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "therizhao"
        },
        "content": "  }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "therizhao"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "therizhao"
        },
        "content": "  public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    return String.format("
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        \"%s (at: %s)\","
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        super.toString(), super.getDate().get().format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "therizhao"
        },
        "content": "  }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "therizhao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "therizhao": 18
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "therizhao"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "therizhao"
        },
        "content": "/** Task */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "therizhao"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "therizhao"
        },
        "content": "  private static final String DONE \u003d \"[x]\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "therizhao"
        },
        "content": "  private static final String NOT_DONE \u003d \"[ ]\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "therizhao"
        },
        "content": "  private final String name;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "therizhao"
        },
        "content": "  private final TaskType taskType;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "therizhao"
        },
        "content": "  private final Optional\u003cLocalDate\u003e date;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "therizhao"
        },
        "content": "  private boolean isDone;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "therizhao"
        },
        "content": "  public Task(String name, TaskType type) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    this.name \u003d name;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    this.isDone \u003d false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    this.taskType \u003d type;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    this.date \u003d Optional.empty();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "therizhao"
        },
        "content": "  }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "therizhao"
        },
        "content": "  public Task(String name, TaskType type, LocalDate date) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    this.name \u003d name;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    this.isDone \u003d false;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    this.taskType \u003d type;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    this.date \u003d Optional.of(date);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "therizhao"
        },
        "content": "  }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "therizhao"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "therizhao"
        },
        "content": "   * Returns the name of the task"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "therizhao"
        },
        "content": "   *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "therizhao"
        },
        "content": "   * @return the name of the task"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "therizhao"
        },
        "content": "   */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "therizhao"
        },
        "content": "  public String getName() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    return this.name;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "therizhao"
        },
        "content": "  }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "therizhao"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "therizhao"
        },
        "content": "   * Returns a String that show the status of the task"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "therizhao"
        },
        "content": "   *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "therizhao"
        },
        "content": "   * @return String that shows the status of the task"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "therizhao"
        },
        "content": "   */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "therizhao"
        },
        "content": "  public String getStatus() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    return this.isDone ? Task.DONE : Task.NOT_DONE;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "therizhao"
        },
        "content": "  }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "therizhao"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "therizhao"
        },
        "content": "   * Returns an Optional object containing the date associated with the task"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "therizhao"
        },
        "content": "   *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "therizhao"
        },
        "content": "   * @return an Optional object containing the date associated with the task"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "therizhao"
        },
        "content": "   */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "therizhao"
        },
        "content": "  public Optional\u003cLocalDate\u003e getDate() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    return this.date;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "therizhao"
        },
        "content": "  }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "therizhao"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "therizhao"
        },
        "content": "   * Sets the task as done or not done"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "therizhao"
        },
        "content": "   *"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "therizhao"
        },
        "content": "   * @param isDone a boolean that determines if the task is done (true if done, false if not done)"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "therizhao"
        },
        "content": "   */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "therizhao"
        },
        "content": "  public void setDone(boolean isDone) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "therizhao"
        },
        "content": "  }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "therizhao"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "therizhao"
        },
        "content": "  public String toString() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    return String.format(\"%s%s %s\", this.taskType, this.getStatus(), this.name);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "therizhao"
        },
        "content": "  }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "therizhao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "therizhao": 70
    }
  },
  {
    "path": "src/main/java/duke/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "therizhao"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import java.util.Iterator;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "therizhao"
        },
        "content": "/** TaskList that is 1-indexed list of tasks */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "therizhao"
        },
        "content": "public class TaskList implements Iterable\u003cTask\u003e {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "therizhao"
        },
        "content": "  private List\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "therizhao"
        },
        "content": "  public TaskList() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    this.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    this.tasks.add(null);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "therizhao"
        },
        "content": "  }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "therizhao"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "therizhao"
        },
        "content": "   * Parses index to make sure it is within range"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "therizhao"
        },
        "content": "   *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "therizhao"
        },
        "content": "   * @return valid index"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "therizhao"
        },
        "content": "   * @throws DukeException when index is out of bounds in tasklist"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "therizhao"
        },
        "content": "   */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "therizhao"
        },
        "content": "  private int parseIndex(int index) throws DukeException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    if (index \u003d\u003d 0 || index \u003e this.tasks.size() - 1) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "therizhao"
        },
        "content": "      throw Ui.taskIndexOutOfBoundsException(index, this);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    return index;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "therizhao"
        },
        "content": "  }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "therizhao"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "therizhao"
        },
        "content": "   * Returns length of the tasklist"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "therizhao"
        },
        "content": "   *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "therizhao"
        },
        "content": "   * @return an integer that is the length of all tasklist"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "therizhao"
        },
        "content": "   */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "therizhao"
        },
        "content": "  public int size() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    return this.tasks.size() - 1;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "therizhao"
        },
        "content": "  }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "therizhao"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "therizhao"
        },
        "content": "   * Adds a task into the tasklist"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "therizhao"
        },
        "content": "   *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "therizhao"
        },
        "content": "   * @param task a task to be added to the tasklist"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "therizhao"
        },
        "content": "   */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "therizhao"
        },
        "content": "  public void add(Task task) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    this.tasks.add(task);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "therizhao"
        },
        "content": "  }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "therizhao"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "therizhao"
        },
        "content": "   * Removes the task at the index from the tasklist"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "therizhao"
        },
        "content": "   *"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "therizhao"
        },
        "content": "   * @param index the index of the task in the tasklist to be removed"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "therizhao"
        },
        "content": "   * @return the task removed"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "therizhao"
        },
        "content": "   * @throws DukeException when index is out of bounds in tasklist"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "therizhao"
        },
        "content": "   */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "therizhao"
        },
        "content": "  public Task remove(int index) throws DukeException {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    int validIndex \u003d this.parseIndex(index);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    return this.tasks.remove(validIndex);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "therizhao"
        },
        "content": "  }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "therizhao"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "therizhao"
        },
        "content": "   * Returns task at the specified index in the tasklist"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "therizhao"
        },
        "content": "   *"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "therizhao"
        },
        "content": "   * @param index of the task in the tasklist"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "therizhao"
        },
        "content": "   * @return the task at the specified index in the tasklist"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "therizhao"
        },
        "content": "   * @throws DukeException when index is out of bounds in tasklist"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "therizhao"
        },
        "content": "   */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "therizhao"
        },
        "content": "  public Task get(int index) throws DukeException {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    int validIndex \u003d this.parseIndex(index);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    return this.tasks.get(validIndex);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "therizhao"
        },
        "content": "  }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "therizhao"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "therizhao"
        },
        "content": "   * Returns an iterator of the tasklist"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "therizhao"
        },
        "content": "   *"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "therizhao"
        },
        "content": "   * @return an iterator of the tasklist"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "therizhao"
        },
        "content": "   */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "therizhao"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "therizhao"
        },
        "content": "  public Iterator\u003cTask\u003e iterator() {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    return new Iterator\u003c\u003e() {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "therizhao"
        },
        "content": "      private int currentIndex \u003d 1;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "therizhao"
        },
        "content": "      @Override"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "therizhao"
        },
        "content": "      public boolean hasNext() {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        return currentIndex \u003c TaskList.this.tasks.size();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "therizhao"
        },
        "content": "      }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "therizhao"
        },
        "content": "      @Override"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "therizhao"
        },
        "content": "      public Task next() {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        Task task \u003d TaskList.this.tasks.get(currentIndex);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        this.currentIndex++;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "therizhao"
        },
        "content": "      }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    };"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "therizhao"
        },
        "content": "  }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "therizhao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "therizhao": 97
    }
  },
  {
    "path": "src/main/java/duke/task/TaskType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "therizhao"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "therizhao"
        },
        "content": "/** Different possible TaskType */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "therizhao"
        },
        "content": "public enum TaskType {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "therizhao"
        },
        "content": "  TODO(\"[T]\"),"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "therizhao"
        },
        "content": "  EVENT(\"[E]\"),"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "therizhao"
        },
        "content": "  DEADLINE(\"[D]\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "therizhao"
        },
        "content": "  private String name;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "therizhao"
        },
        "content": "  TaskType(String name) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    this.name \u003d name;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "therizhao"
        },
        "content": "  }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "therizhao"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "therizhao"
        },
        "content": "  public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    return this.name;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "therizhao"
        },
        "content": "  }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "therizhao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "therizhao": 19
    }
  },
  {
    "path": "src/main/java/duke/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "therizhao"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "therizhao"
        },
        "content": "/** ToDo task */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "therizhao"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "therizhao"
        },
        "content": "  public ToDo(String name) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    super(name, TaskType.TODO);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "therizhao"
        },
        "content": "  }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "therizhao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "therizhao": 8
    }
  },
  {
    "path": "src/main/java/duke/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "therizhao"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.command.CommandType;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "therizhao"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * Returns a string representing the task list in a human readable format"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * @param tasks task list of tasks to be printed"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * @return a string representing the task list in a human readable format"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public static String getListString(TaskList tasks) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        StringBuilder output \u003d new StringBuilder();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        int index \u003d 1;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            output.append(String.format(\"%d. %s%n\", index, task));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            index++;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        return output.toString();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * Returns a string representing the list of the tasks that matches the specified date in the task"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * list in a human readable format"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * @param tasks task list of tasks"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * @param date  of the tasks to be found in the output string"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * @return a string representing the list of the tasks that matches the specified date in the task"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * list"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public static String getListDate(TaskList tasks, LocalDate date) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        StringBuilder output \u003d new StringBuilder();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        int index \u003d 1;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            if (task.getDate().isPresent() \u0026\u0026 task.getDate().get().isEqual(date)) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "therizhao"
        },
        "content": "                output.append(String.format(\"%d. %s%n\", index, task));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "therizhao"
        },
        "content": "                index++;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        return output.toString();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public static void showList(TaskList tasks) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        System.out.print(Ui.getListString(tasks));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public static void showListDate(TaskList tasks, LocalDate date) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        System.out.println(Ui.getListDate(tasks, date));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public static void showGreet() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\\nWhat can I do for you?\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public static void showBye() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        System.out.println(\"Bye! Hope to never see you again!\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public static void showDone(Task task) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        System.out.printf(\"Good job. This task is marked as done:\\n %s%n\", task);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public static void showDelete(Task task) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        System.out.printf(\"Noted. I\u0027ve remove this task:\\n %s%n\", task);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public static void showAddTask(Task task) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        System.out.printf(\"Got it. I\u0027ve added this task:%n %s%n\", task);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public static void showError(String message) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public static void showUnexpectedError(String message) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        System.out.println(\"Unexpected Error:\\n\" + message);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public static DukeException commandInvalidException() {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        return new DukeException(\"This command is invalid.\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public static DukeException taskDescriptionEmptyException(CommandType type) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        return new DukeException(String.format(\"The description of a %s cannot be empty.\", type));"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public static DukeException taskDateEmptyException(CommandType type) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        return new DukeException("
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "therizhao"
        },
        "content": "                String.format(\"Error! The description of a %s is missing a date.\", type));"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public static DukeException taskIndexFormatException(CommandType type) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        return new DukeException("
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "therizhao"
        },
        "content": "                String.format(\"Input format is wrong. Please make sure it is `%s \u003ctask-index\u003e`\", type));"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public static DukeException taskDateFormatException() {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        return new DukeException("
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "therizhao"
        },
        "content": "                \"Date format is wrong. It should be yyyy-mm-dd and within possible date ranges\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public static DukeException taskIndexOutOfBoundsException(int index, TaskList tasks) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        StringBuilder message \u003d"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "therizhao"
        },
        "content": "                new StringBuilder(String.format(\"Task at index %d doesn\u0027t exist%n\", index));"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        if (tasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            message.append(\"\\nThere are no tasks currently.\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            message.append("
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "therizhao"
        },
        "content": "                    String.format("
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "therizhao"
        },
        "content": "                            \"There are %d tasks currently. Please a number between 1 and %d inclusive.\","
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "therizhao"
        },
        "content": "                            tasks.size(), tasks.size()));"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        return new DukeException(message.toString());"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public static DukeException ioException(IOException e) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        return new DukeException(\"Something is wrong with the input:\\n\" + e.getMessage());"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "therizhao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "therizhao": 126
    }
  },
  {
    "path": "src/test/java/duke/command/CommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "therizhao"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "therizhao"
        },
        "content": "public class CommandTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    void create_commandTypeList_returnListCommand() throws DukeException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        assert Command.create(CommandType.LIST, \"something\") instanceof ListCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    void create_commandTypeListDate_returnListDateCommand() throws DukeException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        assert Command.create(CommandType.LIST_DATE, \"something\") instanceof ListDateCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    void create_commandTypeDone_returnDoneCommand() throws DukeException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        assert Command.create(CommandType.DONE, \"something\") instanceof DoneCommand;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    void create_commandTypeToDo_returnToDoCommand() throws DukeException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        assert Command.create(CommandType.TODO, \"something\") instanceof ToDoCommand;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    void create_commandTypeDeadline_returnDeadlineCommand() throws DukeException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        assert Command.create(CommandType.DEADLINE, \"something\") instanceof DeadlineCommand;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    void create_commandTypeEvent_returnEventCommand() throws DukeException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        assert Command.create(CommandType.EVENT, \"something\") instanceof EventCommand;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    void create_commandTypeDelete_returnDeleteCommand() throws DukeException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        assert Command.create(CommandType.DELETE, \"something\") instanceof DeleteCommand;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    void create_commandTypeBye_returnByeCommand() throws DukeException {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        assert Command.create(CommandType.BYE, \"something\") instanceof ByeCommand;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    void create_commandTypeFind_returnFindCommand() throws DukeException {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        assert Command.create(CommandType.FIND, \"something\") instanceof FindCommand;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "therizhao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "therizhao": 51
    }
  },
  {
    "path": "src/test/java/duke/command/DeadlineCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "therizhao"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "therizhao"
        },
        "content": "class DeadlineCommandTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    void execute_validCommand_addDeadlineTaskToTaskList() throws DukeException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        Command cmd \u003d new DeadlineCommand(\"deadline return book /by 2020-07-29\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        cmd.execute(tasks);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        assertEquals(tasks.get(1).toString(), \"[D][ ] return book (by: Jul 29 2020)\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    void execute_invalidCommandNoDescription_throwsException() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        Command cmd1 \u003d new DeadlineCommand(\"deadline \");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        assertThrows(DukeException.class, () -\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "therizhao"
        },
        "content": "                cmd1.execute(tasks)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        );"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        Command cmd2 \u003d new DeadlineCommand(\"deadline\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        assertThrows(DukeException.class, () -\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "therizhao"
        },
        "content": "                cmd2.execute(tasks)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        );"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "therizhao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "therizhao": 32
    }
  },
  {
    "path": "src/test/java/duke/command/DeleteCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "therizhao"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "therizhao"
        },
        "content": "class DeleteCommandTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    void execute_validCommand_deleteTaskFromTaskList() throws DukeException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        tasks.add(new ToDo(\"hello\"));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        assertEquals(tasks.size(), 1);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        Command cmd \u003d new DeleteCommand(\"delete 1\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        cmd.execute(tasks);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        assertEquals(tasks.size(), 0);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    void execute_invalidIndex_throwsException() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        tasks.add(new ToDo(\"hello\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        Command cmd1 \u003d new DeleteCommand(\"delete 0\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        assertThrows(DukeException.class, () -\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "therizhao"
        },
        "content": "                cmd1.execute(tasks)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        );"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        Command cmd2 \u003d new DeleteCommand(\"delete 3\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        assertThrows(DukeException.class, () -\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "therizhao"
        },
        "content": "                cmd2.execute(tasks)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        );"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "therizhao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "therizhao": 37
    }
  },
  {
    "path": "src/test/java/duke/command/DoneCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "therizhao"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "therizhao"
        },
        "content": "class DoneCommandTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    void execute_validCommand_setTaskAsDone() throws DukeException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        tasks.add(new ToDo(\"hello\"));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        Command cmd \u003d new DoneCommand(\"done 1\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        assertEquals(tasks.get(1).toString(), \"[T][ ] hello\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        cmd.execute(tasks);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        assertEquals(tasks.get(1).toString(), \"[T][x] hello\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    void execute_invalidIndex_throwsException() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        tasks.add(new ToDo(\"hello\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        Command cmd1 \u003d new DeleteCommand(\"done 0\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        assertThrows(DukeException.class, () -\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "therizhao"
        },
        "content": "                cmd1.execute(tasks)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        );"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        Command cmd2 \u003d new DeleteCommand(\"done 3\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        assertThrows(DukeException.class, () -\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "therizhao"
        },
        "content": "                cmd2.execute(tasks)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        );"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "therizhao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "therizhao": 37
    }
  },
  {
    "path": "src/test/java/duke/command/EventCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "therizhao"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "therizhao"
        },
        "content": "class EventCommandTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    void execute_validCommand_addEventTaskToTaskList() throws DukeException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        Command cmd \u003d new EventCommand(\"event return book /at 2020-07-29\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        cmd.execute(tasks);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        assertEquals(tasks.get(1).toString(), \"[E][ ] return book (at: Jul 29 2020)\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    void execute_invalidCommandNoDescription_throwsException() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        Command cmd1 \u003d new EventCommand(\"event \");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        assertThrows(DukeException.class, () -\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "therizhao"
        },
        "content": "                cmd1.execute(tasks)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        );"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        Command cmd2 \u003d new EventCommand(\"event\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        assertThrows(DukeException.class, () -\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "therizhao"
        },
        "content": "                cmd2.execute(tasks)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        );"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "therizhao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "therizhao": 32
    }
  },
  {
    "path": "src/test/java/duke/command/FindCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "therizhao"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import org.junit.jupiter.api.AfterEach;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import java.io.ByteArrayOutputStream;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "therizhao"
        },
        "content": "class FindCommandTest {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    private final ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    private final ByteArrayOutputStream errContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    private final PrintStream originalOut \u003d System.out;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    private final PrintStream originalErr \u003d System.err;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public void setUpStreams() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        System.setOut(new PrintStream(outContent));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        System.setErr(new PrintStream(errContent));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    @AfterEach"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public void restoreStreams() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        System.setOut(originalOut);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        System.setErr(originalErr);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    void execute_validKeyword_printsTasksMatchingKeyword() throws DukeException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        tasks.add(new ToDo(\"hello\"));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        tasks.add(new ToDo(\"hello cat\"));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        tasks.add(new ToDo(\"dog walk\"));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        tasks.add(new ToDo(\"dog dance\"));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        new FindCommand(\"find dog\").execute(tasks);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        assertEquals(\"1. [T][ ] dog walk\\n\" +"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "therizhao"
        },
        "content": "                \"2. [T][ ] dog dance\\n\", outContent.toString());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "therizhao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "therizhao": 44
    }
  },
  {
    "path": "src/test/java/duke/command/ListDateCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "therizhao"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import org.junit.jupiter.api.AfterEach;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import java.io.ByteArrayOutputStream;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "therizhao"
        },
        "content": "class ListDateCommandTest {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    private final ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    private final ByteArrayOutputStream errContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    private final PrintStream originalOut \u003d System.out;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    private final PrintStream originalErr \u003d System.err;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public void setUpStreams() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        System.setOut(new PrintStream(outContent));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        System.setErr(new PrintStream(errContent));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    @AfterEach"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public void restoreStreams() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        System.setOut(originalOut);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        System.setErr(originalErr);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    void execute_validDate_printsCorrectTasks() throws DukeException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        String dateString \u003d \"2019-02-03\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        tasks.add(new Deadline(\"sing\", LocalDate.parse(dateString)));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        tasks.add(new Deadline(\"shower\", LocalDate.parse(\"2012-02-02\")));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        tasks.add(new Deadline(\"sleep\", LocalDate.parse(\"2019-02-04\")));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        tasks.add(new Deadline(\"talk\", LocalDate.parse(dateString)));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        tasks.add(new Deadline(\"walk\", LocalDate.parse(dateString)));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        new ListDateCommand(\"date \" + dateString).execute(tasks);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        assertEquals(\"1. [D][ ] sing (by: Feb 3 2019)\\n\" +"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "therizhao"
        },
        "content": "                \"2. [D][ ] talk (by: Feb 3 2019)\\n\" +"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "therizhao"
        },
        "content": "                \"3. [D][ ] walk (by: Feb 3 2019)\\n\" +"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "therizhao"
        },
        "content": "                \"\\n\", outContent.toString());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "therizhao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "therizhao": 49
    }
  },
  {
    "path": "src/test/java/duke/command/ToDoCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "therizhao"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "therizhao"
        },
        "content": "class ToDoCommandTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    void execute_validCommand_addToDoTaskToTaskList() throws DukeException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        Command cmd \u003d new ToDoCommand(\"todo return book\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        cmd.execute(tasks);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        assertEquals(tasks.get(1).toString(), \"[T][ ] return book\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    void execute_invalidCommandNoDescription_throwsException() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        Command cmd1 \u003d new ToDoCommand(\"todo \");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        assertThrows(DukeException.class, () -\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "therizhao"
        },
        "content": "                cmd1.execute(tasks)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        );"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        Command cmd2 \u003d new ToDoCommand(\"todo\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        assertThrows(DukeException.class, () -\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "therizhao"
        },
        "content": "                cmd2.execute(tasks)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        );"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "therizhao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "therizhao": 32
    }
  },
  {
    "path": "src/test/java/duke/parser/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "therizhao"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.command.CommandType;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "therizhao"
        },
        "content": "class ParserTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    void getTaskDescription_validCommand_returnDescription() throws DukeException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        assertEquals(Parser.getTaskDescription(CommandType.DEADLINE, \"deadline hello world\"), \"hello world\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        assertNotEquals(Parser.getTaskDescription(CommandType.DEADLINE, \"deadline hello world\"), \"rld\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    void getTaskDescription_invalidCommand_throwsException() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        assertThrows(DukeException.class, () -\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "therizhao"
        },
        "content": "                Parser.getTaskDescription(CommandType.DEADLINE, \"deadlin hello world\")"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        );"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    void getTaskTargetIndex_validCommand_returnIndex() throws DukeException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        assertEquals(Parser.getTaskTargetIndex(CommandType.DELETE, \"delete 100\"), 100);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        assertEquals(Parser.getTaskTargetIndex(CommandType.DELETE, \"delete 10\"), 10);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        assertNotEquals(Parser.getTaskTargetIndex(CommandType.DELETE, \"delete 9\"), 10);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    void getTaskTargetIndex_invalidCommand_throwsException() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        assertThrows(DukeException.class, () -\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "therizhao"
        },
        "content": "                Parser.getTaskTargetIndex(CommandType.DELETE, \"del hello world\")"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        );"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    void parseDateString_validDate_returnLocalDate() throws DukeException {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        assertEquals(Parser.parseDateString(\"1966-04-02\"), LocalDate.parse(\"1966-04-02\"));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        assertNotEquals(Parser.parseDateString(\"1966-04-02\"), LocalDate.parse(\"1966-04-01\"));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    void parseDateString_invalidDate_throwsException() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        assertThrows(DukeException.class, () -\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "therizhao"
        },
        "content": "                Parser.parseDateString(\"1966-04-\")"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        );"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    void parseCommandString_validCommandString_doesNotThrowException() throws DukeException {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        Parser.parseCommandString(\"deadline return book /by 2020-07-29\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    void parseCommandString_invalidCommandString_throwsException() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        assertThrows(DukeException.class, () -\u003e"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "therizhao"
        },
        "content": "                Parser.parseCommandString(\"deadlin return book /by 2020-07-29\")"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        );"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "therizhao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "therizhao": 64
    }
  },
  {
    "path": "src/test/java/duke/storage/StorageTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "therizhao"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "therizhao"
        },
        "content": "class StorageTest {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    void testWrite_shouldWriteToFile() throws DukeException, IOException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        final String FILE_NAME \u003d \"test.txt\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        final String TEXT \u003d \"test\\n\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        Storage storage \u003d Storage.create(FILE_NAME);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        storage.write(TEXT);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        storage.close();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        Path file \u003d Storage.dataDir.resolve(FILE_NAME);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        String content \u003d Files.readString(file);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        assertEquals(content, TEXT);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "therizhao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "therizhao": 26
    }
  },
  {
    "path": "src/test/java/duke/task/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "therizhao"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "therizhao"
        },
        "content": "class TaskListTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    TaskList taskList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    void setUp() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        this.taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    void size_intial_returnZero() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        assertEquals(taskList.size(), 0);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    void size_afterAddingOneItem_returnOne() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        taskList.add(new Task(\"some\", TaskType.TODO));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        assertEquals(taskList.size(), 1);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    void testAddAndRemove_validIndex_returnCorrectTasks() throws DukeException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        Task task1 \u003d new Task(\"some\", TaskType.TODO);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        Task task2 \u003d new Task(\"some\", TaskType.TODO);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        Task task3 \u003d new Task(\"some\", TaskType.TODO);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        taskList.add(task1);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        taskList.add(task2);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        taskList.add(task3);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        assertEquals(taskList.remove(1), task1);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        assertNotEquals(taskList.remove(1), task1);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        assertEquals(taskList.remove(1), task3);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    void testAddAndRemove_index0_throwsException() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        Task task \u003d new Task(\"some\", TaskType.TODO);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        taskList.add(task);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        assertThrows(DukeException.class, () -\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "therizhao"
        },
        "content": "                taskList.remove(0)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        );"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    void testAddAndRemove_indexOutOfRange_throwsException() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        Task task \u003d new Task(\"some\", TaskType.TODO);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        taskList.add(task);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        assertThrows(DukeException.class, () -\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "therizhao"
        },
        "content": "                taskList.remove(100)"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        );"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    void get_afterAddTasks_returnCorrectTasks() throws DukeException {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        Task task1 \u003d new Task(\"some\", TaskType.TODO);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        Task task2 \u003d new Task(\"some\", TaskType.TODO);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        Task task3 \u003d new Task(\"some\", TaskType.TODO);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        taskList.add(task1);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        taskList.add(task2);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        taskList.add(task3);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        assertEquals(taskList.get(1), task1);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        assertNotEquals(taskList.get(1), task2);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        assertEquals(taskList.get(3), task3);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    void iterator_afterAddTasks_returnTasksInCorrectOrder() throws DukeException {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        Task task1 \u003d new Task(\"some\", TaskType.TODO);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        Task task2 \u003d new Task(\"some\", TaskType.TODO);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        Task task3 \u003d new Task(\"some\", TaskType.TODO);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        taskList.add(task1);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        taskList.add(task2);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        taskList.add(task3);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        int i \u003d 1;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        for (Task task : taskList) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            if (i \u003d\u003d 1) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "therizhao"
        },
        "content": "                assertEquals(taskList.get(i), task1);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            } else if (i \u003d\u003d 2) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "therizhao"
        },
        "content": "                assertEquals(taskList.get(i), task2);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            } else if (i \u003d\u003d 3) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "therizhao"
        },
        "content": "                assertEquals(taskList.get(i), task3);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            i++;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "therizhao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "therizhao": 92
    }
  },
  {
    "path": "src/test/java/duke/task/TaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "therizhao"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "therizhao"
        },
        "content": "public class TaskTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    String name;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    TaskType type;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    LocalDate date;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    void setUp() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        this.name \u003d \"test\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        this.type \u003d TaskType.TODO;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        this.date \u003d LocalDate.parse(\"1900-01-02\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    void getDate_datePresent_returnDate() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        assertEquals(new Task(name, type, date).getDate().get(), date);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    void getDate_dateEmpty_returnEmpty() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        assertEquals(new Task(name, type).getDate(), Optional.empty());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    void testToString() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        assertEquals(new Task(name, type).toString(), \"[T][ ] test\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    void setDone_done_showDone() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        Task task \u003d new Task(name, type);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        task.setDone(true);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        assertEquals(task.toString(), \"[T][x] test\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    void setDone_notDone_showNotDone() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        Task task \u003d new Task(name, type);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        task.setDone(true);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        task.setDone(false);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        assertEquals(task.toString(), \"[T][ ] test\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "therizhao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "therizhao": 52
    }
  },
  {
    "path": "src/test/java/duke/ui/UiTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "therizhao"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "therizhao"
        },
        "content": "class UiTest {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    void getListString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        tasks.add(new ToDo(\"hi\"));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        tasks.add(new ToDo(\"hello\"));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        tasks.add(new ToDo(\"how\"));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        assertEquals("
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "therizhao"
        },
        "content": "                Ui.getListString(tasks), \"1. [T][ ] hi\\n\" + \"2. [T][ ] hello\\n\" + \"3. [T][ ] how\\n\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    void getListDate() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        tasks.add(new Deadline(\"hi\", LocalDate.parse(\"1900-05-10\")));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        tasks.add(new Event(\"hi\", LocalDate.parse(\"1900-05-10\")));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        tasks.add(new Deadline(\"hi\", LocalDate.parse(\"2010-05-10\")));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        assertEquals("
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "therizhao"
        },
        "content": "                Ui.getListDate(tasks, LocalDate.parse(\"1900-05-10\")),"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "therizhao"
        },
        "content": "                \"1. [D][ ] hi (by: May 10 1900)\\n\" + \"2. [E][ ] hi (at: May 10 1900)\\n\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "therizhao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "therizhao": 36
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "therizhao"
        },
        "content": "todo buy book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "therizhao"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "therizhao"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "therizhao"
        },
        "content": "event sky jumping /at Sat 2-4pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "therizhao"
        },
        "content": "event funny  Sat 2-4pm"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "therizhao"
        },
        "content": "event funny /at 2019-05-32"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "therizhao"
        },
        "content": "event funny /at 2019-05-25"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "therizhao"
        },
        "content": "deadline la la meeting  Sat 2-4pm"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "therizhao"
        },
        "content": "deadline return book /by 2020-07-29"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "therizhao"
        },
        "content": "deadline return book /by 2020-07-100"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "therizhao"
        },
        "content": "deadline funny /by 2019-05-25"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "therizhao"
        },
        "content": "todo team bundling"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "therizhao"
        },
        "content": "todo eat chicken nuggets"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "therizhao"
        },
        "content": "done 5"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "therizhao"
        },
        "content": "done 100"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "therizhao"
        },
        "content": "event sing song /at Fri 2pm"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "therizhao"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "therizhao"
        },
        "content": "list"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "therizhao"
        },
        "content": "delete 100"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "therizhao"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "therizhao"
        },
        "content": "list"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "therizhao"
        },
        "content": "delete 4"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "therizhao"
        },
        "content": "date 2019-05-25"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "therizhao"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "therizhao": 24
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "therizhao"
        },
        "content": "javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\Main.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "therizhao"
        },
        "content": "java -classpath ..\\bin Main \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "-": 19,
      "therizhao": 2
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "therizhao"
        },
        "content": "if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/Main.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "therizhao"
        },
        "content": "java -classpath ../bin Main \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "-": 36,
      "therizhao": 2
    }
  }
]
