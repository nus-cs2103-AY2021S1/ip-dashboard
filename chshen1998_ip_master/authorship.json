[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "# duke.Duke project template"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "1. Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Open or Import`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "1. After the importing is complete, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    ____        _        "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      }
    ],
    "authorContributionMap": {
      "chshen1998": 2,
      "-": 24
    }
  },
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.4.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.4.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    implementation \u0027org.testng:testng:6.9.6\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    mainClassName \u003d \"duke.Launcher\""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    archiveVersion \u003d \"v1\""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chshen1998": 20,
      "-": 43
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "Duke can help you manage and save your tasks!"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "![Duke user interface](https://github.com/chshen1998/ip/blob/master/docs/Ui.png)"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "## Types of Tasks"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "1. Todo: Tasks that do not have date/time associated with it."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "2. Deadline: Tasks that have to be completed by a specific date/time."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "3. Event: Tasks that occur at a specific date/time."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "4. Weekly: Tasks that occur every week on a specific day/time."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "1. Add a todo task"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "2. Add a deadline task"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "3. Add an event task"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "4. Add a weekly recurring task"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "5. View list of tasks"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "6. Filter tasks by keyword"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "7. Filter tasks by date"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "8. Mark tasks as done"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "9. Delete tasks"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "10. View list of commands"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "11. Exit application"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "### `todo` - Add a todo task"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "Adds a new todo task to current list of tasks."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "Format: `todo \u003ctask\u003e`"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "Example of usage: `todo task one`"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "```"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "[T][x]task one"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "Now you have 1 tasks in your list."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "```"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "### `deadline` - Add a deadline task"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "Adds a new deadline task to current list of tasks."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "Format: `deadline \u003ctask\u003e /by \u003cdd/mm/yyyy\u003e \u003chhmm\u003e`"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "Example of usage: `deadline task two /by 20/10/2020 1230`"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "```"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "[D][x] task two (by: Oct 20 2020 12:30)"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "```"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "### `event` - Add an event task"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "Adds a new event task to current list of tasks."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "Format: `event \u003ctask\u003e /at \u003cdd/mm/yyyy\u003e \u003chhmm\u003e`"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "Example of usage: `event task three /at 30/09/2020 1825`"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "```"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "[E][x] task three (at: Sep 30 2020 18:25)"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "```"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "### `weekly` - Add a weekly recurring task"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "Adds a new weekly task to current list of tasks. Only the next upcoming instance of the recurring task will be shown."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "Format: `weekly \u003ctask\u003e /every \u003cday\u003e \u003chhmm\u003e`"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "Example of usage: `weekly task four /every monday 1315`"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "```"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "[Weekly] task four (at: Sep 21 2020 13:15)"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "Now you have 4 tasks in the list."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "```"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "### `list` - View list of tasks"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "Displays the current list of tasks."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "Format: `list`"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "Example of usage: `list`"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "```"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "Here are the tasks in your list: "
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "1. [T][x] task one"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "2. [D][x] task two (by: Oct 20 2020 12:30)"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "3. [E][x] task three (at: Sep 30 2020 18:25)"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "4. [Weekly] task four (at: Sep 21 2020 13:15)"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "```"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "### `find` - Filter tasks by keyword"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "Displays tasks that contain the filter keyword."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "Format: `find \u003ckeyword\u003e`"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "Example of usage: `find one`"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "```"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "Here are your tasks that matches your search: "
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "1. [T][x] task one"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "```"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "### `filter` - Filter tasks by date"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "Displays tasks that are due by/occur on a specific date."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "Format: `filter \u003cdd/mm/yyyy\u003e`"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "Example of usage: `filter 30/09/2020`"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "```"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "Here are your tasks due on Sep 30 2020: "
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "3. [E][x] task three (at: Sep 30 2020 18:25)"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "```"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "### `done` - Mark tasks as done"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "Marks specific task as done. If task is already completed, nothing is changed."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "Format: `done \u003ctask id\u003e`"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "Example of usage: `done 2`"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "```"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "Congrats! I\u0027ve marked this task as done: "
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "[D][✓] task two (by: Oct 20 2020 12:30)"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "```"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "### `delete` - Delete tasks"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "Delete specific task from list."
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "Format: `delete \u003ctask id\u003e`"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "Example of usage: `done 3`"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "```"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "Noted! I\u0027ve deleted this duke.task: "
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "[E][x] task three (at: Sep 30 2020 18:25)"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "```"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "### `help` - View list of command"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "Displays list of all duke commands."
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "Format: `help`"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "Example of usage: `help`"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "### `bye` - Exit application"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "Display goodbye message and closes the duke application."
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "Format: `bye`"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "Example of usage: `bye`"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "```"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "Goodbye! See you soon!"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "```"
      }
    ],
    "authorContributionMap": {
      "chshen1998": 174,
      "-": 17
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chshen1998"
        },
        "content": " * Main class."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chshen1998"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    private static Storage storage;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    private static TaskList taskList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    private static Ui ui;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    private static boolean exit;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    private boolean isResponseDukeException;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public Duke(String pathName) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        this.storage \u003d new Storage(pathName);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            this.taskList \u003d new TaskList(this.storage.load());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            this.taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            ui.printResponse(e.getMessage());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * Runs until the user commands for program to stop."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        ui.welcome();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        this.exit \u003d false;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        while (!exit) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "                String userInput \u003d ui.getUserInput();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "                Command command \u003d Parser.parse(userInput);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "                String response \u003d command.execute(this.taskList, this.ui, this.storage);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "                assert response instanceof String : \"Commands must return String type when executed\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "                ui.printResponse(response);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "                this.exit \u003d command.isExit();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "                ui.printResponse(e.getMessage());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        new Duke(\"src/main/java/duke/data/duke.txt\").run();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * Takes user input and gets the Duke response."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * @param input the user input."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * @return Duke response."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            Command command \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            this.isResponseDukeException \u003d false;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            return command.execute(this.taskList, this.ui, this.storage);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            this.isResponseDukeException \u003d true;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            return e.getMessage();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * Checks if Duke threw a DukeException."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * @return boolean representing whether a DukeException was thrown."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public boolean getIsResponseDukeException() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        return this.isResponseDukeException;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chshen1998": 76,
      "-": 2
    }
  },
  {
    "path": "src/main/java/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chshen1998"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chshen1998"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chshen1998": 12
    }
  },
  {
    "path": "src/main/java/duke/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import duke.gui.MainWindow;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chshen1998"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chshen1998"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    private Duke duke \u003d new Duke(\"src/main/java/duke/data/duke.txt\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().greetUser();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chshen1998": 33
    }
  },
  {
    "path": "src/main/java/duke/command/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chshen1998"
        },
        "content": " * Command to close Duke Application."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chshen1998"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public ByeCommand(){}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public String execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        return \"Goodbye! See you soon!\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chshen1998": 22
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public Command(){}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public abstract String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public abstract boolean isExit();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chshen1998": 15
    }
  },
  {
    "path": "src/main/java/duke/command/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chshen1998"
        },
        "content": " * Command to create new deadline task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chshen1998"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "public class DeadlineCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    private String deadlineDetails;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public DeadlineCommand(String deadlineDetails) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        this.deadlineDetails \u003d deadlineDetails;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * Creates new deadline task, adds task to TaskList then updates the Storage."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * @param taskList the list of tasks."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * @param ui"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * @param storage"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * @throws DukeException when task details are not specified."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * @return the Duke response to show user"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            String[] details \u003d this.deadlineDetails.split(\" /by \", 2);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            Deadline newDeadline \u003d new Deadline(details[0], details[1], false);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            taskList.add(newDeadline);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            storage.save(taskList);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            String response \u003d \"Got it. I\u0027ve added this task: \\n\" + taskList.get(taskList.size() - 1) + \"\\n\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "                    + \"Now you have \" + taskList.size() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            return response;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            throw new DukeException(\"Please specify your deadline description and details!\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chshen1998": 46
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chshen1998"
        },
        "content": " * Command to delete task from taskList."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chshen1998"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    private String taskIdString;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public DeleteCommand(String taskIdString) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        this.taskIdString \u003d taskIdString;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * Deletes specified task from tasklist and updates Storage."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * @param taskList"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * @param ui"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * @param storage"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * @throws DukeException when task to delete is not specified properly."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * @return the Duke response to show user"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            int taskId \u003d Integer.parseInt(taskIdString);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            if (taskId \u003c\u003d 0 || taskId \u003e taskList.size()) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "                throw new DukeException(\"That task does not exist!\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "                int new_size \u003d taskList.size() - 1;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "                String response \u003d \"Noted! I\u0027ve deleted this duke.task: \\n\" + taskList.get(taskId - 1) + \"\\n\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "                        + \"Now you have \" + new_size + \" tasks in the list.\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "                taskList.delete(taskId - 1);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "                storage.save(taskList);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "                return response;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            throw new DukeException(\"Please specify which task you want to delete!\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            throw new DukeException(\"Please specify which task you want to delete!\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chshen1998": 51
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chshen1998"
        },
        "content": " * Command to set tasks as done."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chshen1998"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    private String taskIdString;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public DoneCommand(String taskIdString) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        this.taskIdString \u003d taskIdString;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * Sets specified task in tasklist as completed and updates Storage."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * @param taskList"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * @param ui"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * @param storage"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * @throws DukeException when task is not properly specified."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * @return the Duke response to show user"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            int taskId \u003d Integer.parseInt(this.taskIdString);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            if (taskId \u003c\u003d 0 || taskId \u003e taskList.size()) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "                throw new DukeException(\"That task does not exist!\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "                taskList.get(taskId - 1).setCompleted();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "                storage.save(taskList);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "                String response \u003d \"Congrats! I\u0027ve marked this task as done: \\n\" + taskList.get(taskId - 1);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "                return response;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            throw new DukeException(\"Please specify which task you have completed!\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            throw new DukeException(\"Please specify which task you have completed!\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chshen1998": 49
    }
  },
  {
    "path": "src/main/java/duke/command/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chshen1998"
        },
        "content": " * Command to create new event task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chshen1998"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "public class EventCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    private String eventDetails;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public EventCommand(String eventDetails) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        this.eventDetails \u003d eventDetails;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * Creates new event with date and time, adds event to TaskList then updates the Storage."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * @param taskList the list of tasks."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * @param ui"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * @param storage"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * @return the Duke response to show user"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * @throws DukeException when event task details are not specified."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            String[] details \u003d this.eventDetails.split(\" /at \", 2);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            Event newEvent \u003d new Event(details[0], details[1], false);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            taskList.add(newEvent);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            storage.save(taskList);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            String response \u003d \"Got it. I\u0027ve added this task: \\n\" + taskList.get(taskList.size() - 1) + \"\\n\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "                    + \"Now you have \" + taskList.size() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            return response;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            throw new DukeException(\"Please specify your event description and details!\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chshen1998": 46
    }
  },
  {
    "path": "src/main/java/duke/command/FilterCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chshen1998"
        },
        "content": " * Command to filter tasks by date."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chshen1998"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "public class FilterCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    private String date;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public FilterCommand(String date) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * Prints all tasks due on a specified date."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * @param taskList"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * @param ui"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * @param storage"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * @throws DukeException when invalid date is entered."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * @return the Duke response to show user"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            String listItems \u003d \"\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            String reformatedDate \u003d reformateDate(this.date);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            LocalDate filterDate \u003d LocalDate.parse(reformatedDate);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            for (int i \u003d 1; i \u003c\u003d taskList.size(); i++) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "                if (taskList.get(i - 1).isDate(filterDate)) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "                    listItems \u003d listItems + \"\\n\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "                    listItems \u003d listItems + i + \". \" + taskList.get(i - 1);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "                }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            String response \u003d \"Here are your tasks due on \""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "                    + filterDate.format(DateTimeFormatter.ofPattern(\"MMM d yyy\")) + \":\" + listItems;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            return response;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            throw new DukeException(\"Please enter a valid date!\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            throw new DukeException(\"Please enter a valid date!\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * Reformates date ot be readable by Java LocalDate API."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * @param date in \u003cdd/mm/yyyy\u003e format"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * @return reformatedDate in \u003cyyyy-mm-dd\u003e format"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    private String reformateDate(String date) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        String[] dateSplit \u003d date.split(\"/\", 3);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        String reformatedDate \u003d dateSplit[2] + \"-\" + dateSplit[1] + \"-\" + dateSplit[0];"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        return reformatedDate;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chshen1998": 66
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chshen1998"
        },
        "content": " * Command to filter tasks by keyword."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chshen1998"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    private String keyword;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public FindCommand(String keyword) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * Prints tasks that match the search keyword."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * @param taskList"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * @param ui"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * @param storage"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * @return the Duke response to show user"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public String execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        String listItems \u003d \"\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d taskList.size(); i++) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            if (taskList.get(i - 1).toString().contains(keyword)) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "                listItems \u003d listItems + \"\\n\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "                listItems \u003d listItems + i + \". \" + taskList.get(i - 1);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        String response \u003d \"Here are your tasks that matches your search:\" + listItems;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        return response;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chshen1998": 41
    }
  },
  {
    "path": "src/main/java/duke/command/GreetCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chshen1998"
        },
        "content": " * Command called when Duke is launched to greet the user."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chshen1998"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "public class GreetCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public GreetCommand() {}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public String execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        return \"Hello I am\\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "                + \" ____                _            \" + \"\\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "                + \"|   _  \\\\    _   _    | | __    ___  \" + \"\\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "                + \"|  | |  |    | | | |   | |/ /    | __ \\\\ \" + \"\\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "                + \"|  |_|  |   | |_| |   |    \\\\    | ___/ \" + \"\\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "                + \"|____/    \\\\__/    |_|\\\\_\\\\   \\\\____ \" + \"\\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "                + \"How can I help you?\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chshen1998": 28
    }
  },
  {
    "path": "src/main/java/duke/command/HelpCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chshen1998"
        },
        "content": " * Command for displaying list of valid commands to user."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chshen1998"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "public class HelpCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public HelpCommand() {};"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * Prints out list of valid commands."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * @param taskList"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * @param ui"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * @param storage"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * @return the Duke response to show user"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public String execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        String response \u003d \"Here is the list of commands:\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "                + \"\\nExit duke:\\n - bye\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "                + \"\\nDisplay list of tasks:\\n - list\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "                + \"\\nDelete task:\\n - delete \u003ctask id\u003e\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "                + \"\\nSet task as completed:\\n - done \u003ctask id\u003e\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "                + \"\\nFilter tasks by keyword keyword:\\n - find \u003ckeyword\u003e\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "                + \"\\nFilter tasks by due date:\\n - filter \u003cdd/mm/yyyy\u003e\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "                + \"\\nAdd a new task:\\n - todo \u003ctask\u003e\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "                + \"\\nAdd a new deadline:\\n - deadline \u003ctask\u003e /by \u003cdd/mm/yyyy\u003e \u003chhmm\u003e\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "                + \"\\nAdd a new event:\\n - event \u003cname\u003e /at \u003cdd/mm/yyyy\u003e \u003chhmm\u003e\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "                + \"\\nAdd a new weekly recurring task:\\n - weekly \u003cname\u003e /every \u003cday\u003e \u003chhmm\u003e\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        return response;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chshen1998": 38
    }
  },
  {
    "path": "src/main/java/duke/command/InvalidCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chshen1998"
        },
        "content": " * Command for when user inputs an invalid command."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chshen1998"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "public class InvalidCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public InvalidCommand() {}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        throw new DukeException(\"Sorry that is not a valid command!\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chshen1998": 23
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chshen1998"
        },
        "content": " * Command to display the entire list of tasks."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chshen1998"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public ListCommand() {}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * Prints out the entire list of tasks."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * @param taskList"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * @param ui"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * @param storage"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * @return the Duke response to show user"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public String execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        String listItems \u003d \"\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d taskList.size(); i++) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            listItems \u003d listItems + \"\\n\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            listItems \u003d listItems + i + \". \" + taskList.get(i - 1);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        String repsonse \u003d \"Here are the tasks in your list:\" + listItems;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        return repsonse;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chshen1998": 35
    }
  },
  {
    "path": "src/main/java/duke/command/TodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chshen1998"
        },
        "content": " * Command to create a new todo task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chshen1998"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "public class TodoCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    private String todoDetails;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public TodoCommand(String todoDetails) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        this.todoDetails \u003d todoDetails;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * Creates new task, adds task to TaskList then updates the Storage."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * @param taskList the list of tasks"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * @param ui"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * @param storage"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * @throws DukeException when task description is not specified."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * @return the Duke response to show user"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            ToDo newToDo \u003d new ToDo(this.todoDetails, false);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            taskList.add(newToDo);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            storage.save(taskList);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            String response \u003d \"Got it. I\u0027ve added this task: \\n\" + taskList.get(taskList.size() - 1) + \"\\n\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "                    + \"Now you have \" + taskList.size() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            return response;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            throw new DukeException(\"Please specify your todo description! \\n\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chshen1998": 44
    }
  },
  {
    "path": "src/main/java/duke/command/WeeklyCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import duke.task.WeeklyTask;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chshen1998"
        },
        "content": " * Command to create a new weekly recurring task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chshen1998"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "public class WeeklyCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    private String taskDetails;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public WeeklyCommand(String taskDetails) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        this.taskDetails \u003d taskDetails;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * Creates new weekly recurring task with date and time, adds the next instance of the task to TaskList"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * then updates the Storage."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * @param taskList"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * @param ui"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * @param storage"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * @return the Duke response to show user"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * @throws DukeException when task description is not specified."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            String[] details \u003d this.taskDetails.split(\" /every \", 2);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            WeeklyTask newTask \u003d new WeeklyTask(details[0], details[1], false);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            taskList.add(newTask);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            storage.save(taskList);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            String response \u003d \"Got it. I\u0027ve added this task: \\n\" + taskList.get(taskList.size() - 1) + \"\\n\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "                    + \"Now you have \" + taskList.size() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            return response;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            throw new DukeException(\"Please specify your recurring task details!\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chshen1998": 47
    }
  },
  {
    "path": "src/main/java/duke/data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "T\u003e1\u003etask one"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "D\u003e1\u003etask two\u003e20/10/2020 1230"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "W\u003e0\u003etask four\u003emonday 1315"
      }
    ],
    "authorContributionMap": {
      "chshen1998": 3
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public DukeException(String errorMessage) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        super(errorMessage + \"\\nType \u0027help\u0027 to view list of available commands!\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chshen1998": 8
    }
  },
  {
    "path": "src/main/java/duke/gui/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "package duke.gui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chshen1998"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chshen1998"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chshen1998"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chshen1998"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chshen1998": 61
    }
  },
  {
    "path": "src/main/java/duke/gui/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "package duke.gui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import javafx.scene.layout.Background;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import java.util.Timer;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import java.util.TimerTask;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chshen1998"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chshen1998"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    private static final String TOPLINE \u003d \"~~~~~~~~~~ DUKE ~~~~~~~~~~\\n\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    private static final String BOTTOMMINE \u003d \"\\n~~~~~~~~~~~~~~~~~~~~~~~~\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    private static final String ERRORLINE \u003d \"~~~~~~~~~~ ERROR ~~~~~~~~~\\n\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/ricardo.png\"));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/dukechatbot.png\"));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * Display greeting message to user when Duke is started."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public void greetUser() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        String greeting \u003d duke.getResponse(\"greet\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "                DialogBox.getDukeDialog(greeting, dukeImage)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        );"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * Exits the Duke application when user inputs \u0027bye\u0027."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        String dukeOutput \u003d getDukeResponse(input);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "                DialogBox.getDukeDialog(dukeOutput, dukeImage)"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        );"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            exitDuke();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * Gets the response from Duke and customise the output text based on whether a DukeException was thrown."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     *"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * @param input the input given by user."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * @return dukeOutput the output that duke will respond to the user with."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    private String getDukeResponse(String input) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        String dukeOutput \u003d \"\";"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        if (duke.getIsResponseDukeException()) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            dukeOutput \u003d ERRORLINE + response + BOTTOMMINE;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            return dukeOutput;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        dukeOutput \u003d TOPLINE + response + BOTTOMMINE;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        return dukeOutput;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    private void exitDuke() {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        Timer exit \u003d new Timer();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        exit.schedule(new TimerTask() {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            public void run() {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "                System.exit(0);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        }, 500);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chshen1998": 101
    }
  },
  {
    "path": "src/main/java/duke/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import duke.command.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import duke.command.FindCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chshen1998"
        },
        "content": " * Deals with understanding the input from user and determining Command to execute."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chshen1998"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * Determines which Command should be called based on user input."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * @param userInput the input given by user."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * @return The Command to be executed."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * @throws DukeException if a Command is called without required details."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public static Command parse(String userInput) throws DukeException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        // Split userInput into the command word and command information"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        String[] inputSplit \u003d userInput.split(\" \", 2);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        return determineCommand(inputSplit);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * Determines which Command should be called based on user input."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * @param inputSplit the userInput split into command word and command information."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * @return The Command to be executed."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * @throws DukeException if a Command is called without required details."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    private static Command determineCommand(String[] inputSplit) throws DukeException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        String userCommand \u003d inputSplit[0];"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        if (userCommand.equals(\"bye\")) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            return new ByeCommand();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        } else if (userCommand.equals(\"list\")) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        } else if (userCommand.equals(\"help\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            return new HelpCommand();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        } else if (userCommand.equals(\"done\")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "                return new DoneCommand(inputSplit[1]);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "                throw new DukeException(\"Please specify which task you have completed!\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        } else if (userCommand.equals(\"todo\")) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "                return new TodoCommand(inputSplit[1]);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "                throw new DukeException(\"Please specify your todo description!\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        } else if (userCommand.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "                return new DeadlineCommand(inputSplit[1]);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "                throw new DukeException(\"Please specify your deadline description, date and time!\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        } else if (userCommand.equals(\"event\")) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "                return new EventCommand(inputSplit[1]);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "                throw new DukeException(\"Please specify your event description, date and time!\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        } else if (userCommand.equals(\"delete\")) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "                return new DeleteCommand(inputSplit[1]);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "                throw new DukeException(\"Please specify which task you want to delete!\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        } else if (userCommand.equals(\"filter\")) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "                return new FilterCommand(inputSplit[1]);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "                throw new DukeException(\"Please specify which date you want to filter!\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        } else if (userCommand.equals(\"find\")) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "                return new FindCommand(inputSplit[1]);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "                throw new DukeException(\"Please specify the keyword to find!\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        } else if (userCommand.equals(\"weekly\")) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "                return new WeeklyCommand(inputSplit[1]);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "                throw new DukeException(\"Please specify your weekly task details!\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        } else if (userCommand.equals(\"greet\")) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            return new GreetCommand();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            return new InvalidCommand();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chshen1998": 92
    }
  },
  {
    "path": "src/main/java/duke/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import duke.task.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chshen1998"
        },
        "content": " * Deals with the loading and saving of tasks in text file."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chshen1998"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    private static File file;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public Storage(String pathName) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        this.file \u003d new File(pathName);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * Reads the tasks saved in text file and collate them into a list."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * @return ArrayList of tasks from loaded file."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * @throws DukeException when error is encountered while reading text file."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            if (!this.file.exists()) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "                createNewEmptyFile();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "                return new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            Scanner fileScanner \u003d new Scanner(this.file);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            return createTaskListFromFile(fileScanner);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            throw new DukeException(\"Error loading file!\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * Creates a new empty file in the specified file path."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    private void createNewEmptyFile() throws IOException {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        this.file.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        this.file.createNewFile();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * Loads all the tasks from the text file into a task list."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * @param fileScanner the text file scanner."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * @return ArrayList of tasks corresponding to those in the text file."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    private ArrayList\u003cTask\u003e createTaskListFromFile(Scanner fileScanner) throws DukeException {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        while (fileScanner.hasNext()) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            String task \u003d fileScanner.nextLine();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            taskList.add(createTask(task));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        fileScanner.close();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * Creates a new task based on the String taken from the text file."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * @param task a single line from the text file."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * @return Task corresponding to the parameter String task."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    private Task createTask(String task) throws DukeException {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        // Saved string needs to be split into taskType, taskIsDone, taskDescription and task details."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        String[] taskSplit \u003d task.split(\"\u003e\", 4);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        String taskType \u003d taskSplit[0];"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        boolean taskIsDone \u003d taskSplit[1].equals(\"1\") ? true : false;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        String taskDescription \u003d taskSplit[2];"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        if (taskType.equals(\"T\")) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            return new ToDo(taskDescription, taskIsDone);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        } else if (taskType.equals(\"D\")) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            String taskBy \u003d taskSplit[3];"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            return new Deadline(taskDescription, taskBy, taskIsDone);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        } else if (taskType.equals(\"E\")) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            String taskAt \u003d taskSplit[3];"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            return new Event(taskDescription, taskAt, taskIsDone);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        } else if (taskType.equals(\"W\")) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            String taskEvery \u003d taskSplit[3];"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            return new WeeklyTask(taskDescription, taskEvery, taskIsDone);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            throw new DukeException(\"Failed to load duke task file!\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * Saves the tasks in the TaskList into a text file."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * @param taskList the TaskList containing all the tasks to be saved."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * @throws DukeException when error is encountered while saving text file."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     */"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public void save(TaskList taskList) throws DukeException {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            FileWriter writer \u003d new FileWriter(file);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "                Task task \u003d taskList.get(i);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "                writer.write(task.toEncoding() + System.lineSeparator());"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            writer.close();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            throw new DukeException(\"Error saving file!\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chshen1998": 112
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    private String by;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    private LocalDateTime byDateTime;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public Deadline(String description, String by, boolean isDone) throws DukeException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            String reformatedDateTime \u003d reformateDateTime();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            this.byDateTime \u003d LocalDateTime.parse(reformatedDateTime);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            throw new DukeException(\"Invalid input! Enter appropriate date and time format\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        String icon \u003d this.completed ? \"[\" + \"\\u2713\" + \"]\" : \"[\" + \"\\u2718\" + \"]\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        String DateTime \u003d this.byDateTime.format(DateTimeFormatter.ofPattern(\"MMM d yyy HH:mm\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        return \"[D]\" + icon + \" \" + this.description + \" (by: \" + DateTime + \")\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * Encode deadline task into a String to be saved in text file."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * @return String of encoded deadline task details."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public String toEncoding() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        int completedBinary \u003d this.completed ? 1 : 0;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        return \"D\u003e\" + completedBinary + \"\u003e\" + this.description + \"\u003e\" + this.by;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * Converts the deadline details into a format readable by Java LocalDateTime API."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * Format of \"yyyy-mm-ddThh:mm:ss\" required"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * @return String of converted deadline details."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    private String reformateDateTime() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        String[] bySplit \u003d this.by.split(\" \", 2);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        String date \u003d bySplit[0];"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        String[] dateSplit \u003d date.split(\"/\", 3);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        String time \u003d bySplit[1];"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        String hour \u003d time.substring(0, 2);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        String minute \u003d time.substring(2);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        return dateSplit[2] + \"-\" + dateSplit[1] + \"-\" + dateSplit[0] + \"T\" + hour + \":\" + minute + \":00\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * Checks if deadline task is due on a specified date."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * @param dateFilter the specified date."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * @return boolean whether the task is due on the date."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public boolean isDate(LocalDate dateFilter) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        return this.byDateTime.toLocalDate().equals(dateFilter);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chshen1998": 62
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    private String at;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    private LocalDateTime atDateTime;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public Event(String description, String at, boolean isDone) throws DukeException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            String reformatedDateTime \u003d reformateDateTime();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            this.atDateTime \u003d LocalDateTime.parse(reformatedDateTime);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            throw new DukeException(\"Invalid input! Enter appropriate date and time format\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        String icon \u003d this.completed ? \"[\" + \"\\u2713\" + \"]\" : \"[\" + \"\\u2718\" + \"]\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        String DateTime \u003d this.atDateTime.format(DateTimeFormatter.ofPattern(\"MMM d yyy HH:mm\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        return \"[E]\" + icon + \" \" + this.description + \" (at: \" + DateTime + \")\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * Encode task into a String to be saved in text file."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * @return String of encoded task details."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public String toEncoding() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        int completedBinary \u003d this.completed ? 1 : 0;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        return \"E\u003e\" + completedBinary + \"\u003e\" + this.description + \"\u003e\" + this.at;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * Converts the event details into a format readable by Java LocalDateTime API."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * Format of \"yyyy-mm-ddThh:mm:ss\" required"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * @return String of converted event details."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    private String reformateDateTime() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        String[] bySplit \u003d this.at.split(\" \", 2);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        String date \u003d bySplit[0];"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        String[] dateSplit \u003d date.split(\"/\", 3);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        String time \u003d bySplit[1];"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        String hour \u003d time.substring(0, 2);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        String minute \u003d time.substring(2);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        return dateSplit[2] + \"-\" + dateSplit[1] + \"-\" + dateSplit[0] + \"T\" + hour + \":\" + minute + \":00\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * Checks if event task occurs on a specified date."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * @param dateFilter the specified date."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * @return boolean whether the task is due on the date."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public boolean isDate(LocalDate dateFilter) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        return this.atDateTime.toLocalDate().equals(dateFilter);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chshen1998": 62
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    protected boolean completed;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public Task(String description, boolean isDone) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        this.completed \u003d isDone;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public void setCompleted() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        this.completed \u003d true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public abstract String toEncoding();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public abstract boolean isDate(LocalDate dateFilter);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chshen1998": 20
    }
  },
  {
    "path": "src/main/java/duke/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public ToDo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        String icon \u003d this.completed ? \"[\" + \"\\u2713\" + \"]\" : \"[\" + \"\\u2718\" + \"]\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        return \"[T]\" + icon + \" \" + this.description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * Encode task into a String to be saved in text file."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * @return String of encoded task details."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public String toEncoding() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        int completedBinary \u003d this.completed ? 1 : 0;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        return \"T\u003e\" + completedBinary + \"\u003e\" + this.description;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * Checks if  task is due on a specified date."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * @param dateFilter the specified date."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * @return false as todo tasks have no associated date."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public boolean isDate(LocalDate dateFilter) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chshen1998": 33
    }
  },
  {
    "path": "src/main/java/duke/task/WeeklyTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import java.time.DayOfWeek;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import java.time.temporal.TemporalAdjusters;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "public class WeeklyTask extends Task {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    private String every;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    private LocalDateTime atDateTime;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public WeeklyTask(String description, String every, boolean isDone) throws DukeException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        this.every \u003d every;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            this.atDateTime \u003d getTaskNextInstanceDateTime();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            throw new DukeException(\"Invalid input! Enter appropriate day and time format\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        String DateTime \u003d this.atDateTime.format(DateTimeFormatter.ofPattern(\"MMM d yyy HH:mm\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        return \"[Weekly] \" + this.description + \" (at: \" + DateTime + \")\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * Encodes task into a String to be saved in text file."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * @return String of encoded task details."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public String toEncoding() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        return \"W\u003e0\u003e\" + this.description + \"\u003e\" + this.every;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * Gets the date and time of the next instance of the weekly task."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * @return LocalDateTime containing the date and time of the next instance of the weekly task."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    private LocalDateTime getTaskNextInstanceDateTime() throws DukeException {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        // String every has to be split into day and time."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        String[] everySplit \u003d this.every.split(\" \", 2);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        String day \u003d everySplit[0];"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        String time \u003d everySplit[1];"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        // String time has to be split into hour and minute."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        String hour \u003d time.substring(0, 2);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        String min \u003d time.substring(2);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        // Strings hour and min need to be converted to int so that they can be used by Java LocalDate API."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        int intHour \u003d Integer.parseInt(hour);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        int intMin \u003d Integer.parseInt(min);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        LocalDate nowDate \u003d LocalDate.now();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        if (taskIsToday(nowDate, day, intHour, intMin)) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            LocalDateTime nextDateTime \u003d nowDate.atTime(intHour, intMin);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            return nextDateTime;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        LocalDate nextDate \u003d getNextDate(day, nowDate);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        LocalDateTime nextDateTime \u003d nextDate.atTime(intHour, intMin);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        return nextDateTime;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * Checks if task is on a specified date."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * @param dateFilter the specified date."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * @return boolean whether the task is due on the date."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public boolean isDate(LocalDate dateFilter) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        return this.atDateTime.toLocalDate().equals(dateFilter);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * Determines the date of the next instance of the weekly task."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * @param day the day that task is on."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * @param now the current LocalDate."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * @return the LocalDate of the next instance of the weekly task."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * @throws DukeException when invalid day is input by user."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    private LocalDate getNextDate(String day, LocalDate now) throws DukeException {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        if (day.equals(\"monday\")) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            return now.with(TemporalAdjusters.next(DayOfWeek.MONDAY));"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        } else if (day.equals(\"tuesday\")) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            return now.with(TemporalAdjusters.next(DayOfWeek.TUESDAY));"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        } else if (day.equals(\"wednesday\")) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            return now.with(TemporalAdjusters.next(DayOfWeek.WEDNESDAY));"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        } else if (day.equals(\"thursday\")) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            return now.with(TemporalAdjusters.next(DayOfWeek.THURSDAY));"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        } else if (day.equals(\"friday\")) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            return now.with(TemporalAdjusters.next(DayOfWeek.FRIDAY));"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        } else if (day.equals(\"saturday\")) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            return now.with(TemporalAdjusters.next(DayOfWeek.SATURDAY));"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        } else if (day.equals(\"sunday\")) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            return now.with(TemporalAdjusters.next(DayOfWeek.SUNDAY));"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            throw new DukeException(\"Please enter a valid day!\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * Checks if the next instance of weekly tasks is today."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * @param nowDate the current LocalDate."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * @param day the day of weekly task."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * @param intHour the hour of day of the weekly task."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * @param intMin the minute of day of the weekly task."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * @return boolean whether the next instance of task is today."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     */"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    private boolean taskIsToday(LocalDate nowDate, String day, int intHour, int intMin) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        if (nowDate.getDayOfWeek().toString().toLowerCase().equals(day)) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            LocalTime nowTime \u003d LocalTime.now();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            LocalTime taskTime \u003d LocalTime.of(intHour, intMin);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            if (nowTime.isBefore(taskTime)) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chshen1998": 124
    }
  },
  {
    "path": "src/main/java/duke/tasklist/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "package duke.tasklist;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chshen1998"
        },
        "content": " * Contains the duke.task list."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chshen1998"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    private ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        this.taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public void add(Task newTask) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        this.taskList.add(newTask);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public void delete(int taskId) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        this.taskList.remove(taskId);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public Task get(int taskId) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        return this.taskList.get(taskId);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        return this.taskList.size();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chshen1998": 36
    }
  },
  {
    "path": "src/main/java/duke/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chshen1998"
        },
        "content": " * Deals the interactions with the user."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chshen1998"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "@SuppressWarnings(\"checkstyle:Regexp\")"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    private static final String LINE \u003d \"_______________________________________\\n\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    private Scanner scanner;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        this.scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * Reads in input from user."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * @return the input from user."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public String getUserInput() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        return this.scanner.nextLine();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * Greets the user. Runs when program is opened."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public void welcome() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        String open \u003d \"_______________________________________ \\n\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "                + \"Hello! I\u0027m duke.Duke \\n\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "                + \"What can I do for you? \\n\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "                + \"_______________________________________ \\n\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        System.out.println(open);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * Prints Duke\u0027s response with dividing lines"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * @param response Duke\u0027s response"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public void printResponse(String response) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        System.out.println(LINE + response + \"\\n\" + LINE);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chshen1998": 43
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "\u003c?import javafx.scene.control.Separator?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" minHeight\u003d\"-Infinity\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" style\u003d\"-fx-border-color: white; -fx-padding: 5 20 5 20;\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" textFill\u003d\"white\" text\u003d\"Label\" wrapText\u003d\"true\" minHeight\u003d\"80\"/\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        \u003cSeparator minWidth\u003d\"10\" style\u003d\"-fx-opacity: 0\"/\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"15.0\" right\u003d\"15.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "chshen1998": 18
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.gui.MainWindow\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" style\u003d\"-fx-background-color: black; -fx-prompt-text-fill:  white; -fx-text-fill: white;\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" alignment\u003d\"TOP_LEFT\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.rightAnchor\u003d\"1.0\" AnchorPane.leftAnchor\u003d\"1.0\" promptText\u003d\"Enter Command:\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" AnchorPane.bottomAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\"/\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" fitToHeight\u003d\"true\" fitToWidth\u003d\"true\" style\u003d\"-fx-background-color: white;\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\" AnchorPane.bottomAnchor\u003d\"40.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" alignment\u003d\"TOP_CENTER\" style\u003d\"-fx-background-color: black\"/\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "chshen1998": 20
    }
  },
  {
    "path": "src/test/java/duke/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import duke.command.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public void testParser() throws DukeException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        assertTrue(Parser.parse(\"list\") instanceof ListCommand);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        assertTrue(Parser.parse(\"done 1\") instanceof DoneCommand);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        assertTrue(Parser.parse(\"delete 1\") instanceof DeleteCommand);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        assertTrue(Parser.parse(\"filter 20/03/2020\") instanceof FilterCommand);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        assertTrue(Parser.parse(\"todo t1\") instanceof TodoCommand);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        assertTrue(Parser.parse(\"deadline d1 /by 20/02/2020 1200\") instanceof DeadlineCommand);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        assertTrue(Parser.parse(\"event e1 /at 20/02/2020 1200\") instanceof EventCommand);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        assertTrue(Parser.parse(\"Wrong Command\") instanceof InvalidCommand);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public void testExits() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        assertEquals(new ByeCommand().isExit(), true);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        assertEquals(new ListCommand().isExit(), false);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        assertEquals(new InvalidCommand().isExit(), false);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        assertEquals(new DeadlineCommand(\"test\").isExit(), false);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        assertEquals(new EventCommand(\"test\").isExit(), false);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        assertEquals(new TodoCommand(\"test\").isExit(), false);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        assertEquals(new DoneCommand(\"test\").isExit(), false);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        assertEquals(new FilterCommand(\"test\").isExit(), false);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        assertEquals(new DeleteCommand(\"test\").isExit(), false);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public void testIncorrectDone() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            Parser.parse(\"done\").execute(new TaskList(), new Ui(), new Storage(\"src/test/java/duke/data/duke.txt\"));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            assertTrue(e instanceof DukeException);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public void testIncorrectDelete() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            Parser.parse(\"delete\").execute(new TaskList(), new Ui(), new Storage(\"src/test/java/duke/data/duke.txt\"));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            assertTrue(e instanceof DukeException);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public void testIncorrectTodo() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            Parser.parse(\"todo\").execute(new TaskList(), new Ui(), new Storage(\"src/test/java/duke/data/duke.txt\"));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            assertTrue(e instanceof DukeException);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public void testIncorrectDeadline() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            Parser.parse(\"deadline d1 \").execute(new TaskList(), new Ui(), new Storage(\"src/test/java/duke/data/duke.txt\"));"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            assertTrue(e instanceof DukeException);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public void testIncorrectEvent() {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            Parser.parse(\"event e1\").execute(new TaskList(), new Ui(), new Storage(\"src/test/java/duke/data/duke.txt\"));"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            assertTrue(e instanceof DukeException);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chshen1998": 90
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "todo wake up"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "deadline eat lunch /by 12pm"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "event work /at 2pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "chshen1998": 4
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\Task\\*.java ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "java -classpath ..\\bin Duke Task \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "chshen1998": 2,
      "-": 19
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/duke.Duke.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "java -classpath ../bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "chshen1998": 2,
      "-": 36
    }
  }
]
