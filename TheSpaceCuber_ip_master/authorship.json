[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"TheSpaceCuber"},"content":"# Duke project "},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"TheSpaceCuber"},"content":"This is a personalised task manager that will keep track of tasks, events and deadlines."},{"lineNumber":4,"author":{"gitId":"TheSpaceCuber"},"content":"It is designed with a Command-Line Interface implementation in mind."},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"## Setting up in Intellij"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version."},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"},{"lineNumber":11,"author":{"gitId":"-"},"content":"1. Set up the correct JDK version, as follows:"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"   1. Click `OK`"},{"lineNumber":15,"author":{"gitId":"-"},"content":"1. Import the project into Intellij as follows:"},{"lineNumber":16,"author":{"gitId":"-"},"content":"   1. Click `Open or Import`."},{"lineNumber":17,"author":{"gitId":"TheSpaceCuber"},"content":"   1. ~~Select the project directory~~ When you import the project into IDEA, at the step where you normally select the project root folder, choose the `build.gradle` file inside the root folder instead., and click `OK`. "},{"lineNumber":18,"author":{"gitId":"TheSpaceCuber"},"content":"   1. If there are any further prompts, accept the defaults (Open as project)."},{"lineNumber":19,"author":{"gitId":"TheSpaceCuber"},"content":"1. After the importing is complete, run `gradle build` to install required dependencies and setup the project."},{"lineNumber":20,"author":{"gitId":"TheSpaceCuber"},"content":"2. Locate the ~~`src/main/java/Duke.java`~~  `src/main/java/Launcher.java`file, right-click it, and choose ~~`Run Duke.main()`~~ `Run Launcher.main()`. If the setup is correct, you should see something like the below:"},{"lineNumber":21,"author":{"gitId":"TheSpaceCuber"},"content":"![Capture](https://user-images.githubusercontent.com/43946966/92689417-91220000-f371-11ea-9eed-bc34b24a3a78.PNG)"},{"lineNumber":22,"author":{"gitId":"TheSpaceCuber"},"content":""},{"lineNumber":23,"author":{"gitId":"TheSpaceCuber"},"content":"## References"},{"lineNumber":24,"author":{"gitId":"TheSpaceCuber"},"content":"1. https://se-education.org/guides/"}],"authorContributionMap":{"TheSpaceCuber":11,"-":13}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"TheSpaceCuber"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00276.0.0\u0027"},{"lineNumber":6,"author":{"gitId":"TheSpaceCuber"},"content":" }"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"TheSpaceCuber"},"content":""},{"lineNumber":14,"author":{"gitId":"TheSpaceCuber"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":17,"author":{"gitId":"TheSpaceCuber"},"content":""},{"lineNumber":18,"author":{"gitId":"TheSpaceCuber"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":19,"author":{"gitId":"TheSpaceCuber"},"content":""},{"lineNumber":20,"author":{"gitId":"TheSpaceCuber"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":21,"author":{"gitId":"TheSpaceCuber"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":22,"author":{"gitId":"TheSpaceCuber"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":23,"author":{"gitId":"TheSpaceCuber"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":24,"author":{"gitId":"TheSpaceCuber"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":25,"author":{"gitId":"TheSpaceCuber"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":26,"author":{"gitId":"TheSpaceCuber"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":27,"author":{"gitId":"TheSpaceCuber"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":28,"author":{"gitId":"TheSpaceCuber"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":29,"author":{"gitId":"TheSpaceCuber"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":30,"author":{"gitId":"TheSpaceCuber"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":31,"author":{"gitId":"TheSpaceCuber"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}"},{"lineNumber":47,"author":{"gitId":"-"},"content":""},{"lineNumber":48,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":49,"author":{"gitId":"TheSpaceCuber"},"content":"    mainClassName \u003d \"Launcher\""},{"lineNumber":50,"author":{"gitId":"-"},"content":"}"},{"lineNumber":51,"author":{"gitId":"-"},"content":""},{"lineNumber":52,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":53,"author":{"gitId":"TheSpaceCuber"},"content":"    toolVersion \u003d \u00278.36\u0027"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}"},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"TheSpaceCuber":21,"-":37}},{"path":"data.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"TheSpaceCuber"},"content":"[D][✘] return book         /by 08/10/2020 1800"},{"lineNumber":2,"author":{"gitId":"TheSpaceCuber"},"content":"[D][✘] return book         /by 08/10/2020 1800"},{"lineNumber":3,"author":{"gitId":"TheSpaceCuber"},"content":"[T][✘] hi"}],"authorContributionMap":{"TheSpaceCuber":3}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"TheSpaceCuber"},"content":"# Duke project "},{"lineNumber":2,"author":{"gitId":"TheSpaceCuber"},"content":""},{"lineNumber":3,"author":{"gitId":"TheSpaceCuber"},"content":"This is a personalised task manager that will keep track of tasks, events and deadlines."},{"lineNumber":4,"author":{"gitId":"TheSpaceCuber"},"content":"It is designed with a Command-Line Interface implementation in mind."},{"lineNumber":5,"author":{"gitId":"TheSpaceCuber"},"content":""},{"lineNumber":6,"author":{"gitId":"TheSpaceCuber"},"content":"## Setting up in Intellij"},{"lineNumber":7,"author":{"gitId":"TheSpaceCuber"},"content":""},{"lineNumber":8,"author":{"gitId":"TheSpaceCuber"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version."},{"lineNumber":9,"author":{"gitId":"TheSpaceCuber"},"content":""},{"lineNumber":10,"author":{"gitId":"TheSpaceCuber"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"},{"lineNumber":11,"author":{"gitId":"TheSpaceCuber"},"content":"1. Set up the correct JDK version, as follows:"},{"lineNumber":12,"author":{"gitId":"TheSpaceCuber"},"content":"   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"},{"lineNumber":13,"author":{"gitId":"TheSpaceCuber"},"content":"   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"},{"lineNumber":14,"author":{"gitId":"TheSpaceCuber"},"content":"   1. Click `OK`"},{"lineNumber":15,"author":{"gitId":"TheSpaceCuber"},"content":"1. Import the project into Intellij as follows:"},{"lineNumber":16,"author":{"gitId":"TheSpaceCuber"},"content":"   1. Click `Open or Import`."},{"lineNumber":17,"author":{"gitId":"TheSpaceCuber"},"content":"   1. ~~Select the project directory~~ When you import the project into IDEA, at the step where you normally select the project root folder, choose the `build.gradle` file inside the root folder instead., and click `OK`. "},{"lineNumber":18,"author":{"gitId":"TheSpaceCuber"},"content":"   1. If there are any further prompts, accept the defaults (Open as project)."},{"lineNumber":19,"author":{"gitId":"TheSpaceCuber"},"content":"1. After the importing is complete, run `gradle build` to install required dependencies and setup the project."},{"lineNumber":20,"author":{"gitId":"TheSpaceCuber"},"content":"2. Locate the ~~`src/main/java/Duke.java`~~  `src/main/java/Launcher.java`file, right-click it, and choose ~~`Run Duke.main()`~~ `Run Launcher.main()`. If the setup is correct, you should see something like the below:"},{"lineNumber":21,"author":{"gitId":"TheSpaceCuber"},"content":"![Capture](https://user-images.githubusercontent.com/43946966/92689417-91220000-f371-11ea-9eed-bc34b24a3a78.PNG)"},{"lineNumber":22,"author":{"gitId":"TheSpaceCuber"},"content":""},{"lineNumber":23,"author":{"gitId":"TheSpaceCuber"},"content":"## References"},{"lineNumber":24,"author":{"gitId":"TheSpaceCuber"},"content":"1. https://se-education.org/guides/"}],"authorContributionMap":{"TheSpaceCuber":24}},{"path":"src/main/java/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TheSpaceCuber"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"TheSpaceCuber"},"content":"import java.util.Collections;"},{"lineNumber":3,"author":{"gitId":"TheSpaceCuber"},"content":""},{"lineNumber":4,"author":{"gitId":"TheSpaceCuber"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":5,"author":{"gitId":"TheSpaceCuber"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":6,"author":{"gitId":"TheSpaceCuber"},"content":"import javafx.fxml.FXML;"},{"lineNumber":7,"author":{"gitId":"TheSpaceCuber"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":8,"author":{"gitId":"TheSpaceCuber"},"content":"import javafx.geometry.Pos;"},{"lineNumber":9,"author":{"gitId":"TheSpaceCuber"},"content":"import javafx.scene.Node;"},{"lineNumber":10,"author":{"gitId":"TheSpaceCuber"},"content":"import javafx.scene.control.Label;"},{"lineNumber":11,"author":{"gitId":"TheSpaceCuber"},"content":"import javafx.scene.image.Image;"},{"lineNumber":12,"author":{"gitId":"TheSpaceCuber"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":13,"author":{"gitId":"TheSpaceCuber"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":14,"author":{"gitId":"TheSpaceCuber"},"content":""},{"lineNumber":15,"author":{"gitId":"TheSpaceCuber"},"content":"/**"},{"lineNumber":16,"author":{"gitId":"TheSpaceCuber"},"content":" * An example of a custom control using FXML."},{"lineNumber":17,"author":{"gitId":"TheSpaceCuber"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"},{"lineNumber":18,"author":{"gitId":"TheSpaceCuber"},"content":" * containing text from the speaker."},{"lineNumber":19,"author":{"gitId":"TheSpaceCuber"},"content":" */"},{"lineNumber":20,"author":{"gitId":"TheSpaceCuber"},"content":"public class DialogBox extends HBox {"},{"lineNumber":21,"author":{"gitId":"TheSpaceCuber"},"content":"    @FXML"},{"lineNumber":22,"author":{"gitId":"TheSpaceCuber"},"content":"    private Label dialog;"},{"lineNumber":23,"author":{"gitId":"TheSpaceCuber"},"content":"    @FXML"},{"lineNumber":24,"author":{"gitId":"TheSpaceCuber"},"content":"    private ImageView displayPicture;"},{"lineNumber":25,"author":{"gitId":"TheSpaceCuber"},"content":""},{"lineNumber":26,"author":{"gitId":"TheSpaceCuber"},"content":"    private DialogBox(String text, Image img) {"},{"lineNumber":27,"author":{"gitId":"TheSpaceCuber"},"content":"        try {"},{"lineNumber":28,"author":{"gitId":"TheSpaceCuber"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"},{"lineNumber":29,"author":{"gitId":"TheSpaceCuber"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":30,"author":{"gitId":"TheSpaceCuber"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":31,"author":{"gitId":"TheSpaceCuber"},"content":"            fxmlLoader.load();"},{"lineNumber":32,"author":{"gitId":"TheSpaceCuber"},"content":"        } catch (IOException e) {"},{"lineNumber":33,"author":{"gitId":"TheSpaceCuber"},"content":"            e.printStackTrace();"},{"lineNumber":34,"author":{"gitId":"TheSpaceCuber"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"TheSpaceCuber"},"content":""},{"lineNumber":36,"author":{"gitId":"TheSpaceCuber"},"content":"        dialog.setText(text);"},{"lineNumber":37,"author":{"gitId":"TheSpaceCuber"},"content":"        displayPicture.setImage(img);"},{"lineNumber":38,"author":{"gitId":"TheSpaceCuber"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"TheSpaceCuber"},"content":""},{"lineNumber":40,"author":{"gitId":"TheSpaceCuber"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"TheSpaceCuber"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":42,"author":{"gitId":"TheSpaceCuber"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"TheSpaceCuber"},"content":"    private void flip() {"},{"lineNumber":44,"author":{"gitId":"TheSpaceCuber"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":45,"author":{"gitId":"TheSpaceCuber"},"content":"        Collections.reverse(tmp);"},{"lineNumber":46,"author":{"gitId":"TheSpaceCuber"},"content":"        getChildren().setAll(tmp);"},{"lineNumber":47,"author":{"gitId":"TheSpaceCuber"},"content":"        setAlignment(Pos.TOP_LEFT);"},{"lineNumber":48,"author":{"gitId":"TheSpaceCuber"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"TheSpaceCuber"},"content":""},{"lineNumber":50,"author":{"gitId":"TheSpaceCuber"},"content":"    public static DialogBox getUserDialog(String text, Image img) {"},{"lineNumber":51,"author":{"gitId":"TheSpaceCuber"},"content":"        return new DialogBox(text, img);"},{"lineNumber":52,"author":{"gitId":"TheSpaceCuber"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"TheSpaceCuber"},"content":""},{"lineNumber":54,"author":{"gitId":"TheSpaceCuber"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {"},{"lineNumber":55,"author":{"gitId":"TheSpaceCuber"},"content":"        var db \u003d new DialogBox(text, img);"},{"lineNumber":56,"author":{"gitId":"TheSpaceCuber"},"content":"        db.flip();"},{"lineNumber":57,"author":{"gitId":"TheSpaceCuber"},"content":"        return db;"},{"lineNumber":58,"author":{"gitId":"TheSpaceCuber"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"TheSpaceCuber"},"content":"}"}],"authorContributionMap":{"TheSpaceCuber":59}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TheSpaceCuber"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":2,"author":{"gitId":"TheSpaceCuber"},"content":""},{"lineNumber":3,"author":{"gitId":"TheSpaceCuber"},"content":"import utility.Choice;"},{"lineNumber":4,"author":{"gitId":"TheSpaceCuber"},"content":"import utility.Parser;"},{"lineNumber":5,"author":{"gitId":"TheSpaceCuber"},"content":"import utility.Storage;"},{"lineNumber":6,"author":{"gitId":"TheSpaceCuber"},"content":"import utility.TaskList;"},{"lineNumber":7,"author":{"gitId":"TheSpaceCuber"},"content":"import utility.Ui;"},{"lineNumber":8,"author":{"gitId":"TheSpaceCuber"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":10,"author":{"gitId":"TheSpaceCuber"},"content":""},{"lineNumber":11,"author":{"gitId":"TheSpaceCuber"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"TheSpaceCuber"},"content":"     * Used for printing messages to enhance user experience."},{"lineNumber":13,"author":{"gitId":"TheSpaceCuber"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"TheSpaceCuber"},"content":"    private final Ui ui;"},{"lineNumber":15,"author":{"gitId":"TheSpaceCuber"},"content":""},{"lineNumber":16,"author":{"gitId":"TheSpaceCuber"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"TheSpaceCuber"},"content":"     * Controls the reading and writing of data to hard disk."},{"lineNumber":18,"author":{"gitId":"TheSpaceCuber"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"TheSpaceCuber"},"content":"    private final Storage storage;"},{"lineNumber":20,"author":{"gitId":"TheSpaceCuber"},"content":""},{"lineNumber":21,"author":{"gitId":"TheSpaceCuber"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"TheSpaceCuber"},"content":"     * Data structure for managing tasks."},{"lineNumber":23,"author":{"gitId":"TheSpaceCuber"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"TheSpaceCuber"},"content":"    private TaskList tasks;"},{"lineNumber":25,"author":{"gitId":"TheSpaceCuber"},"content":""},{"lineNumber":26,"author":{"gitId":"TheSpaceCuber"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"TheSpaceCuber"},"content":"     * Responsible for reading user input and parsing it."},{"lineNumber":28,"author":{"gitId":"TheSpaceCuber"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"TheSpaceCuber"},"content":"    private final Parser parser;"},{"lineNumber":30,"author":{"gitId":"TheSpaceCuber"},"content":""},{"lineNumber":31,"author":{"gitId":"TheSpaceCuber"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"TheSpaceCuber"},"content":"     * Creates Duke, a personal assistant bot."},{"lineNumber":33,"author":{"gitId":"TheSpaceCuber"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"TheSpaceCuber"},"content":"    Duke() {"},{"lineNumber":35,"author":{"gitId":"TheSpaceCuber"},"content":"        ui \u003d new Ui();"},{"lineNumber":36,"author":{"gitId":"TheSpaceCuber"},"content":"        parser \u003d new Parser();"},{"lineNumber":37,"author":{"gitId":"TheSpaceCuber"},"content":"        storage \u003d new Storage(\"data.txt\");"},{"lineNumber":38,"author":{"gitId":"TheSpaceCuber"},"content":"        try {"},{"lineNumber":39,"author":{"gitId":"TheSpaceCuber"},"content":"            tasks \u003d new TaskList(storage.load());"},{"lineNumber":40,"author":{"gitId":"TheSpaceCuber"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":41,"author":{"gitId":"TheSpaceCuber"},"content":"            e.printStackTrace();"},{"lineNumber":42,"author":{"gitId":"TheSpaceCuber"},"content":"            tasks \u003d new TaskList();"},{"lineNumber":43,"author":{"gitId":"TheSpaceCuber"},"content":"        }"},{"lineNumber":44,"author":{"gitId":"TheSpaceCuber"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"TheSpaceCuber"},"content":""},{"lineNumber":46,"author":{"gitId":"TheSpaceCuber"},"content":"    /**"},{"lineNumber":47,"author":{"gitId":"TheSpaceCuber"},"content":"     * Returns output message to the user."},{"lineNumber":48,"author":{"gitId":"TheSpaceCuber"},"content":"     */"},{"lineNumber":49,"author":{"gitId":"TheSpaceCuber"},"content":"    public String getResponse(String input) {"},{"lineNumber":50,"author":{"gitId":"TheSpaceCuber"},"content":"        ui.showLine();"},{"lineNumber":51,"author":{"gitId":"TheSpaceCuber"},"content":"        try {"},{"lineNumber":52,"author":{"gitId":"TheSpaceCuber"},"content":"            Choice c \u003d parser.parseCommand(input);"},{"lineNumber":53,"author":{"gitId":"TheSpaceCuber"},"content":"            System.out.println(c);"},{"lineNumber":54,"author":{"gitId":"TheSpaceCuber"},"content":"            switch (c) {"},{"lineNumber":55,"author":{"gitId":"TheSpaceCuber"},"content":"            case BYE:"},{"lineNumber":56,"author":{"gitId":"TheSpaceCuber"},"content":"                System.out.println(\"Bye. Hope to see you again soon!\");"},{"lineNumber":57,"author":{"gitId":"TheSpaceCuber"},"content":"                storage.writeToFile(tasks.getTaskList());"},{"lineNumber":58,"author":{"gitId":"TheSpaceCuber"},"content":"                System.exit(0); // End program"},{"lineNumber":59,"author":{"gitId":"TheSpaceCuber"},"content":"                break;"},{"lineNumber":60,"author":{"gitId":"TheSpaceCuber"},"content":"            case DELETE:"},{"lineNumber":61,"author":{"gitId":"TheSpaceCuber"},"content":"                return tasks.deleteTask(input);"},{"lineNumber":62,"author":{"gitId":"TheSpaceCuber"},"content":"            case DONE:"},{"lineNumber":63,"author":{"gitId":"TheSpaceCuber"},"content":"                return tasks.completeTask(input);"},{"lineNumber":64,"author":{"gitId":"TheSpaceCuber"},"content":"            case LIST:"},{"lineNumber":65,"author":{"gitId":"TheSpaceCuber"},"content":"                return tasks.listAllTasks();"},{"lineNumber":66,"author":{"gitId":"TheSpaceCuber"},"content":"            case TODO:"},{"lineNumber":67,"author":{"gitId":"TheSpaceCuber"},"content":"                return tasks.addTodo(input);"},{"lineNumber":68,"author":{"gitId":"TheSpaceCuber"},"content":"            case EVENT:"},{"lineNumber":69,"author":{"gitId":"TheSpaceCuber"},"content":"                return tasks.addEvent(input);"},{"lineNumber":70,"author":{"gitId":"TheSpaceCuber"},"content":"            case DEADLINE:"},{"lineNumber":71,"author":{"gitId":"TheSpaceCuber"},"content":"                System.out.println(\"HI\");"},{"lineNumber":72,"author":{"gitId":"TheSpaceCuber"},"content":"                return tasks.addDeadline(input);"},{"lineNumber":73,"author":{"gitId":"TheSpaceCuber"},"content":"            case FIND:"},{"lineNumber":74,"author":{"gitId":"TheSpaceCuber"},"content":"                return tasks.findTasks(input);"},{"lineNumber":75,"author":{"gitId":"TheSpaceCuber"},"content":"            case HELP:"},{"lineNumber":76,"author":{"gitId":"TheSpaceCuber"},"content":"                return ui.showHelp();"},{"lineNumber":77,"author":{"gitId":"TheSpaceCuber"},"content":"            default:"},{"lineNumber":78,"author":{"gitId":"TheSpaceCuber"},"content":"                System.out.println(\"Error in switch - Default case\");"},{"lineNumber":79,"author":{"gitId":"TheSpaceCuber"},"content":"                break;"},{"lineNumber":80,"author":{"gitId":"TheSpaceCuber"},"content":"            }"},{"lineNumber":81,"author":{"gitId":"TheSpaceCuber"},"content":"        } catch (Exception e) {"},{"lineNumber":82,"author":{"gitId":"TheSpaceCuber"},"content":"            System.out.println(e);"},{"lineNumber":83,"author":{"gitId":"TheSpaceCuber"},"content":"        }"},{"lineNumber":84,"author":{"gitId":"TheSpaceCuber"},"content":"        return \"Oops, I didn\u0027t catch what you said: \" + input;"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"TheSpaceCuber":83,"-":3}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TheSpaceCuber"},"content":"import javafx.application.Application;"},{"lineNumber":2,"author":{"gitId":"TheSpaceCuber"},"content":""},{"lineNumber":3,"author":{"gitId":"TheSpaceCuber"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"TheSpaceCuber"},"content":" * A launcher class to workaround classpath issues."},{"lineNumber":5,"author":{"gitId":"TheSpaceCuber"},"content":" */"},{"lineNumber":6,"author":{"gitId":"TheSpaceCuber"},"content":"public class Launcher {"},{"lineNumber":7,"author":{"gitId":"TheSpaceCuber"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"TheSpaceCuber"},"content":"     * Main method for Duke."},{"lineNumber":9,"author":{"gitId":"TheSpaceCuber"},"content":"     * @param args arguments."},{"lineNumber":10,"author":{"gitId":"TheSpaceCuber"},"content":"     */"},{"lineNumber":11,"author":{"gitId":"TheSpaceCuber"},"content":"    public static void main(String[] args) {"},{"lineNumber":12,"author":{"gitId":"TheSpaceCuber"},"content":"        Application.launch(Main.class, args);"},{"lineNumber":13,"author":{"gitId":"TheSpaceCuber"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"TheSpaceCuber"},"content":"}"}],"authorContributionMap":{"TheSpaceCuber":14}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TheSpaceCuber"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"TheSpaceCuber"},"content":""},{"lineNumber":3,"author":{"gitId":"TheSpaceCuber"},"content":"import javafx.application.Application;"},{"lineNumber":4,"author":{"gitId":"TheSpaceCuber"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":5,"author":{"gitId":"TheSpaceCuber"},"content":"import javafx.scene.Scene;"},{"lineNumber":6,"author":{"gitId":"TheSpaceCuber"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":7,"author":{"gitId":"TheSpaceCuber"},"content":"import javafx.stage.Stage;"},{"lineNumber":8,"author":{"gitId":"TheSpaceCuber"},"content":""},{"lineNumber":9,"author":{"gitId":"TheSpaceCuber"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"TheSpaceCuber"},"content":" * A GUI for Duke using FXML."},{"lineNumber":11,"author":{"gitId":"TheSpaceCuber"},"content":" */"},{"lineNumber":12,"author":{"gitId":"TheSpaceCuber"},"content":"public class Main extends Application {"},{"lineNumber":13,"author":{"gitId":"TheSpaceCuber"},"content":""},{"lineNumber":14,"author":{"gitId":"TheSpaceCuber"},"content":"    /** Creates a Duke object. */"},{"lineNumber":15,"author":{"gitId":"TheSpaceCuber"},"content":"    private Duke duke \u003d new Duke();"},{"lineNumber":16,"author":{"gitId":"TheSpaceCuber"},"content":""},{"lineNumber":17,"author":{"gitId":"TheSpaceCuber"},"content":"    @Override"},{"lineNumber":18,"author":{"gitId":"TheSpaceCuber"},"content":"    public void start(Stage stage) {"},{"lineNumber":19,"author":{"gitId":"TheSpaceCuber"},"content":"        try {"},{"lineNumber":20,"author":{"gitId":"TheSpaceCuber"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":21,"author":{"gitId":"TheSpaceCuber"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":22,"author":{"gitId":"TheSpaceCuber"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":23,"author":{"gitId":"TheSpaceCuber"},"content":"            stage.setScene(scene);"},{"lineNumber":24,"author":{"gitId":"TheSpaceCuber"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"},{"lineNumber":25,"author":{"gitId":"TheSpaceCuber"},"content":"            stage.show();"},{"lineNumber":26,"author":{"gitId":"TheSpaceCuber"},"content":"        } catch (IOException e) {"},{"lineNumber":27,"author":{"gitId":"TheSpaceCuber"},"content":"            e.printStackTrace();"},{"lineNumber":28,"author":{"gitId":"TheSpaceCuber"},"content":"        }"},{"lineNumber":29,"author":{"gitId":"TheSpaceCuber"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"TheSpaceCuber"},"content":"}"}],"authorContributionMap":{"TheSpaceCuber":30}},{"path":"src/main/java/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TheSpaceCuber"},"content":"import javafx.fxml.FXML;"},{"lineNumber":2,"author":{"gitId":"TheSpaceCuber"},"content":"import javafx.scene.control.Button;"},{"lineNumber":3,"author":{"gitId":"TheSpaceCuber"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":4,"author":{"gitId":"TheSpaceCuber"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":5,"author":{"gitId":"TheSpaceCuber"},"content":"import javafx.scene.image.Image;"},{"lineNumber":6,"author":{"gitId":"TheSpaceCuber"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":7,"author":{"gitId":"TheSpaceCuber"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":8,"author":{"gitId":"TheSpaceCuber"},"content":"import utility.DukeException;"},{"lineNumber":9,"author":{"gitId":"TheSpaceCuber"},"content":"import utility.Ui;"},{"lineNumber":10,"author":{"gitId":"TheSpaceCuber"},"content":""},{"lineNumber":11,"author":{"gitId":"TheSpaceCuber"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"TheSpaceCuber"},"content":" * Controller for MainWindow. Provides the layout for the other controls."},{"lineNumber":13,"author":{"gitId":"TheSpaceCuber"},"content":" */"},{"lineNumber":14,"author":{"gitId":"TheSpaceCuber"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":15,"author":{"gitId":"TheSpaceCuber"},"content":"    @FXML"},{"lineNumber":16,"author":{"gitId":"TheSpaceCuber"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":17,"author":{"gitId":"TheSpaceCuber"},"content":"    @FXML"},{"lineNumber":18,"author":{"gitId":"TheSpaceCuber"},"content":"    private VBox dialogContainer;"},{"lineNumber":19,"author":{"gitId":"TheSpaceCuber"},"content":"    @FXML"},{"lineNumber":20,"author":{"gitId":"TheSpaceCuber"},"content":"    private TextField userInput;"},{"lineNumber":21,"author":{"gitId":"TheSpaceCuber"},"content":"    @FXML"},{"lineNumber":22,"author":{"gitId":"TheSpaceCuber"},"content":"    private Button sendButton;"},{"lineNumber":23,"author":{"gitId":"TheSpaceCuber"},"content":""},{"lineNumber":24,"author":{"gitId":"TheSpaceCuber"},"content":"    private Duke duke;"},{"lineNumber":25,"author":{"gitId":"TheSpaceCuber"},"content":""},{"lineNumber":26,"author":{"gitId":"TheSpaceCuber"},"content":"    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"},{"lineNumber":27,"author":{"gitId":"TheSpaceCuber"},"content":"    private final Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"},{"lineNumber":28,"author":{"gitId":"TheSpaceCuber"},"content":""},{"lineNumber":29,"author":{"gitId":"TheSpaceCuber"},"content":"    @FXML"},{"lineNumber":30,"author":{"gitId":"TheSpaceCuber"},"content":"    public void initialize() {"},{"lineNumber":31,"author":{"gitId":"TheSpaceCuber"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":32,"author":{"gitId":"TheSpaceCuber"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":33,"author":{"gitId":"TheSpaceCuber"},"content":"                DialogBox.getDukeDialog(Ui.showWelcome(), dukeImage)"},{"lineNumber":34,"author":{"gitId":"TheSpaceCuber"},"content":"        );"},{"lineNumber":35,"author":{"gitId":"TheSpaceCuber"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"TheSpaceCuber"},"content":""},{"lineNumber":37,"author":{"gitId":"TheSpaceCuber"},"content":"    public void setDuke(Duke d) {"},{"lineNumber":38,"author":{"gitId":"TheSpaceCuber"},"content":"        duke \u003d d;"},{"lineNumber":39,"author":{"gitId":"TheSpaceCuber"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"TheSpaceCuber"},"content":""},{"lineNumber":41,"author":{"gitId":"TheSpaceCuber"},"content":"    /**"},{"lineNumber":42,"author":{"gitId":"TheSpaceCuber"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"},{"lineNumber":43,"author":{"gitId":"TheSpaceCuber"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":44,"author":{"gitId":"TheSpaceCuber"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"TheSpaceCuber"},"content":"    @FXML"},{"lineNumber":46,"author":{"gitId":"TheSpaceCuber"},"content":"    private void handleUserInput() throws DukeException {"},{"lineNumber":47,"author":{"gitId":"TheSpaceCuber"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":48,"author":{"gitId":"TheSpaceCuber"},"content":"        String response \u003d duke.getResponse(input);"},{"lineNumber":49,"author":{"gitId":"TheSpaceCuber"},"content":"        System.out.println(response);"},{"lineNumber":50,"author":{"gitId":"TheSpaceCuber"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":51,"author":{"gitId":"TheSpaceCuber"},"content":"                DialogBox.getUserDialog(input, userImage),"},{"lineNumber":52,"author":{"gitId":"TheSpaceCuber"},"content":"                DialogBox.getDukeDialog(response, dukeImage)"},{"lineNumber":53,"author":{"gitId":"TheSpaceCuber"},"content":"        );"},{"lineNumber":54,"author":{"gitId":"TheSpaceCuber"},"content":"        userInput.clear();"},{"lineNumber":55,"author":{"gitId":"TheSpaceCuber"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"TheSpaceCuber"},"content":"}"}],"authorContributionMap":{"TheSpaceCuber":56}},{"path":"src/main/java/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TheSpaceCuber"},"content":"package tasks;"},{"lineNumber":2,"author":{"gitId":"TheSpaceCuber"},"content":""},{"lineNumber":3,"author":{"gitId":"TheSpaceCuber"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"TheSpaceCuber"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"TheSpaceCuber"},"content":""},{"lineNumber":6,"author":{"gitId":"TheSpaceCuber"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"TheSpaceCuber"},"content":" * Deadline class responsible for creating deadlines."},{"lineNumber":8,"author":{"gitId":"TheSpaceCuber"},"content":" */"},{"lineNumber":9,"author":{"gitId":"TheSpaceCuber"},"content":"public class Deadline extends Task {"},{"lineNumber":10,"author":{"gitId":"TheSpaceCuber"},"content":""},{"lineNumber":11,"author":{"gitId":"TheSpaceCuber"},"content":"    /** The date and time this task is due by. */"},{"lineNumber":12,"author":{"gitId":"TheSpaceCuber"},"content":"    private final LocalDateTime by;"},{"lineNumber":13,"author":{"gitId":"TheSpaceCuber"},"content":""},{"lineNumber":14,"author":{"gitId":"TheSpaceCuber"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"TheSpaceCuber"},"content":"     * Creates a Deadline Task."},{"lineNumber":16,"author":{"gitId":"TheSpaceCuber"},"content":"     *"},{"lineNumber":17,"author":{"gitId":"TheSpaceCuber"},"content":"     * @param description details of the Task."},{"lineNumber":18,"author":{"gitId":"TheSpaceCuber"},"content":"     * @param by Deadline the task is due by."},{"lineNumber":19,"author":{"gitId":"TheSpaceCuber"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"TheSpaceCuber"},"content":"    public Deadline(String description, String by) {"},{"lineNumber":21,"author":{"gitId":"TheSpaceCuber"},"content":"        super(description);"},{"lineNumber":22,"author":{"gitId":"TheSpaceCuber"},"content":"        this.by \u003d LocalDateTime.parse(by, DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"));"},{"lineNumber":23,"author":{"gitId":"TheSpaceCuber"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"TheSpaceCuber"},"content":""},{"lineNumber":25,"author":{"gitId":"TheSpaceCuber"},"content":"    @Override"},{"lineNumber":26,"author":{"gitId":"TheSpaceCuber"},"content":"    public String toString() {"},{"lineNumber":27,"author":{"gitId":"TheSpaceCuber"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy, hh:mm a\");"},{"lineNumber":28,"author":{"gitId":"TheSpaceCuber"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by.format(formatter) + \")\";"},{"lineNumber":29,"author":{"gitId":"TheSpaceCuber"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"TheSpaceCuber"},"content":""},{"lineNumber":31,"author":{"gitId":"TheSpaceCuber"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"TheSpaceCuber"},"content":"     * Method for writing the task to text format."},{"lineNumber":33,"author":{"gitId":"TheSpaceCuber"},"content":"     *"},{"lineNumber":34,"author":{"gitId":"TheSpaceCuber"},"content":"     * @return Text format to be saved."},{"lineNumber":35,"author":{"gitId":"TheSpaceCuber"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"TheSpaceCuber"},"content":"    public String toWrite() {"},{"lineNumber":37,"author":{"gitId":"TheSpaceCuber"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");"},{"lineNumber":38,"author":{"gitId":"TheSpaceCuber"},"content":"        return \"[D]\" + super.toString() + \" /by \" + by.format(formatter);"},{"lineNumber":39,"author":{"gitId":"TheSpaceCuber"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"TheSpaceCuber"},"content":"}"}],"authorContributionMap":{"TheSpaceCuber":40}},{"path":"src/main/java/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TheSpaceCuber"},"content":"package tasks;"},{"lineNumber":2,"author":{"gitId":"TheSpaceCuber"},"content":""},{"lineNumber":3,"author":{"gitId":"TheSpaceCuber"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"TheSpaceCuber"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"TheSpaceCuber"},"content":""},{"lineNumber":6,"author":{"gitId":"TheSpaceCuber"},"content":"public class Event extends Task {"},{"lineNumber":7,"author":{"gitId":"TheSpaceCuber"},"content":""},{"lineNumber":8,"author":{"gitId":"TheSpaceCuber"},"content":"    /** The date and time the task is at. */"},{"lineNumber":9,"author":{"gitId":"TheSpaceCuber"},"content":"    private final LocalDateTime at;"},{"lineNumber":10,"author":{"gitId":"TheSpaceCuber"},"content":""},{"lineNumber":11,"author":{"gitId":"TheSpaceCuber"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"TheSpaceCuber"},"content":"     * Creates an Event task."},{"lineNumber":13,"author":{"gitId":"TheSpaceCuber"},"content":"     *"},{"lineNumber":14,"author":{"gitId":"TheSpaceCuber"},"content":"     * @param description Details of the Event task."},{"lineNumber":15,"author":{"gitId":"TheSpaceCuber"},"content":"     * @param at Date and time of the Event."},{"lineNumber":16,"author":{"gitId":"TheSpaceCuber"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"TheSpaceCuber"},"content":"    public Event (String description, String at) {"},{"lineNumber":18,"author":{"gitId":"TheSpaceCuber"},"content":"        super(description);"},{"lineNumber":19,"author":{"gitId":"TheSpaceCuber"},"content":"        this.at \u003d LocalDateTime.parse(at, DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"));"},{"lineNumber":20,"author":{"gitId":"TheSpaceCuber"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"TheSpaceCuber"},"content":""},{"lineNumber":22,"author":{"gitId":"TheSpaceCuber"},"content":"    @Override"},{"lineNumber":23,"author":{"gitId":"TheSpaceCuber"},"content":"    public String toString() {"},{"lineNumber":24,"author":{"gitId":"TheSpaceCuber"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy, h:mm a\");"},{"lineNumber":25,"author":{"gitId":"TheSpaceCuber"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at.format(formatter) + \")\";"},{"lineNumber":26,"author":{"gitId":"TheSpaceCuber"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"TheSpaceCuber"},"content":""},{"lineNumber":28,"author":{"gitId":"TheSpaceCuber"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"TheSpaceCuber"},"content":"     * Method for writing the task to text format."},{"lineNumber":30,"author":{"gitId":"TheSpaceCuber"},"content":"     *"},{"lineNumber":31,"author":{"gitId":"TheSpaceCuber"},"content":"     * @return Text format to be saved."},{"lineNumber":32,"author":{"gitId":"TheSpaceCuber"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"TheSpaceCuber"},"content":"    public String toWrite() {"},{"lineNumber":34,"author":{"gitId":"TheSpaceCuber"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");"},{"lineNumber":35,"author":{"gitId":"TheSpaceCuber"},"content":"        return \"[E]\" + super.toString() + \" /at \" + at.format(formatter);"},{"lineNumber":36,"author":{"gitId":"TheSpaceCuber"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"TheSpaceCuber"},"content":"}"}],"authorContributionMap":{"TheSpaceCuber":37}},{"path":"src/main/java/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TheSpaceCuber"},"content":"package tasks;"},{"lineNumber":2,"author":{"gitId":"TheSpaceCuber"},"content":""},{"lineNumber":3,"author":{"gitId":"TheSpaceCuber"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"TheSpaceCuber"},"content":" * Parent class for all Tasks used in Duke."},{"lineNumber":5,"author":{"gitId":"TheSpaceCuber"},"content":" */"},{"lineNumber":6,"author":{"gitId":"TheSpaceCuber"},"content":"public class Task {"},{"lineNumber":7,"author":{"gitId":"TheSpaceCuber"},"content":"    /** Checks if the Task has been completed. */"},{"lineNumber":8,"author":{"gitId":"TheSpaceCuber"},"content":"    private boolean isDone;"},{"lineNumber":9,"author":{"gitId":"TheSpaceCuber"},"content":""},{"lineNumber":10,"author":{"gitId":"TheSpaceCuber"},"content":"    /** A description of the Task. */"},{"lineNumber":11,"author":{"gitId":"TheSpaceCuber"},"content":"    private final String description;"},{"lineNumber":12,"author":{"gitId":"TheSpaceCuber"},"content":""},{"lineNumber":13,"author":{"gitId":"TheSpaceCuber"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"TheSpaceCuber"},"content":"     * Creates a Task."},{"lineNumber":15,"author":{"gitId":"TheSpaceCuber"},"content":"     *"},{"lineNumber":16,"author":{"gitId":"TheSpaceCuber"},"content":"     * @param name name of the task."},{"lineNumber":17,"author":{"gitId":"TheSpaceCuber"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"TheSpaceCuber"},"content":"    public Task(String name) {"},{"lineNumber":19,"author":{"gitId":"TheSpaceCuber"},"content":"        this.isDone \u003d false; // new tasks are not done"},{"lineNumber":20,"author":{"gitId":"TheSpaceCuber"},"content":"        this.description \u003d name;"},{"lineNumber":21,"author":{"gitId":"TheSpaceCuber"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"TheSpaceCuber"},"content":""},{"lineNumber":23,"author":{"gitId":"TheSpaceCuber"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"TheSpaceCuber"},"content":"     * Returns the description of the Task."},{"lineNumber":25,"author":{"gitId":"TheSpaceCuber"},"content":"     *"},{"lineNumber":26,"author":{"gitId":"TheSpaceCuber"},"content":"     * @return description."},{"lineNumber":27,"author":{"gitId":"TheSpaceCuber"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"TheSpaceCuber"},"content":"    public String getDescription() {"},{"lineNumber":29,"author":{"gitId":"TheSpaceCuber"},"content":"        return this.description;"},{"lineNumber":30,"author":{"gitId":"TheSpaceCuber"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"TheSpaceCuber"},"content":""},{"lineNumber":32,"author":{"gitId":"TheSpaceCuber"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"TheSpaceCuber"},"content":"     * Marks a Tasks as completed."},{"lineNumber":34,"author":{"gitId":"TheSpaceCuber"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"TheSpaceCuber"},"content":"    public void markDone() {"},{"lineNumber":36,"author":{"gitId":"TheSpaceCuber"},"content":"        this.isDone \u003d true;"},{"lineNumber":37,"author":{"gitId":"TheSpaceCuber"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"TheSpaceCuber"},"content":""},{"lineNumber":39,"author":{"gitId":"TheSpaceCuber"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"TheSpaceCuber"},"content":"     * Checks if a tasks is completed."},{"lineNumber":41,"author":{"gitId":"TheSpaceCuber"},"content":"     *"},{"lineNumber":42,"author":{"gitId":"TheSpaceCuber"},"content":"     * @return true if completed and vice-versa."},{"lineNumber":43,"author":{"gitId":"TheSpaceCuber"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"TheSpaceCuber"},"content":"    public boolean isDone() {"},{"lineNumber":45,"author":{"gitId":"TheSpaceCuber"},"content":"        return this.isDone;"},{"lineNumber":46,"author":{"gitId":"TheSpaceCuber"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"TheSpaceCuber"},"content":""},{"lineNumber":48,"author":{"gitId":"TheSpaceCuber"},"content":"    /**"},{"lineNumber":49,"author":{"gitId":"TheSpaceCuber"},"content":"     * ToString method to display the tasks in."},{"lineNumber":50,"author":{"gitId":"TheSpaceCuber"},"content":"     */"},{"lineNumber":51,"author":{"gitId":"TheSpaceCuber"},"content":"    public String toString() {"},{"lineNumber":52,"author":{"gitId":"TheSpaceCuber"},"content":"        if (isDone()) {"},{"lineNumber":53,"author":{"gitId":"TheSpaceCuber"},"content":"            return \"[\\u2713] \" + this.description;"},{"lineNumber":54,"author":{"gitId":"TheSpaceCuber"},"content":"        } else {"},{"lineNumber":55,"author":{"gitId":"TheSpaceCuber"},"content":"            return \"[\\u2718] \" + this.description;"},{"lineNumber":56,"author":{"gitId":"TheSpaceCuber"},"content":"        }"},{"lineNumber":57,"author":{"gitId":"TheSpaceCuber"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"TheSpaceCuber"},"content":""},{"lineNumber":59,"author":{"gitId":"TheSpaceCuber"},"content":"    /**"},{"lineNumber":60,"author":{"gitId":"TheSpaceCuber"},"content":"     * Dummy method for Deadline and Event to write to database."},{"lineNumber":61,"author":{"gitId":"TheSpaceCuber"},"content":"     * The issue was that toString could not be used."},{"lineNumber":62,"author":{"gitId":"TheSpaceCuber"},"content":"     *"},{"lineNumber":63,"author":{"gitId":"TheSpaceCuber"},"content":"     * @return NIL."},{"lineNumber":64,"author":{"gitId":"TheSpaceCuber"},"content":"     */"},{"lineNumber":65,"author":{"gitId":"TheSpaceCuber"},"content":"    public String toWrite() {"},{"lineNumber":66,"author":{"gitId":"TheSpaceCuber"},"content":"        return \"\";"},{"lineNumber":67,"author":{"gitId":"TheSpaceCuber"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"TheSpaceCuber"},"content":"}"}],"authorContributionMap":{"TheSpaceCuber":68}},{"path":"src/main/java/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TheSpaceCuber"},"content":"package tasks;"},{"lineNumber":2,"author":{"gitId":"TheSpaceCuber"},"content":""},{"lineNumber":3,"author":{"gitId":"TheSpaceCuber"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"TheSpaceCuber"},"content":" * Responsible for creating Todo tasks."},{"lineNumber":5,"author":{"gitId":"TheSpaceCuber"},"content":" */"},{"lineNumber":6,"author":{"gitId":"TheSpaceCuber"},"content":"public class Todo extends Task {"},{"lineNumber":7,"author":{"gitId":"TheSpaceCuber"},"content":""},{"lineNumber":8,"author":{"gitId":"TheSpaceCuber"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"TheSpaceCuber"},"content":"     * Creates a Todo task."},{"lineNumber":10,"author":{"gitId":"TheSpaceCuber"},"content":"     *"},{"lineNumber":11,"author":{"gitId":"TheSpaceCuber"},"content":"     * @param description A description of the task."},{"lineNumber":12,"author":{"gitId":"TheSpaceCuber"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"TheSpaceCuber"},"content":"    public Todo (String description) {"},{"lineNumber":14,"author":{"gitId":"TheSpaceCuber"},"content":"        super(description);"},{"lineNumber":15,"author":{"gitId":"TheSpaceCuber"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"TheSpaceCuber"},"content":""},{"lineNumber":17,"author":{"gitId":"TheSpaceCuber"},"content":"    @Override"},{"lineNumber":18,"author":{"gitId":"TheSpaceCuber"},"content":"    public String toString() {"},{"lineNumber":19,"author":{"gitId":"TheSpaceCuber"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":20,"author":{"gitId":"TheSpaceCuber"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"TheSpaceCuber"},"content":"}"}],"authorContributionMap":{"TheSpaceCuber":21}},{"path":"src/main/java/utility/Choice.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TheSpaceCuber"},"content":"package utility;"},{"lineNumber":2,"author":{"gitId":"TheSpaceCuber"},"content":""},{"lineNumber":3,"author":{"gitId":"TheSpaceCuber"},"content":"public enum Choice {"},{"lineNumber":4,"author":{"gitId":"TheSpaceCuber"},"content":"    DONE, LIST, TODO, EVENT, DEADLINE, BYE, DELETE, FIND, HELP;"},{"lineNumber":5,"author":{"gitId":"TheSpaceCuber"},"content":"}"}],"authorContributionMap":{"TheSpaceCuber":5}},{"path":"src/main/java/utility/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TheSpaceCuber"},"content":"package utility;"},{"lineNumber":2,"author":{"gitId":"TheSpaceCuber"},"content":""},{"lineNumber":3,"author":{"gitId":"TheSpaceCuber"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"TheSpaceCuber"},"content":" * Custom Exception for Duke."},{"lineNumber":5,"author":{"gitId":"TheSpaceCuber"},"content":" */"},{"lineNumber":6,"author":{"gitId":"TheSpaceCuber"},"content":"public class DukeException extends Exception {"},{"lineNumber":7,"author":{"gitId":"TheSpaceCuber"},"content":""},{"lineNumber":8,"author":{"gitId":"TheSpaceCuber"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"TheSpaceCuber"},"content":"     * Constructs a DukeException."},{"lineNumber":10,"author":{"gitId":"TheSpaceCuber"},"content":"     * @param message Error message."},{"lineNumber":11,"author":{"gitId":"TheSpaceCuber"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"TheSpaceCuber"},"content":"    public DukeException(String message) {"},{"lineNumber":13,"author":{"gitId":"TheSpaceCuber"},"content":"        super(message);"},{"lineNumber":14,"author":{"gitId":"TheSpaceCuber"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"TheSpaceCuber"},"content":"}"}],"authorContributionMap":{"TheSpaceCuber":15}},{"path":"src/main/java/utility/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TheSpaceCuber"},"content":"package utility;"},{"lineNumber":2,"author":{"gitId":"TheSpaceCuber"},"content":""},{"lineNumber":3,"author":{"gitId":"TheSpaceCuber"},"content":"import java.util.Arrays;"},{"lineNumber":4,"author":{"gitId":"TheSpaceCuber"},"content":"import java.util.List;"},{"lineNumber":5,"author":{"gitId":"TheSpaceCuber"},"content":""},{"lineNumber":6,"author":{"gitId":"TheSpaceCuber"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"TheSpaceCuber"},"content":" * A Parser class that is in charge of parsing user input."},{"lineNumber":8,"author":{"gitId":"TheSpaceCuber"},"content":" */"},{"lineNumber":9,"author":{"gitId":"TheSpaceCuber"},"content":"public class Parser {"},{"lineNumber":10,"author":{"gitId":"TheSpaceCuber"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"TheSpaceCuber"},"content":"     * Function for returning Enums in a String array."},{"lineNumber":12,"author":{"gitId":"TheSpaceCuber"},"content":"     * Solution below adapted from https://stackoverflow.com/a/16252290"},{"lineNumber":13,"author":{"gitId":"TheSpaceCuber"},"content":"     * @param e Enums"},{"lineNumber":14,"author":{"gitId":"TheSpaceCuber"},"content":"     * @return String array of enums."},{"lineNumber":15,"author":{"gitId":"TheSpaceCuber"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"TheSpaceCuber"},"content":"    public static String[] getNames(Class\u003c? extends Enum\u003c?\u003e\u003e e) {"},{"lineNumber":17,"author":{"gitId":"TheSpaceCuber"},"content":"        return Arrays.stream(e.getEnumConstants()).map(Enum::name).toArray(String[]::new);"},{"lineNumber":18,"author":{"gitId":"TheSpaceCuber"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"TheSpaceCuber"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"TheSpaceCuber"},"content":"     * Reads user input and takes the first word to convert it"},{"lineNumber":21,"author":{"gitId":"TheSpaceCuber"},"content":"     * into ENUM format."},{"lineNumber":22,"author":{"gitId":"TheSpaceCuber"},"content":"     *"},{"lineNumber":23,"author":{"gitId":"TheSpaceCuber"},"content":"     * @param input User input in string."},{"lineNumber":24,"author":{"gitId":"TheSpaceCuber"},"content":"     * @return Choice ENUM."},{"lineNumber":25,"author":{"gitId":"TheSpaceCuber"},"content":"     * @throws DukeException Duke Custom Exception."},{"lineNumber":26,"author":{"gitId":"TheSpaceCuber"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"TheSpaceCuber"},"content":"    public Choice parseCommand(String input) throws DukeException {"},{"lineNumber":28,"author":{"gitId":"TheSpaceCuber"},"content":""},{"lineNumber":29,"author":{"gitId":"TheSpaceCuber"},"content":"        List\u003cString\u003e commands \u003d Arrays.asList(getNames(Choice.class));"},{"lineNumber":30,"author":{"gitId":"TheSpaceCuber"},"content":"        System.out.println(commands);"},{"lineNumber":31,"author":{"gitId":"TheSpaceCuber"},"content":"        String[] arr \u003d input.split(\" \");"},{"lineNumber":32,"author":{"gitId":"TheSpaceCuber"},"content":"        String command \u003d arr[0].toUpperCase();"},{"lineNumber":33,"author":{"gitId":"TheSpaceCuber"},"content":"        if (!commands.contains(command)) {"},{"lineNumber":34,"author":{"gitId":"TheSpaceCuber"},"content":"            String errMsg \u003d \"\\n____________________________________________________________\\n\""},{"lineNumber":35,"author":{"gitId":"TheSpaceCuber"},"content":"                    + \"I\u0027m sorry, I don\u0027t understand what you\u0027re asking.\\n\""},{"lineNumber":36,"author":{"gitId":"TheSpaceCuber"},"content":"                    + \"____________________________________________________________\";"},{"lineNumber":37,"author":{"gitId":"TheSpaceCuber"},"content":"            throw new DukeException(errMsg);"},{"lineNumber":38,"author":{"gitId":"TheSpaceCuber"},"content":"        }"},{"lineNumber":39,"author":{"gitId":"TheSpaceCuber"},"content":"        return Choice.valueOf(command);"},{"lineNumber":40,"author":{"gitId":"TheSpaceCuber"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"TheSpaceCuber"},"content":"}"}],"authorContributionMap":{"TheSpaceCuber":41}},{"path":"src/main/java/utility/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TheSpaceCuber"},"content":"package utility;"},{"lineNumber":2,"author":{"gitId":"TheSpaceCuber"},"content":""},{"lineNumber":3,"author":{"gitId":"TheSpaceCuber"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"TheSpaceCuber"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":5,"author":{"gitId":"TheSpaceCuber"},"content":"import java.io.FileWriter;"},{"lineNumber":6,"author":{"gitId":"TheSpaceCuber"},"content":"import java.io.IOException;"},{"lineNumber":7,"author":{"gitId":"TheSpaceCuber"},"content":"import java.util.ArrayList;"},{"lineNumber":8,"author":{"gitId":"TheSpaceCuber"},"content":"import java.util.Scanner;"},{"lineNumber":9,"author":{"gitId":"TheSpaceCuber"},"content":""},{"lineNumber":10,"author":{"gitId":"TheSpaceCuber"},"content":"import tasks.Deadline;"},{"lineNumber":11,"author":{"gitId":"TheSpaceCuber"},"content":"import tasks.Event;"},{"lineNumber":12,"author":{"gitId":"TheSpaceCuber"},"content":"import tasks.Task;"},{"lineNumber":13,"author":{"gitId":"TheSpaceCuber"},"content":"import tasks.Todo;"},{"lineNumber":14,"author":{"gitId":"TheSpaceCuber"},"content":""},{"lineNumber":15,"author":{"gitId":"TheSpaceCuber"},"content":"/**"},{"lineNumber":16,"author":{"gitId":"TheSpaceCuber"},"content":" * Storage class in charge of reading and writing data to a text file."},{"lineNumber":17,"author":{"gitId":"TheSpaceCuber"},"content":" */"},{"lineNumber":18,"author":{"gitId":"TheSpaceCuber"},"content":"public class Storage {"},{"lineNumber":19,"author":{"gitId":"TheSpaceCuber"},"content":""},{"lineNumber":20,"author":{"gitId":"TheSpaceCuber"},"content":"    /** The directory path of the text file Duke reads and saves to. */"},{"lineNumber":21,"author":{"gitId":"TheSpaceCuber"},"content":"    private final String filePath;"},{"lineNumber":22,"author":{"gitId":"TheSpaceCuber"},"content":""},{"lineNumber":23,"author":{"gitId":"TheSpaceCuber"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"TheSpaceCuber"},"content":"     * Constructs a Storage object responsible for reading and writing of data to hard disk."},{"lineNumber":25,"author":{"gitId":"TheSpaceCuber"},"content":"     *"},{"lineNumber":26,"author":{"gitId":"TheSpaceCuber"},"content":"     * @param filePath The directory path of the text file Duke reads and saves to."},{"lineNumber":27,"author":{"gitId":"TheSpaceCuber"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"TheSpaceCuber"},"content":"    public Storage(String filePath) {"},{"lineNumber":29,"author":{"gitId":"TheSpaceCuber"},"content":"        this.filePath \u003d filePath;"},{"lineNumber":30,"author":{"gitId":"TheSpaceCuber"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"TheSpaceCuber"},"content":""},{"lineNumber":32,"author":{"gitId":"TheSpaceCuber"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"TheSpaceCuber"},"content":"     * Returns the index of a specified character (first instance) in a string"},{"lineNumber":34,"author":{"gitId":"TheSpaceCuber"},"content":"     *"},{"lineNumber":35,"author":{"gitId":"TheSpaceCuber"},"content":"     * @param s The String input."},{"lineNumber":36,"author":{"gitId":"TheSpaceCuber"},"content":"     * @param target The character input."},{"lineNumber":37,"author":{"gitId":"TheSpaceCuber"},"content":"     * @return index."},{"lineNumber":38,"author":{"gitId":"TheSpaceCuber"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"TheSpaceCuber"},"content":"    public static int getPosition(String s, char target) {"},{"lineNumber":40,"author":{"gitId":"TheSpaceCuber"},"content":"        for (int i \u003d 0; i \u003c s.length(); i++) {"},{"lineNumber":41,"author":{"gitId":"TheSpaceCuber"},"content":"            char c \u003d s.charAt(i);"},{"lineNumber":42,"author":{"gitId":"TheSpaceCuber"},"content":"            if (c \u003d\u003d target) {"},{"lineNumber":43,"author":{"gitId":"TheSpaceCuber"},"content":"                return i;"},{"lineNumber":44,"author":{"gitId":"TheSpaceCuber"},"content":"            }"},{"lineNumber":45,"author":{"gitId":"TheSpaceCuber"},"content":"        }"},{"lineNumber":46,"author":{"gitId":"TheSpaceCuber"},"content":"        return -1;"},{"lineNumber":47,"author":{"gitId":"TheSpaceCuber"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"TheSpaceCuber"},"content":""},{"lineNumber":49,"author":{"gitId":"TheSpaceCuber"},"content":"    /**"},{"lineNumber":50,"author":{"gitId":"TheSpaceCuber"},"content":"     * Reads the text file into ArrayList format to start the program."},{"lineNumber":51,"author":{"gitId":"TheSpaceCuber"},"content":"     *"},{"lineNumber":52,"author":{"gitId":"TheSpaceCuber"},"content":"     * @return ArrayList that will be the TaskList."},{"lineNumber":53,"author":{"gitId":"TheSpaceCuber"},"content":"     * @throws FileNotFoundException exception if file isn\u0027t found."},{"lineNumber":54,"author":{"gitId":"TheSpaceCuber"},"content":"     */"},{"lineNumber":55,"author":{"gitId":"TheSpaceCuber"},"content":"    public ArrayList\u003cTask\u003e load() throws FileNotFoundException {"},{"lineNumber":56,"author":{"gitId":"TheSpaceCuber"},"content":"        File f \u003d new File(filePath);"},{"lineNumber":57,"author":{"gitId":"TheSpaceCuber"},"content":"        Scanner s \u003d new Scanner(f);"},{"lineNumber":58,"author":{"gitId":"TheSpaceCuber"},"content":"        ArrayList\u003cTask\u003e newList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":59,"author":{"gitId":"TheSpaceCuber"},"content":"        while (s.hasNext()) {"},{"lineNumber":60,"author":{"gitId":"TheSpaceCuber"},"content":"            String line \u003d s.nextLine();"},{"lineNumber":61,"author":{"gitId":"TheSpaceCuber"},"content":"            char taskType \u003d line.charAt(1);"},{"lineNumber":62,"author":{"gitId":"TheSpaceCuber"},"content":"            // char isDone \u003d line.charAt(4);"},{"lineNumber":63,"author":{"gitId":"TheSpaceCuber"},"content":"            switch (taskType) {"},{"lineNumber":64,"author":{"gitId":"TheSpaceCuber"},"content":"            case \u0027T\u0027:"},{"lineNumber":65,"author":{"gitId":"TheSpaceCuber"},"content":"                newList.add(new Todo(line.substring(7)));"},{"lineNumber":66,"author":{"gitId":"TheSpaceCuber"},"content":"                break;"},{"lineNumber":67,"author":{"gitId":"TheSpaceCuber"},"content":"            case \u0027E\u0027:"},{"lineNumber":68,"author":{"gitId":"TheSpaceCuber"},"content":"                int posE \u003d getPosition(line, \u0027/\u0027);"},{"lineNumber":69,"author":{"gitId":"TheSpaceCuber"},"content":"                newList.add(new Event(line.substring(7, posE), line.substring(posE + 4)));"},{"lineNumber":70,"author":{"gitId":"TheSpaceCuber"},"content":"                break;"},{"lineNumber":71,"author":{"gitId":"TheSpaceCuber"},"content":"            case \u0027D\u0027:"},{"lineNumber":72,"author":{"gitId":"TheSpaceCuber"},"content":"                int posD \u003d getPosition(line, \u0027/\u0027);"},{"lineNumber":73,"author":{"gitId":"TheSpaceCuber"},"content":"                newList.add(new Deadline(line.substring(7, posD), line.substring(posD + 4)));"},{"lineNumber":74,"author":{"gitId":"TheSpaceCuber"},"content":"                break;"},{"lineNumber":75,"author":{"gitId":"TheSpaceCuber"},"content":"            default:"},{"lineNumber":76,"author":{"gitId":"TheSpaceCuber"},"content":"                System.out.println(\"Can\u0027t read line - load()\");"},{"lineNumber":77,"author":{"gitId":"TheSpaceCuber"},"content":"            }"},{"lineNumber":78,"author":{"gitId":"TheSpaceCuber"},"content":"        }"},{"lineNumber":79,"author":{"gitId":"TheSpaceCuber"},"content":"        return newList;"},{"lineNumber":80,"author":{"gitId":"TheSpaceCuber"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"TheSpaceCuber"},"content":""},{"lineNumber":82,"author":{"gitId":"TheSpaceCuber"},"content":"    /**"},{"lineNumber":83,"author":{"gitId":"TheSpaceCuber"},"content":"     * Saves the tasks to a text file."},{"lineNumber":84,"author":{"gitId":"TheSpaceCuber"},"content":"     *"},{"lineNumber":85,"author":{"gitId":"TheSpaceCuber"},"content":"     * @param ls the TaskList used."},{"lineNumber":86,"author":{"gitId":"TheSpaceCuber"},"content":"     * @throws IOException Exception."},{"lineNumber":87,"author":{"gitId":"TheSpaceCuber"},"content":"     */"},{"lineNumber":88,"author":{"gitId":"TheSpaceCuber"},"content":"    public void writeToFile(ArrayList\u003cTask\u003e ls) throws IOException {"},{"lineNumber":89,"author":{"gitId":"TheSpaceCuber"},"content":"        FileWriter fw \u003d new FileWriter(filePath);"},{"lineNumber":90,"author":{"gitId":"TheSpaceCuber"},"content":"        StringBuilder textToAdd \u003d new StringBuilder();"},{"lineNumber":91,"author":{"gitId":"TheSpaceCuber"},"content":"        // convert ArrayList contents to string"},{"lineNumber":92,"author":{"gitId":"TheSpaceCuber"},"content":"        for (Task t : ls) {"},{"lineNumber":93,"author":{"gitId":"TheSpaceCuber"},"content":"            if (t instanceof Event || t instanceof Deadline) {"},{"lineNumber":94,"author":{"gitId":"TheSpaceCuber"},"content":"                textToAdd.append(t.toWrite()).append(\"\\n\");"},{"lineNumber":95,"author":{"gitId":"TheSpaceCuber"},"content":"            } else {"},{"lineNumber":96,"author":{"gitId":"TheSpaceCuber"},"content":"                textToAdd.append(t.toString()).append(\"\\n\");"},{"lineNumber":97,"author":{"gitId":"TheSpaceCuber"},"content":"            }"},{"lineNumber":98,"author":{"gitId":"TheSpaceCuber"},"content":"        }"},{"lineNumber":99,"author":{"gitId":"TheSpaceCuber"},"content":"        fw.write(textToAdd.toString());"},{"lineNumber":100,"author":{"gitId":"TheSpaceCuber"},"content":"        fw.close();"},{"lineNumber":101,"author":{"gitId":"TheSpaceCuber"},"content":"    }"},{"lineNumber":102,"author":{"gitId":"TheSpaceCuber"},"content":"}"}],"authorContributionMap":{"TheSpaceCuber":102}},{"path":"src/main/java/utility/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TheSpaceCuber"},"content":"package utility;"},{"lineNumber":2,"author":{"gitId":"TheSpaceCuber"},"content":""},{"lineNumber":3,"author":{"gitId":"TheSpaceCuber"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"TheSpaceCuber"},"content":"import java.util.Arrays;"},{"lineNumber":5,"author":{"gitId":"TheSpaceCuber"},"content":"import java.util.Collections;"},{"lineNumber":6,"author":{"gitId":"TheSpaceCuber"},"content":""},{"lineNumber":7,"author":{"gitId":"TheSpaceCuber"},"content":"import tasks.Deadline;"},{"lineNumber":8,"author":{"gitId":"TheSpaceCuber"},"content":"import tasks.Event;"},{"lineNumber":9,"author":{"gitId":"TheSpaceCuber"},"content":"import tasks.Task;"},{"lineNumber":10,"author":{"gitId":"TheSpaceCuber"},"content":"import tasks.Todo;"},{"lineNumber":11,"author":{"gitId":"TheSpaceCuber"},"content":""},{"lineNumber":12,"author":{"gitId":"TheSpaceCuber"},"content":"public class TaskList {"},{"lineNumber":13,"author":{"gitId":"TheSpaceCuber"},"content":""},{"lineNumber":14,"author":{"gitId":"TheSpaceCuber"},"content":"    /** Main ArrayList containing all tasks. */"},{"lineNumber":15,"author":{"gitId":"TheSpaceCuber"},"content":"    private final ArrayList\u003cTask\u003e taskList;"},{"lineNumber":16,"author":{"gitId":"TheSpaceCuber"},"content":""},{"lineNumber":17,"author":{"gitId":"TheSpaceCuber"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"TheSpaceCuber"},"content":"     * Data structure for managing tasks."},{"lineNumber":19,"author":{"gitId":"TheSpaceCuber"},"content":"     *"},{"lineNumber":20,"author":{"gitId":"TheSpaceCuber"},"content":"     * @param taskList arraylist of tasks"},{"lineNumber":21,"author":{"gitId":"TheSpaceCuber"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"TheSpaceCuber"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskList) {"},{"lineNumber":23,"author":{"gitId":"TheSpaceCuber"},"content":"        this.taskList \u003d taskList;"},{"lineNumber":24,"author":{"gitId":"TheSpaceCuber"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"TheSpaceCuber"},"content":""},{"lineNumber":26,"author":{"gitId":"TheSpaceCuber"},"content":"    /** Overloaded constructor, when no existing database is found. */"},{"lineNumber":27,"author":{"gitId":"TheSpaceCuber"},"content":"    public TaskList() {"},{"lineNumber":28,"author":{"gitId":"TheSpaceCuber"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":29,"author":{"gitId":"TheSpaceCuber"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"TheSpaceCuber"},"content":""},{"lineNumber":31,"author":{"gitId":"TheSpaceCuber"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"TheSpaceCuber"},"content":"     * Returns the index of a specified character (first instance) in a string"},{"lineNumber":33,"author":{"gitId":"TheSpaceCuber"},"content":"     *"},{"lineNumber":34,"author":{"gitId":"TheSpaceCuber"},"content":"     * @param s The String input."},{"lineNumber":35,"author":{"gitId":"TheSpaceCuber"},"content":"     * @param target The character input."},{"lineNumber":36,"author":{"gitId":"TheSpaceCuber"},"content":"     * @return index as an integer"},{"lineNumber":37,"author":{"gitId":"TheSpaceCuber"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"TheSpaceCuber"},"content":"    public static int getPosition(String s, char target) {"},{"lineNumber":39,"author":{"gitId":"TheSpaceCuber"},"content":"        for (int i \u003d 0; i \u003c s.length(); i++) {"},{"lineNumber":40,"author":{"gitId":"TheSpaceCuber"},"content":"            char c \u003d s.charAt(i);"},{"lineNumber":41,"author":{"gitId":"TheSpaceCuber"},"content":"            if (c \u003d\u003d target) {"},{"lineNumber":42,"author":{"gitId":"TheSpaceCuber"},"content":"                return i;"},{"lineNumber":43,"author":{"gitId":"TheSpaceCuber"},"content":"            }"},{"lineNumber":44,"author":{"gitId":"TheSpaceCuber"},"content":"        }"},{"lineNumber":45,"author":{"gitId":"TheSpaceCuber"},"content":"        return -1;"},{"lineNumber":46,"author":{"gitId":"TheSpaceCuber"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"TheSpaceCuber"},"content":""},{"lineNumber":48,"author":{"gitId":"TheSpaceCuber"},"content":"    /**"},{"lineNumber":49,"author":{"gitId":"TheSpaceCuber"},"content":"     * Prints out the task added to the Bot."},{"lineNumber":50,"author":{"gitId":"TheSpaceCuber"},"content":"     *"},{"lineNumber":51,"author":{"gitId":"TheSpaceCuber"},"content":"     * @param ls an arraylist of tasks"},{"lineNumber":52,"author":{"gitId":"TheSpaceCuber"},"content":"     */"},{"lineNumber":53,"author":{"gitId":"TheSpaceCuber"},"content":"    public static String printAddedTask(ArrayList\u003cTask\u003e ls) {"},{"lineNumber":54,"author":{"gitId":"TheSpaceCuber"},"content":"        String out \u003d \"Got it. I\u0027ve added this task:\\n\";"},{"lineNumber":55,"author":{"gitId":"TheSpaceCuber"},"content":"        out +\u003d ls.get(ls.size() - 1) + \"\\n\";"},{"lineNumber":56,"author":{"gitId":"TheSpaceCuber"},"content":"        out +\u003d \"Now you have \" + ls.size() + \" tasks in the list.\\n\";"},{"lineNumber":57,"author":{"gitId":"TheSpaceCuber"},"content":"        return out;"},{"lineNumber":58,"author":{"gitId":"TheSpaceCuber"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"TheSpaceCuber"},"content":""},{"lineNumber":60,"author":{"gitId":"TheSpaceCuber"},"content":"    /**"},{"lineNumber":61,"author":{"gitId":"TheSpaceCuber"},"content":"     * Returns the taskList as an ArrayList."},{"lineNumber":62,"author":{"gitId":"TheSpaceCuber"},"content":"     *"},{"lineNumber":63,"author":{"gitId":"TheSpaceCuber"},"content":"     * @return arraylist of tasks."},{"lineNumber":64,"author":{"gitId":"TheSpaceCuber"},"content":"     */"},{"lineNumber":65,"author":{"gitId":"TheSpaceCuber"},"content":"    public ArrayList\u003cTask\u003e getTaskList() {"},{"lineNumber":66,"author":{"gitId":"TheSpaceCuber"},"content":"        return this.taskList;"},{"lineNumber":67,"author":{"gitId":"TheSpaceCuber"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"TheSpaceCuber"},"content":""},{"lineNumber":69,"author":{"gitId":"TheSpaceCuber"},"content":"    /**"},{"lineNumber":70,"author":{"gitId":"TheSpaceCuber"},"content":"     * Display all tasks in a list format."},{"lineNumber":71,"author":{"gitId":"TheSpaceCuber"},"content":"     */"},{"lineNumber":72,"author":{"gitId":"TheSpaceCuber"},"content":"    public String listAllTasks() {"},{"lineNumber":73,"author":{"gitId":"TheSpaceCuber"},"content":"        StringBuilder out \u003d new StringBuilder(\"Here are the tasks in your list:\\n\");"},{"lineNumber":74,"author":{"gitId":"TheSpaceCuber"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {"},{"lineNumber":75,"author":{"gitId":"TheSpaceCuber"},"content":"            out.append(i + 1).append(\". \").append(taskList.get(i)).append(\"\\n\");"},{"lineNumber":76,"author":{"gitId":"TheSpaceCuber"},"content":"        }"},{"lineNumber":77,"author":{"gitId":"TheSpaceCuber"},"content":"        return String.valueOf(out);"},{"lineNumber":78,"author":{"gitId":"TheSpaceCuber"},"content":"    }"},{"lineNumber":79,"author":{"gitId":"TheSpaceCuber"},"content":""},{"lineNumber":80,"author":{"gitId":"TheSpaceCuber"},"content":"    /**"},{"lineNumber":81,"author":{"gitId":"TheSpaceCuber"},"content":"     * Search for tasks for the same name."},{"lineNumber":82,"author":{"gitId":"TheSpaceCuber"},"content":"     *"},{"lineNumber":83,"author":{"gitId":"TheSpaceCuber"},"content":"     * @param input the name of the task to search for."},{"lineNumber":84,"author":{"gitId":"TheSpaceCuber"},"content":"     */"},{"lineNumber":85,"author":{"gitId":"TheSpaceCuber"},"content":"    public String findTasks(String input) {"},{"lineNumber":86,"author":{"gitId":"TheSpaceCuber"},"content":"        assert input !\u003d null : \"Input is null\";"},{"lineNumber":87,"author":{"gitId":"TheSpaceCuber"},"content":"        String query \u003d input.substring(5);"},{"lineNumber":88,"author":{"gitId":"TheSpaceCuber"},"content":"        StringBuilder out \u003d new StringBuilder();"},{"lineNumber":89,"author":{"gitId":"TheSpaceCuber"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {"},{"lineNumber":90,"author":{"gitId":"TheSpaceCuber"},"content":"            Task t \u003d taskList.get(i);"},{"lineNumber":91,"author":{"gitId":"TheSpaceCuber"},"content":"            if (t.getDescription().contains(query)) {"},{"lineNumber":92,"author":{"gitId":"TheSpaceCuber"},"content":"                out.append(i + 1).append(\". \").append(t);"},{"lineNumber":93,"author":{"gitId":"TheSpaceCuber"},"content":"            }"},{"lineNumber":94,"author":{"gitId":"TheSpaceCuber"},"content":"        }"},{"lineNumber":95,"author":{"gitId":"TheSpaceCuber"},"content":"        return String.valueOf(out);"},{"lineNumber":96,"author":{"gitId":"TheSpaceCuber"},"content":"    }"},{"lineNumber":97,"author":{"gitId":"TheSpaceCuber"},"content":""},{"lineNumber":98,"author":{"gitId":"TheSpaceCuber"},"content":"    /**"},{"lineNumber":99,"author":{"gitId":"TheSpaceCuber"},"content":"     * Mark a task as done."},{"lineNumber":100,"author":{"gitId":"TheSpaceCuber"},"content":"     *"},{"lineNumber":101,"author":{"gitId":"TheSpaceCuber"},"content":"     * @param input the number of the task to be marked as complete."},{"lineNumber":102,"author":{"gitId":"TheSpaceCuber"},"content":"     */"},{"lineNumber":103,"author":{"gitId":"TheSpaceCuber"},"content":"    public String completeTask(String input) {"},{"lineNumber":104,"author":{"gitId":"TheSpaceCuber"},"content":"        assert input !\u003d null : \"Input is null\";"},{"lineNumber":105,"author":{"gitId":"TheSpaceCuber"},"content":"        // mark task as done"},{"lineNumber":106,"author":{"gitId":"TheSpaceCuber"},"content":"        int position \u003d Integer.parseInt(input.substring(5));"},{"lineNumber":107,"author":{"gitId":"TheSpaceCuber"},"content":"        taskList.get(position - 1).markDone();"},{"lineNumber":108,"author":{"gitId":"TheSpaceCuber"},"content":"        return \"Nice! I\u0027ve marked this task as done:\\n\" + taskList.get(position - 1);"},{"lineNumber":109,"author":{"gitId":"TheSpaceCuber"},"content":"    }"},{"lineNumber":110,"author":{"gitId":"TheSpaceCuber"},"content":""},{"lineNumber":111,"author":{"gitId":"TheSpaceCuber"},"content":"    /**"},{"lineNumber":112,"author":{"gitId":"TheSpaceCuber"},"content":"     * Adds an Event Task to the taskList."},{"lineNumber":113,"author":{"gitId":"TheSpaceCuber"},"content":"     *"},{"lineNumber":114,"author":{"gitId":"TheSpaceCuber"},"content":"     * @param input name of the event task."},{"lineNumber":115,"author":{"gitId":"TheSpaceCuber"},"content":"     * @throws DukeException Custom Duke Exception."},{"lineNumber":116,"author":{"gitId":"TheSpaceCuber"},"content":"     */"},{"lineNumber":117,"author":{"gitId":"TheSpaceCuber"},"content":"    public String addEvent(String input) throws DukeException {"},{"lineNumber":118,"author":{"gitId":"TheSpaceCuber"},"content":"        assert input !\u003d null : \"Input is null\";"},{"lineNumber":119,"author":{"gitId":"TheSpaceCuber"},"content":"        if (input.length() \u003c\u003d 6) {"},{"lineNumber":120,"author":{"gitId":"TheSpaceCuber"},"content":"            throw new DukeException(\"Exception occurred: Name not found for Tasks.Event.\");"},{"lineNumber":121,"author":{"gitId":"TheSpaceCuber"},"content":"        }"},{"lineNumber":122,"author":{"gitId":"TheSpaceCuber"},"content":"        int pos \u003d getPosition(input, \u0027/\u0027);"},{"lineNumber":123,"author":{"gitId":"TheSpaceCuber"},"content":"        String description \u003d input.substring(6, pos);"},{"lineNumber":124,"author":{"gitId":"TheSpaceCuber"},"content":"        String at \u003d input.substring(pos + 4);"},{"lineNumber":125,"author":{"gitId":"TheSpaceCuber"},"content":"        taskList.add(new Event(description, at));"},{"lineNumber":126,"author":{"gitId":"TheSpaceCuber"},"content":"        return printAddedTask(taskList);"},{"lineNumber":127,"author":{"gitId":"TheSpaceCuber"},"content":"    }"},{"lineNumber":128,"author":{"gitId":"TheSpaceCuber"},"content":""},{"lineNumber":129,"author":{"gitId":"TheSpaceCuber"},"content":"    /**"},{"lineNumber":130,"author":{"gitId":"TheSpaceCuber"},"content":"     * Adds a Deadline Task to the taskList."},{"lineNumber":131,"author":{"gitId":"TheSpaceCuber"},"content":"     *"},{"lineNumber":132,"author":{"gitId":"TheSpaceCuber"},"content":"     * @param input name of deadline task."},{"lineNumber":133,"author":{"gitId":"TheSpaceCuber"},"content":"     * @throws DukeException Custom Duke Exception."},{"lineNumber":134,"author":{"gitId":"TheSpaceCuber"},"content":"     */"},{"lineNumber":135,"author":{"gitId":"TheSpaceCuber"},"content":"    public String addDeadline(String input) throws DukeException {"},{"lineNumber":136,"author":{"gitId":"TheSpaceCuber"},"content":"        assert input !\u003d null : \"Input is null\";"},{"lineNumber":137,"author":{"gitId":"TheSpaceCuber"},"content":"        if (input.length() \u003c\u003d 9) {"},{"lineNumber":138,"author":{"gitId":"TheSpaceCuber"},"content":"            throw new DukeException(\"Exception occurred: Name not found for Tasks.Deadline.\");"},{"lineNumber":139,"author":{"gitId":"TheSpaceCuber"},"content":"        }"},{"lineNumber":140,"author":{"gitId":"TheSpaceCuber"},"content":"        int pos \u003d getPosition(input, \u0027/\u0027);"},{"lineNumber":141,"author":{"gitId":"TheSpaceCuber"},"content":"        String description \u003d input.substring(9, pos);"},{"lineNumber":142,"author":{"gitId":"TheSpaceCuber"},"content":"        String by \u003d input.substring(pos + 4);"},{"lineNumber":143,"author":{"gitId":"TheSpaceCuber"},"content":"        System.out.println(\"Description: \" + description);"},{"lineNumber":144,"author":{"gitId":"TheSpaceCuber"},"content":"        System.out.println(\"By: \" + by);"},{"lineNumber":145,"author":{"gitId":"TheSpaceCuber"},"content":"        taskList.add(new Deadline(description, by));"},{"lineNumber":146,"author":{"gitId":"TheSpaceCuber"},"content":"        return printAddedTask(taskList);"},{"lineNumber":147,"author":{"gitId":"TheSpaceCuber"},"content":"    }"},{"lineNumber":148,"author":{"gitId":"TheSpaceCuber"},"content":""},{"lineNumber":149,"author":{"gitId":"TheSpaceCuber"},"content":"    /**"},{"lineNumber":150,"author":{"gitId":"TheSpaceCuber"},"content":"     * Adds a Todo Task to the taskList."},{"lineNumber":151,"author":{"gitId":"TheSpaceCuber"},"content":"     *"},{"lineNumber":152,"author":{"gitId":"TheSpaceCuber"},"content":"     * @param input name of Todo task."},{"lineNumber":153,"author":{"gitId":"TheSpaceCuber"},"content":"     */"},{"lineNumber":154,"author":{"gitId":"TheSpaceCuber"},"content":"    public String addTodo(String input) {"},{"lineNumber":155,"author":{"gitId":"TheSpaceCuber"},"content":"        assert input !\u003d null : \"Input is null\";"},{"lineNumber":156,"author":{"gitId":"TheSpaceCuber"},"content":"        taskList.add(new Todo(input.substring(5)));"},{"lineNumber":157,"author":{"gitId":"TheSpaceCuber"},"content":"        return printAddedTask(taskList);"},{"lineNumber":158,"author":{"gitId":"TheSpaceCuber"},"content":"    }"},{"lineNumber":159,"author":{"gitId":"TheSpaceCuber"},"content":""},{"lineNumber":160,"author":{"gitId":"TheSpaceCuber"},"content":"    /**"},{"lineNumber":161,"author":{"gitId":"TheSpaceCuber"},"content":"     * Removes a task from the taskList."},{"lineNumber":162,"author":{"gitId":"TheSpaceCuber"},"content":"     *"},{"lineNumber":163,"author":{"gitId":"TheSpaceCuber"},"content":"     * @param input position of task to be deleted."},{"lineNumber":164,"author":{"gitId":"TheSpaceCuber"},"content":"     * @throws DukeException Custom Duke Exception."},{"lineNumber":165,"author":{"gitId":"TheSpaceCuber"},"content":"     */"},{"lineNumber":166,"author":{"gitId":"TheSpaceCuber"},"content":"    public String deleteTask(String input) throws DukeException {"},{"lineNumber":167,"author":{"gitId":"TheSpaceCuber"},"content":"        assert input !\u003d null : \"Input is null\";"},{"lineNumber":168,"author":{"gitId":"TheSpaceCuber"},"content":"        if (input.length() \u003c\u003d 7) {"},{"lineNumber":169,"author":{"gitId":"TheSpaceCuber"},"content":"            throw new DukeException(\"Exception occurred: Kindly enter a number for deletion.\");"},{"lineNumber":170,"author":{"gitId":"TheSpaceCuber"},"content":"        }"},{"lineNumber":171,"author":{"gitId":"TheSpaceCuber"},"content":"        System.out.println(\"HI\");"},{"lineNumber":172,"author":{"gitId":"TheSpaceCuber"},"content":"        // An array of the positions that are to be deleted."},{"lineNumber":173,"author":{"gitId":"TheSpaceCuber"},"content":"        String[] posArr \u003d input.substring(7).split(\" \");"},{"lineNumber":174,"author":{"gitId":"TheSpaceCuber"},"content":"        StringBuilder out \u003d new StringBuilder();"},{"lineNumber":175,"author":{"gitId":"TheSpaceCuber"},"content":"        try {"},{"lineNumber":176,"author":{"gitId":"TheSpaceCuber"},"content":"            Integer[] intArr \u003d new Integer[posArr.length];"},{"lineNumber":177,"author":{"gitId":"TheSpaceCuber"},"content":"            for (int i \u003d 0; i \u003c posArr.length; i++) {"},{"lineNumber":178,"author":{"gitId":"TheSpaceCuber"},"content":"                intArr[i] \u003d Integer.parseInt(posArr[i]);"},{"lineNumber":179,"author":{"gitId":"TheSpaceCuber"},"content":"            }"},{"lineNumber":180,"author":{"gitId":"TheSpaceCuber"},"content":"            Arrays.sort(intArr, Collections.reverseOrder());"},{"lineNumber":181,"author":{"gitId":"TheSpaceCuber"},"content":"            for (Integer pos : intArr) {"},{"lineNumber":182,"author":{"gitId":"TheSpaceCuber"},"content":"                out.append(\"Noted. I\u0027ve removed this task:\\n\").append(this.taskList.get(pos - 1)).append(\"\\n\");"},{"lineNumber":183,"author":{"gitId":"TheSpaceCuber"},"content":"                this.taskList.remove(pos - 1);"},{"lineNumber":184,"author":{"gitId":"TheSpaceCuber"},"content":"            }"},{"lineNumber":185,"author":{"gitId":"TheSpaceCuber"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":186,"author":{"gitId":"TheSpaceCuber"},"content":"            return \"Kindly provide a valid number\";"},{"lineNumber":187,"author":{"gitId":"TheSpaceCuber"},"content":"        }"},{"lineNumber":188,"author":{"gitId":"TheSpaceCuber"},"content":"        return String.valueOf(out);"},{"lineNumber":189,"author":{"gitId":"TheSpaceCuber"},"content":"        /*"},{"lineNumber":190,"author":{"gitId":"TheSpaceCuber"},"content":"        int position \u003d Integer.parseInt(input.substring(7));"},{"lineNumber":191,"author":{"gitId":"TheSpaceCuber"},"content":"        String out \u003d \"Noted. I\u0027ve removed this task:\\n\" + this.taskList.get(position - 1);"},{"lineNumber":192,"author":{"gitId":"TheSpaceCuber"},"content":""},{"lineNumber":193,"author":{"gitId":"TheSpaceCuber"},"content":"        return out;"},{"lineNumber":194,"author":{"gitId":"TheSpaceCuber"},"content":"         */"},{"lineNumber":195,"author":{"gitId":"TheSpaceCuber"},"content":"    }"},{"lineNumber":196,"author":{"gitId":"TheSpaceCuber"},"content":"}"}],"authorContributionMap":{"TheSpaceCuber":196}},{"path":"src/main/java/utility/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TheSpaceCuber"},"content":"package utility;"},{"lineNumber":2,"author":{"gitId":"TheSpaceCuber"},"content":""},{"lineNumber":3,"author":{"gitId":"TheSpaceCuber"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"TheSpaceCuber"},"content":" * UI class required for displaying information."},{"lineNumber":5,"author":{"gitId":"TheSpaceCuber"},"content":" */"},{"lineNumber":6,"author":{"gitId":"TheSpaceCuber"},"content":"public class Ui {"},{"lineNumber":7,"author":{"gitId":"TheSpaceCuber"},"content":""},{"lineNumber":8,"author":{"gitId":"TheSpaceCuber"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"TheSpaceCuber"},"content":"     * Prints out the welcome text."},{"lineNumber":10,"author":{"gitId":"TheSpaceCuber"},"content":"     */"},{"lineNumber":11,"author":{"gitId":"TheSpaceCuber"},"content":"    public static String showWelcome() {"},{"lineNumber":12,"author":{"gitId":"TheSpaceCuber"},"content":"        String logo \u003d \" ____        _        \\n\""},{"lineNumber":13,"author":{"gitId":"TheSpaceCuber"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":14,"author":{"gitId":"TheSpaceCuber"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":15,"author":{"gitId":"TheSpaceCuber"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":16,"author":{"gitId":"TheSpaceCuber"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":17,"author":{"gitId":"TheSpaceCuber"},"content":"        System.out.println(\"Hello from\\n\" + logo);"},{"lineNumber":18,"author":{"gitId":"TheSpaceCuber"},"content":"        String msg \u003d \"________________________________________________________\\n\""},{"lineNumber":19,"author":{"gitId":"TheSpaceCuber"},"content":"                + \"Hello I\u0027m Duke\\n\""},{"lineNumber":20,"author":{"gitId":"TheSpaceCuber"},"content":"                + \"Your personal smart assistant\\n\""},{"lineNumber":21,"author":{"gitId":"TheSpaceCuber"},"content":"                + \"________________________________________________________\\n\";"},{"lineNumber":22,"author":{"gitId":"TheSpaceCuber"},"content":""},{"lineNumber":23,"author":{"gitId":"TheSpaceCuber"},"content":"        return \"Hello from\\n\" + logo + msg;"},{"lineNumber":24,"author":{"gitId":"TheSpaceCuber"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"TheSpaceCuber"},"content":""},{"lineNumber":26,"author":{"gitId":"TheSpaceCuber"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"TheSpaceCuber"},"content":"     * Prints out text to show help."},{"lineNumber":28,"author":{"gitId":"TheSpaceCuber"},"content":"     * @return a string."},{"lineNumber":29,"author":{"gitId":"TheSpaceCuber"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"TheSpaceCuber"},"content":"    public String showHelp() {"},{"lineNumber":31,"author":{"gitId":"TheSpaceCuber"},"content":"        return \"List of commands:\\n\""},{"lineNumber":32,"author":{"gitId":"TheSpaceCuber"},"content":"                    + \"list: lists out all tasks\\n\""},{"lineNumber":33,"author":{"gitId":"TheSpaceCuber"},"content":"                    + \"todo {detail}: add a todo item\\n\""},{"lineNumber":34,"author":{"gitId":"TheSpaceCuber"},"content":"                    + \"event {detail} /at {datetime}: add an event item\\n\""},{"lineNumber":35,"author":{"gitId":"TheSpaceCuber"},"content":"                    + \"deadline {detail} /at {datetime}: add a deadline item\\n\""},{"lineNumber":36,"author":{"gitId":"TheSpaceCuber"},"content":"                    + \"delete {position(s)}: removes the item(s) at the specified position(s)\\n\""},{"lineNumber":37,"author":{"gitId":"TheSpaceCuber"},"content":"                    + \"done {position}: marks the item as done\\n\""},{"lineNumber":38,"author":{"gitId":"TheSpaceCuber"},"content":"                    + \"find {detail}: searches for a task contain that detail\\n\";"},{"lineNumber":39,"author":{"gitId":"TheSpaceCuber"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"TheSpaceCuber"},"content":""},{"lineNumber":41,"author":{"gitId":"TheSpaceCuber"},"content":"    /**"},{"lineNumber":42,"author":{"gitId":"TheSpaceCuber"},"content":"     * Prints out instructional messages for adding tasks."},{"lineNumber":43,"author":{"gitId":"TheSpaceCuber"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"TheSpaceCuber"},"content":"    public void showTaskHelp() {"},{"lineNumber":45,"author":{"gitId":"TheSpaceCuber"},"content":"        String msg \u003d \"You can add 3 types of tasks, Todo, Event or Deadline. \\n\""},{"lineNumber":46,"author":{"gitId":"TheSpaceCuber"},"content":"                + \"Use the following format: \\n\""},{"lineNumber":47,"author":{"gitId":"TheSpaceCuber"},"content":"                + \"[type] [description of task] /[at or by] [Date in DD/MM/YYYY] [Time in HHMM]\""},{"lineNumber":48,"author":{"gitId":"TheSpaceCuber"},"content":"                + \"For example: \\nevent project meeting /at 08/10/2020 2000\\n\";"},{"lineNumber":49,"author":{"gitId":"TheSpaceCuber"},"content":"        System.out.println(msg);"},{"lineNumber":50,"author":{"gitId":"TheSpaceCuber"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"TheSpaceCuber"},"content":""},{"lineNumber":52,"author":{"gitId":"TheSpaceCuber"},"content":"    /**"},{"lineNumber":53,"author":{"gitId":"TheSpaceCuber"},"content":"     * Prints out a line."},{"lineNumber":54,"author":{"gitId":"TheSpaceCuber"},"content":"     */"},{"lineNumber":55,"author":{"gitId":"TheSpaceCuber"},"content":"    public void showLine() {"},{"lineNumber":56,"author":{"gitId":"TheSpaceCuber"},"content":"        System.out.println(\"____________________________________________________________\");"},{"lineNumber":57,"author":{"gitId":"TheSpaceCuber"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"TheSpaceCuber"},"content":"}"},{"lineNumber":59,"author":{"gitId":"TheSpaceCuber"},"content":""}],"authorContributionMap":{"TheSpaceCuber":59}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"TheSpaceCuber"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"TheSpaceCuber"},"content":""},{"lineNumber":3,"author":{"gitId":"TheSpaceCuber"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"TheSpaceCuber"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"TheSpaceCuber"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":6,"author":{"gitId":"TheSpaceCuber"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":7,"author":{"gitId":"TheSpaceCuber"},"content":""},{"lineNumber":8,"author":{"gitId":"TheSpaceCuber"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":9,"author":{"gitId":"TheSpaceCuber"},"content":"    \u003cchildren\u003e"},{"lineNumber":10,"author":{"gitId":"TheSpaceCuber"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"},{"lineNumber":11,"author":{"gitId":"TheSpaceCuber"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"},{"lineNumber":12,"author":{"gitId":"TheSpaceCuber"},"content":"    \u003c/children\u003e"},{"lineNumber":13,"author":{"gitId":"TheSpaceCuber"},"content":"    \u003cpadding\u003e"},{"lineNumber":14,"author":{"gitId":"TheSpaceCuber"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":15,"author":{"gitId":"TheSpaceCuber"},"content":"    \u003c/padding\u003e"},{"lineNumber":16,"author":{"gitId":"TheSpaceCuber"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"TheSpaceCuber":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"TheSpaceCuber"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"TheSpaceCuber"},"content":""},{"lineNumber":3,"author":{"gitId":"TheSpaceCuber"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":4,"author":{"gitId":"TheSpaceCuber"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":5,"author":{"gitId":"TheSpaceCuber"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":6,"author":{"gitId":"TheSpaceCuber"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":7,"author":{"gitId":"TheSpaceCuber"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":8,"author":{"gitId":"TheSpaceCuber"},"content":""},{"lineNumber":9,"author":{"gitId":"TheSpaceCuber"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"},{"lineNumber":10,"author":{"gitId":"TheSpaceCuber"},"content":"    \u003cchildren\u003e"},{"lineNumber":11,"author":{"gitId":"TheSpaceCuber"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"},{"lineNumber":12,"author":{"gitId":"TheSpaceCuber"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"},{"lineNumber":13,"author":{"gitId":"TheSpaceCuber"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"},{"lineNumber":14,"author":{"gitId":"TheSpaceCuber"},"content":"            \u003ccontent\u003e"},{"lineNumber":15,"author":{"gitId":"TheSpaceCuber"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"},{"lineNumber":16,"author":{"gitId":"TheSpaceCuber"},"content":"            \u003c/content\u003e"},{"lineNumber":17,"author":{"gitId":"TheSpaceCuber"},"content":"        \u003c/ScrollPane\u003e"},{"lineNumber":18,"author":{"gitId":"TheSpaceCuber"},"content":"    \u003c/children\u003e"},{"lineNumber":19,"author":{"gitId":"TheSpaceCuber"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"TheSpaceCuber":19}},{"path":"src/test/java/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TheSpaceCuber"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":2,"author":{"gitId":"TheSpaceCuber"},"content":""},{"lineNumber":3,"author":{"gitId":"TheSpaceCuber"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"TheSpaceCuber"},"content":""},{"lineNumber":5,"author":{"gitId":"TheSpaceCuber"},"content":""},{"lineNumber":6,"author":{"gitId":"TheSpaceCuber"},"content":"public class DukeTest {"},{"lineNumber":7,"author":{"gitId":"TheSpaceCuber"},"content":"    @Test"},{"lineNumber":8,"author":{"gitId":"TheSpaceCuber"},"content":"    public void dummyTest() {"},{"lineNumber":9,"author":{"gitId":"TheSpaceCuber"},"content":"        assertEquals(2, 2);"},{"lineNumber":10,"author":{"gitId":"TheSpaceCuber"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"TheSpaceCuber"},"content":""},{"lineNumber":12,"author":{"gitId":"TheSpaceCuber"},"content":"    @Test"},{"lineNumber":13,"author":{"gitId":"TheSpaceCuber"},"content":"    public void test() {"},{"lineNumber":14,"author":{"gitId":"TheSpaceCuber"},"content":""},{"lineNumber":15,"author":{"gitId":"TheSpaceCuber"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"TheSpaceCuber"},"content":"}"}],"authorContributionMap":{"TheSpaceCuber":16}},{"path":"src/test/java/utility/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TheSpaceCuber"},"content":"package utility;"},{"lineNumber":2,"author":{"gitId":"TheSpaceCuber"},"content":""},{"lineNumber":3,"author":{"gitId":"TheSpaceCuber"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"TheSpaceCuber"},"content":""},{"lineNumber":5,"author":{"gitId":"TheSpaceCuber"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"TheSpaceCuber"},"content":""},{"lineNumber":7,"author":{"gitId":"TheSpaceCuber"},"content":"public class ParserTest {"},{"lineNumber":8,"author":{"gitId":"TheSpaceCuber"},"content":"    @Test"},{"lineNumber":9,"author":{"gitId":"TheSpaceCuber"},"content":"    public void dummyTest() {"},{"lineNumber":10,"author":{"gitId":"TheSpaceCuber"},"content":"        assertEquals(2, 2);"},{"lineNumber":11,"author":{"gitId":"TheSpaceCuber"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"TheSpaceCuber"},"content":""},{"lineNumber":13,"author":{"gitId":"TheSpaceCuber"},"content":"    @Test"},{"lineNumber":14,"author":{"gitId":"TheSpaceCuber"},"content":"    public void parseCommandTest() throws DukeException {"},{"lineNumber":15,"author":{"gitId":"TheSpaceCuber"},"content":"        Parser parser \u003d new Parser();"},{"lineNumber":16,"author":{"gitId":"TheSpaceCuber"},"content":"        Choice actualOutput \u003d parser.parseCommand(\"bye\");"},{"lineNumber":17,"author":{"gitId":"TheSpaceCuber"},"content":"        assertEquals(Choice.BYE, actualOutput);"},{"lineNumber":18,"author":{"gitId":"TheSpaceCuber"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"TheSpaceCuber"},"content":""},{"lineNumber":20,"author":{"gitId":"TheSpaceCuber"},"content":"    @Test"},{"lineNumber":21,"author":{"gitId":"TheSpaceCuber"},"content":"    public void parseCommandTest2() throws DukeException {"},{"lineNumber":22,"author":{"gitId":"TheSpaceCuber"},"content":"        Parser parser \u003d new Parser();"},{"lineNumber":23,"author":{"gitId":"TheSpaceCuber"},"content":"        Choice actualOutput \u003d parser.parseCommand(\"done 2\");"},{"lineNumber":24,"author":{"gitId":"TheSpaceCuber"},"content":"        assertEquals(Choice.DONE, actualOutput);"},{"lineNumber":25,"author":{"gitId":"TheSpaceCuber"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"TheSpaceCuber"},"content":"}"}],"authorContributionMap":{"TheSpaceCuber":26}},{"path":"src/test/java/utility/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TheSpaceCuber"},"content":"package utility;"},{"lineNumber":2,"author":{"gitId":"TheSpaceCuber"},"content":""},{"lineNumber":3,"author":{"gitId":"TheSpaceCuber"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"TheSpaceCuber"},"content":""},{"lineNumber":5,"author":{"gitId":"TheSpaceCuber"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"TheSpaceCuber"},"content":""},{"lineNumber":7,"author":{"gitId":"TheSpaceCuber"},"content":"public class StorageTest {"},{"lineNumber":8,"author":{"gitId":"TheSpaceCuber"},"content":"    @Test"},{"lineNumber":9,"author":{"gitId":"TheSpaceCuber"},"content":"    public void dummyTest() {"},{"lineNumber":10,"author":{"gitId":"TheSpaceCuber"},"content":"        assertEquals(2, 2);"},{"lineNumber":11,"author":{"gitId":"TheSpaceCuber"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"TheSpaceCuber"},"content":"}"}],"authorContributionMap":{"TheSpaceCuber":12}},{"path":"src/test/java/utility/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TheSpaceCuber"},"content":"package utility;"},{"lineNumber":2,"author":{"gitId":"TheSpaceCuber"},"content":""},{"lineNumber":3,"author":{"gitId":"TheSpaceCuber"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"TheSpaceCuber"},"content":""},{"lineNumber":5,"author":{"gitId":"TheSpaceCuber"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"TheSpaceCuber"},"content":""},{"lineNumber":7,"author":{"gitId":"TheSpaceCuber"},"content":"public class TaskListTest {"},{"lineNumber":8,"author":{"gitId":"TheSpaceCuber"},"content":"    @Test"},{"lineNumber":9,"author":{"gitId":"TheSpaceCuber"},"content":"    public void dummyTest() {"},{"lineNumber":10,"author":{"gitId":"TheSpaceCuber"},"content":"        assertEquals(2, 2);"},{"lineNumber":11,"author":{"gitId":"TheSpaceCuber"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"TheSpaceCuber"},"content":""},{"lineNumber":13,"author":{"gitId":"TheSpaceCuber"},"content":"    @Test"},{"lineNumber":14,"author":{"gitId":"TheSpaceCuber"},"content":"    public void getPositionTest() {"},{"lineNumber":15,"author":{"gitId":"TheSpaceCuber"},"content":"        int actualOutput \u003d TaskList.getPosition(\"random /\", \u0027/\u0027);"},{"lineNumber":16,"author":{"gitId":"TheSpaceCuber"},"content":"        assertEquals(7, actualOutput);"},{"lineNumber":17,"author":{"gitId":"TheSpaceCuber"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"TheSpaceCuber"},"content":"}"}],"authorContributionMap":{"TheSpaceCuber":18}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"TheSpaceCuber"},"content":"todo borrow book"},{"lineNumber":2,"author":{"gitId":"TheSpaceCuber"},"content":"deadline return book /by 08/10/2020 1800"},{"lineNumber":3,"author":{"gitId":"TheSpaceCuber"},"content":"list"},{"lineNumber":4,"author":{"gitId":"TheSpaceCuber"},"content":"event project meeting /at 08/10/2020 2000"},{"lineNumber":5,"author":{"gitId":"TheSpaceCuber"},"content":"delete 1"},{"lineNumber":6,"author":{"gitId":"TheSpaceCuber"},"content":"list"},{"lineNumber":7,"author":{"gitId":"TheSpaceCuber"},"content":"bye"}],"authorContributionMap":{"TheSpaceCuber":7}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"TheSpaceCuber"},"content":"@ECHO ON"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"TheSpaceCuber"},"content":"javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"},{"lineNumber":22,"author":{"gitId":"TheSpaceCuber"},"content":""},{"lineNumber":23,"author":{"gitId":"TheSpaceCuber"},"content":"PAUSE"}],"authorContributionMap":{"TheSpaceCuber":4,"-":19}}]
