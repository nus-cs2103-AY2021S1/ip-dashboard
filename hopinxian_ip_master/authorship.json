[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    mainClassName \u003d \"butler.Butler\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    archiveBaseName \u003d \"butler\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    toolVersion \u003d \u00278.29\u0027"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hopinxian": 3,
      "-": 43
    }
  },
  {
    "path": "data/tasks.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "incomplete todo something"
      }
    ],
    "authorContributionMap": {
      "hopinxian": 1
    }
  },
  {
    "path": "src/main/java/butler/Butler.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "package butler;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import butler.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import butler.exception.ButlerException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import butler.io.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import butler.io.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import butler.io.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import butler.task.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hopinxian"
        },
        "content": " * Represents a butler that manages a list of tasks for the user."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hopinxian"
        },
        "content": " *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hopinxian"
        },
        "content": " * Butler maintains a list of tasks across different sessions."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hopinxian"
        },
        "content": " * Data of the list of tasks are saved in hard disk within data/tasks.txt"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hopinxian"
        },
        "content": " * relative to the program file location."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hopinxian"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "public class Butler {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    private Butler(String filePath) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        } catch (ButlerException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        new Butler(\"data/tasks.txt\").run();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    private void run() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            } catch (ButlerException e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hopinxian": 55,
      "-": 1
    }
  },
  {
    "path": "src/main/java/butler/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "package butler.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import butler.exception.ButlerException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import butler.io.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import butler.io.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import butler.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import butler.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hopinxian"
        },
        "content": " * Represents a command to add a \u003ccode\u003eTask\u003c/code\u003e to a \u003ccode\u003eTaskList\u003c/code\u003e."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hopinxian"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    private Task task;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Constructs a command to add the given \u003ccode\u003etask\u003c/code\u003e."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @param task Task to be added."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public AddCommand(Task task) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Adds the task to the specified \u003ccode\u003etaskList\u003c/code\u003e."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Updates the list of tasks saved in the hard disk and"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * alerts the user that the task has been successfully added."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @param taskList List of tasks in which task is to be added to."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @param ui User interface to interact with user."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @param storage Storage which stores given \u003ccode\u003etaskList\u003c/code\u003e on hard disk."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @throws ButlerException if an error with saving the list of tasks occurs."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws ButlerException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        taskList.addTask(task);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        storage.storeTaskList(taskList);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        ui.showTaskAdded(task);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Returns a boolean whether this command is an \u003ccode\u003eExitCommand\u003c/code\u003e."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @return \u003ccode\u003efalse\u003c/code\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public Boolean isExit() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Returns the task this command is adding."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @return Task to be added by this command."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public Task getTask() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hopinxian": 59
    }
  },
  {
    "path": "src/main/java/butler/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "package butler.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import butler.exception.ButlerException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import butler.io.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import butler.io.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import butler.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hopinxian"
        },
        "content": " * Represents a command that interacts with a \u003ccode\u003eTaskList\u003c/code\u003e."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hopinxian"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Executes this command."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @param taskList List of tasks on which this command acts on."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @param ui User interface to interact with user."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @param storage Storage which stores the given \u003ccode\u003etaskList\u003c/code\u003e on hard disk."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @throws ButlerException if an error occurs in the execution of this command."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public abstract void execute(TaskList taskList, Ui ui, Storage storage) throws ButlerException;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Returns a boolean whether this command is an \u003ccode\u003eExitCommand\u003c/code\u003e."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @return \u003ccode\u003etrue\u003c/code\u003e if this is an \u003ccode\u003eExitCommand\u003c/code\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     *         else \u003ccode\u003efalse\u003c/code\u003e."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public abstract Boolean isExit();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hopinxian": 29
    }
  },
  {
    "path": "src/main/java/butler/command/CompleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "package butler.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import butler.exception.ButlerException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import butler.io.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import butler.io.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import butler.task.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hopinxian"
        },
        "content": " * Represents a command to mark some tasks as completed."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hopinxian"
        },
        "content": " * Able to mark multiple tasks as complete."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hopinxian"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "public class CompleteCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    private ArrayList\u003cInteger\u003e indexArray;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Constructs a command to mark some tasks as completed."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Tasks to be marked as completed are specified by \u003ccode\u003eindexArray\u003c/code\u003e."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * \u003ccode\u003eindexArray\u003c/code\u003e is a list of task indexes."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @param indexArray List of task indexes to be marked as completed."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public CompleteCommand(ArrayList\u003cInteger\u003e indexArray) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        this.indexArray \u003d indexArray;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Marks some tasks within the specified \u003ccode\u003etaskList\u003c/code\u003e as completed."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Updates the list of tasks saved in the hard disk and"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * alerts the user that the tasks have been marked as completed."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @param taskList List of tasks on which this command acts on."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @param ui User interface to interact with user."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @param storage Storage which stores given \u003ccode\u003etaskList\u003c/code\u003e on hard disk."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @throws ButlerException if an invalid index is given in \u003ccode\u003eindexArray\u003c/code\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     *                         or an error occurs in saving the list of tasks."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws ButlerException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        for (int i : indexArray) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            taskList.completeTask(i);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            storage.storeTaskList(taskList);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            ui.showTaskCompleted(i);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Returns a boolean whether this command is an \u003ccode\u003eExitCommand\u003c/code\u003e."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @return \u003ccode\u003efalse\u003c/code\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public Boolean isExit() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hopinxian": 57
    }
  },
  {
    "path": "src/main/java/butler/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "package butler.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import butler.exception.ButlerException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import butler.io.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import butler.io.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import butler.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hopinxian"
        },
        "content": " * Represents a command to delete a \u003ccode\u003eTask\u003c/code\u003e from a list of tasks."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hopinxian"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    private int taskIndex;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Constructs a command to delete a task with specified \u003ccode\u003etaskIndex\u003c/code\u003e."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @param taskIndex Index of task to be deleted."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public DeleteCommand(int taskIndex) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        this.taskIndex \u003d taskIndex;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Deletes the task specified by \u003ccode\u003etaskIndex\u003c/code\u003e from \u003ccode\u003etaskList\u003c/code\u003e."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Updates the list of tasks saved in the hard disk and"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * alerts the user that the task has been successfully added."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @param taskList List of tasks on which this command acts on."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @param ui User interface to interact with user."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @param storage Storage which stores given \u003ccode\u003etaskList\u003c/code\u003e on hard disk."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @throws ButlerException if \u003ccode\u003etaskIndex\u003c/code\u003e is an invalid index"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     *                         or an error occurs in saving the list of tasks."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws ButlerException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        taskList.deleteTask(taskIndex);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        storage.storeTaskList(taskList);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        ui.showTaskDeleted(taskIndex);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Returns a boolean whether this command is an \u003ccode\u003eExitCommand\u003c/code\u003e."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @return \u003ccode\u003efalse\u003c/code\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public Boolean isExit() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hopinxian": 50
    }
  },
  {
    "path": "src/main/java/butler/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "package butler.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import butler.exception.ButlerException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import butler.io.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import butler.io.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import butler.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hopinxian"
        },
        "content": " * Represents a command to exit Butler."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hopinxian"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Constructs a command to exit Butler."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public ExitCommand() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Alerts the user that Butler will be closed and updates the task list saved in the hard disk."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @param taskList List of tasks on which this command acts on."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @param ui User interface to interact with user."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @param storage Storage which stores given \u003ccode\u003etaskList\u003c/code\u003e on hard disk."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @throws ButlerException if an error occurs while saving the task list."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws ButlerException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        ui.showExit();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        storage.storeTaskList(taskList);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Returns a boolean whether this command is an \u003ccode\u003eExitCommand\u003c/code\u003e."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @return \u003ccode\u003etrue\u003c/code\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public Boolean isExit() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hopinxian": 42
    }
  },
  {
    "path": "src/main/java/butler/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "package butler.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import butler.io.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import butler.io.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import butler.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hopinxian"
        },
        "content": " * Represents a command to find tasks with specific words."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hopinxian"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    private String keyword;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Constructs a command to find tasks with the given \u003ccode\u003ekeyword\u003c/code\u003e."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @param keyword Keyword within tasks to be found."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public FindCommand(String keyword) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Finds tasks within the given \u003ccode\u003etaskList\u003c/code\u003e that have the \u003ccode\u003ekeyword\u003c/code\u003e."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Alerts users about the tasks that have been found using \u003ccode\u003eui\u003c/code\u003e."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @param taskList List of tasks on which this command acts on."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @param ui       User interface to interact with user."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @param storage  Storage which stores given \u003ccode\u003etaskList\u003c/code\u003e on hard disk."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        TaskList filteredTasks \u003d taskList.findTasks(keyword);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        ui.printFilteredTaskList(filteredTasks);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Returns a boolean whether this command is an \u003ccode\u003eExitCommand\u003c/code\u003e or not."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @return \u003ccode\u003efalse\u003c/code\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public Boolean isExit() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hopinxian": 45
    }
  },
  {
    "path": "src/main/java/butler/command/PrintCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "package butler.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import butler.io.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import butler.io.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import butler.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hopinxian"
        },
        "content": " * Represents a command to print out a list of \u003ccode\u003eTask\u003c/code\u003e."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hopinxian"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "public class PrintCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Constructs a command to print out a list of \u003ccode\u003eTask\u003c/code\u003e."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public PrintCommand() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Prints out the list of tasks in \u003ccode\u003etaskList\u003c/code\u003e using the user interface \u003ccode\u003eui\u003c/code\u003e."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @param taskList List of tasks on which this command acts on."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @param ui User interface to interact with user."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @param storage Storage which stores given \u003ccode\u003etaskList\u003c/code\u003e on hard disk."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        ui.printTaskList(taskList);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Returns a boolean whether this command is an \u003ccode\u003eExitCommand\u003c/code\u003e."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @return \u003ccode\u003efalse\u003c/code\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public Boolean isExit() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hopinxian": 39
    }
  },
  {
    "path": "src/main/java/butler/exception/ButlerException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "package butler.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hopinxian"
        },
        "content": " * Represents exceptions resulting from errors in using Butler."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hopinxian"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "public class ButlerException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public ButlerException(String errorMessage) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hopinxian": 12
    }
  },
  {
    "path": "src/main/java/butler/io/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "package butler.io;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import butler.command.AddCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import butler.command.Command;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import butler.command.CompleteCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import butler.command.DeleteCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import butler.command.ExitCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import butler.command.FindCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import butler.command.PrintCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import butler.exception.ButlerException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import butler.task.DeadlineTask;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import butler.task.EventTask;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import butler.task.Task;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import butler.task.ToDoTask;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hopinxian"
        },
        "content": " * Represents a parser to identify the content of the user input."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hopinxian"
        },
        "content": " * Throws \u003ccode\u003eButlerException\u003c/code\u003e when an invalid input is processed."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hopinxian"
        },
        "content": " */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Parses the given \u003ccode\u003einput\u003c/code\u003e to identify the command given."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @param input User input to be parsed."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @return Command represented by the \u003ccode\u003einput\u003c/code\u003e."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @throws ButlerException if the user input is invalid."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public static Command parse(String input) throws ButlerException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        String commandType \u003d input.split(\" \")[0];"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            return new PrintCommand();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        switch (commandType) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            String[] indexStringArray \u003d Arrays.copyOfRange(input.split(\" \"), 1, input.split(\" \").length);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            ArrayList\u003cInteger\u003e indexList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            // Convert string index to integer"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            for (String index : indexStringArray) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                    Integer i \u003d Integer.parseInt(index);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                    if (i \u003c 1) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                        throw new ButlerException(\"An invalid index was given.\\n\""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                                + \"Index must be positive.\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                        indexList.add(i);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                    throw new ButlerException(\"An invalid index was given.\\n\""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                            + index + \" is not an integer.\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            if (indexList.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                throw new ButlerException(\"No index was given . Please provide a valid index.\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            return new CompleteCommand(indexList);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            String stringIndex \u003d input.split(\" \")[1];"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                int index \u003d Integer.parseInt(stringIndex);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                return new DeleteCommand(index);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                throw new ButlerException(\"An invalid index was given.\\n\""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                        + stringIndex + \" is not an integer.\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                String taskDetails \u003d input.split(\" \", 2)[1];"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                Task task \u003d new ToDoTask(taskDetails);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                return new AddCommand(task);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                throw new ButlerException(\"Please add a description for the ToDo task.\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                String taskDetails \u003d input.split(\" \", 2)[1];"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                String summary \u003d taskDetails.split(\" /at \", 2)[0];"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                String date \u003d taskDetails.split(\" /at \", 2)[1];"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                LocalDate startDate \u003d LocalDate.parse(date.split(\" \")[0]);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                LocalDate endDate \u003d LocalDate.parse(date.split(\" \")[1]);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                Task task \u003d new EventTask(summary, startDate, endDate);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                return new AddCommand(task);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                throw new ButlerException(\"Please provide a summary and date of event.\\n\""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                        + \"Separate the dates from summary using \\\" /at \\\" and \""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                        + \"separate the two dates using a space.\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                throw new ButlerException(\"Please input a valid Date format.\\n\""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                        + \"Valid Date format is YYYY-MM-DD.\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                String taskDetails \u003d input.split(\" \", 2)[1];"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                String summary \u003d taskDetails.split(\" /by \", 2)[0];"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                String deadline \u003d taskDetails.split(\" /by \", 2)[1];"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                LocalDate formattedDeadline \u003d LocalDate.parse(deadline);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                Task task \u003d new DeadlineTask(summary, formattedDeadline);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                return new AddCommand(task);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                throw new ButlerException(\"Please provide a summary and deadline.\\n\""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                        + \"Separate the deadline from summary using \\\" /by \\\".\");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                throw new ButlerException(\"Please input a valid Date format.\\n\""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                        + \"Valid Date format is YYYY-MM-DD.\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                String keyword \u003d input.split(\" \", 2)[1];"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                return new FindCommand(keyword);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                throw new ButlerException(\"Please add some keywords to filter with.\");"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            throw new ButlerException(\"This is not a valid command type.\\n\""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                    + \"Valid commands start with list, done, delete, todo, deadline, event or bye.\");"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hopinxian": 147
    }
  },
  {
    "path": "src/main/java/butler/io/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "package butler.io;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import butler.command.AddCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import butler.exception.ButlerException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import butler.task.DeadlineTask;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import butler.task.EventTask;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import butler.task.Task;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import butler.task.TaskList;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import butler.task.TaskType;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hopinxian"
        },
        "content": " * Represents a storage responsible for reading and writing into the hard disk."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hopinxian"
        },
        "content": " * Reads a list of tasks from a given location in the hard disk and"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hopinxian"
        },
        "content": " * stores the list of tasks into the same location within the hard disk."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hopinxian"
        },
        "content": " */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Constructs a new storage with the given \u003ccode\u003efilePath\u003c/code\u003e."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * The storage will read and write into the file at the given \u003ccode\u003efilePath\u003c/code\u003e."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @param filePath File path of the file to be read from and written into."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Stores the given \u003ccode\u003etaskList\u003c/code\u003e within the \u003ccode\u003efilePath\u003c/code\u003e."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @param taskList List of tasks to be written into the hard disk."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @throws ButlerException if file is not detected."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public void storeTaskList(TaskList taskList) throws ButlerException {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            String fileText \u003d \"\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            int size \u003d taskList.getSize();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            for (int i \u003d 0; i \u003c size; i++) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                Task task \u003d taskList.getTask(i);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                String taskDetails;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                TaskType taskType \u003d task.getTaskType();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                if (task.isComplete()) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                    taskDetails \u003d \"complete\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                    taskDetails \u003d \"incomplete\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                switch (taskType) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                case TODO:"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                    taskDetails +\u003d \" todo \" + task.getSummary();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                case DEADLINE:"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                    DeadlineTask deadlineTask \u003d (DeadlineTask) task;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                    taskDetails +\u003d \" deadline \" + deadlineTask.getSummary()"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                            + \" /by \" + deadlineTask.getDeadline();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                case EVENT:"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                    EventTask eventTask \u003d (EventTask) task;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                    taskDetails +\u003d \" event \" + eventTask.getSummary()"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                            + \" /at \" + eventTask.getStartDate() + \" \""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                            + eventTask.getEndDate();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                    throw new ButlerException(\"Something is wrong. This place should be unreachable.\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                fileText +\u003d taskDetails + System.lineSeparator();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            fw.write(fileText);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            throw new ButlerException(\"There is an error with writing to the path. File is not detected.\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        } catch (ClassCastException e) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            throw new ButlerException(\"Something is wrong. ClassCastException should be unreachable.\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Loads the list of tasks from the \u003ccode\u003efilePath\u003c/code\u003e."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @return A list of tasks read from the \u003ccode\u003efilePath\u003c/code\u003e."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @throws ButlerException if there is an error within the content of the file."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws ButlerException {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            File f \u003d new File(filePath);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            Scanner s \u003d new Scanner(f);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            while (s.hasNext()) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                String input \u003d s.nextLine();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                String completionStatus \u003d input.split(\" \", 2)[0];"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                String details \u003d input.split(\" \", 2)[1];"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                AddCommand c \u003d (AddCommand) Parser.parse(details);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                Task task \u003d c.getTask();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                if (completionStatus.equals(\"complete\")) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                    task.markComplete();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                taskList.add(task);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            return taskList;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                Files.createDirectory(Paths.get(\"./data/\"));"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                Files.createFile(Paths.get(filePath));"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            } catch (IOException f) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                throw new ButlerException(\"Code should never reach here.\" + f.getMessage());"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            throw new ButlerException(\"There is no file to access.\");"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            throw new ButlerException(\"There is an error inside the file. The task has incomplete details.\");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        } catch (ClassCastException e) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            throw new ButlerException(\"Instead of tasks, a command was written into the file.\");"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        } catch (ButlerException e) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            throw new ButlerException(\"There is an error within the task in the file.\");"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hopinxian": 144
    }
  },
  {
    "path": "src/main/java/butler/io/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "package butler.io;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import butler.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import butler.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hopinxian"
        },
        "content": " * Represents a user interface that interacts with the user."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hopinxian"
        },
        "content": " * \u003ccode\u003eUi\u003c/code\u003e prints statements for the user and scans user input."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hopinxian"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    private Scanner sc;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Constructs a user interface."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Prints out a welcome message."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        String greetings \u003d \"Welcome! I am your personal manager, Butler.\\n\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                + \"How may I help you today?\\n\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        System.out.println(greetings);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Reads the user input."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Only one line of user input is read."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @return User input"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        return sc.nextLine();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Prints a dotted line separator."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        System.out.println(\"\\n------------------------------\\n\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Prints the \u003ccode\u003eerrorMessage\u003c/code\u003e given."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @param errorMessage Error message to be printed."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public void showError(String errorMessage) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        System.out.println(\"ERRORS: \" + errorMessage);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Prints the farewell message."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public void showExit() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        String farewells \u003d \"It is my honor to have served you.\\n\""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                + \"Please come back again.\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        System.out.println(farewells);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Prints the loading error message."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        String loadingErrorMessage \u003d \"tasks.txt file was not detected.\\n\""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                + \"A new task list will be created.\";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        System.out.println(loadingErrorMessage);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Prints a response message that a task is marked as completed."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * The task is specified by the \u003ccode\u003etaskIndex\u003c/code\u003e given."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @param taskIndex Index of task marked as completed."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public void showTaskCompleted(int taskIndex) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        String msg \u003d \"Task \" + taskIndex + \" has been marked as complete.\";"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        System.out.println(msg);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Prints a response message that a task is added."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Task that was added is specified by \u003ccode\u003etask\u003c/code\u003e."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @param task Task that was added."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public void showTaskAdded(Task task) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        String msg \u003d \"The following task has been added to task list.\\n\" + task;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        System.out.println(msg);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Prints out the list of tasks in the given \u003ccode\u003etaskList\u003c/code\u003e."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @param taskList List of tasks to be printed out."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public void printTaskList(TaskList taskList) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        String msg \u003d \"Here are your list of tasks.\\n\""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                + \"You have \" + taskList.getSize()"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                + (taskList.getSize() \u003e 1 ? \" tasks\" : \" task\")"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                + \" in total.\\n\";"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.getSize(); i++) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            msg +\u003d \"\\n\" + (i + 1) + \": \" + taskList.getTask(i);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        System.out.println(msg);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Prints out a response message that a task was deleted."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Deleted task is specified by \u003ccode\u003etaskIndex\u003c/code\u003e."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @param taskIndex Index of task that was deleted."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public void showTaskDeleted(int taskIndex) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        String msg \u003d \"Task \" + taskIndex + \" has been deleted.\";"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        System.out.println(msg);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Prints out the given filtered list of tasks."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @param taskList List of tasks to be printed out."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public void printFilteredTaskList(TaskList taskList) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        String msg \u003d \"Here are the matching tasks in your list.\\n\""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                + \"You have \" + taskList.getSize()"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                + (taskList.getSize() \u003e 1 ? \" tasks\" : \" task\")"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                + \" in total.\\n\";"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.getSize(); i++) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            msg +\u003d \"\\n\" + (i + 1) + \": \" + taskList.getTask(i);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        System.out.println(msg);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hopinxian": 139
    }
  },
  {
    "path": "src/main/java/butler/task/DeadlineTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "package butler.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hopinxian"
        },
        "content": " * Represents a task with a deadline."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hopinxian"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "public class DeadlineTask extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    private LocalDate deadline;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Constructs a deadline task with the given \u003ccode\u003esummary\u003c/code\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * and \u003ccode\u003edeadline\u003c/code\u003e."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @param summary Summary of this task."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @param deadline Deadline for this task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public DeadlineTask(String summary, LocalDate deadline) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        super(summary);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        this.taskType \u003d TaskType.DEADLINE;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    private String getDeadlineString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        return deadline.getDayOfMonth() + \" \""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                + deadline.getMonth().toString() + \" \""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                + deadline.getYear();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Gets the deadline of this deadline task."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @return Deadline of this deadline task."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public LocalDate getDeadline() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        return deadline;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Returns a string representation of this deadline task."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @return String representation of this deadline task."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + getDeadlineString() + \")\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hopinxian": 48
    }
  },
  {
    "path": "src/main/java/butler/task/EventTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "package butler.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hopinxian"
        },
        "content": " * Represents a task occurring over a period of time."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hopinxian"
        },
        "content": " * This task has a starting date and ending date."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hopinxian"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "public class EventTask extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    private LocalDate startDate;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    private LocalDate endDate;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Constructs an event task with the given \u003ccode\u003esummary\u003c/code\u003e,"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * \u003ccode\u003estartDate\u003c/code\u003e and \u003ccode\u003eendDate\u003c/code\u003e."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @param summary Summary of this task."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @param startDate Starting date of this task."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @param endDate Ending date of this task."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public EventTask(String summary, LocalDate startDate, LocalDate endDate) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        super(summary);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        this.startDate \u003d startDate;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        this.endDate \u003d endDate;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        this.taskType \u003d TaskType.EVENT;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Gets the time period of this event task in human readable format."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @return Time period of this event task."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public String getEventDuration() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        return startDate.getDayOfMonth() + \" \""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                + startDate.getMonth().toString() + \" \""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                + startDate.getYear() + \" to \""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                + endDate.getDayOfMonth() + \" \""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                + endDate.getMonth().toString() + \" \""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                + endDate.getYear();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Gets the starting date of this event task."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @return Starting date of this event task."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public LocalDate getStartDate() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        return startDate;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Gets the ending date of this event task."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @return Ending date of this event task."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public LocalDate getEndDate() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        return endDate;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Returns a string representation of this event task."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @return String representation of this event task."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        return \"[E]\" + super.toString() + \" (from: \" + getEventDuration() + \")\";"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hopinxian": 69
    }
  },
  {
    "path": "src/main/java/butler/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "package butler.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hopinxian"
        },
        "content": " * Represents a task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hopinxian"
        },
        "content": " * \u003ccode\u003eTask\u003c/code\u003e has a summary, a completion status and type."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hopinxian"
        },
        "content": " * All tasks are initialised as incomplete by default."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hopinxian"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    protected TaskType taskType;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    private String summary;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    private boolean isComplete;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Constructs an incomplete task with the given \u003ccode\u003esummmary\u003c/code\u003e."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @param summary Summary of this task."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public Task(String summary) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        this.summary \u003d summary;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        this.isComplete \u003d false;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        this.taskType \u003d null;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Gets the summary of this task."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @return Summary of this task."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public String getSummary() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        return summary;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Gets the boolean completion status of this task."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @return \u003ccode\u003etrue\u003c/code\u003e if this task is complete else \u003ccode\u003efalse\u003c/code\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public boolean isComplete() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        return isComplete;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Gets the task type of this task."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @return Task type."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public TaskType getTaskType() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        return taskType;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Marks this task as complete."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public void markComplete() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        isComplete \u003d true;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Returns a string representation of this task."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @return String representation of this task."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        return (isComplete ? \"[Y]\" : \"[N]\") + \" \" + getSummary();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hopinxian": 68
    }
  },
  {
    "path": "src/main/java/butler/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "package butler.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import butler.exception.ButlerException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hopinxian"
        },
        "content": " * Represents a list of tasks."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hopinxian"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    private ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Constructs a pre-filled list of tasks."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * The list of tasks is given by \u003ccode\u003etaskList\u003c/code\u003e."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @param taskList List of tasks to populate list with."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Constructs an empty list of tasks."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        this.taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Gets the number of tasks in this list of tasks."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @return Number of tasks in this list of tasks."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        return taskList.size();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Gets the task at the specified \u003ccode\u003eindex\u003c/code\u003e."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @param taskIndex Index of the task."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @return Task at the specified \u003ccode\u003eindex\u003c/code\u003e."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public Task getTask(int taskIndex) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        return taskList.get(taskIndex);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Adds the given \u003ccode\u003etask\u003c/code\u003e to this list of tasks."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @param task Task to be added to this list."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        taskList.add(task);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Marks the task at the specified \u003ccode\u003eindex\u003c/code\u003e as complete."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Valid indexes range from 1 to the size of this list of tasks."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @param taskIndex Index of the task to mark as completed."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @throws ButlerException if the index is out of range."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public void completeTask(int taskIndex) throws ButlerException {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            taskList.get(taskIndex - 1).markComplete();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            throw new ButlerException(\"Please give a valid index. \\\"\""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                    + taskIndex + \"\\\" is not a valid index.\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Removes the task at the specified \u003ccode\u003eindex\u003c/code\u003e from this list."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @param taskIndex Index of the task to be removed."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @throws ButlerException if the index is out of range."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public void deleteTask(int taskIndex) throws ButlerException {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            taskList.remove(taskIndex - 1);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            throw new ButlerException(\"Please give a valid index. \\\"\""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                    + taskIndex + \"\\\" is not a valid index.\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Produces a sub list of tasks that contains the given \u003ccode\u003ekeyword\u003c/code\u003e."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @param keyword Keyword by which tasks are filtered by."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @return A list of tasks that contains the given \u003ccode\u003ekeyword\u003c/code\u003e."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public TaskList findTasks(String keyword) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        ArrayList\u003cTask\u003e filteredList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        for (Task t : taskList) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            if (t.getSummary().contains(keyword)) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                filteredList.add(t);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        return new TaskList(filteredList);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hopinxian": 104
    }
  },
  {
    "path": "src/main/java/butler/task/TaskType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "package butler.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hopinxian"
        },
        "content": " * Enums for task types."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hopinxian"
        },
        "content": " * There are three possible task types which are deadline, event and to do."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hopinxian"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "public enum TaskType {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    TODO, DEADLINE, EVENT"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hopinxian": 9
    }
  },
  {
    "path": "src/main/java/butler/task/ToDoTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "package butler.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hopinxian"
        },
        "content": " * Represents a task to be done."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hopinxian"
        },
        "content": " * This task has a summary."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hopinxian"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "public class ToDoTask extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Constructs a task with the given \u003ccode\u003esummary\u003c/code\u003e."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @param summary Summary of this task."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public ToDoTask(String summary) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        super(summary);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        this.taskType \u003d TaskType.TODO;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Returns a string representation of this task."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @return String representation of this task."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hopinxian": 28
    }
  },
  {
    "path": "src/test/java/butler/command/ExitCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "package butler.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "public class ExitCommandTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public void isExitTest() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        ExitCommand c \u003d new ExitCommand();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        assertEquals(true, c.isExit());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hopinxian": 14
    }
  },
  {
    "path": "src/test/java/butler/command/PrintCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "package butler.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "public class PrintCommandTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public void isExitTest() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        PrintCommand c \u003d new PrintCommand();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        assertEquals(false, c.isExit());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hopinxian": 14
    }
  },
  {
    "path": "src/test/java/butler/exception/ButlerExceptionTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "package butler.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "public class ButlerExceptionTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public void getMessageTest() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        ButlerException e \u003d new ButlerException(\"Test Message\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        assertEquals(\"Test Message\", e.getMessage());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hopinxian": 14
    }
  },
  {
    "path": "src/test/java/butler/io/UiTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "package butler.io;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import java.io.ByteArrayOutputStream;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "public class UiTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public void showTaskDeletedTest() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        System.setOut(new PrintStream(outContent));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        String expectedOutput \u003d \"Task 1 has been deleted.\" + System.lineSeparator();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        ui.showTaskDeleted(1);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        assertEquals(expectedOutput, outContent.toString());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hopinxian": 22
    }
  },
  {
    "path": "src/test/java/butler/task/EventTaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "package butler.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "public class EventTaskTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public void getTimeTest() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        EventTask eventTask \u003d new EventTask(\"summary\", LocalDate.parse(\"2020-02-12\"), LocalDate.parse(\"2021-12-12\"));"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        assertEquals(\"12 FEBRUARY 2020 to 12 DECEMBER 2021\", eventTask.getEventDuration());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hopinxian": 16
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "list"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "todo sth"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "deadline do this /by this date"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "event conduct event /at this location"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "done 0 3"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "list"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "done 1 2 3 4"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "list"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "ekwjwl"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "deadline ewff /at ewsf"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "comment"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "event cwfwe /by"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "event ffwef /at"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "delete 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "delete 6"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "list"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "hopinxian": 19
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\Task.java ..\\src\\main\\java\\ToDoTask.java ..\\src\\main\\java\\EventTask.java ..\\src\\main\\java\\DeadlineTask.java ..\\src\\main\\java\\Butler.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "java -classpath ..\\bin Butler \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "hopinxian": 2,
      "-": 19
    }
  }
]
