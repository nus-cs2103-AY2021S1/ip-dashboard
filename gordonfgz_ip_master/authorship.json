[{"path":"Data.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"gordonfgz"},"content":"T | 0 | read book"},{"lineNumber":2,"author":{"gitId":"gordonfgz"},"content":"T | 0 | break free"},{"lineNumber":3,"author":{"gitId":"gordonfgz"},"content":"T | 0 | read book"},{"lineNumber":4,"author":{"gitId":"gordonfgz"},"content":"D | 0 | homeowkr | 1234-12-30"},{"lineNumber":5,"author":{"gitId":"gordonfgz"},"content":"D | 0 | homework | 1234-12-30"},{"lineNumber":6,"author":{"gitId":"gordonfgz"},"content":"D | 0 | homework | 2013-02-28"},{"lineNumber":7,"author":{"gitId":"gordonfgz"},"content":"D | 0 |  a      | 1234-12-30"}],"authorContributionMap":{"gordonfgz":7}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":15,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":16,"author":{"gitId":"gordonfgz"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":17,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":18,"author":{"gitId":"gordonfgz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":19,"author":{"gitId":"gordonfgz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":20,"author":{"gitId":"gordonfgz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":21,"author":{"gitId":"gordonfgz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":22,"author":{"gitId":"gordonfgz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":23,"author":{"gitId":"gordonfgz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":24,"author":{"gitId":"gordonfgz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":25,"author":{"gitId":"gordonfgz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":26,"author":{"gitId":"gordonfgz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":27,"author":{"gitId":"gordonfgz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":28,"author":{"gitId":"gordonfgz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":29,"author":{"gitId":"gordonfgz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":47,"author":{"gitId":"gordonfgz"},"content":"    mainClassName \u003d \"Launcher\""},{"lineNumber":48,"author":{"gitId":"-"},"content":"}"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\""},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":56,"author":{"gitId":"gordonfgz"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"gordonfgz":17,"-":44}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide"},{"lineNumber":2,"author":{"gitId":"gordonfgz"},"content":"![Image of Duke](https://https://github.com/gordonfgz/ip/blob/master/docs/Ui.png.png)"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features "},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"gordonfgz"},"content":"### Feature 1: Add Tasks "},{"lineNumber":6,"author":{"gitId":"gordonfgz"},"content":"There are 3 kinds of tasks enabled in this app."},{"lineNumber":7,"author":{"gitId":"gordonfgz"},"content":"1) Todos"},{"lineNumber":8,"author":{"gitId":"gordonfgz"},"content":"2) Deadlines"},{"lineNumber":9,"author":{"gitId":"gordonfgz"},"content":"3) Events"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"## Usage"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"gordonfgz"},"content":"### `{task type}` - Add task to list"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"gordonfgz"},"content":"Example of usage: "},{"lineNumber":16,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":17,"author":{"gitId":"gordonfgz"},"content":"1) todo read book"},{"lineNumber":18,"author":{"gitId":"gordonfgz"},"content":"2) deadline homework /by 2021-08-02"},{"lineNumber":19,"author":{"gitId":"gordonfgz"},"content":"3) event project meeting /at monday 2pm"},{"lineNumber":20,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":21,"author":{"gitId":"gordonfgz"},"content":"Expected outcome:"},{"lineNumber":22,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":23,"author":{"gitId":"gordonfgz"},"content":"`Got it. I\u0027ve added this task:`"},{"lineNumber":24,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":25,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":26,"author":{"gitId":"gordonfgz"},"content":"### Feature 2: Show all Tasks "},{"lineNumber":27,"author":{"gitId":"gordonfgz"},"content":"Show a list of tasks "},{"lineNumber":28,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":29,"author":{"gitId":"gordonfgz"},"content":"## Usage"},{"lineNumber":30,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":31,"author":{"gitId":"gordonfgz"},"content":"### `list` - Shows the current list of tasks"},{"lineNumber":32,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"gordonfgz"},"content":"Expected outcome:"},{"lineNumber":35,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":36,"author":{"gitId":"gordonfgz"},"content":"`Here are the tasks in your list:`"},{"lineNumber":37,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":38,"author":{"gitId":"gordonfgz"},"content":"### Feature 3: Mark tasks as done "},{"lineNumber":39,"author":{"gitId":"gordonfgz"},"content":"Ticks a task that is completed"},{"lineNumber":40,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":41,"author":{"gitId":"gordonfgz"},"content":"## Usage"},{"lineNumber":42,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":43,"author":{"gitId":"gordonfgz"},"content":"### `done` - Shows the current list of tasks"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"-"},"content":"Example of usage: "},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"gordonfgz"},"content":"1) done 1"},{"lineNumber":48,"author":{"gitId":"gordonfgz"},"content":"2) done 2"},{"lineNumber":49,"author":{"gitId":"gordonfgz"},"content":"3) done 3"},{"lineNumber":50,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":51,"author":{"gitId":"gordonfgz"},"content":"Expected outcome:"},{"lineNumber":52,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":53,"author":{"gitId":"gordonfgz"},"content":"`Task at chosen index will be marked with a tick`"},{"lineNumber":54,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":55,"author":{"gitId":"gordonfgz"},"content":"### Feature 4: Delete tasks"},{"lineNumber":56,"author":{"gitId":"gordonfgz"},"content":"Deletes a task on the list"},{"lineNumber":57,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":58,"author":{"gitId":"gordonfgz"},"content":"## Usage"},{"lineNumber":59,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":60,"author":{"gitId":"gordonfgz"},"content":"### `delete` - remove the tasks at a specific index"},{"lineNumber":61,"author":{"gitId":"-"},"content":""},{"lineNumber":62,"author":{"gitId":"-"},"content":"Example of usage: "},{"lineNumber":63,"author":{"gitId":"-"},"content":""},{"lineNumber":64,"author":{"gitId":"gordonfgz"},"content":"1) delete 1"},{"lineNumber":65,"author":{"gitId":"gordonfgz"},"content":"2) delete 2"},{"lineNumber":66,"author":{"gitId":"gordonfgz"},"content":"3) delete 3"},{"lineNumber":67,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":68,"author":{"gitId":"gordonfgz"},"content":"Expected outcome:"},{"lineNumber":69,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":70,"author":{"gitId":"gordonfgz"},"content":"`Task at chosen index will be deleted`"},{"lineNumber":71,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":72,"author":{"gitId":"gordonfgz"},"content":"### Feature 5: Remove duplicates"},{"lineNumber":73,"author":{"gitId":"gordonfgz"},"content":"Removes all duplicated tasks in the list"},{"lineNumber":74,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":75,"author":{"gitId":"gordonfgz"},"content":"## Usage"},{"lineNumber":76,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":77,"author":{"gitId":"gordonfgz"},"content":"### `remove duplicates` - remove duplicated tasks"},{"lineNumber":78,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":79,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":80,"author":{"gitId":"gordonfgz"},"content":"Expected outcome:"},{"lineNumber":81,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":82,"author":{"gitId":"gordonfgz"},"content":"`No dupes were found` If there are no duplicates present"},{"lineNumber":83,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":84,"author":{"gitId":"gordonfgz"},"content":"or "},{"lineNumber":85,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":86,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":87,"author":{"gitId":"gordonfgz"},"content":"`All duplicates have been removed` If there are duplicates present"},{"lineNumber":88,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":89,"author":{"gitId":"gordonfgz"},"content":"### Feature 6: Find task with keyword"},{"lineNumber":90,"author":{"gitId":"gordonfgz"},"content":"Returns tasks with the given keyword"},{"lineNumber":91,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":92,"author":{"gitId":"gordonfgz"},"content":"## Usage"},{"lineNumber":93,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":94,"author":{"gitId":"gordonfgz"},"content":"### `find` - find tasks with the provided keyword"},{"lineNumber":95,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":96,"author":{"gitId":"gordonfgz"},"content":"Example of usage: "},{"lineNumber":97,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":98,"author":{"gitId":"gordonfgz"},"content":"1) find read book"},{"lineNumber":99,"author":{"gitId":"gordonfgz"},"content":"2) find project meeting"},{"lineNumber":100,"author":{"gitId":"gordonfgz"},"content":"3) find homework"},{"lineNumber":101,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":102,"author":{"gitId":"-"},"content":""},{"lineNumber":103,"author":{"gitId":"-"},"content":"Expected outcome:"},{"lineNumber":104,"author":{"gitId":"-"},"content":""},{"lineNumber":105,"author":{"gitId":"gordonfgz"},"content":"`Here are the matching tasks on your list:` "},{"lineNumber":106,"author":{"gitId":"gordonfgz"},"content":"followed by a list of tasks with the keyword"}],"authorContributionMap":{"gordonfgz":89,"-":17}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gordonfgz"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"gordonfgz"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":3,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":4,"author":{"gitId":"gordonfgz"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"gordonfgz"},"content":" * Encapsulates a task with a deadline"},{"lineNumber":6,"author":{"gitId":"gordonfgz"},"content":" */"},{"lineNumber":7,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":8,"author":{"gitId":"gordonfgz"},"content":"public class Deadline extends Task {"},{"lineNumber":9,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":10,"author":{"gitId":"gordonfgz"},"content":"    protected LocalDate by;"},{"lineNumber":11,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":12,"author":{"gitId":"gordonfgz"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"gordonfgz"},"content":"     * Constructor"},{"lineNumber":14,"author":{"gitId":"gordonfgz"},"content":"     *"},{"lineNumber":15,"author":{"gitId":"gordonfgz"},"content":"     * @param description is the description of the task"},{"lineNumber":16,"author":{"gitId":"gordonfgz"},"content":"     * @param by is the due-date of the task"},{"lineNumber":17,"author":{"gitId":"gordonfgz"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"gordonfgz"},"content":"    public Deadline(String description, LocalDate by) {"},{"lineNumber":19,"author":{"gitId":"gordonfgz"},"content":"        super(description);"},{"lineNumber":20,"author":{"gitId":"gordonfgz"},"content":"        this.by \u003d by;"},{"lineNumber":21,"author":{"gitId":"gordonfgz"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":23,"author":{"gitId":"gordonfgz"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"gordonfgz"},"content":"     * Constructor"},{"lineNumber":25,"author":{"gitId":"gordonfgz"},"content":"     *"},{"lineNumber":26,"author":{"gitId":"gordonfgz"},"content":"     * @param description is the description of the task"},{"lineNumber":27,"author":{"gitId":"gordonfgz"},"content":"     * @param isDone is whether or not the task is done"},{"lineNumber":28,"author":{"gitId":"gordonfgz"},"content":"     * @param by is the due-date of the task"},{"lineNumber":29,"author":{"gitId":"gordonfgz"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"gordonfgz"},"content":"    public Deadline(String description, boolean isDone, LocalDate by) {"},{"lineNumber":31,"author":{"gitId":"gordonfgz"},"content":"        super(description, isDone);"},{"lineNumber":32,"author":{"gitId":"gordonfgz"},"content":"        this.by \u003d by;"},{"lineNumber":33,"author":{"gitId":"gordonfgz"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":35,"author":{"gitId":"gordonfgz"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"gordonfgz"},"content":"     * Gives the String representation of the Task"},{"lineNumber":37,"author":{"gitId":"gordonfgz"},"content":"     *"},{"lineNumber":38,"author":{"gitId":"gordonfgz"},"content":"     * @return a String"},{"lineNumber":39,"author":{"gitId":"gordonfgz"},"content":"     */"},{"lineNumber":40,"author":{"gitId":"gordonfgz"},"content":"    @Override"},{"lineNumber":41,"author":{"gitId":"gordonfgz"},"content":"    public String toString() {"},{"lineNumber":42,"author":{"gitId":"gordonfgz"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"},{"lineNumber":43,"author":{"gitId":"gordonfgz"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":45,"author":{"gitId":"gordonfgz"},"content":"    /**"},{"lineNumber":46,"author":{"gitId":"gordonfgz"},"content":"     * Checks if two Deadlines are equal"},{"lineNumber":47,"author":{"gitId":"gordonfgz"},"content":"     *"},{"lineNumber":48,"author":{"gitId":"gordonfgz"},"content":"     * @return a boolean"},{"lineNumber":49,"author":{"gitId":"gordonfgz"},"content":"     */"},{"lineNumber":50,"author":{"gitId":"gordonfgz"},"content":"    @Override"},{"lineNumber":51,"author":{"gitId":"gordonfgz"},"content":"    public boolean equals(Object object) {"},{"lineNumber":52,"author":{"gitId":"gordonfgz"},"content":"        if (this \u003d\u003d object) {"},{"lineNumber":53,"author":{"gitId":"gordonfgz"},"content":"            return true;"},{"lineNumber":54,"author":{"gitId":"gordonfgz"},"content":"        } else if (object instanceof Deadline) {"},{"lineNumber":55,"author":{"gitId":"gordonfgz"},"content":"            Deadline otherDeadline \u003d (Deadline) object;"},{"lineNumber":56,"author":{"gitId":"gordonfgz"},"content":"            return this.description.equals(otherDeadline.description)"},{"lineNumber":57,"author":{"gitId":"gordonfgz"},"content":"                    \u0026\u0026 this.isDone \u003d\u003d otherDeadline.isDone"},{"lineNumber":58,"author":{"gitId":"gordonfgz"},"content":"                    \u0026\u0026 this.by.equals(otherDeadline.by);"},{"lineNumber":59,"author":{"gitId":"gordonfgz"},"content":"        } else {"},{"lineNumber":60,"author":{"gitId":"gordonfgz"},"content":"            return false;"},{"lineNumber":61,"author":{"gitId":"gordonfgz"},"content":"        }"},{"lineNumber":62,"author":{"gitId":"gordonfgz"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"gordonfgz"},"content":"}"}],"authorContributionMap":{"gordonfgz":63}},{"path":"src/main/java/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gordonfgz"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"gordonfgz"},"content":"import java.util.Collections;"},{"lineNumber":3,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":4,"author":{"gitId":"gordonfgz"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":5,"author":{"gitId":"gordonfgz"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":6,"author":{"gitId":"gordonfgz"},"content":"import javafx.fxml.FXML;"},{"lineNumber":7,"author":{"gitId":"gordonfgz"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":8,"author":{"gitId":"gordonfgz"},"content":"import javafx.geometry.Pos;"},{"lineNumber":9,"author":{"gitId":"gordonfgz"},"content":"import javafx.scene.Node;"},{"lineNumber":10,"author":{"gitId":"gordonfgz"},"content":"import javafx.scene.control.Label;"},{"lineNumber":11,"author":{"gitId":"gordonfgz"},"content":"import javafx.scene.image.Image;"},{"lineNumber":12,"author":{"gitId":"gordonfgz"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":13,"author":{"gitId":"gordonfgz"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":14,"author":{"gitId":"gordonfgz"},"content":"import javafx.scene.shape.Circle;"},{"lineNumber":15,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":16,"author":{"gitId":"gordonfgz"},"content":"/**"},{"lineNumber":17,"author":{"gitId":"gordonfgz"},"content":" * An example of a custom control using FXML."},{"lineNumber":18,"author":{"gitId":"gordonfgz"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"},{"lineNumber":19,"author":{"gitId":"gordonfgz"},"content":" * containing text from the speaker."},{"lineNumber":20,"author":{"gitId":"gordonfgz"},"content":" */"},{"lineNumber":21,"author":{"gitId":"gordonfgz"},"content":"public class DialogBox extends HBox {"},{"lineNumber":22,"author":{"gitId":"gordonfgz"},"content":"    @FXML"},{"lineNumber":23,"author":{"gitId":"gordonfgz"},"content":"    private Label dialog;"},{"lineNumber":24,"author":{"gitId":"gordonfgz"},"content":"    @FXML"},{"lineNumber":25,"author":{"gitId":"gordonfgz"},"content":"    private ImageView displayPicture;"},{"lineNumber":26,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":27,"author":{"gitId":"gordonfgz"},"content":"    private DialogBox(String text, Image img) {"},{"lineNumber":28,"author":{"gitId":"gordonfgz"},"content":"        try {"},{"lineNumber":29,"author":{"gitId":"gordonfgz"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"},{"lineNumber":30,"author":{"gitId":"gordonfgz"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":31,"author":{"gitId":"gordonfgz"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":32,"author":{"gitId":"gordonfgz"},"content":"            fxmlLoader.load();"},{"lineNumber":33,"author":{"gitId":"gordonfgz"},"content":"        } catch (IOException e) {"},{"lineNumber":34,"author":{"gitId":"gordonfgz"},"content":"            e.printStackTrace();"},{"lineNumber":35,"author":{"gitId":"gordonfgz"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"gordonfgz"},"content":"        Circle circle \u003d new Circle(50,50,50);"},{"lineNumber":37,"author":{"gitId":"gordonfgz"},"content":"        displayPicture.setClip(circle);"},{"lineNumber":38,"author":{"gitId":"gordonfgz"},"content":"        dialog.setText(text);"},{"lineNumber":39,"author":{"gitId":"gordonfgz"},"content":"        displayPicture.setImage(img);"},{"lineNumber":40,"author":{"gitId":"gordonfgz"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":42,"author":{"gitId":"gordonfgz"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"gordonfgz"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":44,"author":{"gitId":"gordonfgz"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"gordonfgz"},"content":"    private void flip() {"},{"lineNumber":46,"author":{"gitId":"gordonfgz"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":47,"author":{"gitId":"gordonfgz"},"content":"        Collections.reverse(tmp);"},{"lineNumber":48,"author":{"gitId":"gordonfgz"},"content":"        getChildren().setAll(tmp);"},{"lineNumber":49,"author":{"gitId":"gordonfgz"},"content":"        setAlignment(Pos.TOP_LEFT);"},{"lineNumber":50,"author":{"gitId":"gordonfgz"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":52,"author":{"gitId":"gordonfgz"},"content":"    public static DialogBox getUserDialog(String text, Image img) {"},{"lineNumber":53,"author":{"gitId":"gordonfgz"},"content":"        return new DialogBox(text, img);"},{"lineNumber":54,"author":{"gitId":"gordonfgz"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":56,"author":{"gitId":"gordonfgz"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {"},{"lineNumber":57,"author":{"gitId":"gordonfgz"},"content":"        var db \u003d new DialogBox(text, img);"},{"lineNumber":58,"author":{"gitId":"gordonfgz"},"content":"        db.flip();"},{"lineNumber":59,"author":{"gitId":"gordonfgz"},"content":"        return db;"},{"lineNumber":60,"author":{"gitId":"gordonfgz"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"gordonfgz"},"content":"}"}],"authorContributionMap":{"gordonfgz":61}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gordonfgz"},"content":"import javafx.application.Application;"},{"lineNumber":2,"author":{"gitId":"gordonfgz"},"content":"import javafx.scene.Scene;"},{"lineNumber":3,"author":{"gitId":"gordonfgz"},"content":"import javafx.scene.control.Button;"},{"lineNumber":4,"author":{"gitId":"gordonfgz"},"content":"import javafx.scene.control.Label;"},{"lineNumber":5,"author":{"gitId":"gordonfgz"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":6,"author":{"gitId":"gordonfgz"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":7,"author":{"gitId":"gordonfgz"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":8,"author":{"gitId":"gordonfgz"},"content":"import javafx.scene.image.Image;"},{"lineNumber":9,"author":{"gitId":"gordonfgz"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":10,"author":{"gitId":"gordonfgz"},"content":"import javafx.scene.layout.Pane;"},{"lineNumber":11,"author":{"gitId":"gordonfgz"},"content":"import javafx.scene.layout.Region;"},{"lineNumber":12,"author":{"gitId":"gordonfgz"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":13,"author":{"gitId":"gordonfgz"},"content":"import javafx.stage.Stage;"},{"lineNumber":14,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":15,"author":{"gitId":"gordonfgz"},"content":"import java.awt.*;"},{"lineNumber":16,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":17,"author":{"gitId":"gordonfgz"},"content":"/**"},{"lineNumber":18,"author":{"gitId":"gordonfgz"},"content":" * Main body of application Duke"},{"lineNumber":19,"author":{"gitId":"gordonfgz"},"content":" */"},{"lineNumber":20,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":21,"author":{"gitId":"gordonfgz"},"content":"public class Duke  {"},{"lineNumber":22,"author":{"gitId":"gordonfgz"},"content":"    private Storage storage;"},{"lineNumber":23,"author":{"gitId":"gordonfgz"},"content":"    private TaskList tasks;"},{"lineNumber":24,"author":{"gitId":"gordonfgz"},"content":"    private Ui ui;"},{"lineNumber":25,"author":{"gitId":"gordonfgz"},"content":"    private Parser parser;"},{"lineNumber":26,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":27,"author":{"gitId":"gordonfgz"},"content":"    // javafx"},{"lineNumber":28,"author":{"gitId":"gordonfgz"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":29,"author":{"gitId":"gordonfgz"},"content":"    private VBox dialogContainer;"},{"lineNumber":30,"author":{"gitId":"gordonfgz"},"content":"    private TextField userInput;"},{"lineNumber":31,"author":{"gitId":"gordonfgz"},"content":"    private Button sendButton;"},{"lineNumber":32,"author":{"gitId":"gordonfgz"},"content":"    private Scene scene;"},{"lineNumber":33,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":34,"author":{"gitId":"gordonfgz"},"content":"    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"},{"lineNumber":35,"author":{"gitId":"gordonfgz"},"content":"    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"},{"lineNumber":36,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":37,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":38,"author":{"gitId":"gordonfgz"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"gordonfgz"},"content":"     * Constructor"},{"lineNumber":40,"author":{"gitId":"gordonfgz"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"gordonfgz"},"content":"    public Duke() {"},{"lineNumber":42,"author":{"gitId":"gordonfgz"},"content":"        this.start();"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":45,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":46,"author":{"gitId":"gordonfgz"},"content":"    /**"},{"lineNumber":47,"author":{"gitId":"gordonfgz"},"content":"     * Initialises the application"},{"lineNumber":48,"author":{"gitId":"gordonfgz"},"content":"     */"},{"lineNumber":49,"author":{"gitId":"gordonfgz"},"content":"    private void start() {"},{"lineNumber":50,"author":{"gitId":"gordonfgz"},"content":"        this.storage \u003d new Storage(\"Data.txt\");"},{"lineNumber":51,"author":{"gitId":"gordonfgz"},"content":"        this.tasks \u003d new TaskList();"},{"lineNumber":52,"author":{"gitId":"gordonfgz"},"content":"        this.ui \u003d new Ui();"},{"lineNumber":53,"author":{"gitId":"gordonfgz"},"content":"        this.parser \u003d new Parser(storage, ui, tasks);"},{"lineNumber":54,"author":{"gitId":"gordonfgz"},"content":"        this.storage.init();"},{"lineNumber":55,"author":{"gitId":"gordonfgz"},"content":"        storage.importSavedDataToList(tasks.get());"},{"lineNumber":56,"author":{"gitId":"gordonfgz"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":58,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":59,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":60,"author":{"gitId":"gordonfgz"},"content":"    /**"},{"lineNumber":61,"author":{"gitId":"gordonfgz"},"content":"     * You should have your own function to generate a response to user input."},{"lineNumber":62,"author":{"gitId":"gordonfgz"},"content":"     * Replace this stub with your completed method."},{"lineNumber":63,"author":{"gitId":"gordonfgz"},"content":"     */"},{"lineNumber":64,"author":{"gitId":"gordonfgz"},"content":"    protected String getResponse(String input) throws DukeException {"},{"lineNumber":65,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":66,"author":{"gitId":"gordonfgz"},"content":"        return this.parser.processInput(input);"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":69,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":70,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"gordonfgz":67,"-":3}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gordonfgz"},"content":"public class DukeException extends Exception {"},{"lineNumber":2,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":3,"author":{"gitId":"gordonfgz"},"content":"}"}],"authorContributionMap":{"gordonfgz":3}},{"path":"src/main/java/EmptyDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gordonfgz"},"content":"public class EmptyDescriptionException extends DukeException {"},{"lineNumber":2,"author":{"gitId":"gordonfgz"},"content":"    private String type;"},{"lineNumber":3,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":4,"author":{"gitId":"gordonfgz"},"content":"    public EmptyDescriptionException(String type) {"},{"lineNumber":5,"author":{"gitId":"gordonfgz"},"content":"        this.type \u003d type;"},{"lineNumber":6,"author":{"gitId":"gordonfgz"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":8,"author":{"gitId":"gordonfgz"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"gordonfgz"},"content":"     * Gives the String representation of the Exception"},{"lineNumber":10,"author":{"gitId":"gordonfgz"},"content":"     *"},{"lineNumber":11,"author":{"gitId":"gordonfgz"},"content":"     * @return a String"},{"lineNumber":12,"author":{"gitId":"gordonfgz"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"gordonfgz"},"content":"    public String toString() {"},{"lineNumber":14,"author":{"gitId":"gordonfgz"},"content":"        return \" OOPS!!! The description of a \" + type + \" cannot be empty.\";"},{"lineNumber":15,"author":{"gitId":"gordonfgz"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"gordonfgz"},"content":"}"}],"authorContributionMap":{"gordonfgz":16}},{"path":"src/main/java/EmptyListException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gordonfgz"},"content":"public class EmptyListException extends DukeException {"},{"lineNumber":2,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":3,"author":{"gitId":"gordonfgz"},"content":"    /**"},{"lineNumber":4,"author":{"gitId":"gordonfgz"},"content":"     * Gives the String representation of the Exception"},{"lineNumber":5,"author":{"gitId":"gordonfgz"},"content":"     *"},{"lineNumber":6,"author":{"gitId":"gordonfgz"},"content":"     * @return a String"},{"lineNumber":7,"author":{"gitId":"gordonfgz"},"content":"     */"},{"lineNumber":8,"author":{"gitId":"gordonfgz"},"content":"    public String toString() {"},{"lineNumber":9,"author":{"gitId":"gordonfgz"},"content":"        return \" OOPS!!! Your list is currently empty!\";"},{"lineNumber":10,"author":{"gitId":"gordonfgz"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"gordonfgz"},"content":"}"}],"authorContributionMap":{"gordonfgz":11}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gordonfgz"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"gordonfgz"},"content":" * Encapsulates a task with a specific time"},{"lineNumber":3,"author":{"gitId":"gordonfgz"},"content":" */"},{"lineNumber":4,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":5,"author":{"gitId":"gordonfgz"},"content":"public class Event extends Task {"},{"lineNumber":6,"author":{"gitId":"gordonfgz"},"content":"    protected String at;"},{"lineNumber":7,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":8,"author":{"gitId":"gordonfgz"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"gordonfgz"},"content":"     * Constructor"},{"lineNumber":10,"author":{"gitId":"gordonfgz"},"content":"     *"},{"lineNumber":11,"author":{"gitId":"gordonfgz"},"content":"     * @param description is the description of the task"},{"lineNumber":12,"author":{"gitId":"gordonfgz"},"content":"     * @param at is the time that the task is happening at"},{"lineNumber":13,"author":{"gitId":"gordonfgz"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"gordonfgz"},"content":"    public Event(String description, String at) {"},{"lineNumber":15,"author":{"gitId":"gordonfgz"},"content":"        super(description);"},{"lineNumber":16,"author":{"gitId":"gordonfgz"},"content":"        this.at \u003d at;"},{"lineNumber":17,"author":{"gitId":"gordonfgz"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":19,"author":{"gitId":"gordonfgz"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"gordonfgz"},"content":"     * Constructor"},{"lineNumber":21,"author":{"gitId":"gordonfgz"},"content":"     *"},{"lineNumber":22,"author":{"gitId":"gordonfgz"},"content":"     * @param description is the description of the task"},{"lineNumber":23,"author":{"gitId":"gordonfgz"},"content":"     * @param isDone is whether or not the task is done"},{"lineNumber":24,"author":{"gitId":"gordonfgz"},"content":"     * @param at is the time that the task is happening at"},{"lineNumber":25,"author":{"gitId":"gordonfgz"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"gordonfgz"},"content":"    public Event(String description, boolean isDone, String at) {"},{"lineNumber":27,"author":{"gitId":"gordonfgz"},"content":"        super(description, isDone);"},{"lineNumber":28,"author":{"gitId":"gordonfgz"},"content":"        this.at \u003d at;"},{"lineNumber":29,"author":{"gitId":"gordonfgz"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":31,"author":{"gitId":"gordonfgz"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"gordonfgz"},"content":"     * Gives the String representation of the Task"},{"lineNumber":33,"author":{"gitId":"gordonfgz"},"content":"     *"},{"lineNumber":34,"author":{"gitId":"gordonfgz"},"content":"     * @return a String"},{"lineNumber":35,"author":{"gitId":"gordonfgz"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"gordonfgz"},"content":"    @Override"},{"lineNumber":37,"author":{"gitId":"gordonfgz"},"content":"    public String toString() {"},{"lineNumber":38,"author":{"gitId":"gordonfgz"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"},{"lineNumber":39,"author":{"gitId":"gordonfgz"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":41,"author":{"gitId":"gordonfgz"},"content":"    /**"},{"lineNumber":42,"author":{"gitId":"gordonfgz"},"content":"     * Checks if two Events are equal"},{"lineNumber":43,"author":{"gitId":"gordonfgz"},"content":"     *"},{"lineNumber":44,"author":{"gitId":"gordonfgz"},"content":"     * @return a boolean"},{"lineNumber":45,"author":{"gitId":"gordonfgz"},"content":"     */"},{"lineNumber":46,"author":{"gitId":"gordonfgz"},"content":"    @Override"},{"lineNumber":47,"author":{"gitId":"gordonfgz"},"content":"    public boolean equals(Object object) {"},{"lineNumber":48,"author":{"gitId":"gordonfgz"},"content":"        if (this \u003d\u003d object) {"},{"lineNumber":49,"author":{"gitId":"gordonfgz"},"content":"            return true;"},{"lineNumber":50,"author":{"gitId":"gordonfgz"},"content":"        } else if (object instanceof Event) {"},{"lineNumber":51,"author":{"gitId":"gordonfgz"},"content":"            Event otherEvent \u003d (Event) object;"},{"lineNumber":52,"author":{"gitId":"gordonfgz"},"content":"            return this.description.equals(otherEvent.description)"},{"lineNumber":53,"author":{"gitId":"gordonfgz"},"content":"                    \u0026\u0026 this.isDone \u003d\u003d otherEvent.isDone"},{"lineNumber":54,"author":{"gitId":"gordonfgz"},"content":"                    \u0026\u0026 this.at.equals(otherEvent.at);"},{"lineNumber":55,"author":{"gitId":"gordonfgz"},"content":"        } else {"},{"lineNumber":56,"author":{"gitId":"gordonfgz"},"content":"            return false;"},{"lineNumber":57,"author":{"gitId":"gordonfgz"},"content":"        }"},{"lineNumber":58,"author":{"gitId":"gordonfgz"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"gordonfgz"},"content":"}"}],"authorContributionMap":{"gordonfgz":59}},{"path":"src/main/java/InputNotRecognisedException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gordonfgz"},"content":"public class InputNotRecognisedException extends DukeException {"},{"lineNumber":2,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":3,"author":{"gitId":"gordonfgz"},"content":"    /**"},{"lineNumber":4,"author":{"gitId":"gordonfgz"},"content":"     * Gives the String representation of the Exception"},{"lineNumber":5,"author":{"gitId":"gordonfgz"},"content":"     *"},{"lineNumber":6,"author":{"gitId":"gordonfgz"},"content":"     * @return a String"},{"lineNumber":7,"author":{"gitId":"gordonfgz"},"content":"     */"},{"lineNumber":8,"author":{"gitId":"gordonfgz"},"content":"    public String toString() {"},{"lineNumber":9,"author":{"gitId":"gordonfgz"},"content":"        return \" OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";"},{"lineNumber":10,"author":{"gitId":"gordonfgz"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"gordonfgz"},"content":"}"}],"authorContributionMap":{"gordonfgz":11}},{"path":"src/main/java/InvalidListIndexException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gordonfgz"},"content":"public class InvalidListIndexException extends DukeException {"},{"lineNumber":2,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":3,"author":{"gitId":"gordonfgz"},"content":"    /**"},{"lineNumber":4,"author":{"gitId":"gordonfgz"},"content":"     * Gives the String representation of the Exception"},{"lineNumber":5,"author":{"gitId":"gordonfgz"},"content":"     *"},{"lineNumber":6,"author":{"gitId":"gordonfgz"},"content":"     * @return a String"},{"lineNumber":7,"author":{"gitId":"gordonfgz"},"content":"     */"},{"lineNumber":8,"author":{"gitId":"gordonfgz"},"content":"    public String toString() {"},{"lineNumber":9,"author":{"gitId":"gordonfgz"},"content":"        return \" OOPS!!! The index you\u0027ve chosen is invalid\";"},{"lineNumber":10,"author":{"gitId":"gordonfgz"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"gordonfgz"},"content":"}"}],"authorContributionMap":{"gordonfgz":11}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gordonfgz"},"content":"import javafx.application.Application;"},{"lineNumber":2,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":3,"author":{"gitId":"gordonfgz"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"gordonfgz"},"content":" * A launcher class to workaround classpath issues."},{"lineNumber":5,"author":{"gitId":"gordonfgz"},"content":" */"},{"lineNumber":6,"author":{"gitId":"gordonfgz"},"content":"public class Launcher {"},{"lineNumber":7,"author":{"gitId":"gordonfgz"},"content":"    public static void main(String[] args) {"},{"lineNumber":8,"author":{"gitId":"gordonfgz"},"content":"        Application.launch(Main.class, args);"},{"lineNumber":9,"author":{"gitId":"gordonfgz"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"gordonfgz"},"content":"}"}],"authorContributionMap":{"gordonfgz":10}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gordonfgz"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":3,"author":{"gitId":"gordonfgz"},"content":"import javafx.application.Application;"},{"lineNumber":4,"author":{"gitId":"gordonfgz"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":5,"author":{"gitId":"gordonfgz"},"content":"import javafx.scene.Scene;"},{"lineNumber":6,"author":{"gitId":"gordonfgz"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":7,"author":{"gitId":"gordonfgz"},"content":"import javafx.stage.Stage;"},{"lineNumber":8,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":9,"author":{"gitId":"gordonfgz"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"gordonfgz"},"content":" * A GUI for Duke using FXML."},{"lineNumber":11,"author":{"gitId":"gordonfgz"},"content":" */"},{"lineNumber":12,"author":{"gitId":"gordonfgz"},"content":"public class Main extends Application {"},{"lineNumber":13,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":14,"author":{"gitId":"gordonfgz"},"content":"    private Duke duke \u003d new Duke();"},{"lineNumber":15,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":16,"author":{"gitId":"gordonfgz"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"gordonfgz"},"content":"    public void start(Stage stage) {"},{"lineNumber":18,"author":{"gitId":"gordonfgz"},"content":"        try {"},{"lineNumber":19,"author":{"gitId":"gordonfgz"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":20,"author":{"gitId":"gordonfgz"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":21,"author":{"gitId":"gordonfgz"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":22,"author":{"gitId":"gordonfgz"},"content":"            stage.setScene(scene);"},{"lineNumber":23,"author":{"gitId":"gordonfgz"},"content":"            stage.setTitle(\"Duke\");"},{"lineNumber":24,"author":{"gitId":"gordonfgz"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"},{"lineNumber":25,"author":{"gitId":"gordonfgz"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().sayHi();"},{"lineNumber":26,"author":{"gitId":"gordonfgz"},"content":"            stage.show();"},{"lineNumber":27,"author":{"gitId":"gordonfgz"},"content":"        } catch (IOException e) {"},{"lineNumber":28,"author":{"gitId":"gordonfgz"},"content":"            e.printStackTrace();"},{"lineNumber":29,"author":{"gitId":"gordonfgz"},"content":"        }"},{"lineNumber":30,"author":{"gitId":"gordonfgz"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"gordonfgz"},"content":"}"}],"authorContributionMap":{"gordonfgz":31}},{"path":"src/main/java/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gordonfgz"},"content":"import javafx.fxml.FXML;"},{"lineNumber":2,"author":{"gitId":"gordonfgz"},"content":"import javafx.geometry.Insets;"},{"lineNumber":3,"author":{"gitId":"gordonfgz"},"content":"import javafx.scene.control.Button;"},{"lineNumber":4,"author":{"gitId":"gordonfgz"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":5,"author":{"gitId":"gordonfgz"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":6,"author":{"gitId":"gordonfgz"},"content":"import javafx.scene.image.Image;"},{"lineNumber":7,"author":{"gitId":"gordonfgz"},"content":"import javafx.scene.layout.*;"},{"lineNumber":8,"author":{"gitId":"gordonfgz"},"content":"import javafx.scene.paint.Color;"},{"lineNumber":9,"author":{"gitId":"gordonfgz"},"content":"import javafx.scene.paint.CycleMethod;"},{"lineNumber":10,"author":{"gitId":"gordonfgz"},"content":"import javafx.scene.paint.LinearGradient;"},{"lineNumber":11,"author":{"gitId":"gordonfgz"},"content":"import javafx.scene.paint.Stop;"},{"lineNumber":12,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":13,"author":{"gitId":"gordonfgz"},"content":"/**"},{"lineNumber":14,"author":{"gitId":"gordonfgz"},"content":" * Controller for MainWindow. Provides the layout for the other controls."},{"lineNumber":15,"author":{"gitId":"gordonfgz"},"content":" */"},{"lineNumber":16,"author":{"gitId":"gordonfgz"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":17,"author":{"gitId":"gordonfgz"},"content":"    @FXML"},{"lineNumber":18,"author":{"gitId":"gordonfgz"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":19,"author":{"gitId":"gordonfgz"},"content":"    @FXML"},{"lineNumber":20,"author":{"gitId":"gordonfgz"},"content":"    private VBox dialogContainer;"},{"lineNumber":21,"author":{"gitId":"gordonfgz"},"content":"    @FXML"},{"lineNumber":22,"author":{"gitId":"gordonfgz"},"content":"    private TextField userInput;"},{"lineNumber":23,"author":{"gitId":"gordonfgz"},"content":"    @FXML"},{"lineNumber":24,"author":{"gitId":"gordonfgz"},"content":"    private Button sendButton;"},{"lineNumber":25,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":26,"author":{"gitId":"gordonfgz"},"content":"    private Duke duke;"},{"lineNumber":27,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":28,"author":{"gitId":"gordonfgz"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"},{"lineNumber":29,"author":{"gitId":"gordonfgz"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"},{"lineNumber":30,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":31,"author":{"gitId":"gordonfgz"},"content":"    @FXML"},{"lineNumber":32,"author":{"gitId":"gordonfgz"},"content":"    public void initialize() {"},{"lineNumber":33,"author":{"gitId":"gordonfgz"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":34,"author":{"gitId":"gordonfgz"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":36,"author":{"gitId":"gordonfgz"},"content":"    public void setDuke(Duke d) {"},{"lineNumber":37,"author":{"gitId":"gordonfgz"},"content":"        duke \u003d d;"},{"lineNumber":38,"author":{"gitId":"gordonfgz"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":40,"author":{"gitId":"gordonfgz"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"gordonfgz"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"},{"lineNumber":42,"author":{"gitId":"gordonfgz"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":43,"author":{"gitId":"gordonfgz"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"gordonfgz"},"content":"    @FXML"},{"lineNumber":45,"author":{"gitId":"gordonfgz"},"content":"    private void handleUserInput() {"},{"lineNumber":46,"author":{"gitId":"gordonfgz"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":47,"author":{"gitId":"gordonfgz"},"content":"        String response \u003d null;"},{"lineNumber":48,"author":{"gitId":"gordonfgz"},"content":"        if (input.equals(\"bye\")) {"},{"lineNumber":49,"author":{"gitId":"gordonfgz"},"content":"            System.exit(0);"},{"lineNumber":50,"author":{"gitId":"gordonfgz"},"content":"        }"},{"lineNumber":51,"author":{"gitId":"gordonfgz"},"content":"        try {"},{"lineNumber":52,"author":{"gitId":"gordonfgz"},"content":"            response \u003d duke.getResponse(input);"},{"lineNumber":53,"author":{"gitId":"gordonfgz"},"content":"            dialogContainer.getChildren().addAll("},{"lineNumber":54,"author":{"gitId":"gordonfgz"},"content":"                    DialogBox.getUserDialog(input, userImage),"},{"lineNumber":55,"author":{"gitId":"gordonfgz"},"content":"                    DialogBox.getDukeDialog(response, dukeImage)"},{"lineNumber":56,"author":{"gitId":"gordonfgz"},"content":"            );"},{"lineNumber":57,"author":{"gitId":"gordonfgz"},"content":"            userInput.clear();"},{"lineNumber":58,"author":{"gitId":"gordonfgz"},"content":"        } catch (DukeException e) {"},{"lineNumber":59,"author":{"gitId":"gordonfgz"},"content":"            e.printStackTrace();"},{"lineNumber":60,"author":{"gitId":"gordonfgz"},"content":"        }"},{"lineNumber":61,"author":{"gitId":"gordonfgz"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":63,"author":{"gitId":"gordonfgz"},"content":"    /**"},{"lineNumber":64,"author":{"gitId":"gordonfgz"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"},{"lineNumber":65,"author":{"gitId":"gordonfgz"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":66,"author":{"gitId":"gordonfgz"},"content":"     */"},{"lineNumber":67,"author":{"gitId":"gordonfgz"},"content":"    @FXML"},{"lineNumber":68,"author":{"gitId":"gordonfgz"},"content":"    protected void sayHi() {"},{"lineNumber":69,"author":{"gitId":"gordonfgz"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":70,"author":{"gitId":"gordonfgz"},"content":"                DialogBox.getDukeDialog(\"Hi! What can i do for you?\", dukeImage));"},{"lineNumber":71,"author":{"gitId":"gordonfgz"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"gordonfgz"},"content":"}"}],"authorContributionMap":{"gordonfgz":72}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gordonfgz"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"gordonfgz"},"content":"import java.util.ArrayList;"},{"lineNumber":3,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":4,"author":{"gitId":"gordonfgz"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"gordonfgz"},"content":" * Encapsulates a Parser"},{"lineNumber":6,"author":{"gitId":"gordonfgz"},"content":" * Deals with making sense of the user command"},{"lineNumber":7,"author":{"gitId":"gordonfgz"},"content":" */"},{"lineNumber":8,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":9,"author":{"gitId":"gordonfgz"},"content":"public class Parser {"},{"lineNumber":10,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":11,"author":{"gitId":"gordonfgz"},"content":"    protected Storage storage;"},{"lineNumber":12,"author":{"gitId":"gordonfgz"},"content":"    protected Ui ui;"},{"lineNumber":13,"author":{"gitId":"gordonfgz"},"content":"    protected TaskList tasks;"},{"lineNumber":14,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":15,"author":{"gitId":"gordonfgz"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"gordonfgz"},"content":"     * Constructor"},{"lineNumber":17,"author":{"gitId":"gordonfgz"},"content":"     *"},{"lineNumber":18,"author":{"gitId":"gordonfgz"},"content":"     * @param storage is the storage that stores the data file"},{"lineNumber":19,"author":{"gitId":"gordonfgz"},"content":"     * @param ui is the user interface used with duke"},{"lineNumber":20,"author":{"gitId":"gordonfgz"},"content":"     * @param list is the TaskList that will be updated"},{"lineNumber":21,"author":{"gitId":"gordonfgz"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"gordonfgz"},"content":"    public Parser(Storage storage, Ui ui, TaskList list) {"},{"lineNumber":23,"author":{"gitId":"gordonfgz"},"content":"        this.storage \u003d storage;"},{"lineNumber":24,"author":{"gitId":"gordonfgz"},"content":"        this.ui \u003d ui;"},{"lineNumber":25,"author":{"gitId":"gordonfgz"},"content":"        this.tasks \u003d list;"},{"lineNumber":26,"author":{"gitId":"gordonfgz"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":28,"author":{"gitId":"gordonfgz"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"gordonfgz"},"content":"     * Processes the user\u0027s inputs"},{"lineNumber":30,"author":{"gitId":"gordonfgz"},"content":"     *"},{"lineNumber":31,"author":{"gitId":"gordonfgz"},"content":"     * @param input is the user\u0027s input in String form"},{"lineNumber":32,"author":{"gitId":"gordonfgz"},"content":"     * @throws DukeException"},{"lineNumber":33,"author":{"gitId":"gordonfgz"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"gordonfgz"},"content":"    protected String processInput(String input) throws DukeException {"},{"lineNumber":35,"author":{"gitId":"gordonfgz"},"content":"        int stringLength \u003d input.length();"},{"lineNumber":36,"author":{"gitId":"gordonfgz"},"content":"        assert stringLength \u003e\u003d 1 : \"Input cannot be empty\";"},{"lineNumber":37,"author":{"gitId":"gordonfgz"},"content":"        if (input.equals(\"list\")) {"},{"lineNumber":38,"author":{"gitId":"gordonfgz"},"content":"            return this.provideList();"},{"lineNumber":39,"author":{"gitId":"gordonfgz"},"content":"        } else if (input.startsWith(\"done\")) {"},{"lineNumber":40,"author":{"gitId":"gordonfgz"},"content":"            return this.markAsDone(input);"},{"lineNumber":41,"author":{"gitId":"gordonfgz"},"content":"        } else if (input.startsWith(\"todo\") || input.startsWith(\"deadline\") || input.startsWith(\"event\")) {"},{"lineNumber":42,"author":{"gitId":"gordonfgz"},"content":"            return this.newTaskEntry(input);"},{"lineNumber":43,"author":{"gitId":"gordonfgz"},"content":"        } else if (input.equals(\"bye\")) {"},{"lineNumber":44,"author":{"gitId":"gordonfgz"},"content":"            return this.end();"},{"lineNumber":45,"author":{"gitId":"gordonfgz"},"content":"        } else if (input.startsWith(\"delete\")) {"},{"lineNumber":46,"author":{"gitId":"gordonfgz"},"content":"            return this.delete(input);"},{"lineNumber":47,"author":{"gitId":"gordonfgz"},"content":"        } else if (input.startsWith(\"find\")) {"},{"lineNumber":48,"author":{"gitId":"gordonfgz"},"content":"            return this.find(input);"},{"lineNumber":49,"author":{"gitId":"gordonfgz"},"content":"        } else if (input.equals(\"remove duplicates\")) {"},{"lineNumber":50,"author":{"gitId":"gordonfgz"},"content":"            return this.removeDupes();"},{"lineNumber":51,"author":{"gitId":"gordonfgz"},"content":"        } else {"},{"lineNumber":52,"author":{"gitId":"gordonfgz"},"content":"            return new InputNotRecognisedException().toString();"},{"lineNumber":53,"author":{"gitId":"gordonfgz"},"content":"        }"},{"lineNumber":54,"author":{"gitId":"gordonfgz"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":56,"author":{"gitId":"gordonfgz"},"content":"    /**"},{"lineNumber":57,"author":{"gitId":"gordonfgz"},"content":"     * Compares two tasks"},{"lineNumber":58,"author":{"gitId":"gordonfgz"},"content":"     *"},{"lineNumber":59,"author":{"gitId":"gordonfgz"},"content":"     * @return a boolean denoting if they are equal"},{"lineNumber":60,"author":{"gitId":"gordonfgz"},"content":"     */"},{"lineNumber":61,"author":{"gitId":"gordonfgz"},"content":"    public boolean areEqualTasks(Task t1, Task t2) {"},{"lineNumber":62,"author":{"gitId":"gordonfgz"},"content":"        if (t1 instanceof Todo \u0026\u0026 t2 instanceof Todo) {"},{"lineNumber":63,"author":{"gitId":"gordonfgz"},"content":"            Todo thisTask \u003d (Todo) t1;"},{"lineNumber":64,"author":{"gitId":"gordonfgz"},"content":"            Todo otherTask \u003d (Todo) t2;"},{"lineNumber":65,"author":{"gitId":"gordonfgz"},"content":"            return t1.equals(t2);"},{"lineNumber":66,"author":{"gitId":"gordonfgz"},"content":"        } else if (t1 instanceof Deadline \u0026\u0026 t2 instanceof Deadline) {"},{"lineNumber":67,"author":{"gitId":"gordonfgz"},"content":"            Deadline thisTask \u003d (Deadline) t1;"},{"lineNumber":68,"author":{"gitId":"gordonfgz"},"content":"            Deadline otherTask \u003d (Deadline) t2;"},{"lineNumber":69,"author":{"gitId":"gordonfgz"},"content":"            return t1.equals(t2);"},{"lineNumber":70,"author":{"gitId":"gordonfgz"},"content":"        } else if (t1 instanceof Event \u0026\u0026 t2 instanceof Event) {"},{"lineNumber":71,"author":{"gitId":"gordonfgz"},"content":"            Event thisTask \u003d (Event) t1;"},{"lineNumber":72,"author":{"gitId":"gordonfgz"},"content":"            Event otherTask \u003d (Event) t2;"},{"lineNumber":73,"author":{"gitId":"gordonfgz"},"content":"            return t1.equals(t2);"},{"lineNumber":74,"author":{"gitId":"gordonfgz"},"content":"        } else {"},{"lineNumber":75,"author":{"gitId":"gordonfgz"},"content":"            return false;"},{"lineNumber":76,"author":{"gitId":"gordonfgz"},"content":"        }"},{"lineNumber":77,"author":{"gitId":"gordonfgz"},"content":"    }"},{"lineNumber":78,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":79,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":80,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":81,"author":{"gitId":"gordonfgz"},"content":"    /**"},{"lineNumber":82,"author":{"gitId":"gordonfgz"},"content":"     * Finds and remove duplicated Tasks"},{"lineNumber":83,"author":{"gitId":"gordonfgz"},"content":"     *"},{"lineNumber":84,"author":{"gitId":"gordonfgz"},"content":"     * @return a String message"},{"lineNumber":85,"author":{"gitId":"gordonfgz"},"content":"     */"},{"lineNumber":86,"author":{"gitId":"gordonfgz"},"content":"    private String removeDupes() {"},{"lineNumber":87,"author":{"gitId":"gordonfgz"},"content":"        boolean needsUpdate \u003d false;"},{"lineNumber":88,"author":{"gitId":"gordonfgz"},"content":"        for (int i \u003d 0; i \u003c tasks.length() - 1; i++) {"},{"lineNumber":89,"author":{"gitId":"gordonfgz"},"content":"            Task focalTask \u003d tasks.get(i);"},{"lineNumber":90,"author":{"gitId":"gordonfgz"},"content":"            for (int j \u003d 0; j \u003c tasks.length(); j++) {"},{"lineNumber":91,"author":{"gitId":"gordonfgz"},"content":"                if (j !\u003d i) {"},{"lineNumber":92,"author":{"gitId":"gordonfgz"},"content":"                    Task otherTask \u003d tasks.get(j);"},{"lineNumber":93,"author":{"gitId":"gordonfgz"},"content":"                    if (areEqualTasks(focalTask, otherTask)) {"},{"lineNumber":94,"author":{"gitId":"gordonfgz"},"content":"                        needsUpdate \u003d true;"},{"lineNumber":95,"author":{"gitId":"gordonfgz"},"content":"                        tasks.remove(otherTask);"},{"lineNumber":96,"author":{"gitId":"gordonfgz"},"content":"                    }"},{"lineNumber":97,"author":{"gitId":"gordonfgz"},"content":"                }"},{"lineNumber":98,"author":{"gitId":"gordonfgz"},"content":"            }"},{"lineNumber":99,"author":{"gitId":"gordonfgz"},"content":"        }"},{"lineNumber":100,"author":{"gitId":"gordonfgz"},"content":"        if (needsUpdate) {"},{"lineNumber":101,"author":{"gitId":"gordonfgz"},"content":"            this.storage.saveListToData(tasks.get());"},{"lineNumber":102,"author":{"gitId":"gordonfgz"},"content":"            return this.ui.removedDupes();"},{"lineNumber":103,"author":{"gitId":"gordonfgz"},"content":"        } else {"},{"lineNumber":104,"author":{"gitId":"gordonfgz"},"content":"            return this.ui.noDupes();"},{"lineNumber":105,"author":{"gitId":"gordonfgz"},"content":"        }"},{"lineNumber":106,"author":{"gitId":"gordonfgz"},"content":"    }"},{"lineNumber":107,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":108,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":109,"author":{"gitId":"gordonfgz"},"content":"    /**"},{"lineNumber":110,"author":{"gitId":"gordonfgz"},"content":"     * Finds and prints out Tasks with the keywords provided by the user"},{"lineNumber":111,"author":{"gitId":"gordonfgz"},"content":"     *"},{"lineNumber":112,"author":{"gitId":"gordonfgz"},"content":"     * @param input the user\u0027s input in String form"},{"lineNumber":113,"author":{"gitId":"gordonfgz"},"content":"     * @return a String Message"},{"lineNumber":114,"author":{"gitId":"gordonfgz"},"content":"     */"},{"lineNumber":115,"author":{"gitId":"gordonfgz"},"content":"    private String find(String input) {"},{"lineNumber":116,"author":{"gitId":"gordonfgz"},"content":"        int stringLength \u003d input.length();"},{"lineNumber":117,"author":{"gitId":"gordonfgz"},"content":"        assert stringLength \u003e\u003d 1 : \"Input cannot be empty\";"},{"lineNumber":118,"author":{"gitId":"gordonfgz"},"content":"        String keyword \u003d input.substring(5);"},{"lineNumber":119,"author":{"gitId":"gordonfgz"},"content":"        ArrayList\u003cTask\u003e temp \u003d new ArrayList\u003c\u003e();"},{"lineNumber":120,"author":{"gitId":"gordonfgz"},"content":"        for (int i \u003d 0; i \u003c tasks.length(); i++) {"},{"lineNumber":121,"author":{"gitId":"gordonfgz"},"content":"            Task currentTask \u003d tasks.get(i);"},{"lineNumber":122,"author":{"gitId":"gordonfgz"},"content":"            System.out.println(currentTask);"},{"lineNumber":123,"author":{"gitId":"gordonfgz"},"content":"            if (currentTask.getDescription().contains(keyword)) {"},{"lineNumber":124,"author":{"gitId":"gordonfgz"},"content":"                temp.add(currentTask);"},{"lineNumber":125,"author":{"gitId":"gordonfgz"},"content":"            }"},{"lineNumber":126,"author":{"gitId":"gordonfgz"},"content":"        }"},{"lineNumber":127,"author":{"gitId":"gordonfgz"},"content":"        String output \u003d \"\";"},{"lineNumber":128,"author":{"gitId":"gordonfgz"},"content":"        for (int i \u003d 0; i \u003c temp.size(); i++) {"},{"lineNumber":129,"author":{"gitId":"gordonfgz"},"content":"            Task task \u003d temp.get(i);"},{"lineNumber":130,"author":{"gitId":"gordonfgz"},"content":"            String stringedIndex \u003d Integer.toString(temp.indexOf(task) + 1);"},{"lineNumber":131,"author":{"gitId":"gordonfgz"},"content":"            String outputLine \u003d stringedIndex + \". \" + task;"},{"lineNumber":132,"author":{"gitId":"gordonfgz"},"content":"            output \u003d output + outputLine + \"\\n\";"},{"lineNumber":133,"author":{"gitId":"gordonfgz"},"content":"        }"},{"lineNumber":134,"author":{"gitId":"gordonfgz"},"content":"        return ui.findMsg() + \"\\n\""},{"lineNumber":135,"author":{"gitId":"gordonfgz"},"content":"                        + output;"},{"lineNumber":136,"author":{"gitId":"gordonfgz"},"content":"    }"},{"lineNumber":137,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":138,"author":{"gitId":"gordonfgz"},"content":"    /**"},{"lineNumber":139,"author":{"gitId":"gordonfgz"},"content":"     * Prints out the TaskList"},{"lineNumber":140,"author":{"gitId":"gordonfgz"},"content":"     *"},{"lineNumber":141,"author":{"gitId":"gordonfgz"},"content":"     * @return a String Message"},{"lineNumber":142,"author":{"gitId":"gordonfgz"},"content":"     */"},{"lineNumber":143,"author":{"gitId":"gordonfgz"},"content":"    private String provideList() {"},{"lineNumber":144,"author":{"gitId":"gordonfgz"},"content":"        String items \u003d \"\";"},{"lineNumber":145,"author":{"gitId":"gordonfgz"},"content":"        for (int i \u003d 0; i \u003c tasks.length(); i++) {"},{"lineNumber":146,"author":{"gitId":"gordonfgz"},"content":"            Task task \u003d tasks.get(i);"},{"lineNumber":147,"author":{"gitId":"gordonfgz"},"content":"            String stringedIndex \u003d Integer.toString(i + 1);"},{"lineNumber":148,"author":{"gitId":"gordonfgz"},"content":"            String outputLine \u003d stringedIndex + \". \" + task;"},{"lineNumber":149,"author":{"gitId":"gordonfgz"},"content":"            items \u003d items + outputLine + \"\\n\";"},{"lineNumber":150,"author":{"gitId":"gordonfgz"},"content":"        }"},{"lineNumber":151,"author":{"gitId":"gordonfgz"},"content":"        storage.saveListToData(tasks.get());"},{"lineNumber":152,"author":{"gitId":"gordonfgz"},"content":"        return ui.listMsg() + \"\\n\" + items;"},{"lineNumber":153,"author":{"gitId":"gordonfgz"},"content":"    }"},{"lineNumber":154,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":155,"author":{"gitId":"gordonfgz"},"content":"    /**"},{"lineNumber":156,"author":{"gitId":"gordonfgz"},"content":"     * Marks a Task on the TaskList as done"},{"lineNumber":157,"author":{"gitId":"gordonfgz"},"content":"     *"},{"lineNumber":158,"author":{"gitId":"gordonfgz"},"content":"     * @param input is the user\u0027s input in String form"},{"lineNumber":159,"author":{"gitId":"gordonfgz"},"content":"     * @return a String Message"},{"lineNumber":160,"author":{"gitId":"gordonfgz"},"content":"     */"},{"lineNumber":161,"author":{"gitId":"gordonfgz"},"content":"    private String markAsDone(String input) {"},{"lineNumber":162,"author":{"gitId":"gordonfgz"},"content":"        int stringLength \u003d input.length();"},{"lineNumber":163,"author":{"gitId":"gordonfgz"},"content":"        assert stringLength \u003e\u003d 1 : \"Input cannot be empty\";"},{"lineNumber":164,"author":{"gitId":"gordonfgz"},"content":"        String stringIndex \u003d input.substring(5, input.length());"},{"lineNumber":165,"author":{"gitId":"gordonfgz"},"content":"        int index \u003d Integer.parseInt(stringIndex);"},{"lineNumber":166,"author":{"gitId":"gordonfgz"},"content":"        Task chosen \u003d this.tasks.get(index - 1);"},{"lineNumber":167,"author":{"gitId":"gordonfgz"},"content":"        chosen.finish();"},{"lineNumber":168,"author":{"gitId":"gordonfgz"},"content":"        storage.saveListToData(this.tasks.get());"},{"lineNumber":169,"author":{"gitId":"gordonfgz"},"content":"        return ui.markAsDoneMsg(chosen);"},{"lineNumber":170,"author":{"gitId":"gordonfgz"},"content":"    }"},{"lineNumber":171,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":172,"author":{"gitId":"gordonfgz"},"content":"    /**"},{"lineNumber":173,"author":{"gitId":"gordonfgz"},"content":"     * Checks the type of Task the user is trying to create"},{"lineNumber":174,"author":{"gitId":"gordonfgz"},"content":"     *"},{"lineNumber":175,"author":{"gitId":"gordonfgz"},"content":"     * @param input is the User\u0027s input in String form"},{"lineNumber":176,"author":{"gitId":"gordonfgz"},"content":"     * @throws EmptyDescriptionException"},{"lineNumber":177,"author":{"gitId":"gordonfgz"},"content":"     * @throws WrongFormatException"},{"lineNumber":178,"author":{"gitId":"gordonfgz"},"content":"     * @return a String Message"},{"lineNumber":179,"author":{"gitId":"gordonfgz"},"content":"     */"},{"lineNumber":180,"author":{"gitId":"gordonfgz"},"content":"    private String newTaskEntry(String input) throws EmptyDescriptionException, WrongFormatException {"},{"lineNumber":181,"author":{"gitId":"gordonfgz"},"content":"        int stringLength \u003d input.length();"},{"lineNumber":182,"author":{"gitId":"gordonfgz"},"content":"        assert stringLength \u003e\u003d 1 : \"Input cannot be empty\";"},{"lineNumber":183,"author":{"gitId":"gordonfgz"},"content":"        if (input.contains(\"todo\")) {"},{"lineNumber":184,"author":{"gitId":"gordonfgz"},"content":"            return this.createAndAddTodo(input);"},{"lineNumber":185,"author":{"gitId":"gordonfgz"},"content":"        } else if (input.contains(\"deadline\")) {"},{"lineNumber":186,"author":{"gitId":"gordonfgz"},"content":"            return this.createAndAddDeadline(input);"},{"lineNumber":187,"author":{"gitId":"gordonfgz"},"content":"        } else {"},{"lineNumber":188,"author":{"gitId":"gordonfgz"},"content":"            return this.createAndAddEvent(input);"},{"lineNumber":189,"author":{"gitId":"gordonfgz"},"content":"        }"},{"lineNumber":190,"author":{"gitId":"gordonfgz"},"content":"    }"},{"lineNumber":191,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":192,"author":{"gitId":"gordonfgz"},"content":"    /**"},{"lineNumber":193,"author":{"gitId":"gordonfgz"},"content":"     * Creates and adds a Task with type \"Todo\" to the TaskList"},{"lineNumber":194,"author":{"gitId":"gordonfgz"},"content":"     *"},{"lineNumber":195,"author":{"gitId":"gordonfgz"},"content":"     * @param input is the description of the task as given by user"},{"lineNumber":196,"author":{"gitId":"gordonfgz"},"content":"     * @throws EmptyDescriptionException"},{"lineNumber":197,"author":{"gitId":"gordonfgz"},"content":"     * @throws WrongFormatException"},{"lineNumber":198,"author":{"gitId":"gordonfgz"},"content":"     * @return a String Message"},{"lineNumber":199,"author":{"gitId":"gordonfgz"},"content":"     */"},{"lineNumber":200,"author":{"gitId":"gordonfgz"},"content":"    private String createAndAddTodo(String input) throws EmptyDescriptionException, WrongFormatException {"},{"lineNumber":201,"author":{"gitId":"gordonfgz"},"content":"        int stringLength \u003d input.length();"},{"lineNumber":202,"author":{"gitId":"gordonfgz"},"content":"        assert stringLength \u003e\u003d 1 : \"Input cannot be empty\";"},{"lineNumber":203,"author":{"gitId":"gordonfgz"},"content":"        if (input.length() \u003c 5 || input.substring(5).replaceAll(\"\\\\s\", \"\").equals(\"\")) {"},{"lineNumber":204,"author":{"gitId":"gordonfgz"},"content":"            return new EmptyDescriptionException(\"todo\").toString();"},{"lineNumber":205,"author":{"gitId":"gordonfgz"},"content":"        } else if (!Character.toString(input.charAt(4)).equals(\" \")) {"},{"lineNumber":206,"author":{"gitId":"gordonfgz"},"content":"            return new WrongFormatException(\"todo\").toString();"},{"lineNumber":207,"author":{"gitId":"gordonfgz"},"content":"        } else {"},{"lineNumber":208,"author":{"gitId":"gordonfgz"},"content":"            Task task \u003d new Todo(input.substring(5, input.length()));"},{"lineNumber":209,"author":{"gitId":"gordonfgz"},"content":"            return this.addTaskToTasklist(task);"},{"lineNumber":210,"author":{"gitId":"gordonfgz"},"content":"        }"},{"lineNumber":211,"author":{"gitId":"gordonfgz"},"content":"    }"},{"lineNumber":212,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":213,"author":{"gitId":"gordonfgz"},"content":"    /**"},{"lineNumber":214,"author":{"gitId":"gordonfgz"},"content":"     * Creates and adds a Task with type \"Deadline\" to the TaskList"},{"lineNumber":215,"author":{"gitId":"gordonfgz"},"content":"     *"},{"lineNumber":216,"author":{"gitId":"gordonfgz"},"content":"     * @param input is the description of the task as given by user"},{"lineNumber":217,"author":{"gitId":"gordonfgz"},"content":"     * @throws EmptyDescriptionException"},{"lineNumber":218,"author":{"gitId":"gordonfgz"},"content":"     * @throws WrongFormatException"},{"lineNumber":219,"author":{"gitId":"gordonfgz"},"content":"     * @return a String Message"},{"lineNumber":220,"author":{"gitId":"gordonfgz"},"content":"     */"},{"lineNumber":221,"author":{"gitId":"gordonfgz"},"content":"    private String createAndAddDeadline(String input) throws EmptyDescriptionException, WrongFormatException {"},{"lineNumber":222,"author":{"gitId":"gordonfgz"},"content":"        int stringLength \u003d input.length();"},{"lineNumber":223,"author":{"gitId":"gordonfgz"},"content":"        assert stringLength \u003e\u003d 1 : \"Input cannot be empty\";"},{"lineNumber":224,"author":{"gitId":"gordonfgz"},"content":"        if (input.length() \u003c 9 || input.substring(8, input.indexOf(\"/\")).replaceAll(\"\\\\s\", \"\").equals(\"\")) {"},{"lineNumber":225,"author":{"gitId":"gordonfgz"},"content":"            return new EmptyDescriptionException(\"deadline\").toString();"},{"lineNumber":226,"author":{"gitId":"gordonfgz"},"content":"        } else if (input.contains(\"/by\")"},{"lineNumber":227,"author":{"gitId":"gordonfgz"},"content":"                \u0026\u0026 Character.toString(input.charAt(8)).equals(\" \")"},{"lineNumber":228,"author":{"gitId":"gordonfgz"},"content":"                \u0026\u0026 Character.toString(input.charAt(input.indexOf(\"/\") + 3)).equals(\" \")"},{"lineNumber":229,"author":{"gitId":"gordonfgz"},"content":"                \u0026\u0026 Character.toString(input.charAt(input.indexOf(\"/\") - 1)).equals(\" \")) {"},{"lineNumber":230,"author":{"gitId":"gordonfgz"},"content":"            String desc \u003d input.substring(9, input.indexOf(\"/\") - 1);"},{"lineNumber":231,"author":{"gitId":"gordonfgz"},"content":"            String by \u003d input.substring(input.indexOf(\"/\") + 4, input.length());"},{"lineNumber":232,"author":{"gitId":"gordonfgz"},"content":"            if (by.matches(\".*[a-zA-Z]+.*\")) {"},{"lineNumber":233,"author":{"gitId":"gordonfgz"},"content":"                return new WrongFormatException(\"deadline\").toString();"},{"lineNumber":234,"author":{"gitId":"gordonfgz"},"content":"            }"},{"lineNumber":235,"author":{"gitId":"gordonfgz"},"content":"            try {"},{"lineNumber":236,"author":{"gitId":"gordonfgz"},"content":"                LocalDate date \u003d LocalDate.parse(by);"},{"lineNumber":237,"author":{"gitId":"gordonfgz"},"content":"                Task task \u003d new Deadline(desc, date);"},{"lineNumber":238,"author":{"gitId":"gordonfgz"},"content":"                return this.addTaskToTasklist(task);"},{"lineNumber":239,"author":{"gitId":"gordonfgz"},"content":"            } catch (Exception e) {"},{"lineNumber":240,"author":{"gitId":"gordonfgz"},"content":"                return e.toString();"},{"lineNumber":241,"author":{"gitId":"gordonfgz"},"content":"            }"},{"lineNumber":242,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":243,"author":{"gitId":"gordonfgz"},"content":"        } else {"},{"lineNumber":244,"author":{"gitId":"gordonfgz"},"content":"            return new WrongFormatException(\"deadline\").toString();"},{"lineNumber":245,"author":{"gitId":"gordonfgz"},"content":"        }"},{"lineNumber":246,"author":{"gitId":"gordonfgz"},"content":"    }"},{"lineNumber":247,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":248,"author":{"gitId":"gordonfgz"},"content":"    /**"},{"lineNumber":249,"author":{"gitId":"gordonfgz"},"content":"     * Adds a Task to the TaskList"},{"lineNumber":250,"author":{"gitId":"gordonfgz"},"content":"     *"},{"lineNumber":251,"author":{"gitId":"gordonfgz"},"content":"     * @param task is the Task to be added to the TaskList"},{"lineNumber":252,"author":{"gitId":"gordonfgz"},"content":"     * @throws EmptyDescriptionException"},{"lineNumber":253,"author":{"gitId":"gordonfgz"},"content":"     * @throws WrongFormatException"},{"lineNumber":254,"author":{"gitId":"gordonfgz"},"content":"     * @return a String Message"},{"lineNumber":255,"author":{"gitId":"gordonfgz"},"content":"     */"},{"lineNumber":256,"author":{"gitId":"gordonfgz"},"content":"    private String addTaskToTasklist(Task task) {"},{"lineNumber":257,"author":{"gitId":"gordonfgz"},"content":"        this.tasks.add(task);"},{"lineNumber":258,"author":{"gitId":"gordonfgz"},"content":"        int listCount \u003d this.tasks.length();"},{"lineNumber":259,"author":{"gitId":"gordonfgz"},"content":"        storage.saveListToData(this.tasks.get());"},{"lineNumber":260,"author":{"gitId":"gordonfgz"},"content":"        return ui.addTaskToTasklistMsg(task, listCount);"},{"lineNumber":261,"author":{"gitId":"gordonfgz"},"content":"    }"},{"lineNumber":262,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":263,"author":{"gitId":"gordonfgz"},"content":"    /**"},{"lineNumber":264,"author":{"gitId":"gordonfgz"},"content":"     * Creates and adds a Task with type \"Event\" to the TaskList"},{"lineNumber":265,"author":{"gitId":"gordonfgz"},"content":"     *"},{"lineNumber":266,"author":{"gitId":"gordonfgz"},"content":"     * @param input is the description of the task as given by user"},{"lineNumber":267,"author":{"gitId":"gordonfgz"},"content":"     * @throws EmptyDescriptionException"},{"lineNumber":268,"author":{"gitId":"gordonfgz"},"content":"     * @throws WrongFormatException"},{"lineNumber":269,"author":{"gitId":"gordonfgz"},"content":"     * @return a String Message"},{"lineNumber":270,"author":{"gitId":"gordonfgz"},"content":"     */"},{"lineNumber":271,"author":{"gitId":"gordonfgz"},"content":"    private String createAndAddEvent(String input) throws EmptyDescriptionException, WrongFormatException {"},{"lineNumber":272,"author":{"gitId":"gordonfgz"},"content":"        int stringLength \u003d input.length();"},{"lineNumber":273,"author":{"gitId":"gordonfgz"},"content":"        assert stringLength \u003e\u003d 1 : \"Input cannot be empty\";"},{"lineNumber":274,"author":{"gitId":"gordonfgz"},"content":"        if (input.length() \u003c 6 || input.substring(5).replaceAll(\"\\\\s\", \"\").equals(\"\")) {"},{"lineNumber":275,"author":{"gitId":"gordonfgz"},"content":"            throw new EmptyDescriptionException(\"event\");"},{"lineNumber":276,"author":{"gitId":"gordonfgz"},"content":"        } else if (input.contains(\"/at\")"},{"lineNumber":277,"author":{"gitId":"gordonfgz"},"content":"                \u0026\u0026 Character.toString(input.charAt(5)).equals(\" \")"},{"lineNumber":278,"author":{"gitId":"gordonfgz"},"content":"                \u0026\u0026 Character.toString(input.charAt(input.indexOf(\"/\") + 3)).equals(\" \")"},{"lineNumber":279,"author":{"gitId":"gordonfgz"},"content":"                \u0026\u0026 Character.toString(input.charAt(input.indexOf(\"/\") - 1)).equals(\" \")) {"},{"lineNumber":280,"author":{"gitId":"gordonfgz"},"content":"            String desc \u003d input.substring(6, input.indexOf(\"/\") - 1);"},{"lineNumber":281,"author":{"gitId":"gordonfgz"},"content":"            String at \u003d input.substring(input.indexOf(\"/\") + 4, input.length());"},{"lineNumber":282,"author":{"gitId":"gordonfgz"},"content":"            Task task \u003d new Event(desc, at);"},{"lineNumber":283,"author":{"gitId":"gordonfgz"},"content":"            return this.addTaskToTasklist(task);"},{"lineNumber":284,"author":{"gitId":"gordonfgz"},"content":"        } else {"},{"lineNumber":285,"author":{"gitId":"gordonfgz"},"content":"            return new WrongFormatException(\"event\").toString();"},{"lineNumber":286,"author":{"gitId":"gordonfgz"},"content":"        }"},{"lineNumber":287,"author":{"gitId":"gordonfgz"},"content":"    }"},{"lineNumber":288,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":289,"author":{"gitId":"gordonfgz"},"content":"    /**"},{"lineNumber":290,"author":{"gitId":"gordonfgz"},"content":"     * Exit sequence of the Application"},{"lineNumber":291,"author":{"gitId":"gordonfgz"},"content":"     * @return a String Message"},{"lineNumber":292,"author":{"gitId":"gordonfgz"},"content":"     */"},{"lineNumber":293,"author":{"gitId":"gordonfgz"},"content":"    private String end() {"},{"lineNumber":294,"author":{"gitId":"gordonfgz"},"content":"        storage.saveListToData(this.tasks.get());"},{"lineNumber":295,"author":{"gitId":"gordonfgz"},"content":"        return ui.farewell();"},{"lineNumber":296,"author":{"gitId":"gordonfgz"},"content":"    }"},{"lineNumber":297,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":298,"author":{"gitId":"gordonfgz"},"content":"    /**"},{"lineNumber":299,"author":{"gitId":"gordonfgz"},"content":"     * Deletes a Task in the TaskList based on user input"},{"lineNumber":300,"author":{"gitId":"gordonfgz"},"content":"     *"},{"lineNumber":301,"author":{"gitId":"gordonfgz"},"content":"     * @param input is the position of the Task to be deleted"},{"lineNumber":302,"author":{"gitId":"gordonfgz"},"content":"     * @throws EmptyListException"},{"lineNumber":303,"author":{"gitId":"gordonfgz"},"content":"     * @throws InvalidListIndexException"},{"lineNumber":304,"author":{"gitId":"gordonfgz"},"content":"     * @return a String Message"},{"lineNumber":305,"author":{"gitId":"gordonfgz"},"content":"     */"},{"lineNumber":306,"author":{"gitId":"gordonfgz"},"content":"    private String delete(String input) throws EmptyListException, InvalidListIndexException {"},{"lineNumber":307,"author":{"gitId":"gordonfgz"},"content":"        int stringLength \u003d input.length();"},{"lineNumber":308,"author":{"gitId":"gordonfgz"},"content":"        assert stringLength \u003e\u003d 1 : \"Input cannot be empty\";"},{"lineNumber":309,"author":{"gitId":"gordonfgz"},"content":"        String stringIndex \u003d input.substring(7, input.length());"},{"lineNumber":310,"author":{"gitId":"gordonfgz"},"content":"        if (stringIndex.matches(\".*[a-zA-Z]+.*\")) {"},{"lineNumber":311,"author":{"gitId":"gordonfgz"},"content":"            return new InvalidListIndexException().toString();"},{"lineNumber":312,"author":{"gitId":"gordonfgz"},"content":"        } else {"},{"lineNumber":313,"author":{"gitId":"gordonfgz"},"content":"            int index \u003d Integer.parseInt(stringIndex);"},{"lineNumber":314,"author":{"gitId":"gordonfgz"},"content":"            System.out.println(index);"},{"lineNumber":315,"author":{"gitId":"gordonfgz"},"content":"            if (this.tasks.isEmpty()) {"},{"lineNumber":316,"author":{"gitId":"gordonfgz"},"content":"                return new EmptyListException().toString();"},{"lineNumber":317,"author":{"gitId":"gordonfgz"},"content":"            } else if (index \u003e 0 \u0026\u0026 index \u003c\u003d this.tasks.length()) {"},{"lineNumber":318,"author":{"gitId":"gordonfgz"},"content":"                Task chosen \u003d this.tasks.get(index - 1);"},{"lineNumber":319,"author":{"gitId":"gordonfgz"},"content":"                this.tasks.remove(chosen);"},{"lineNumber":320,"author":{"gitId":"gordonfgz"},"content":"                int listLength \u003d this.tasks.length();"},{"lineNumber":321,"author":{"gitId":"gordonfgz"},"content":"                storage.saveListToData(this.tasks.get());"},{"lineNumber":322,"author":{"gitId":"gordonfgz"},"content":"                return ui.returnDeleteMsg(listLength, chosen);"},{"lineNumber":323,"author":{"gitId":"gordonfgz"},"content":"            } else {"},{"lineNumber":324,"author":{"gitId":"gordonfgz"},"content":"                return new InvalidListIndexException().toString();"},{"lineNumber":325,"author":{"gitId":"gordonfgz"},"content":"            }"},{"lineNumber":326,"author":{"gitId":"gordonfgz"},"content":"        }"},{"lineNumber":327,"author":{"gitId":"gordonfgz"},"content":"    }"},{"lineNumber":328,"author":{"gitId":"gordonfgz"},"content":"}"}],"authorContributionMap":{"gordonfgz":328}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gordonfgz"},"content":"import java.io.BufferedReader;"},{"lineNumber":2,"author":{"gitId":"gordonfgz"},"content":"import java.io.BufferedWriter;"},{"lineNumber":3,"author":{"gitId":"gordonfgz"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"gordonfgz"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":5,"author":{"gitId":"gordonfgz"},"content":"import java.io.FileReader;"},{"lineNumber":6,"author":{"gitId":"gordonfgz"},"content":"import java.io.FileWriter;"},{"lineNumber":7,"author":{"gitId":"gordonfgz"},"content":"import java.io.IOException;"},{"lineNumber":8,"author":{"gitId":"gordonfgz"},"content":"import java.io.PrintWriter;"},{"lineNumber":9,"author":{"gitId":"gordonfgz"},"content":"import java.net.URL;"},{"lineNumber":10,"author":{"gitId":"gordonfgz"},"content":"import java.time.LocalDate;"},{"lineNumber":11,"author":{"gitId":"gordonfgz"},"content":"import java.util.ArrayList;"},{"lineNumber":12,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":13,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":14,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":15,"author":{"gitId":"gordonfgz"},"content":"/**"},{"lineNumber":16,"author":{"gitId":"gordonfgz"},"content":" * Encapsulates a Storage"},{"lineNumber":17,"author":{"gitId":"gordonfgz"},"content":" * Deals with loading tasks from the file and saving tasks in the file"},{"lineNumber":18,"author":{"gitId":"gordonfgz"},"content":" */"},{"lineNumber":19,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":20,"author":{"gitId":"gordonfgz"},"content":"public class Storage {"},{"lineNumber":21,"author":{"gitId":"gordonfgz"},"content":"    protected String fileName;"},{"lineNumber":22,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":23,"author":{"gitId":"gordonfgz"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"gordonfgz"},"content":"     * Constructor"},{"lineNumber":25,"author":{"gitId":"gordonfgz"},"content":"     *"},{"lineNumber":26,"author":{"gitId":"gordonfgz"},"content":"     * @param name is the filename that data is going to be stored in"},{"lineNumber":27,"author":{"gitId":"gordonfgz"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"gordonfgz"},"content":"    public Storage(String name) {"},{"lineNumber":29,"author":{"gitId":"gordonfgz"},"content":"        this.fileName \u003d name;"},{"lineNumber":30,"author":{"gitId":"gordonfgz"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":32,"author":{"gitId":"gordonfgz"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"gordonfgz"},"content":"     * Initialises the file for data to be stored in"},{"lineNumber":34,"author":{"gitId":"gordonfgz"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"gordonfgz"},"content":"    protected void init() {"},{"lineNumber":36,"author":{"gitId":"gordonfgz"},"content":"        Class myClass \u003d getClass();"},{"lineNumber":37,"author":{"gitId":"gordonfgz"},"content":"        URL url \u003d myClass.getResource(\"Data.txt\");"},{"lineNumber":38,"author":{"gitId":"gordonfgz"},"content":"        if (url \u003d\u003d null) {"},{"lineNumber":39,"author":{"gitId":"gordonfgz"},"content":"            File file \u003d new File(\"Data.txt\");"},{"lineNumber":40,"author":{"gitId":"gordonfgz"},"content":"        }"},{"lineNumber":41,"author":{"gitId":"gordonfgz"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":43,"author":{"gitId":"gordonfgz"},"content":"    /**"},{"lineNumber":44,"author":{"gitId":"gordonfgz"},"content":"     * Imports the data from the data file into a list"},{"lineNumber":45,"author":{"gitId":"gordonfgz"},"content":"     *"},{"lineNumber":46,"author":{"gitId":"gordonfgz"},"content":"     * @param list is the list that the data is going to be stored in"},{"lineNumber":47,"author":{"gitId":"gordonfgz"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"gordonfgz"},"content":"    protected void importSavedDataToList(ArrayList\u003cTask\u003e list) {"},{"lineNumber":49,"author":{"gitId":"gordonfgz"},"content":"        BufferedReader objReader \u003d null;"},{"lineNumber":50,"author":{"gitId":"gordonfgz"},"content":"        try {"},{"lineNumber":51,"author":{"gitId":"gordonfgz"},"content":"            String strCurrentLine;"},{"lineNumber":52,"author":{"gitId":"gordonfgz"},"content":"            objReader \u003d new BufferedReader(new FileReader(\"Data.txt\"));"},{"lineNumber":53,"author":{"gitId":"gordonfgz"},"content":"            while ((strCurrentLine \u003d objReader.readLine()) !\u003d null) {"},{"lineNumber":54,"author":{"gitId":"gordonfgz"},"content":"                String taskIcon \u003d Character.toString(strCurrentLine.charAt(0));"},{"lineNumber":55,"author":{"gitId":"gordonfgz"},"content":"                String doneIcon \u003d Character.toString(strCurrentLine.charAt(4));"},{"lineNumber":56,"author":{"gitId":"gordonfgz"},"content":"                boolean isDone \u003d false;"},{"lineNumber":57,"author":{"gitId":"gordonfgz"},"content":"                if (doneIcon.equals(\"1\")) {"},{"lineNumber":58,"author":{"gitId":"gordonfgz"},"content":"                    isDone \u003d true;"},{"lineNumber":59,"author":{"gitId":"gordonfgz"},"content":"                }"},{"lineNumber":60,"author":{"gitId":"gordonfgz"},"content":"                if (taskIcon.equals(\"T\")) {"},{"lineNumber":61,"author":{"gitId":"gordonfgz"},"content":"                    String description \u003d strCurrentLine.substring(8);"},{"lineNumber":62,"author":{"gitId":"gordonfgz"},"content":"                    Todo task \u003d new Todo(description, isDone);"},{"lineNumber":63,"author":{"gitId":"gordonfgz"},"content":"                    list.add(task);"},{"lineNumber":64,"author":{"gitId":"gordonfgz"},"content":"                } else if (taskIcon.equals(\"D\")) {"},{"lineNumber":65,"author":{"gitId":"gordonfgz"},"content":"                    int indexOfLastDivider \u003d strCurrentLine.lastIndexOf(\"|\");"},{"lineNumber":66,"author":{"gitId":"gordonfgz"},"content":"                    String description \u003d strCurrentLine.substring(8, indexOfLastDivider - 1);"},{"lineNumber":67,"author":{"gitId":"gordonfgz"},"content":"                    String by \u003d strCurrentLine.substring(indexOfLastDivider + 2);"},{"lineNumber":68,"author":{"gitId":"gordonfgz"},"content":"                    LocalDate date \u003d LocalDate.parse(by);"},{"lineNumber":69,"author":{"gitId":"gordonfgz"},"content":"                    Deadline task \u003d new Deadline(description, isDone, date);"},{"lineNumber":70,"author":{"gitId":"gordonfgz"},"content":"                    list.add(task);"},{"lineNumber":71,"author":{"gitId":"gordonfgz"},"content":"                } else if (taskIcon.equals(\"E\")) {"},{"lineNumber":72,"author":{"gitId":"gordonfgz"},"content":"                    int indexOfLastDivider \u003d strCurrentLine.lastIndexOf(\"|\");"},{"lineNumber":73,"author":{"gitId":"gordonfgz"},"content":"                    String description \u003d strCurrentLine.substring(8, indexOfLastDivider - 1);"},{"lineNumber":74,"author":{"gitId":"gordonfgz"},"content":"                    String at \u003d strCurrentLine.substring(indexOfLastDivider + 2);"},{"lineNumber":75,"author":{"gitId":"gordonfgz"},"content":"                    Event task \u003d new Event(description, isDone, at);"},{"lineNumber":76,"author":{"gitId":"gordonfgz"},"content":"                    list.add(task);"},{"lineNumber":77,"author":{"gitId":"gordonfgz"},"content":"                } else {"},{"lineNumber":78,"author":{"gitId":"gordonfgz"},"content":"                    System.out.println(\"Invalid first Character\");"},{"lineNumber":79,"author":{"gitId":"gordonfgz"},"content":"                }"},{"lineNumber":80,"author":{"gitId":"gordonfgz"},"content":"            }"},{"lineNumber":81,"author":{"gitId":"gordonfgz"},"content":"        } catch (IOException e) {"},{"lineNumber":82,"author":{"gitId":"gordonfgz"},"content":"            e.printStackTrace();"},{"lineNumber":83,"author":{"gitId":"gordonfgz"},"content":"        } finally {"},{"lineNumber":84,"author":{"gitId":"gordonfgz"},"content":"            try {"},{"lineNumber":85,"author":{"gitId":"gordonfgz"},"content":"                if (objReader !\u003d null) {"},{"lineNumber":86,"author":{"gitId":"gordonfgz"},"content":"                    objReader.close();"},{"lineNumber":87,"author":{"gitId":"gordonfgz"},"content":"                }"},{"lineNumber":88,"author":{"gitId":"gordonfgz"},"content":"            } catch (IOException ex) {"},{"lineNumber":89,"author":{"gitId":"gordonfgz"},"content":"                ex.printStackTrace();"},{"lineNumber":90,"author":{"gitId":"gordonfgz"},"content":"            }"},{"lineNumber":91,"author":{"gitId":"gordonfgz"},"content":"        }"},{"lineNumber":92,"author":{"gitId":"gordonfgz"},"content":"    }"},{"lineNumber":93,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":94,"author":{"gitId":"gordonfgz"},"content":"    /**"},{"lineNumber":95,"author":{"gitId":"gordonfgz"},"content":"     * Clears all data in the data file"},{"lineNumber":96,"author":{"gitId":"gordonfgz"},"content":"     */"},{"lineNumber":97,"author":{"gitId":"gordonfgz"},"content":"    protected void clearData() {"},{"lineNumber":98,"author":{"gitId":"gordonfgz"},"content":"        PrintWriter writer \u003d null;"},{"lineNumber":99,"author":{"gitId":"gordonfgz"},"content":"        try {"},{"lineNumber":100,"author":{"gitId":"gordonfgz"},"content":"            writer \u003d new PrintWriter(\"Data.txt\");"},{"lineNumber":101,"author":{"gitId":"gordonfgz"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":102,"author":{"gitId":"gordonfgz"},"content":"            e.printStackTrace();"},{"lineNumber":103,"author":{"gitId":"gordonfgz"},"content":"        }"},{"lineNumber":104,"author":{"gitId":"gordonfgz"},"content":"        writer.print(\"\");"},{"lineNumber":105,"author":{"gitId":"gordonfgz"},"content":"        writer.close();"},{"lineNumber":106,"author":{"gitId":"gordonfgz"},"content":"    }"},{"lineNumber":107,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":108,"author":{"gitId":"gordonfgz"},"content":"    /**"},{"lineNumber":109,"author":{"gitId":"gordonfgz"},"content":"     * Uploads data from the list onto the data file"},{"lineNumber":110,"author":{"gitId":"gordonfgz"},"content":"     *"},{"lineNumber":111,"author":{"gitId":"gordonfgz"},"content":"     * @param list is the list that the data is going to be uploaded from"},{"lineNumber":112,"author":{"gitId":"gordonfgz"},"content":"     */"},{"lineNumber":113,"author":{"gitId":"gordonfgz"},"content":"    protected void saveListToData(ArrayList\u003cTask\u003e list) {"},{"lineNumber":114,"author":{"gitId":"gordonfgz"},"content":"        this.clearData();"},{"lineNumber":115,"author":{"gitId":"gordonfgz"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {"},{"lineNumber":116,"author":{"gitId":"gordonfgz"},"content":"            Task task \u003d list.get(i);"},{"lineNumber":117,"author":{"gitId":"gordonfgz"},"content":"            String input \u003d \"\";"},{"lineNumber":118,"author":{"gitId":"gordonfgz"},"content":"            if (task instanceof Todo) {"},{"lineNumber":119,"author":{"gitId":"gordonfgz"},"content":"                if (task.isDone) {"},{"lineNumber":120,"author":{"gitId":"gordonfgz"},"content":"                    input \u003d \"T | 1 | \" + task.description;"},{"lineNumber":121,"author":{"gitId":"gordonfgz"},"content":"                } else {"},{"lineNumber":122,"author":{"gitId":"gordonfgz"},"content":"                    input \u003d \"T | 0 | \" + task.description;"},{"lineNumber":123,"author":{"gitId":"gordonfgz"},"content":"                }"},{"lineNumber":124,"author":{"gitId":"gordonfgz"},"content":"            } else if (task instanceof Deadline) {"},{"lineNumber":125,"author":{"gitId":"gordonfgz"},"content":"                Deadline deadline \u003d (Deadline) task;"},{"lineNumber":126,"author":{"gitId":"gordonfgz"},"content":"                if (deadline.isDone) {"},{"lineNumber":127,"author":{"gitId":"gordonfgz"},"content":"                    input \u003d \"D | 1 | \" + deadline.description + \" | \" + deadline.by;"},{"lineNumber":128,"author":{"gitId":"gordonfgz"},"content":"                } else {"},{"lineNumber":129,"author":{"gitId":"gordonfgz"},"content":"                    input \u003d \"D | 0 | \" + deadline.description + \" | \" + deadline.by;"},{"lineNumber":130,"author":{"gitId":"gordonfgz"},"content":"                }"},{"lineNumber":131,"author":{"gitId":"gordonfgz"},"content":"            } else if (task instanceof Event) {"},{"lineNumber":132,"author":{"gitId":"gordonfgz"},"content":"                Event event \u003d (Event) task;"},{"lineNumber":133,"author":{"gitId":"gordonfgz"},"content":"                if (event.isDone) {"},{"lineNumber":134,"author":{"gitId":"gordonfgz"},"content":"                    input \u003d \"E | 1 | \" + event.description + \" | \" + event.at;"},{"lineNumber":135,"author":{"gitId":"gordonfgz"},"content":"                } else {"},{"lineNumber":136,"author":{"gitId":"gordonfgz"},"content":"                    input \u003d \"E | 0 | \" + event.description + \" | \" + event.at;"},{"lineNumber":137,"author":{"gitId":"gordonfgz"},"content":"                }"},{"lineNumber":138,"author":{"gitId":"gordonfgz"},"content":"            } else {"},{"lineNumber":139,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":140,"author":{"gitId":"gordonfgz"},"content":"            }"},{"lineNumber":141,"author":{"gitId":"gordonfgz"},"content":"            try {"},{"lineNumber":142,"author":{"gitId":"gordonfgz"},"content":"                FileWriter writer \u003d new FileWriter(\"Data.txt\", true);"},{"lineNumber":143,"author":{"gitId":"gordonfgz"},"content":"                BufferedWriter bufferedWriter \u003d new BufferedWriter(writer);"},{"lineNumber":144,"author":{"gitId":"gordonfgz"},"content":"                bufferedWriter.write(input);"},{"lineNumber":145,"author":{"gitId":"gordonfgz"},"content":"                bufferedWriter.newLine();"},{"lineNumber":146,"author":{"gitId":"gordonfgz"},"content":"                bufferedWriter.close();"},{"lineNumber":147,"author":{"gitId":"gordonfgz"},"content":"            } catch (IOException e) {"},{"lineNumber":148,"author":{"gitId":"gordonfgz"},"content":"                e.printStackTrace();"},{"lineNumber":149,"author":{"gitId":"gordonfgz"},"content":"            }"},{"lineNumber":150,"author":{"gitId":"gordonfgz"},"content":"        }"},{"lineNumber":151,"author":{"gitId":"gordonfgz"},"content":"    }"},{"lineNumber":152,"author":{"gitId":"gordonfgz"},"content":"}"}],"authorContributionMap":{"gordonfgz":152}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gordonfgz"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"gordonfgz"},"content":" * Encapsulates a backbone of a Task"},{"lineNumber":3,"author":{"gitId":"gordonfgz"},"content":" * Every Task has a String to store its description"},{"lineNumber":4,"author":{"gitId":"gordonfgz"},"content":" * Every Task has a boolean to denote if it is done"},{"lineNumber":5,"author":{"gitId":"gordonfgz"},"content":" */"},{"lineNumber":6,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":7,"author":{"gitId":"gordonfgz"},"content":"public class Task {"},{"lineNumber":8,"author":{"gitId":"gordonfgz"},"content":"    protected String description;"},{"lineNumber":9,"author":{"gitId":"gordonfgz"},"content":"    protected boolean isDone;"},{"lineNumber":10,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":11,"author":{"gitId":"gordonfgz"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"gordonfgz"},"content":"     * Constructor"},{"lineNumber":13,"author":{"gitId":"gordonfgz"},"content":"     * Used when a Task is created for the first time"},{"lineNumber":14,"author":{"gitId":"gordonfgz"},"content":"     *"},{"lineNumber":15,"author":{"gitId":"gordonfgz"},"content":"     * @param description is the Customer associated with this event"},{"lineNumber":16,"author":{"gitId":"gordonfgz"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"gordonfgz"},"content":"    public Task(String description) {"},{"lineNumber":18,"author":{"gitId":"gordonfgz"},"content":"        this.description \u003d description;"},{"lineNumber":19,"author":{"gitId":"gordonfgz"},"content":"        this.isDone \u003d false;"},{"lineNumber":20,"author":{"gitId":"gordonfgz"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":22,"author":{"gitId":"gordonfgz"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"gordonfgz"},"content":"     * Constructor"},{"lineNumber":24,"author":{"gitId":"gordonfgz"},"content":"     * Used to create a Task with the option to mark its done state"},{"lineNumber":25,"author":{"gitId":"gordonfgz"},"content":"     *"},{"lineNumber":26,"author":{"gitId":"gordonfgz"},"content":"     * @param description is the Customer associated with this event"},{"lineNumber":27,"author":{"gitId":"gordonfgz"},"content":"     * @param isDone is a boolean that denotes if a Task is done or not"},{"lineNumber":28,"author":{"gitId":"gordonfgz"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"gordonfgz"},"content":"    public Task(String description, boolean isDone) {"},{"lineNumber":30,"author":{"gitId":"gordonfgz"},"content":"        this.description \u003d description;"},{"lineNumber":31,"author":{"gitId":"gordonfgz"},"content":"        this.isDone \u003d isDone;"},{"lineNumber":32,"author":{"gitId":"gordonfgz"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":34,"author":{"gitId":"gordonfgz"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"gordonfgz"},"content":"     * Returns the description"},{"lineNumber":36,"author":{"gitId":"gordonfgz"},"content":"     *"},{"lineNumber":37,"author":{"gitId":"gordonfgz"},"content":"     * @return a String"},{"lineNumber":38,"author":{"gitId":"gordonfgz"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"gordonfgz"},"content":"    public String getDescription() {"},{"lineNumber":40,"author":{"gitId":"gordonfgz"},"content":"        return this.description;"},{"lineNumber":41,"author":{"gitId":"gordonfgz"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":43,"author":{"gitId":"gordonfgz"},"content":"    /**"},{"lineNumber":44,"author":{"gitId":"gordonfgz"},"content":"     * Shows if a Task is done or not"},{"lineNumber":45,"author":{"gitId":"gordonfgz"},"content":"     *"},{"lineNumber":46,"author":{"gitId":"gordonfgz"},"content":"     * @return a String"},{"lineNumber":47,"author":{"gitId":"gordonfgz"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"gordonfgz"},"content":"    public String getStatusIcon() {"},{"lineNumber":49,"author":{"gitId":"gordonfgz"},"content":"        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"},{"lineNumber":50,"author":{"gitId":"gordonfgz"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":52,"author":{"gitId":"gordonfgz"},"content":"    /**"},{"lineNumber":53,"author":{"gitId":"gordonfgz"},"content":"     * Marks a Task as done"},{"lineNumber":54,"author":{"gitId":"gordonfgz"},"content":"     */"},{"lineNumber":55,"author":{"gitId":"gordonfgz"},"content":"    protected void finish() {"},{"lineNumber":56,"author":{"gitId":"gordonfgz"},"content":"        this.isDone \u003d true;"},{"lineNumber":57,"author":{"gitId":"gordonfgz"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":59,"author":{"gitId":"gordonfgz"},"content":"    /**"},{"lineNumber":60,"author":{"gitId":"gordonfgz"},"content":"     * Returns the presentation of a Task"},{"lineNumber":61,"author":{"gitId":"gordonfgz"},"content":"     *"},{"lineNumber":62,"author":{"gitId":"gordonfgz"},"content":"     * @return a String."},{"lineNumber":63,"author":{"gitId":"gordonfgz"},"content":"     */"},{"lineNumber":64,"author":{"gitId":"gordonfgz"},"content":"    public String toString() {"},{"lineNumber":65,"author":{"gitId":"gordonfgz"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;"},{"lineNumber":66,"author":{"gitId":"gordonfgz"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":68,"author":{"gitId":"gordonfgz"},"content":"}"}],"authorContributionMap":{"gordonfgz":68}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gordonfgz"},"content":"import java.util.ArrayList;"},{"lineNumber":2,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":3,"author":{"gitId":"gordonfgz"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"gordonfgz"},"content":" * Encapsulates a list that stores Tasks"},{"lineNumber":5,"author":{"gitId":"gordonfgz"},"content":" */"},{"lineNumber":6,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":7,"author":{"gitId":"gordonfgz"},"content":"public class TaskList {"},{"lineNumber":8,"author":{"gitId":"gordonfgz"},"content":"    protected ArrayList\u003cTask\u003e list;"},{"lineNumber":9,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":10,"author":{"gitId":"gordonfgz"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"gordonfgz"},"content":"     * Constructor"},{"lineNumber":12,"author":{"gitId":"gordonfgz"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"gordonfgz"},"content":"    public TaskList() {"},{"lineNumber":14,"author":{"gitId":"gordonfgz"},"content":"        this.list \u003d new ArrayList\u003c\u003e();"},{"lineNumber":15,"author":{"gitId":"gordonfgz"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":17,"author":{"gitId":"gordonfgz"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"gordonfgz"},"content":"     * Adds a Task into the TaskList"},{"lineNumber":19,"author":{"gitId":"gordonfgz"},"content":"     *"},{"lineNumber":20,"author":{"gitId":"gordonfgz"},"content":"     * @param task is the task to be added"},{"lineNumber":21,"author":{"gitId":"gordonfgz"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"gordonfgz"},"content":"    protected void add(Task task) {"},{"lineNumber":23,"author":{"gitId":"gordonfgz"},"content":"        this.list.add(task);"},{"lineNumber":24,"author":{"gitId":"gordonfgz"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":26,"author":{"gitId":"gordonfgz"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"gordonfgz"},"content":"     * Returns the total number of Tasks in the TaskList"},{"lineNumber":28,"author":{"gitId":"gordonfgz"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"gordonfgz"},"content":"    protected int length() {"},{"lineNumber":30,"author":{"gitId":"gordonfgz"},"content":"        return this.list.size();"},{"lineNumber":31,"author":{"gitId":"gordonfgz"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":33,"author":{"gitId":"gordonfgz"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"gordonfgz"},"content":"     * Returns the Task at a specific index"},{"lineNumber":35,"author":{"gitId":"gordonfgz"},"content":"     *"},{"lineNumber":36,"author":{"gitId":"gordonfgz"},"content":"     * @param index is the index of the Task to be retrieved"},{"lineNumber":37,"author":{"gitId":"gordonfgz"},"content":"     * @return the Task"},{"lineNumber":38,"author":{"gitId":"gordonfgz"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"gordonfgz"},"content":"    protected Task get(int index) {"},{"lineNumber":40,"author":{"gitId":"gordonfgz"},"content":"        return this.list.get(index);"},{"lineNumber":41,"author":{"gitId":"gordonfgz"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":43,"author":{"gitId":"gordonfgz"},"content":"    /**"},{"lineNumber":44,"author":{"gitId":"gordonfgz"},"content":"     * Provides the actual list that is storing the Tasks"},{"lineNumber":45,"author":{"gitId":"gordonfgz"},"content":"     *"},{"lineNumber":46,"author":{"gitId":"gordonfgz"},"content":"     * @return the list"},{"lineNumber":47,"author":{"gitId":"gordonfgz"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"gordonfgz"},"content":"    protected ArrayList\u003cTask\u003e get() {"},{"lineNumber":49,"author":{"gitId":"gordonfgz"},"content":"        return this.list;"},{"lineNumber":50,"author":{"gitId":"gordonfgz"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":52,"author":{"gitId":"gordonfgz"},"content":"    /**"},{"lineNumber":53,"author":{"gitId":"gordonfgz"},"content":"     * Returns the index of a specific Task"},{"lineNumber":54,"author":{"gitId":"gordonfgz"},"content":"     *"},{"lineNumber":55,"author":{"gitId":"gordonfgz"},"content":"     * @param task is the Task of the index to be retrieved"},{"lineNumber":56,"author":{"gitId":"gordonfgz"},"content":"     * @return the index as an int"},{"lineNumber":57,"author":{"gitId":"gordonfgz"},"content":"     */"},{"lineNumber":58,"author":{"gitId":"gordonfgz"},"content":"    protected int getIndex(Task task) {"},{"lineNumber":59,"author":{"gitId":"gordonfgz"},"content":"        return this.list.indexOf(task);"},{"lineNumber":60,"author":{"gitId":"gordonfgz"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":62,"author":{"gitId":"gordonfgz"},"content":"    /**"},{"lineNumber":63,"author":{"gitId":"gordonfgz"},"content":"     * Checks if the TaskList is empty"},{"lineNumber":64,"author":{"gitId":"gordonfgz"},"content":"     *"},{"lineNumber":65,"author":{"gitId":"gordonfgz"},"content":"     * @return true if the TaskList is empty"},{"lineNumber":66,"author":{"gitId":"gordonfgz"},"content":"     */"},{"lineNumber":67,"author":{"gitId":"gordonfgz"},"content":"    protected boolean isEmpty() {"},{"lineNumber":68,"author":{"gitId":"gordonfgz"},"content":"        return this.list.isEmpty();"},{"lineNumber":69,"author":{"gitId":"gordonfgz"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":71,"author":{"gitId":"gordonfgz"},"content":"    /**"},{"lineNumber":72,"author":{"gitId":"gordonfgz"},"content":"     * Removes a specific Task from the TaskList"},{"lineNumber":73,"author":{"gitId":"gordonfgz"},"content":"     *"},{"lineNumber":74,"author":{"gitId":"gordonfgz"},"content":"     * @param task is the Task to be removed"},{"lineNumber":75,"author":{"gitId":"gordonfgz"},"content":"     */"},{"lineNumber":76,"author":{"gitId":"gordonfgz"},"content":"    protected void remove(Task task) {"},{"lineNumber":77,"author":{"gitId":"gordonfgz"},"content":"        this.list.remove(task);"},{"lineNumber":78,"author":{"gitId":"gordonfgz"},"content":"    }"},{"lineNumber":79,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":80,"author":{"gitId":"gordonfgz"},"content":"}"}],"authorContributionMap":{"gordonfgz":80}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gordonfgz"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"gordonfgz"},"content":" * Encapsulates a task"},{"lineNumber":3,"author":{"gitId":"gordonfgz"},"content":" */"},{"lineNumber":4,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":5,"author":{"gitId":"gordonfgz"},"content":"public class Todo extends Task {"},{"lineNumber":6,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":7,"author":{"gitId":"gordonfgz"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"gordonfgz"},"content":"     * Constructor"},{"lineNumber":9,"author":{"gitId":"gordonfgz"},"content":"     *"},{"lineNumber":10,"author":{"gitId":"gordonfgz"},"content":"     * @param description is the description of the task"},{"lineNumber":11,"author":{"gitId":"gordonfgz"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"gordonfgz"},"content":"    public Todo(String description) {"},{"lineNumber":13,"author":{"gitId":"gordonfgz"},"content":"        super(description);"},{"lineNumber":14,"author":{"gitId":"gordonfgz"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":16,"author":{"gitId":"gordonfgz"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"gordonfgz"},"content":"     * Constructor"},{"lineNumber":18,"author":{"gitId":"gordonfgz"},"content":"     *"},{"lineNumber":19,"author":{"gitId":"gordonfgz"},"content":"     * @param description is the description of the task"},{"lineNumber":20,"author":{"gitId":"gordonfgz"},"content":"     * @param isDone is whether or not the task is done"},{"lineNumber":21,"author":{"gitId":"gordonfgz"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"gordonfgz"},"content":"    public Todo(String description, boolean isDone) {"},{"lineNumber":23,"author":{"gitId":"gordonfgz"},"content":"        super(description, isDone);"},{"lineNumber":24,"author":{"gitId":"gordonfgz"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":26,"author":{"gitId":"gordonfgz"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"gordonfgz"},"content":"     * Gives the String representation of the Task"},{"lineNumber":28,"author":{"gitId":"gordonfgz"},"content":"     *"},{"lineNumber":29,"author":{"gitId":"gordonfgz"},"content":"     * @return a String"},{"lineNumber":30,"author":{"gitId":"gordonfgz"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"gordonfgz"},"content":"    @Override"},{"lineNumber":32,"author":{"gitId":"gordonfgz"},"content":"    public String toString() {"},{"lineNumber":33,"author":{"gitId":"gordonfgz"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":34,"author":{"gitId":"gordonfgz"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":36,"author":{"gitId":"gordonfgz"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"gordonfgz"},"content":"     * Checks if two Todos are equal"},{"lineNumber":38,"author":{"gitId":"gordonfgz"},"content":"     *"},{"lineNumber":39,"author":{"gitId":"gordonfgz"},"content":"     * @return a boolean"},{"lineNumber":40,"author":{"gitId":"gordonfgz"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"gordonfgz"},"content":"    @Override"},{"lineNumber":42,"author":{"gitId":"gordonfgz"},"content":"    public boolean equals(Object object) {"},{"lineNumber":43,"author":{"gitId":"gordonfgz"},"content":"        if (this \u003d\u003d object) {"},{"lineNumber":44,"author":{"gitId":"gordonfgz"},"content":"            return true;"},{"lineNumber":45,"author":{"gitId":"gordonfgz"},"content":"        } else if (object instanceof Todo) {"},{"lineNumber":46,"author":{"gitId":"gordonfgz"},"content":"            Todo otherTodo \u003d (Todo) object;"},{"lineNumber":47,"author":{"gitId":"gordonfgz"},"content":"            return this.description.equals(otherTodo.description)"},{"lineNumber":48,"author":{"gitId":"gordonfgz"},"content":"                        \u0026\u0026 this.isDone \u003d\u003d otherTodo.isDone;"},{"lineNumber":49,"author":{"gitId":"gordonfgz"},"content":"        } else {"},{"lineNumber":50,"author":{"gitId":"gordonfgz"},"content":"            return false;"},{"lineNumber":51,"author":{"gitId":"gordonfgz"},"content":"        }"},{"lineNumber":52,"author":{"gitId":"gordonfgz"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"gordonfgz"},"content":"}"}],"authorContributionMap":{"gordonfgz":53}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gordonfgz"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"gordonfgz"},"content":" * Encapsulates a User Interface"},{"lineNumber":3,"author":{"gitId":"gordonfgz"},"content":" * Deals with interactions with the user"},{"lineNumber":4,"author":{"gitId":"gordonfgz"},"content":" */"},{"lineNumber":5,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":6,"author":{"gitId":"gordonfgz"},"content":"public class Ui {"},{"lineNumber":7,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":8,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":9,"author":{"gitId":"gordonfgz"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"gordonfgz"},"content":"     * Returns the farewell message"},{"lineNumber":11,"author":{"gitId":"gordonfgz"},"content":"     *"},{"lineNumber":12,"author":{"gitId":"gordonfgz"},"content":"     * @return String"},{"lineNumber":13,"author":{"gitId":"gordonfgz"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"gordonfgz"},"content":"    protected String farewell() {"},{"lineNumber":15,"author":{"gitId":"gordonfgz"},"content":"        return \"Bye. Hope to see you again soon!\";"},{"lineNumber":16,"author":{"gitId":"gordonfgz"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":18,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":19,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":20,"author":{"gitId":"gordonfgz"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"gordonfgz"},"content":"     * Returns the message when TaskList is shown in String form"},{"lineNumber":22,"author":{"gitId":"gordonfgz"},"content":"     *"},{"lineNumber":23,"author":{"gitId":"gordonfgz"},"content":"     * @return String"},{"lineNumber":24,"author":{"gitId":"gordonfgz"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"gordonfgz"},"content":"    protected String listMsg() {"},{"lineNumber":26,"author":{"gitId":"gordonfgz"},"content":"        return \"Here are the tasks in your list:\";"},{"lineNumber":27,"author":{"gitId":"gordonfgz"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":29,"author":{"gitId":"gordonfgz"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"gordonfgz"},"content":"     * Returns the message when a Task is marked as done"},{"lineNumber":31,"author":{"gitId":"gordonfgz"},"content":"     *"},{"lineNumber":32,"author":{"gitId":"gordonfgz"},"content":"     * @return String"},{"lineNumber":33,"author":{"gitId":"gordonfgz"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"gordonfgz"},"content":"    protected String markAsDoneMsg(Task chosen) {"},{"lineNumber":35,"author":{"gitId":"gordonfgz"},"content":"        return \"Nice! I\u0027ve marked this task as done: \" + \"\\n\""},{"lineNumber":36,"author":{"gitId":"gordonfgz"},"content":"                + chosen;"},{"lineNumber":37,"author":{"gitId":"gordonfgz"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":39,"author":{"gitId":"gordonfgz"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"gordonfgz"},"content":"     * Prints out the message when a Task is deleted"},{"lineNumber":41,"author":{"gitId":"gordonfgz"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"gordonfgz"},"content":"    protected String returnDeleteMsg(int i, Task chosen) {"},{"lineNumber":43,"author":{"gitId":"gordonfgz"},"content":"        return \" Noted. I\u0027ve removed this task: \" + \"\\n\""},{"lineNumber":44,"author":{"gitId":"gordonfgz"},"content":"                            + chosen + \"\\n\""},{"lineNumber":45,"author":{"gitId":"gordonfgz"},"content":"                            + \" Now you have \" + i + \" tasks in the list.\";"},{"lineNumber":46,"author":{"gitId":"gordonfgz"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":48,"author":{"gitId":"gordonfgz"},"content":"    /**"},{"lineNumber":49,"author":{"gitId":"gordonfgz"},"content":"     * Returns the message when a Task is added to the TaskList"},{"lineNumber":50,"author":{"gitId":"gordonfgz"},"content":"     *"},{"lineNumber":51,"author":{"gitId":"gordonfgz"},"content":"     * @return String message"},{"lineNumber":52,"author":{"gitId":"gordonfgz"},"content":"     */"},{"lineNumber":53,"author":{"gitId":"gordonfgz"},"content":"    protected String addTaskToTasklistMsg(Task task, int i) {"},{"lineNumber":54,"author":{"gitId":"gordonfgz"},"content":"        return \" Got it. I\u0027ve added this task: \" + \"\\n\""},{"lineNumber":55,"author":{"gitId":"gordonfgz"},"content":"                    + \"  \" + task + \"\\n\""},{"lineNumber":56,"author":{"gitId":"gordonfgz"},"content":"                    + \" Now you have \" + i + \" tasks in the list.\";"},{"lineNumber":57,"author":{"gitId":"gordonfgz"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":59,"author":{"gitId":"gordonfgz"},"content":"    /**"},{"lineNumber":60,"author":{"gitId":"gordonfgz"},"content":"     * Returns the message when results are found in String form"},{"lineNumber":61,"author":{"gitId":"gordonfgz"},"content":"     *"},{"lineNumber":62,"author":{"gitId":"gordonfgz"},"content":"     * @return String"},{"lineNumber":63,"author":{"gitId":"gordonfgz"},"content":"     */"},{"lineNumber":64,"author":{"gitId":"gordonfgz"},"content":"    protected String findMsg() {"},{"lineNumber":65,"author":{"gitId":"gordonfgz"},"content":"        return \"Here are the matching tasks in your list:\";"},{"lineNumber":66,"author":{"gitId":"gordonfgz"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":68,"author":{"gitId":"gordonfgz"},"content":"    /**"},{"lineNumber":69,"author":{"gitId":"gordonfgz"},"content":"     * Returns the message when dupes are found and removed"},{"lineNumber":70,"author":{"gitId":"gordonfgz"},"content":"     *"},{"lineNumber":71,"author":{"gitId":"gordonfgz"},"content":"     * @return String"},{"lineNumber":72,"author":{"gitId":"gordonfgz"},"content":"     */"},{"lineNumber":73,"author":{"gitId":"gordonfgz"},"content":"    protected String removedDupes() {"},{"lineNumber":74,"author":{"gitId":"gordonfgz"},"content":"        return \"All duplicates have been removed.\";"},{"lineNumber":75,"author":{"gitId":"gordonfgz"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":77,"author":{"gitId":"gordonfgz"},"content":"    /**"},{"lineNumber":78,"author":{"gitId":"gordonfgz"},"content":"     * Returns the message when there are no dupes"},{"lineNumber":79,"author":{"gitId":"gordonfgz"},"content":"     *"},{"lineNumber":80,"author":{"gitId":"gordonfgz"},"content":"     * @return String"},{"lineNumber":81,"author":{"gitId":"gordonfgz"},"content":"     */"},{"lineNumber":82,"author":{"gitId":"gordonfgz"},"content":"    protected String noDupes() {"},{"lineNumber":83,"author":{"gitId":"gordonfgz"},"content":"        return \"No dupes were found.\";"},{"lineNumber":84,"author":{"gitId":"gordonfgz"},"content":"    }"},{"lineNumber":85,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":86,"author":{"gitId":"gordonfgz"},"content":"}"}],"authorContributionMap":{"gordonfgz":86}},{"path":"src/main/java/WrongFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gordonfgz"},"content":"public class WrongFormatException extends DukeException {"},{"lineNumber":2,"author":{"gitId":"gordonfgz"},"content":"    private String type;"},{"lineNumber":3,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":4,"author":{"gitId":"gordonfgz"},"content":"    public WrongFormatException(String type) {"},{"lineNumber":5,"author":{"gitId":"gordonfgz"},"content":"        this.type \u003d type;"},{"lineNumber":6,"author":{"gitId":"gordonfgz"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":8,"author":{"gitId":"gordonfgz"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"gordonfgz"},"content":"     * Gives the String representation of the Exception"},{"lineNumber":10,"author":{"gitId":"gordonfgz"},"content":"     *"},{"lineNumber":11,"author":{"gitId":"gordonfgz"},"content":"     * @return a String"},{"lineNumber":12,"author":{"gitId":"gordonfgz"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"gordonfgz"},"content":"    public String toString() {"},{"lineNumber":14,"author":{"gitId":"gordonfgz"},"content":"        if (type.equals(\"todo\")) {"},{"lineNumber":15,"author":{"gitId":"gordonfgz"},"content":"            return \" OOPS!!! Proper input format required! Proper format: todo{space}{description} \";"},{"lineNumber":16,"author":{"gitId":"gordonfgz"},"content":"        } else if (type.equals(\"deadline\")) {"},{"lineNumber":17,"author":{"gitId":"gordonfgz"},"content":"            return \" OOPS!!! Proper input format required!\""},{"lineNumber":18,"author":{"gitId":"gordonfgz"},"content":"                    + \"\\n\""},{"lineNumber":19,"author":{"gitId":"gordonfgz"},"content":"                    + \" Proper format: deadline{space}{description}{space}/by{space}{YYYY-MM-DD} .\";"},{"lineNumber":20,"author":{"gitId":"gordonfgz"},"content":"        } else if (type.equals(\"event\")) {"},{"lineNumber":21,"author":{"gitId":"gordonfgz"},"content":"            return \" OOPS!!! Proper input format required!\""},{"lineNumber":22,"author":{"gitId":"gordonfgz"},"content":"                    + \"\\n\""},{"lineNumber":23,"author":{"gitId":"gordonfgz"},"content":"                    + \" Proper format: deadline{space}{description}{space}/at{space}{time-slot}.\";"},{"lineNumber":24,"author":{"gitId":"gordonfgz"},"content":"        } else {"},{"lineNumber":25,"author":{"gitId":"gordonfgz"},"content":"            return \"No such Task type\";"},{"lineNumber":26,"author":{"gitId":"gordonfgz"},"content":"        }"},{"lineNumber":27,"author":{"gitId":"gordonfgz"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"gordonfgz"},"content":"}"}],"authorContributionMap":{"gordonfgz":28}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"gordonfgz"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":3,"author":{"gitId":"gordonfgz"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"gordonfgz"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"gordonfgz"},"content":"\u003c?import javafx.scene.control.Separator?\u003e"},{"lineNumber":6,"author":{"gitId":"gordonfgz"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":7,"author":{"gitId":"gordonfgz"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":8,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":9,"author":{"gitId":"gordonfgz"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":10,"author":{"gitId":"gordonfgz"},"content":"    \u003cchildren\u003e"},{"lineNumber":11,"author":{"gitId":"gordonfgz"},"content":"        \u003cLabel fx:id\u003d\"dialog\" graphicTextGap\u003d\"10.0\" style\u003d\"-fx-background-color: #08364E; -fx-padding: 7px; -fx-border-radius: 3px; -fx-background-radius: 5px; -fx-background-insets: 0,1; -fx-effect: innershadow(three-pass-box, rgba(0,0,0,0.75),1,0,1,1);\" text\u003d\"Label\" textFill\u003d\"#e1e0e0\" wrapText\u003d\"true\" /\u003e"},{"lineNumber":12,"author":{"gitId":"gordonfgz"},"content":"      \u003cSeparator opacity\u003d\"0.0\" orientation\u003d\"VERTICAL\" prefHeight\u003d\"200.0\" prefWidth\u003d\"24.0\" /\u003e"},{"lineNumber":13,"author":{"gitId":"gordonfgz"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"},{"lineNumber":14,"author":{"gitId":"gordonfgz"},"content":"    \u003c/children\u003e"},{"lineNumber":15,"author":{"gitId":"gordonfgz"},"content":"    \u003cpadding\u003e"},{"lineNumber":16,"author":{"gitId":"gordonfgz"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":17,"author":{"gitId":"gordonfgz"},"content":"    \u003c/padding\u003e"},{"lineNumber":18,"author":{"gitId":"gordonfgz"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"gordonfgz":18}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"gordonfgz"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":3,"author":{"gitId":"gordonfgz"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":4,"author":{"gitId":"gordonfgz"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":5,"author":{"gitId":"gordonfgz"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":6,"author":{"gitId":"gordonfgz"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":7,"author":{"gitId":"gordonfgz"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":8,"author":{"gitId":"gordonfgz"},"content":"\u003c?import javafx.scene.text.Font?\u003e"},{"lineNumber":9,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":10,"author":{"gitId":"gordonfgz"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background-color: GREY;\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"},{"lineNumber":11,"author":{"gitId":"gordonfgz"},"content":"    \u003cchildren\u003e"},{"lineNumber":12,"author":{"gitId":"gordonfgz"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"551.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"48.0\" prefWidth\u003d\"322.0\" promptText\u003d\"Enter Command\" style\u003d\"-fx-background-color: BLACK; -fx-text-fill: aliceblue;\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"},{"lineNumber":13,"author":{"gitId":"gordonfgz"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"323.0\" layoutY\u003d\"557.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" style\u003d\"-fx-background-color: BLACK;\" text\u003d\"Send\" textFill\u003d\"#e4e4e4\"\u003e"},{"lineNumber":14,"author":{"gitId":"gordonfgz"},"content":"         \u003cfont\u003e"},{"lineNumber":15,"author":{"gitId":"gordonfgz"},"content":"            \u003cFont name\u003d\"System Bold\" size\u003d\"12.0\" /\u003e"},{"lineNumber":16,"author":{"gitId":"gordonfgz"},"content":"         \u003c/font\u003e\u003c/Button\u003e"},{"lineNumber":17,"author":{"gitId":"gordonfgz"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background-color: BLACK; -fx-border-color: transparent;\" vvalue\u003d\"1.0\"\u003e"},{"lineNumber":18,"author":{"gitId":"gordonfgz"},"content":"            \u003ccontent\u003e"},{"lineNumber":19,"author":{"gitId":"gordonfgz"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" style\u003d\"-fx-background-color: BLACK;\" /\u003e"},{"lineNumber":20,"author":{"gitId":"gordonfgz"},"content":"            \u003c/content\u003e"},{"lineNumber":21,"author":{"gitId":"gordonfgz"},"content":"        \u003c/ScrollPane\u003e"},{"lineNumber":22,"author":{"gitId":"gordonfgz"},"content":"    \u003c/children\u003e"},{"lineNumber":23,"author":{"gitId":"gordonfgz"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"gordonfgz":23}},{"path":"src/test/java/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gordonfgz"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":2,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":3,"author":{"gitId":"gordonfgz"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":5,"author":{"gitId":"gordonfgz"},"content":"import java.time.LocalDate;"},{"lineNumber":6,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":7,"author":{"gitId":"gordonfgz"},"content":"public class TaskListTest {"},{"lineNumber":8,"author":{"gitId":"gordonfgz"},"content":"    @Test"},{"lineNumber":9,"author":{"gitId":"gordonfgz"},"content":"    public void lengthTest() {"},{"lineNumber":10,"author":{"gitId":"gordonfgz"},"content":"        TaskList list \u003d new TaskList();"},{"lineNumber":11,"author":{"gitId":"gordonfgz"},"content":"        Todo todo \u003d new Todo(\"Run\");"},{"lineNumber":12,"author":{"gitId":"gordonfgz"},"content":"        Deadline deadline \u003d new Deadline(\"Return book\", LocalDate.parse(\"2019-08-02\"));"},{"lineNumber":13,"author":{"gitId":"gordonfgz"},"content":"        Event event \u003d new Event(\"project meeting\", \"tuesday morning\");"},{"lineNumber":14,"author":{"gitId":"gordonfgz"},"content":"        list.add(todo);"},{"lineNumber":15,"author":{"gitId":"gordonfgz"},"content":"        list.add(deadline);"},{"lineNumber":16,"author":{"gitId":"gordonfgz"},"content":"        list.add(event);"},{"lineNumber":17,"author":{"gitId":"gordonfgz"},"content":"        assertEquals(list.length(), 3);"},{"lineNumber":18,"author":{"gitId":"gordonfgz"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":20,"author":{"gitId":"gordonfgz"},"content":"    @Test"},{"lineNumber":21,"author":{"gitId":"gordonfgz"},"content":"    public void indexTest() {"},{"lineNumber":22,"author":{"gitId":"gordonfgz"},"content":"        TaskList list \u003d new TaskList();"},{"lineNumber":23,"author":{"gitId":"gordonfgz"},"content":"        Todo todo \u003d new Todo(\"Run\");"},{"lineNumber":24,"author":{"gitId":"gordonfgz"},"content":"        Deadline deadline \u003d new Deadline(\"Return book\", LocalDate.parse(\"2019-08-02\"));"},{"lineNumber":25,"author":{"gitId":"gordonfgz"},"content":"        Event event \u003d new Event(\"project meeting\", \"tuesday morning\");"},{"lineNumber":26,"author":{"gitId":"gordonfgz"},"content":"        list.add(todo);"},{"lineNumber":27,"author":{"gitId":"gordonfgz"},"content":"        list.add(deadline);"},{"lineNumber":28,"author":{"gitId":"gordonfgz"},"content":"        list.add(event);"},{"lineNumber":29,"author":{"gitId":"gordonfgz"},"content":"        assertEquals(list.getIndex(deadline), 1);"},{"lineNumber":30,"author":{"gitId":"gordonfgz"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":32,"author":{"gitId":"gordonfgz"},"content":"    @Test"},{"lineNumber":33,"author":{"gitId":"gordonfgz"},"content":"    public void removeTest() {"},{"lineNumber":34,"author":{"gitId":"gordonfgz"},"content":"        TaskList list \u003d new TaskList();"},{"lineNumber":35,"author":{"gitId":"gordonfgz"},"content":"        Todo todo \u003d new Todo(\"Run\");"},{"lineNumber":36,"author":{"gitId":"gordonfgz"},"content":"        Deadline deadline \u003d new Deadline(\"Return book\", LocalDate.parse(\"2019-08-02\"));"},{"lineNumber":37,"author":{"gitId":"gordonfgz"},"content":"        Event event \u003d new Event(\"project meeting\", \"tuesday morning\");"},{"lineNumber":38,"author":{"gitId":"gordonfgz"},"content":"        list.add(todo);"},{"lineNumber":39,"author":{"gitId":"gordonfgz"},"content":"        list.add(deadline);"},{"lineNumber":40,"author":{"gitId":"gordonfgz"},"content":"        list.add(event);"},{"lineNumber":41,"author":{"gitId":"gordonfgz"},"content":"        list.remove(deadline);"},{"lineNumber":42,"author":{"gitId":"gordonfgz"},"content":"        assertEquals(list.length(), 2);"},{"lineNumber":43,"author":{"gitId":"gordonfgz"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":45,"author":{"gitId":"gordonfgz"},"content":""},{"lineNumber":46,"author":{"gitId":"gordonfgz"},"content":"}"}],"authorContributionMap":{"gordonfgz":46}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"gordonfgz"},"content":"todo borrow book"},{"lineNumber":2,"author":{"gitId":"gordonfgz"},"content":"list"},{"lineNumber":3,"author":{"gitId":"gordonfgz"},"content":"deadline return book /by Sunday"},{"lineNumber":4,"author":{"gitId":"gordonfgz"},"content":"event project meeting /at Mon 2-4pm"},{"lineNumber":5,"author":{"gitId":"gordonfgz"},"content":"bye"}],"authorContributionMap":{"gordonfgz":5}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"gordonfgz"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"gordonfgz":1,"-":20}}]
