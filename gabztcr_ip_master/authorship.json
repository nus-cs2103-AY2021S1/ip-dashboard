[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gabztcr"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gabztcr"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gabztcr"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gabztcr": 14
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gabztcr"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "enum ListChange"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "{"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "    ADD, DELETE"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "}"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gabztcr"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gabztcr"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "    public static String numTasks(List\u003cTask\u003e lst) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "        int numTasks \u003d lst.size();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "        return numTasks \u003d\u003d 1 ? \"1 task\" : numTasks + \" tasks\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "    "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "    public static void listChangePrint(Task task, List\u003cTask\u003e taskList, ListChange change) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "        String keyword \u003d \"\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "        switch (change) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "            case ADD:"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "                keyword \u003d \"added\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "            case DELETE:"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "                keyword \u003d \"removed\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gabztcr"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve \" + keyword + \" this task:\\n\" + task.toString());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "        System.out.println(\"Now you have \" + numTasks(taskList) + \" in the list.\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gabztcr"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "        System.out.println(\"————————————————————————————————————————————————————————————\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke!\\nWhat can I do for you?\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "        System.out.println(\"————————————————————————————————————————————————————————————\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gabztcr"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "        String command \u003d sc.nextLine();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gabztcr"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "        while (!command.equals(\"bye\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "            System.out.println(\"————————————————————————————————————————————————————————————\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "            if (command.equals(\"list\")) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "                for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "                    System.out.println(i + 1 + \".\" + tasks.get(i).toString());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "                }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "                String[] command_lst \u003d command.split(\" \", 2);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "                String action \u003d command_lst[0];"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "                "
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "                switch (action) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "                    case \"done\":"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "                            int taskId \u003d Integer.parseInt(command.split(\" \")[1]) - 1;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "                            tasks.get(taskId).markAsDone();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "                            System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "                            System.out.println(tasks.get(taskId).toString());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "                        } catch (Exception e) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "                            new DukeException(\"invalidMarkingDone\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "                    case \"todo\":"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "                            Task newTask \u003d new ToDo(command_lst[1]);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "                            tasks.add(newTask);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "                            listChangePrint(newTask, tasks, ListChange.ADD);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "                        } catch (Exception e) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "                            new DukeException(\"invalidTodo\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "                    case \"deadline\":"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "                            String desc \u003d command_lst[1].split(\" /by \")[0];"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "                            String by \u003d command_lst[1].split(\" /by \")[1];"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "                            Task newTask \u003d new Deadline(desc, by);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "                            tasks.add(newTask);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "                            listChangePrint(newTask, tasks, ListChange.ADD);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "                        } catch (Exception e) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "                            new DukeException(\"invalidDeadline\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "                    case \"event\":"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "                            String desc \u003d command_lst[1].split(\" /at \")[0];"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "                            String at \u003d command_lst[1].split(\" /at \")[1];"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "                            Task newTask \u003d new Event(desc, at);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "                            tasks.add(newTask);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "                            listChangePrint(newTask, tasks, ListChange.ADD);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "                        } catch (Exception e) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "                            new DukeException(\"invalidEvent\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "                    case \"delete\":"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "                            int taskId \u003d Integer.parseInt(command.split(\" \")[1]) - 1;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "                            Task removedTask \u003d tasks.remove(taskId);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "                            listChangePrint(removedTask, tasks, ListChange.DELETE);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "                        } catch (Exception e) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "                            new DukeException(\"invalidDelete\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "                    default:"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "                        new DukeException(\"invalidCommand\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "                }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "            }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "            "
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "            System.out.println(\"————————————————————————————————————————————————————————————\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "            command \u003d sc.nextLine();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "gabztcr"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "        System.out.println(\"————————————————————————————————————————————————————————————\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "        System.out.println(\"————————————————————————————————————————————————————————————\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "        sc.close();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gabztcr": 111,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "    public DukeException(String errorType) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "        String errorMessage \u003d errorType.equals(\"invalidCommand\") "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "                ? \"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "                : errorType.equals(\"invalidMarkingDone\") "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "                ? \"☹ OOPS!!! Command to mark a task done is formatted wrongly.\" "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "                : errorType.equals(\"invalidTodo\")"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "                ? \"☹ OOPS!!! The description of a todo cannot be empty.\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "                : errorType.equals(\"invalidDeadline\")"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "                ? \"☹ OOPS!!! The deadline is formatted wrongly.\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "                : errorType.equals(\"invalidEvent\")"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "                ? \"☹ OOPS!!! The event is formatted wrongly.\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "                : errorType.equals(\"invalidDelete\")"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "                ? \"☹ OOPS!!! Command to delete a task done is formatted wrongly.\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "                : \"Unknown error. Try something else.\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "        System.out.println(errorMessage);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gabztcr": 18
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gabztcr"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gabztcr"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gabztcr"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gabztcr": 14
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gabztcr"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gabztcr"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gabztcr"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gabztcr"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gabztcr": 21
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gabztcr"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gabztcr"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gabztcr": 11
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "deadline return book /by June 6th"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "event project meeting /at Aug 6th 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "done 10"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "todo"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "event anyhow"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "blah"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "list"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "gabztcr": 12
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gabztcr"
        },
        "content": "javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "gabztcr": 1,
      "-": 20
    }
  }
]
