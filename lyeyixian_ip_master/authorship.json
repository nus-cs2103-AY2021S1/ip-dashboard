[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "public class Deadline extends Task{"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    private LocalDate deadlineDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    private String by;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        this.deadlineDate \u003d LocalDate.parse(by);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public Deadline(String description, String by, boolean isDone) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        this.deadlineDate \u003d LocalDate.parse(by);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public String getData() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        return \"d/\" + super.getData() + \"/\" + this.by;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    "
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + this.deadlineDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lyeyixian": 29
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public static void updateData(List\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            FileWriter fw \u003d new FileWriter(\"data/duke.txt\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            StringBuilder textToAdd \u003d new StringBuilder();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "      "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        for (Task t : list) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            String data \u003d t.getData();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            textToAdd.append(data).append(\"\\n\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "      "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        fw.write(textToAdd.toString());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        } catch (IOException e) { "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            System.out.println(\"Something went wrong\" + e.getMessage());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "  "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public static void loadData(List\u003cTask\u003e list) { "
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            File file \u003d new File(\"data/duke.txt\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            "
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            if (file.exists()) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                Scanner sc \u003d new Scanner(file);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    "
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                while (sc.hasNext()) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                    String[] data \u003d sc.nextLine().split(\"/\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                    String taskType \u003d data[0];"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                    boolean status \u003d data[1].equals(\"1\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                    String description \u003d data[2];"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                    String additional;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                    "
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                    switch (taskType) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                        case \"t\":"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                            list.add(new ToDo(description, status));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                        case \"d\":"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                            additional \u003d data[3];"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                            list.add(new Deadline(description, additional, status));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                        case \"e\":"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                            additional \u003d data[3];"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                            list.add(new Event(description, additional, status));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                File dir \u003d new File(\"data\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                dir.mkdir();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                file.createNewFile();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "      "
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            System.out.println(\"File not exists\" + e.getMessage());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            System.out.println(\"Something went wrong \" + e.getMessage());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "  "
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public static String process(String input, List\u003cTask\u003e list) throws DukeException {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        String output;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        String[] command \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            output \u003d \"\\tBye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        } else if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            if (list.isEmpty()) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                throw new DukeException(\"\\t☹ OOPS!!! There is no task in the list.\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            StringBuilder concat \u003d new StringBuilder();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            for (int i \u003d 0; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                concat.append(String.format(\"\\n\\t%d. %s\", i + 1, list.get(i)));"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            output \u003d \"\\tHere are the tasks in your list: \" + concat;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        } else if (command[0].equals(\"done\")){"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            if (command.length \u003c 2) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                throw new DukeException(\"\\t☹ OOPS!!! The description of a done cannot be empty.\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            int inputNumber;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                inputNumber \u003d Integer.parseInt(command[1]);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            } catch(NumberFormatException e) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                throw new DukeException(\"\\t☹ OOPS!!! Argument must be an integer.\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            if (inputNumber \u003c\u003d 0) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                throw new DukeException((\"\\t☹ OOPS!!! Invalid argument.\"));"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            if (inputNumber \u003e list.size()) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                throw new DukeException(\"\\t☹ OOPS!!! There is only \" + list.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            int index \u003d inputNumber - 1;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            Task targetTask \u003d list.get(index);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            if (targetTask.getStatus()) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                throw new DukeException(\"\\t☹ OOPS!!! You\u0027ve already done that task.\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            targetTask.setDone();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            updateData(list);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            output \u003d \"\\tNice! I\u0027ve marked this task as done: \\n\\t\\t\" + targetTask;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        } else if (command[0].equals(\"todo\")) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            if (command.length \u003c 2 || command[1].isBlank()) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                throw new DukeException(\"\\t☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            ToDo newToDo \u003d new ToDo(command[1]);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            list.add(newToDo);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            updateData(list);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            output \u003d \"\\tGot it. I\u0027ve added this task: \\n\\t\\t\" + newToDo + \"\\n\\tNow you have \" + list.size() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        } else if (command[0].equals(\"deadline\")) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            if (command.length \u003c 2) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                throw new DukeException(\"\\t☹ OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            String[] commandParam \u003d command[1].split(\"/by\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            if (commandParam.length \u003c 2) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                throw new DukeException(\"\\t☹ OOPS!!! Invalid Argument (\\\"/by\\\" String not found)\");"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            String description \u003d commandParam[0].trim();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            String by \u003d commandParam[1].trim();"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            if (description.isBlank()) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                throw new DukeException(\"\\t☹ OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            if (by.isBlank()) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                throw new DukeException(\"\\t☹ OOPS!!! The /by description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            "
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            if (!by.matches(\"\\\\d{4}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])\")) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                throw new DukeException(\"\\t☹ OOPS!!! The date format must be yyyy-mm-dd.\");"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            Deadline newDeadline \u003d new Deadline(description, by);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            list.add(newDeadline);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            updateData(list);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            output \u003d \"\\tGot it. I\u0027ve added this task: \\n\\t\\t\" + newDeadline + \"\\n\\tNow you have \" + list.size() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        } else if (command[0].equals(\"event\")) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            if (command.length \u003c 2) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                throw new DukeException(\"\\t☹ OOPS!!! The description of a event cannot be empty.\");"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            String[] commandParam \u003d command[1].split(\"/at\");"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            if (commandParam.length \u003c 2) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                throw new DukeException(\"\\t☹ OOPS!!! Invalid Argument (\\\"/at\\\" String not found)\");"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            String description \u003d commandParam[0].trim();"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            String at \u003d commandParam[1].trim();"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            if (description.isBlank()) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                throw new DukeException(\"\\t☹ OOPS!!! The description of a event cannot be empty.\");"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            if (at.isBlank()) {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                throw new DukeException(\"\\t☹ OOPS!!! The /at description of a event cannot be empty.\");"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            if (!at.matches(\"\\\\d{4}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01]) ([1-9]|1[012]):([0-5][0-9]) [AP]M\")) {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                throw new DukeException(\"\\t☹ OOPS!!! The date-time format must be yyyy-mm-dd h:mm AM/PM.\");"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            Event newEvent \u003d new Event(description, at);"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            list.add(newEvent);"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            updateData(list);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            output \u003d \"\\tGot it. I\u0027ve added this task: \\n\\t\\t\" + newEvent + \"\\n\\tNow you have \" + list.size() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        } else if (command[0].equals(\"delete\")) {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            if (command.length \u003c 2) {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                throw new DukeException(\"\\t☹ OOPS!!! The description of a delete cannot be empty.\");"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            int inputNumber;"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                inputNumber \u003d Integer.parseInt(command[1]);"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            } catch(NumberFormatException e) {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                throw new DukeException(\"\\t☹ OOPS!!! Argument must be an integer.\");"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            }"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            if (inputNumber \u003c\u003d 0) {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                throw new DukeException((\"\\t☹ OOPS!!! Invalid argument.\"));"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            if (inputNumber \u003e list.size()) {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                throw new DukeException(\"\\t☹ OOPS!!! There is only \" + list.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            }"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            int index \u003d inputNumber - 1;"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            Task targetTask \u003d list.remove(index);"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            updateData(list);"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            output \u003d \"\\tNoted. I\u0027ve removed this task: \\n\\t\\t\" + targetTask + \"\\n\\tNow you have \" + list.size() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            throw new DukeException(\"\\t☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        String divider \u003d \"---------------------------------------------------------------------------------------------\";"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        String input \u003d \"\";"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        List\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        String output;"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        System.out.println(\"\\n\" + logo);"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        System.out.println(\"\\t\" + divider);"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        System.out.println(\"\\t\" + \"Hello! I\u0027m Duke\\n\\tWhat can I do for you?\");"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        System.out.println(\"\\t\" + divider);"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        loadData(list);"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        while (!input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                output \u003d process(input, list);"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                output \u003d e.getMessage();"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            }"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            System.out.println(\"\\t\" + divider);"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            System.out.println(output);"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            System.out.println(\"\\t\" + divider + \"\\n\");"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lyeyixian": 243,
      "-": 9
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public DukeException(String msg) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lyeyixian": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    private LocalDateTime eventDateTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    private String at;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        this.eventDateTime \u003d LocalDateTime.parse(at, DateTimeFormatter.ofPattern(\"yyyy-MM-dd h:mm a\"));"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public Event(String description, String at, boolean isDone) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        this.eventDateTime \u003d LocalDateTime.parse(at, DateTimeFormatter.ofPattern(\"yyyy-MM-dd h:mm a\"));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public String getData() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        return \"e/\" + super.getData() + \"/\" + this.at;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "  "
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + this.eventDateTime.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd h:mm a\")) + \")\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lyeyixian": 29
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public Task(String description, boolean isDone) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        return isDone"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                ? \"✓\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                : \"✘\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public String getData() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        return (this.isDone ? 1 : 0) + \"/\" + this.description;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public boolean getStatus() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public void setDone() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lyeyixian": 37
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public ToDo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public String getData() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        return \"t/\" + super.getData();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lyeyixian": 19
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "todo read"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "event go out /at Sunday 4-5pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "todo"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "asdf"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "lyeyixian": 11
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "lyeyixian": 1,
      "-": 20
    }
  }
]
