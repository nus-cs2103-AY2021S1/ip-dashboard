[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "# duke.Duke project template"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "1. Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Open or Import`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "1. After the importing is complete, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    ____        _        "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      }
    ],
    "authorContributionMap": {
      "IsaacTin": 2,
      "-": 24
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "import duke.commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": " * Bot with personality which assists and keeps track of user\u0027s tasks."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     * Constructor to create Duke object."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     * \u003cp\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     * Contains a \u003ccode\u003eUi\u003c/code\u003e, a \u003ccode\u003eStorage\u003c/code\u003e,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     * \\a \u003ccode\u003eParser\u003c/code\u003e and a \u003ccode\u003eTaskList\u003c/code\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     * which is responsible for user interaction,"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     * saving and writing user\u0027s tasks to user\u0027s local storage and"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     * making sense of user\u0027s commands and keeping track of user\u0027s tasks respectively."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "        storage \u003d new Storage();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "        parser \u003d new Parser();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "            tasks \u003d new TaskList(storage.readFile());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     * Responsible for receiving user\u0027s input and executing program."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     * \u003cp\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     * Communicates with user via Ui, sends user input to parser"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     * to parse and find command of user, executes command and"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     * sends result to be saved in storage."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "                Command command \u003d parser.findCommand(fullCommand);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "                command.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "                storage.save(tasks.getList());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "                isExit \u003d command.isExit();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "            } catch (DukeException | IOException e) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     * Starts Duke up."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     * @param args user input from the command line."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "        new Duke().run();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "IsaacTin": 70,
      "-": 3
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": " * Exception thrown when program encounters errors."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     * Exception duke throws whenever there are errors encountered."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     * @param message the specific details of the error thrown."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "        super(\"Hi my friend, \" + message);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "IsaacTin": 16
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "import duke.commands.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": " * Parses user input to make sense of the command and find out what user wants."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    boolean entered \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    String description \u003d \"\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    private Commands command;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     * Parses user input and finds out of user input is valid and if it is, which specific command is given."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     * @param description User input containing command and tasks description."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     * @return Specific command that user keyed in."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    public Command findCommand(String description) throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "        if (description.length() \u003d\u003d 0 \u0026\u0026 entered) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "            throw new DukeException(\"there\u0027s no commands\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "        } else if (description.equals(\"list\")) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "            command \u003d Commands.LIST;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "        } else if (description.length() \u003e\u003d 4 \u0026\u0026 description.substring(0, 4).equals(\"done\")) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "            if (description.substring(3).split(\" \").length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "                throw new DukeException(\"you need to give a number.\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "            } else if (description.split(\" \").length \u003e 2) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "                throw new DukeException(\"Check one at a time pls and only one space between your \u0027done\u0027 and the task number.\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "            command \u003d Commands.DONE;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "            this.description \u003d description.split(\" \")[1];"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "            return new DoneCommand(this.description);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "        } else if (description.length() \u003e\u003d 4 \u0026\u0026 description.substring(0, 4).equals(\"todo\")) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "            if (description.substring(3).split(\" \").length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "                throw new DukeException((\"you don\u0027t even know what you want to do.\"));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "            command \u003d Commands.TODO;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "            this.description \u003d description.substring(5);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "            return new AddCommand(command, this.description);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "        } else if (description.length() \u003e\u003d 8 \u0026\u0026 description.substring(0, 8).equals(\"deadline\")) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "            if (description.substring(7).split(\" \").length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "                throw new DukeException(\"no deadline given so how you know when it is?\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "            } else if (description.split(\"/by\").length \u003c 2) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "                throw new DukeException(\"for deadlines, please include a \u0027/by\u0027 just before the deadline!\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "            command \u003d Commands.DEADLINE;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "            this.description \u003d description.substring(9);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "            return new AddCommand(command, this.description);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "        } else if (description.length() \u003e\u003d 5 \u0026\u0026 description.substring(0, 5).equals(\"event\")) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "            if (description.substring(4).split(\" \").length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "                throw new DukeException(\"I don\u0027t see any event.\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "            } else if (description.split(\"/at\").length \u003c 2) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "                throw new DukeException(\"for events, please include a \u0027/at\u0027 just before the event!\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "            command \u003d Commands.EVENT;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "            this.description \u003d description.substring(6);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "            return new AddCommand(command, this.description);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "        } else if (description.length() \u003e\u003d 6 \u0026\u0026 description.substring(0, 6).equals(\"delete\")) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "            if (description.substring(5).split(\" \").length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "                throw new DukeException(\"you need to give a number.\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "            } else if (description.split(\" \").length \u003e 2) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "                throw new DukeException(\"Delete one at a time pls and only have one space between \u0027delete\u0027 and the task number.\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "            command \u003d Commands.DELETE;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "            this.description \u003d description.split(\" \")[1];"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "            return new DeleteCommand(this.description);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "        } else if (description.length() \u003e\u003d 4 \u0026\u0026 description.substring(0, 4).equals(\"date\")) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "            if (description.substring(3).split(\" \").length \u003d\u003d 1 || description.substring(3).split(\" \").length \u003e 2) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "                throw new DukeException((\"you need to input a legit date for e.g: 29-01-19, no more and no less.\"));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "            command \u003d Commands.DATE;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "            this.description \u003d description.substring(5);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "            return new DateCommand(this.description);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "        } else if (description.length() \u003e\u003d 4 \u0026\u0026 description.startsWith(\"find\")) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "            if (description.substring(3).split(\" \").length \u003d\u003d 1 || description.substring(3).split(\" \").length \u003e 2) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "                throw new DukeException((\"you need to input something to find.\"));"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "            command \u003d Commands.FIND;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "            this.description \u003d description.substring(5);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "            return new FindCommand(this.description);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "        } else if (description.equals(\"bye\")) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "            return new ByeCommand();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "        } else if (entered) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "            throw new DukeException(\"you gotta put in a correct command.\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "            entered \u003d true;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "            throw new DukeException(\"type in \u0027todo\u0027, \u0027deadline\u0027, \u0027event\u0027 to start!\\nAlso, type \u0027date\u0027 and key in a date in YYYY-MM-DD format to search for events/deadlines happening on that date!\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "IsaacTin": 91
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "import duke.tasks.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "import duke.tasks.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "import duke.tasks.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": " * Saves and stores tasks that user has input."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    private String database;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    private List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     * Reads the text file \u0027database.txt\u0027 which contains the saved tasks user input previously."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     * @return List of tasks which user had from the last time they used the program."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    public List\u003cTask\u003e readFile() throws DukeException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "        String currentDirectory \u003d System.getProperty(\"user.dir\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "        File dataFolder \u003d new File(currentDirectory + File.separator + \"data\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "        boolean directoryExists \u003d dataFolder.exists() \u0026\u0026 dataFolder.isDirectory();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "        if (directoryExists) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "            File database \u003d new File(dataFolder.getAbsolutePath() + File.separator + \"database.txt\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "                Scanner s \u003d new Scanner(database);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "                while (s.hasNext()) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "                    String task \u003d s.nextLine();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "                    convertIntoTasks(task);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "                }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "                this.database \u003d database.getAbsolutePath();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "                return tasks;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "            } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "                throw new DukeException(\"No file found sorry please make one\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "            dataFolder.mkdir();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "            File database \u003d new File(dataFolder.getAbsolutePath() + File.separator + \"database.txt\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "                database.createNewFile();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "                this.database \u003d database.getAbsolutePath();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "                return tasks;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "                throw new DukeException(\"File already exists\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    private void convertIntoTasks(String s) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "        Task t;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "        String[] descriptions \u003d s.split(\"\\\\|\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "        if (descriptions[0].equals(\"T\")) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "            t \u003d new Todo(descriptions[2]);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "            if (descriptions[1].equals(\"T\")) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "                t.markAsDone();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "            tasks.add(t);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "        } else if (descriptions[0].equals(\"D\")) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "            t \u003d new Deadline(descriptions[2], descriptions[3]);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "            if (descriptions[1].equals(\"T\")) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "                t.markAsDone();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "            tasks.add(t);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "        } else if (descriptions[0].equals(\"E\")) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "            t \u003d new Event(descriptions[2], descriptions[3]);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "            if (descriptions[1].equals(\"T\")) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "                t.markAsDone();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "            tasks.add(t);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     * Writes the list of tasks into text file \u0027database.txt\u0027 and saves it for future use."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     * @param tasks current list of tasks of user."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    public void save(List\u003cTask\u003e tasks) throws IOException {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "        FileWriter fw \u003d new FileWriter(database);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "            if (task instanceof Todo) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "                if (task.getDone()) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "                    fw.write(\"T\" + \"|\" + \"T\" + \"|\" + task.getDescription() + System.lineSeparator());"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "                    fw.write(\"T\" + \"|\" + \"F\" + \"|\" + task.getDescription() + System.lineSeparator());"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "                }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "            } else if (task instanceof Deadline) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "                if (task.getDone()) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "                    fw.write(\"D\" + \"|\" + \"T\" + \"|\" + task.getDescription() + \"|\" + ((Deadline) task).getDate() + System.lineSeparator());"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "                    fw.write(\"D\" + \"|\" + \"F\" + \"|\" + task.getDescription() + \"|\" + ((Deadline) task).getDate() + System.lineSeparator());"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "                }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "            } else if (task instanceof Event) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "                if (task.getDone()) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "                    fw.write(\"E\" + \"|\" + \"T\" + \"|\" + task.getDescription() + \"|\" + ((Event) task).getDate() + System.lineSeparator());"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "                    fw.write(\"E\" + \"|\" + \"F\" + \"|\" + task.getDescription() + \"|\" + ((Event) task).getDate() + System.lineSeparator());"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "                }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "}"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "IsaacTin": 113
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": " * Interacts with the user by printing instructions and responses."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    private final Scanner sc;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     * Constructor to create Ui object and initializes scanner."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     * \u003cp\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     * Prints the errors, responses and instructions which user should get,"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     * as well as receives user input to pass on to the rest of the program"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     * via scanner initialized."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "        this.sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     * Prints out welcome message when user starts program."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "        String logo \u003d \" ______  ___       __         __        _____\\n\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "                + \"   |    /         /  \\\\       /  \\\\     /\\n\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "                + \"   |    \\\\___     /____\\\\     /____\\\\   |\\n\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "                + \"   |        \\\\   /      \\\\   /      \\\\   \\\\\\n\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "                + \" ------  ___/  /        \\\\ /        \\\\    -----\\n\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "        System.out.println(\"Hello! I\u0027m\\n\" + logo + \"\\nWhat can I do for you?\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     * Prints our error when file cannot be found."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "        System.out.println(\"Created a new directory \u0027data\u0027 and new text file \u0027database.txt\u0027 for you!\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     * Prints out error message when program runs into one."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     * @param error message to be printed out for user to see."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    public void showError(String error) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "        System.out.println(error);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     * Responsible for taking in user input."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     * @return command line from user input."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "        return sc.nextLine();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     * Prints out message to send off user as user stops program."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    public void showExit() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     * Prints out message or instruction needed for user to see."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     * @param message text that is needed to be printed out for user."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    public void showMessage(String message) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "IsaacTin": 76
    }
  },
  {
    "path": "src/main/java/duke/commands/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "import duke.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "import duke.tasks.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "import duke.tasks.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "import duke.tasks.Todo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": " * Command to add \u003ccode\u003etodo\u003c/code\u003e, \u003ccode\u003edeadline\u003c/code\u003e and \u003ccode\u003eevent\u003c/code\u003e to \u003ccode\u003eTaskList\u003c/code\u003e."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    private final Commands c;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    private final String description;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     * Constructor to create AddCommand object."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     * @param c an enum that is the command to identify type of task added."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     * @param description specific details of the task being added."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    public AddCommand(Commands c, String description) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "        this.c \u003d c;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     * Adds the task into \u003ccode\u003etasklist\u003c/code\u003e."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     * @param tasklist list of all the tasks stored in Duke so far."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     * @param ui prints out messages notifying user of what is being done."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     * @param storage stores all the tasks being added so far into user\u0027s local storage."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    public void execute(TaskList tasklist, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "        switch (c) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "            case TODO:"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "                tasklist.add(new Todo(description));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "                ui.showMessage(\"Hi there, I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "                        + tasklist.get(tasklist.getSize() - 1) + \"\\nYou have \""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "                        + tasklist.getSize() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "            case DEADLINE:"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "                String[] descriptions \u003d description.split(\"/by \");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "                tasklist.add(new Deadline(descriptions[0], descriptions[1]));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "                ui.showMessage(\"Hi there, I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "                        + tasklist.get(tasklist.getSize() - 1) + \"\\nYou have \""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "                        + tasklist.getSize() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "            case EVENT:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "                String[] descriptions2 \u003d description.split(\"/at \");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "                tasklist.add(new Event(descriptions2[0], descriptions2[1]));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "                ui.showMessage(\"Hi there, I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "                        + tasklist.get(tasklist.getSize() - 1) + \"\\nYou have \""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "                        + tasklist.getSize() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "IsaacTin": 59
    }
  },
  {
    "path": "src/main/java/duke/commands/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "import duke.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": " * Command to end program with \"bye\"."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     * Prints out exit message to send of user."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     * @param tasklist list of all the tasks stored in Duke so far."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     * @param ui prints out messages notifying user of what is being done."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     * @param storage stores all the tasks being added so far into user\u0027s local storage."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    public void execute(TaskList tasklist, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "        ui.showExit();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "IsaacTin": 26
    }
  },
  {
    "path": "src/main/java/duke/commands/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": " * Command sent to Duke from user input."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     * Abstract method to be implemented by all Command subclasses, with each Command applying different executions."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     * @param tasklist list of all the tasks stored in Duke so far."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     * @param ui prints out messages notifying user of what is being done."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     * @param storage stores all the tasks being added so far into user\u0027s local storage."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    public abstract void execute(TaskList tasklist, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     * Decides if program should terminate."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     * @return true only if program is ending."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "IsaacTin": 30
    }
  },
  {
    "path": "src/main/java/duke/commands/Commands.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": " * Describes all the possible types of Commands that a user can give to Duke."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "public enum Commands {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    LIST, DONE, DELETE, TODO, DEADLINE, EVENT, DATE, FIND"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "IsaacTin": 8
    }
  },
  {
    "path": "src/main/java/duke/commands/DateCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "import duke.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "import duke.tasks.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "import duke.tasks.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": " * Command to find tasks by date."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "public class DateCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     * Constructor to create DateCommand object."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     * @param description date being searched"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    public DateCommand(String description) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     * Searches for the date that was keyed in."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     * @param tasklist list of all the tasks stored in Duke so far."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     * @param ui prints out messages notifying user of what is being done."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     * @param storage stores all the tasks being added so far into user\u0027s local storage."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     * @throws DukeException if tasks with date is not in tasklist."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    public void execute(TaskList tasklist, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "        boolean dateExists \u003d false;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "        for (Task i : tasklist.getList()) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "            if (i instanceof Deadline) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "                if(((Deadline) i).hasDate(description)) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "                    ui.showMessage(i.toString());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "                    dateExists \u003d true;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "                }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "            } else if (i instanceof Event) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "                if (((Event) i).hasDate(description)) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "                    ui.showMessage(i.toString());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "                    dateExists \u003d true;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "                }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "        if (!dateExists) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "            throw new DukeException(\"No events/deadlines with this date!\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "IsaacTin": 51
    }
  },
  {
    "path": "src/main/java/duke/commands/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "import duke.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": " * Delete task from tasklist."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     * Constructor to create DeleteCommand object."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     * @param description task number to delete."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    public DeleteCommand(String description) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     * @param tasklist list of all the tasks stored in Duke so far."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     * @param ui prints out messages notifying user of what is being done."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     * @param storage stores all the tasks being added so far into user\u0027s local storage."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     * @throws DukeException when task number does not exist"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    public void execute(TaskList tasklist, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "            int index \u003d Integer.parseInt(description.split(\" \")[0]);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "            if (tasklist.getSize() \u003c index || index \u003c\u003d 0) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "                throw new DukeException(\"you don\u0027t have this task number.\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "            Task temp \u003d tasklist.get(index - 1);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "            tasklist.delete(index - 1);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "            ui.showMessage(\"Removed this task for you!\\n\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "                    + temp + \"\\nYou have \""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "                    + tasklist.getSize() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "            throw new DukeException(\"you need to put a number.\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "IsaacTin": 45
    }
  },
  {
    "path": "src/main/java/duke/commands/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": " * Command to mark a task as done."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     * Constructor to create DateCommand object."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     * @param description task number to mark as done."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    public DoneCommand(String description) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     * Mark task number as done."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     * @param tasklist list of all the tasks stored in Duke so far."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     * @param ui prints out messages notifying user of what is being done."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     * @param storage stores all the tasks being added so far into user\u0027s local storage."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     * @throws DukeException when task number does not exist."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    public void execute(TaskList tasklist, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "            int index \u003d Integer.parseInt(description.split(\" \")[0]);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "            if (tasklist.getSize() \u003c index || index \u003c\u003d 0) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "                throw new DukeException(\"you don\u0027t have this task number.\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "            tasklist.get(index - 1).markAsDone();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "            ui.showMessage(\"Marked this task as done for you!\\n\" + tasklist.get(index - 1)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "                    + \"\\nYou have \" + tasklist.getSize() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "            throw new DukeException(\"you need to put a number.\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "IsaacTin": 44
    }
  },
  {
    "path": "src/main/java/duke/commands/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": " * Command to find words in list."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     * Constructor to create FindCommand object."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     * @param description"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    public FindCommand(String description) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     * Find tasks in TaskList which contains word being searched."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     * @param tasklist list of all the tasks stored in Duke so far."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     * @param ui prints out messages notifying user of what is being done."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     * @param storage stores all the tasks being added so far into user\u0027s local storage."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     * @throws DukeException when no words are found matching in list."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    public void execute(TaskList tasklist, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "        boolean wordExist \u003d false;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "        for (Task i : tasklist.getList()) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "            String task \u003d i.toString();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "            if (task.contains(description)) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "                ui.showMessage(task);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "                wordExist \u003d true;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "        if (!wordExist) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "            throw new DukeException(\"word does not exist in TaskList!\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "IsaacTin": 45
    }
  },
  {
    "path": "src/main/java/duke/commands/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "import duke.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": " * Shows list of tasks of user so far."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     * Prints out list of tasks of user."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     * @param tasklist list of all the tasks stored in Duke so far."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     * @param ui prints out messages notifying user of what is being done."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     * @param storage stores all the tasks being added so far into user\u0027s local storage."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     * @throws DukeException when no task in list."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    public void execute(TaskList tasklist, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "        if (tasklist.getSize() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "            throw new DukeException(\"there\u0027s nothing on the list yet.\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "            for (Task i : tasklist.getList()) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "                ui.showMessage(tasklist.getList().indexOf(i) + 1 + \".\" + i);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "IsaacTin": 29
    }
  },
  {
    "path": "src/main/java/duke/tasks/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": " * Type of task which includes end date."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    String date;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     * Constructor to create Deadline object."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     * @param description description of the task."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     * @param date date of deadline."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    public Deadline(String description, String date) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     * Gets the date of deadline."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     * @return date of the deadline."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    public String getDate() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    private String convertDate() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "        String d1 \u003d \"\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "        String[] descriptions \u003d date.split(\" \");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "        for (int i \u003d 0; i \u003c descriptions.length; i++) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "                d1 +\u003d \" \" + LocalDate.parse(descriptions[i]).format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "            } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "                d1 +\u003d \" \" + descriptions[i];"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "        return d1;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     * Checks if the date provided exists in the list."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     * @param date date that is being searched for in the list."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     * @return true or false if date is in list or not."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     * @throws DukeException if description provided does not match format of date."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    public boolean hasDate(String date) throws DukeException {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "            LocalDate d1 \u003d LocalDate.parse(date);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "            LocalDate d2 \u003d null;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "            String[] descriptions \u003d this.date.split(\" \");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "            for (int i \u003d 0; i \u003c descriptions.length; i++) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "                    d2 \u003d LocalDate.parse(descriptions[i]);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "                    return d2.equals(d1);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "                } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "                }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "            throw new DukeException(\"Invalid date.\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     * Prints out the task in correct format."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     * @return task in the form of a string."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "        return \"[D][\" + getStatusIcon() + \"] \" + description + \"(by:\" + convertDate() + \")\";"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "}"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "IsaacTin": 84
    }
  },
  {
    "path": "src/main/java/duke/tasks/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": " * Type of task which includes date."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    String date;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     * Constructor to create Event object."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     * @param description specific details of Event."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     * @param date when the Event is taking place."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    public Event(String description, String date) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     * Gets the date of Event."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     * @return date of the Event."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    public String getDate() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "        return this.date;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    private String convertDate() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "        String d1 \u003d \"\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "        String[] descriptions \u003d date.split(\" \");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "        for (int i \u003d 0; i \u003c descriptions.length; i++) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "                d1 +\u003d \" \" + LocalDate.parse(descriptions[i]).format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "            } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "                d1 +\u003d \" \" + descriptions[i];"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "        return d1;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     * Checks if the date provided exists in the list."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     * @param date date that is being searched for in the list."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     * @return true or false if date is in list or not."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     * @throws DukeException if description provided does not match format of date."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    public boolean hasDate(String date) throws DukeException {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "            LocalDate d1 \u003d LocalDate.parse(date);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "            LocalDate d2 \u003d null;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "            String[] descriptions \u003d this.date.split(\" \");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "            for (int i \u003d 0; i \u003c descriptions.length; i++) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "                    d2 \u003d LocalDate.parse(descriptions[i]);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "                    return d2.equals(d1);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "                } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "                }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "            throw new DukeException(\"Invalid date.\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     * Prints out the task in correct format."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     * @return task in the form of a string."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "        return \"[E][\" + getStatusIcon() + \"] \" + description + \"(at:\" + convertDate() + \")\";"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "IsaacTin": 82
    }
  },
  {
    "path": "src/main/java/duke/tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": " * Parent Task class with multiple sub-classes that are different types of tasks."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     * Constructor to create new Task object."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     * @param description specific details of the task."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     * Get the details of the task."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     * @return details of the tasks."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     * Checks if the particular task is done."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     * @return true or false if task is done."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    public boolean getDone() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     * Get the status icon according to whether task is done or not."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     * @return status icon, a tick or cross."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     * Mark a task as done."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "IsaacTin": 54
    }
  },
  {
    "path": "src/main/java/duke/tasks/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": " * List that contains all the task."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    private List\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     * Constructor to create TaskList."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     * Overloaded Constructor to create TaskList object when a list is already saved in local storage."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     * @param tasks list saved in user\u0027s local storage."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    public TaskList(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     * Adds a new task to TaskList."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     * @param task task to be added into list of tasks."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    public void add(Task task) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     * Removes task from TaskList."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     * @param index position of task being deleted in the TaskList."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    public void delete(int index) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "        tasks.remove(index);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     * Get task from TaskList."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     * @param index position of task needed in the TaskList."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     * @return task at the index position in TaskList."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    public Task get(int index) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "        return tasks.get(index);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     * Gets the size of the TaskList."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     * @return the number of tasks in the TaskList."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     * Gets the entire list of tasks."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     * @return the entire lists of tasks."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    public List\u003cTask\u003e getList() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "IsaacTin": 73
    }
  },
  {
    "path": "src/main/java/duke/tasks/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": " * Simple task with no date."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     * Constructor to create Todo object."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     * @param description specific details of the todo event."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     * Prints out the task in correct format."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     * @return task in the form of a string."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "        return \"[T][\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "IsaacTin": 27
    }
  },
  {
    "path": "src/test/java/duke/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "import duke.commands.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    public void doneCommand_exceptionThrown() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "            Command command \u003d parser.findCommand(\"done five\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "            assertEquals(e.getMessage(), \"Hi my friend, you need to give a number.\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    public void todoCommand_exceptionThrown() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "            Command command \u003d parser.findCommand(\"todo\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "            assertEquals(e.getMessage(), \"Hi my friend, you don\u0027t even know what you want to do.\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    public void wrongCommand_exceptionThrown() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "            Command command \u003d parser.findCommand(\"Todo\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "            assertEquals(e.getMessage(), \"Hi my friend, type in \u0027todo\u0027, \u0027deadline\u0027, \u0027event\u0027 to start!\\nAlso, type \u0027date\u0027 and key in a date in YYYY-MM-DD format to search for events/deadlines happening on that date!\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "IsaacTin": 37
    }
  },
  {
    "path": "src/test/java/duke/commands/DateCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "public class DateCommandTest {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    Command command \u003d new DateCommand(\"2020-09-20\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    Storage storage \u003d new Storage();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    TaskList list \u003d new TaskList();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    public void dateDoesNotExist_exceptionThrown() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "            command.execute(list, ui, storage);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "            assertEquals(e.getMessage(), \"Hi my friend, No events/deadlines with this date!\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "IsaacTin": 26
    }
  },
  {
    "path": "src/test/java/duke/commands/ListCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "public class ListCommandTest {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    Command command \u003d new ListCommand();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    Storage storage \u003d new Storage();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    TaskList list \u003d new TaskList();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    public void noList_exceptionThrown() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "            command.execute(list, ui, storage);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "            assertEquals(e.getMessage(), \"Hi my friend, there\u0027s nothing on the list yet.\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "IsaacTin": 26
    }
  },
  {
    "path": "src/test/java/duke/tasks/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    public void invalidDate_exceptionThrown() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "        Deadline deadline \u003d new Deadline(\"hi\", \"2020-10-19\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "            deadline.hasDate(\"202020\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "            assertEquals(e.getMessage(), \"Hi my friend, Invalid date.\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "IsaacTin": 18
    }
  },
  {
    "path": "src/test/java/duke/tasks/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "public class EventTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    public void invalidDate_exceptionThrown() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "        Event event \u003d new Event(\"hi\", \"2020-10-19\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "            event.hasDate(\"202020\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "            assertEquals(e.getMessage(), \"Hi my friend, Invalid date.\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "IsaacTin": 18
    }
  },
  {
    "path": "text-ui-test/data/database.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "T|F|hi"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "D|F|live |2010-10-10"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "E|F|give |Sunday"
      }
    ],
    "authorContributionMap": {
      "IsaacTin": 3
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "list"
      }
    ],
    "authorContributionMap": {
      "IsaacTin": 1
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke.Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "IsaacTin": 2,
      "-": 19
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "IsaacTin"
        },
        "content": "if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/duke/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "IsaacTin": 1,
      "-": 37
    }
  }
]
