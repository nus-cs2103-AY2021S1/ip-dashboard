[
  {
    "path": "SAVED-TASKS.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "T | 1 | read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "D | 1 | return book | June 6th"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "T | 1 | join sports club"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "T | 0 | borrow book"
      }
    ],
    "authorContributionMap": {
      "GabriellaTeh": 4
    }
  },
  {
    "path": "src/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    LocalDateTime deadline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    public Deadline(String description, String deadline) throws DateTimeParseException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        this.deadline \u003d LocalDateTime.parse(deadline, DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\"));"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    public Deadline(String description, String deadline, Boolean isDone) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        this.deadline \u003d LocalDateTime.parse(deadline, DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\"));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        return \"[D]\" + this.getIcon() + description + \" (by: \" +"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                this.deadline.format(DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\"))+ \")\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    public String toSaveString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        return String.format(\"D | %s | %s | %s\","
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                super.doneString(), this.description, this.deadline.format(DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\")));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "GabriellaTeh": 29
    }
  },
  {
    "path": "src/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    public static String horizontal \u003d \"________________________________\" + \"\\n\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    public static ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    public static void action() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        while (sc.hasNext()) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                String input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                    String bye \u003d \"Bye. Hope to see you again soon!\" + \"\\n\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                    System.out.println(horizontal + bye + horizontal);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                } else if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                    System.out.println(horizontal + \"Here are the tasks in your list:\" + \"\\n\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                    int counter \u003d 1;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                    for (Task task : taskList) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                        System.out.println(counter + \".\" + task.toString());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                        counter++;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                    System.out.println(horizontal);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                } else if (input.startsWith(\"done\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                    String[] number \u003d input.split(\"done \");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                    int num \u003d Integer.parseInt(number[1]);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                    Task task \u003d taskList.get(num - 1);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                    task.markAsDone();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                    saveTasks();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                    System.out.println(horizontal + \"Nice! I\u0027ve marked this task as done:\" + \"\\n\" +"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                            task.toString() + \"\\n\" + horizontal);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                } else if (input.startsWith(\"delete\")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                    String[] number \u003d input.split(\"delete \");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                    int num \u003d Integer.parseInt(number[1]);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                    Task task \u003d taskList.get(num - 1);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                    taskList.remove(task);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                    saveTasks();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                    System.out.println(horizontal + \"Noted. I\u0027ve removed this task:\" + \"\\n\" +"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                            task.toString() + \"\\n\" + \"Now you have \" + taskList.size() + \" tasks in the list.\" + \"\\n\" + horizontal);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                    saveTasks();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                    addTaskAndPrint(input, taskList);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "            } catch (DukeException | IOException e) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                System.out.println(horizontal + \"Oops!!! \" + e.getMessage() + \"\\n\" + horizontal);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    public static void greet() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        load();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        String hello \u003d \"Hello! I\u0027m Duke\" + \"\\n\" + \"What can I do for you?\" + \"\\n\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        System.out.println(horizontal + hello + horizontal);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    public static void addTaskAndPrint(String input, ArrayList\u003cTask\u003e list) throws DukeException {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        if (input.startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "            String[] array \u003d input.split(\"todo \");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "            if (array.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                throw new DukeException(\"The description of a todo cannot be empty!\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                String des \u003d array[1];"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                Task todo \u003d new ToDos(des);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                taskList.add(todo);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                System.out.println(horizontal + \"Got it. I\u0027ve added this task:\" + \"\\n\" + todo.toString() + \"\\n\" +"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                        \"Now you have \" + list.size() + \" tasks in the list.\" + \"\\n\" + horizontal);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        } else if (input.startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "            String[] array \u003d input.split(\"deadline \");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "            if (array.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                throw new DukeException(\"The description of a deadline cannot be empty!\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                String[] arr \u003d array[1].split(\" /by \");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                String des \u003d arr[0];"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                if (arr.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                    throw new DukeException(\"The deadline of the task cannot be empty!\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                        String due \u003d arr[1];"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                        Task dl \u003d new Deadline(des, due);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                        taskList.add(dl);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                        System.out.println(horizontal + \"Got it. I\u0027ve added this task:\" + \"\\n\" + dl.toString() + \"\\n\" +"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                                \"Now you have \" + list.size() + \" tasks in the list.\" + \"\\n\" + horizontal);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                    } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                        System.out.println(\"Please use this format: \\n\" +"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                                \"dd-MM-yyyy HHmm\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        } else if (input.startsWith(\"event\")) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "            String[] array \u003d input.split(\"event\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "            if (array.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                throw new DukeException(\"The description of an event cannot be empty!\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                String[] arr \u003d array[1].split(\" /at \");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                String des \u003d arr[0];"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                if (arr.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                    throw new DukeException(\"The date of the event cannot be empty!\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                        String date \u003d arr[1];"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                        Task event \u003d new Events(des, date);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                        taskList.add(event);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                        System.out.println(horizontal + \"Got it. I\u0027ve added this task:\" + \"\\n\" + event.toString() + \"\\n\" +"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                                \"Now you have \" + list.size() + \" tasks in the list.\" + \"\\n\" + horizontal);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                    } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                        System.out.println(\"Please use this format: \\n\" +"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                                \"dd-MM-yyyy HHmm\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "            throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means.\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    public static void addTask(Task task) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        taskList.add(task);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    public static void saveTasks() throws IOException {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        File savedFile \u003d new File(\".//SAVED-TASKS.txt\");"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        boolean exists \u003d savedFile.exists();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        BufferedWriter writer \u003d new BufferedWriter(new FileWriter(\".//SAVED-TASKS.txt\"));"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        StringBuilder tasks \u003d new StringBuilder();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        if (exists) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "            for (Task task : taskList) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                tasks.append(task.toSaveString());"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                tasks.append(\"\\n\");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "            writer.write(tasks.toString());"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "            writer.close();"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "            savedFile.createNewFile();"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "            saveTasks();"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "            System.out.println(\"File does not exist!\");"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    public static void load() {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        File savedFile \u003d new File(\".//SAVED-TASKS.txt\");"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        boolean exists \u003d savedFile.exists();"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "            if (exists) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                BufferedReader br \u003d new BufferedReader(new FileReader(savedFile));"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                String line \u003d br.readLine();"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                while (line !\u003d null) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                    loadTasks(line);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                    line \u003d br.readLine();"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                System.out.println(horizontal + \"file does not exist\" + \"\\n\" + horizontal);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "            System.out.println(\"IOException!\");"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    public static void loadTasks(String line) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        String[] tasks \u003d line.split(\" \\\\| \");"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        String task \u003d tasks[0];"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        Boolean isDone \u003d tasks[1].equals(\"1\");"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        String desc \u003d tasks[2];"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        String date \u003d null;"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        if (tasks.length \u003e 3) {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "            date \u003d tasks[3];"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        if (task.equals(\"T\")) {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "            Task newTask \u003d new ToDos(desc, isDone);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "            addTask(newTask);"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "            System.out.println(newTask.toString());"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        } else if (task.equals(\"E\")) {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "            Task newTask \u003d new Events(desc, date, isDone);"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "            addTask(newTask);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "            System.out.println(newTask.toString());"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        } else if (task.equals(\"D\")) {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "            Task newTask \u003d new Deadline(desc, date, isDone);"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "            addTask(newTask);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "            System.out.println(newTask.toString());"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        greet();"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        action();"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        //String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        //      + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        //        + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        //        + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        //        + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        //System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "-": 4,
      "GabriellaTeh": 201
    }
  },
  {
    "path": "src/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "GabriellaTeh": 7
    }
  },
  {
    "path": "src/Events.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "public class Events extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    LocalDateTime time;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    public Events(String description, String time) throws DateTimeParseException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        this.time \u003d LocalDateTime.parse(time, DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\"));"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    public Events(String description, String time, Boolean isDone) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        this.time \u003d LocalDateTime.parse(time, DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\"));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        return \"[E]\" + this.getIcon() + description + \" (at: \" +"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                this.time.format(DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\")) + \")\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    public String toSaveString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        return String.format(\"E | %s | %s | %s\","
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                super.doneString(), this.description, this.time.format(DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\")));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "GabriellaTeh": 31
    }
  },
  {
    "path": "src/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    public Task(String description, Boolean isDone) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    public String getIcon() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        return (isDone ? \"[✓]\" : \"[✗]\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    public void done() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        done();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    public String doneString() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "            return \"1\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "            return \"0\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    public abstract String toSaveString();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    ;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        return String.format(\"%s %s\", this.getIcon(), description);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "GabriellaTeh": 44
    }
  },
  {
    "path": "src/ToDos.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "public class ToDos extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    public ToDos(String description) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    public ToDos(String description, Boolean isDone) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        return String.format(\"%s%s%s\", \"[T]\", this.getIcon(), description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    public String toSaveString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        return String.format(\"T | %s | %s\", super.doneString(), this.description);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "GabriellaTeh": 21
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "deadline return book /by 06-06-2020 0900"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "event project meeting /at 06-08-2020 1400"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "todo join sports club"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "GabriellaTeh": 9
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "-": 32,
      "GabriellaTeh": 2
    }
  }
]
