[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    mainClassName \u003d \"seedu.duke.Duke\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    toolVersion \u003d \u00278.32\u0027"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "juandavinlie": 1,
      "-": 45
    }
  },
  {
    "path": "src/main/java/duke/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    Deadline(String name, String deadline) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "        super(name, deadline);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    String getIndicator() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "        return \"[D]\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "juandavinlie": 13
    }
  },
  {
    "path": "src/main/java/duke/DeadlineException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "public class DeadlineException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    private String errorMessage \u003d \"OOPS!!! The description of a deadline cannot be empty.\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    DeadlineException() {}"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    String getErrorMessage() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "        return this.errorMessage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "juandavinlie": 10
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    private Storage s;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "     * Creates a Duke class"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "     * @param filePath"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "     * @throws Exception"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    public Duke(String filePath) throws Exception {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "        s \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "        s.create();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "            tasks \u003d new TaskList(s.toArrayList());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "            ui \u003d new Ui(tasks, s);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "            System.out.println(e);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "     * Runs the whole program."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "     * @throws Exception"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    public void run() throws Exception {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "        ui.start();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    public static void main(String[] args) throws Exception {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "        new Duke(\"/Users/juanlie/cs2103t/pw2/ip/data\").run();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "juandavinlie": 33,
      "-": 3
    }
  },
  {
    "path": "src/main/java/duke/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    Event(String name, String at) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "        super(name, at);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    String getIndicator() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "        return \"[E]\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "juandavinlie": 14
    }
  },
  {
    "path": "src/main/java/duke/EventException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "public class EventException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    private String errorMessage \u003d \"OOPS!!! The description of a event cannot be empty.\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    EventException() {}"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    String getErrorMessage() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "        return this.errorMessage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "juandavinlie": 9
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    Parser() {}"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "     * Processes all the commands given by the user and triggers functions correspondingly."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "     * @param command command given by the user"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "     * @param tl the TaskList object defined in Duke."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "     * @param ui the Ui object defined in Duke."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "     * @throws Exception"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    public static void processCommand(String command, TaskList tl, Ui ui) throws Exception {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "        int indexOfSlash \u003d command.indexOf(\u0027/\u0027);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "        ArrayList\u003cTask\u003e arr \u003d tl.getArr();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "        if (command.equals(\"bye\")) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "            ui.respondToBye();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "        } else if (command.length() \u003e\u003d 4) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "            if (command.substring(0, 4).equals(\"list\")) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "                if (arr.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "                    ui.respondToEmptyList();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "                    ui.respondToList();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "                }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "            } else if (command.substring(0, 4).equals(\"find\")) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "                if (command.length() \u003d\u003d 4) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "                    ui.respondToFindWrongSyntax();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "                    String searchWord \u003d command.substring(5);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "                    ui.respondToFind(searchWord);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "                }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "            } else if (command.substring(0, 4).equals(\"done\")) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "                if (command.length() \u003d\u003d 4) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "                    ui.respondToDoneWrongSyntax();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "                    int taskNumber \u003d Integer.parseInt(command.substring(5));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "                    if (taskNumber \u003e arr.size()) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "                        ui.respondToDoneFail();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "                        ui.respondToDone(taskNumber);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "                }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "            } else if (command.substring(0, 4).equals(\"todo\")) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "                if (command.length() \u003d\u003d 4 || indexOfSlash !\u003d -1) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "                    ui.respondToTodoWrongSyntax();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "                    ui.respondToTodo(command.substring(5));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "                }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "            } else if (command.substring(0, 5).equals(\"event\")) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "                if (indexOfSlash \u003d\u003d -1 || command.length() \u003d\u003d 5"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "                        || !command.substring(indexOfSlash + 1, indexOfSlash + 3).equals(\"at\")) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "                    ui.respondToEventFail();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "                        String time \u003d command.substring(indexOfSlash + 4);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "                        LocalDate parsed \u003d LocalDate.parse(time);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "                        ui.respondToEvent(command.substring(6, indexOfSlash - 1),"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "                                parsed.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "                    } catch (DateTimeParseException d) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "                        ui.respondToEvent(command.substring(6, indexOfSlash - 1), command.substring(indexOfSlash + 4));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "                }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "            } else if (command.substring(0, 6).equals(\"delete\")) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "                if (command.length() \u003d\u003d 6) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "                    ui.respondToDeleteWrongSyntax();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "                    int taskNumber \u003d Integer.parseInt(command.substring(7));"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "                    if (taskNumber \u003e arr.size()) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "                        ui.respondToDeleteFail();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "                        ui.respondToDelete(taskNumber);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "                }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "            } else if (command.substring(0, 8).equals(\"deadline\")) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "                if (indexOfSlash \u003d\u003d -1 || command.length() \u003d\u003d 8"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "                        || !command.substring(indexOfSlash + 1, indexOfSlash + 3).equals(\"by\")) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "                    ui.respondToDeadlineFail();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "                        String time \u003d command.substring(indexOfSlash + 4);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "                        LocalDate parsed \u003d LocalDate.parse(time);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "                        ui.respondToDeadline(command.substring(9, indexOfSlash - 1),"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "                                parsed.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")));"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "                    } catch (DateTimeParseException d) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "                        ui.respondToDeadline(command.substring(9, indexOfSlash - 1),"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "                                command.substring(indexOfSlash + 4));"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "                }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "                ui.respondToCommandDoesNotExist();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "            ui.respondToCommandDoesNotExist();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "}"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "juandavinlie": 103
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    private String filepath;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    private File file;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    Storage(String path) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "        this.filepath \u003d path;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "        this.file \u003d new File(path);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "     * Creates a new file if it does not exist."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "     * @return boolean"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    boolean create() throws IOException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "        return !file.exists() ? file.createNewFile() : false;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "     * Reads the hard disk and prints the list."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "     * @throws FileNotFoundException"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    void printList() throws FileNotFoundException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "        Scanner s \u003d new Scanner(file);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "        int counter \u003d 1;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "        while (s.hasNextLine()) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "            String task \u003d s.nextLine();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "            System.out.println(counter + \". \" + task);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "            counter++;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "     * Counts the number of lines in the hard disk."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "     * @return int"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "     * @throws FileNotFoundException"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    int lineCounter() throws FileNotFoundException {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "        int counter \u003d 0;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "        Scanner s \u003d new Scanner(file);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "        while (s.hasNextLine()) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "            counter++;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "            s.nextLine();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "        return counter;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "     * Makes a string from the startIndex to the end of an array of strings."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "     * @param startIndex starting index."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "     * @param splits array of strings."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "     * @param str accumulation of the string."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    String stringMaker(int startIndex, String[] splits, String str) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "        return startIndex \u003e\u003d splits.length - 1"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "                 ? str"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "                 : stringMaker(startIndex + 1, splits, splits[startIndex] + \" \");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "     * Reads the hard disk and converts it into an arraylist."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "     * @return ArrayList(Task)"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "     * @throws Exception"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    ArrayList\u003cTask\u003e toArrayList() throws Exception {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "            ArrayList\u003cTask\u003e arr \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "            if (lineCounter() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "                return arr;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "                int counter \u003d 0;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "                Scanner s \u003d new Scanner(file);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "                while (s.hasNextLine()) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "                    String task \u003d s.nextLine();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "                    if (task.charAt(1) \u003d\u003d \u0027T\u0027) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "                        arr.add(new Todo(task.substring(7)));"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "                    } else if (task.charAt(1) \u003d\u003d \u0027D\u0027) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "                        String[] splits \u003d task.split(\" \");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "                        String name \u003d splits[1];"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "                        String deadline \u003d stringMaker(3, splits, \"\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "                        arr.add(new Deadline(name, deadline));"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "                        String[] splits \u003d task.split(\" \");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "                        String name \u003d splits[1];"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "                        String deadline \u003d stringMaker(3, splits, \"\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "                        arr.add(new Event(name, deadline));"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "                }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "                return arr;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "            System.out.println(e);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "     * Updates the hard disk based on the provided arraylist."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "     * @param arr the arraylist that is being copied to the hard disk."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    void listWriter(ArrayList\u003cTask\u003e arr) throws IOException {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filepath);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "        for (Task t : arr) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "            String keyword \u003d \"\";"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "            String toPrint \u003d \"\";"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "            if (t instanceof Deadline) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "                keyword \u003d \"by\";"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "                toPrint \u003d \" (\" + keyword + \": \" + t.getTime() + \")\";"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "            } else if (t instanceof Event) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "                keyword \u003d \"at\";"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "                toPrint \u003d \" (\" + keyword + \": \" + t.getTime() + \")\";"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "            String text \u003d t.getIndicator() + t.getIcon() + t.getName() + toPrint + \"\\n\";"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "            fw.write(text);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "juandavinlie": 130
    }
  },
  {
    "path": "src/main/java/duke/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    private String name;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    private String time;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    Task(String name) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    Task(String name, String time) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "     * Returns a string of icon."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "     * @return String"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    String getIcon() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "        return isDone ? \"[\" + \"\\u2713\" + \"] \" : \"[\" + \"\\u2718\" + \"] \";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "     * Updates the task as done."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    void taskIsDone() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "     * Returns a string of indicator."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "     * @return String"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    String getIndicator() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "        return \"[T]\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    String getName() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    String getTime() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "        return time;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "juandavinlie": 49
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    private ArrayList\u003cTask\u003e arr;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    TaskList(ArrayList\u003cTask\u003e arr) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "        this.arr \u003d arr;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "     * Getter fot the arr."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "     * @return arr"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    public ArrayList\u003cTask\u003e getArr() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "        return this.arr;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "     * Adds the task to arr."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "     * @param t task that is being added."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    public void addTask(Task t) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "        arr.add(t);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "     * Removes the task to arr."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "     * @param t task that is being added."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    public void removeTask(Task t) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "        arr.remove(t);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "juandavinlie": 32
    }
  },
  {
    "path": "src/main/java/duke/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    Todo(String name) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    String getIndicator() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "        return \"[T]\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "juandavinlie": 14
    }
  },
  {
    "path": "src/main/java/duke/TodoException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "public class TodoException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    private String errorMessage \u003d \"OOPS!!! The description of a todo cannot be empty.\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    TodoException() {}"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    String getErrorMessage() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "        return this.errorMessage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "juandavinlie": 10
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    private boolean exited \u003d false;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    private TaskList tl;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    private Storage s;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    Ui(TaskList tl, Storage s) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "        this.tl \u003d tl;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "        this.s \u003d s;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "     * Starts the scanner and takes in the commands"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    public void start() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "        String logo \u003d \" ____        _\\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____\\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo + \"\\n\" + \"I can be your friend who manages your task!\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "            while (!exited) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "                Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "                String command \u003d sc.nextLine();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "                Parser.processCommand(command, tl, this);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "            System.out.println(e);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "     * Stops the scanner when the user inputs in \"bye\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    public void stop() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "        exited \u003d true;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "     * Prints out a string everytime the user puts up a task"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "     * @param arr temporary list of tasks"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "     * @param t the task to print out"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    public static void print(ArrayList\u003cTask\u003e arr, Task t) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "        String keyword \u003d \"\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "        String toPrint \u003d \"\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "        if (t instanceof Deadline) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "            keyword \u003d \"by\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "            toPrint \u003d \" (\" + keyword + \": \" + t.getTime() + \")\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "        } else if (t instanceof Event) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "            keyword \u003d \"at\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "            toPrint \u003d \" (\" + keyword + \": \" + t.getTime() + \")\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\" + \"\\n\" + t.getIndicator()"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "                + t.getIcon() + t.getName() + toPrint + \"\\n\" + \"Now you have \" + arr.size() + \" tasks in the list.\""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "        );"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "     * Prints out a list of tasks that match the searchword"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "     * @param arr temporary list of tasks"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    public static void printForFind(ArrayList\u003cTask\u003e arr) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "        if (arr.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "            System.out.println(\"There is no task that matches your searchword\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "            System.out.println(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "            int counter \u003d 1;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "            for (Task t: arr) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "                String keyword \u003d \"\";"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "                String toPrint \u003d \"\";"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "                if (t instanceof Deadline) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "                    keyword \u003d \"by\";"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "                    toPrint \u003d \" (\" + keyword + \": \" + t.getTime() + \")\";"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "                } else if (t instanceof Event) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "                    keyword \u003d \"at\";"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "                    toPrint \u003d \" (\" + keyword + \": \" + t.getTime() + \")\";"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "                }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "                System.out.println(counter + \". \" + t.getIndicator() + t.getIcon() + t.getName() + toPrint);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "                counter++;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "     * Prints out a string everytime the user indicates a task as done"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "     * @param arr arraylist of tasks"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    public static void printForDone(ArrayList\u003cTask\u003e arr, Task t) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "        String keyword \u003d \"\";"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "        String toPrint \u003d \"\";"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "        if (t instanceof Deadline) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "            keyword \u003d \"by\";"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "            toPrint \u003d \" (\" + keyword + \": \" + t.getTime() + \")\";"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "        } else if (t instanceof Event) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "            keyword \u003d \"at\";"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "            toPrint \u003d \" (\" + keyword + \": \" + t.getTime() + \")\";"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "        System.out.println(\"Got it. Duke has marked this task as done:\" + \"\\n\" + t.getIndicator()"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "                + t.getIcon() + t.getName() + toPrint + \"\\n\" + \"Now you have \" + arr.size() + \" tasks in the list.\""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "        );"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "     * Prints out a string everytime the user deletes a task"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "     * @param arr temporary list of tasks"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "     * @param t the task to print out"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    public static void printForDelete(ArrayList\u003cTask\u003e arr, Task t) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "        String keyword \u003d \"\";"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "        String toPrint \u003d \"\";"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "        if (t instanceof Deadline) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "            keyword \u003d \"by\";"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "            toPrint \u003d \" (\" + keyword + \": \" + t.getTime() + \")\";"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "        } else if (t instanceof Event) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "            keyword \u003d \"at\";"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "            toPrint \u003d \" (\" + keyword + \": \" + t.getTime() + \")\";"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "        System.out.println(\"Got it. Duke has removed this task:\" + \"\\n\" + t.getIndicator()"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "                + t.getIcon() + t.getName() + toPrint + \"\\n\" + \"Now you have \" + arr.size() + \" tasks in the list.\""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "        );"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "     * Prints out the bye statement"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    public void respondToBye() {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "        System.out.println(\"Bye. Please come back soon :(\");"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "        this.stop();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "     * Prints out a string saying that the list is empty"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    public void respondToEmptyList() {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "        System.out.println(\"You currently do not have any todos.\");"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "     * Prints out the list of tasks when the user inputs in \"list\""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "     * @throws Exception"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    public void respondToList() throws Exception {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "        System.out.println(\"Here are the tasks in the list: \");"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "        s.printList();"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "     * Prints out a statement when the user forgets to put the searchword."
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    public void respondToFindWrongSyntax() {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "        System.out.println(\"Provide a number of the todo that you want to mark as done!\");"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "     * Prints the filtered list."
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "     * @param searchWord the word on which the user wants to base their search."
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "     * @throws Exception"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    public void respondToFind(String searchWord) throws Exception {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "        ArrayList\u003cTask\u003e temp \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "        for (Task t: tl.getArr()) {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "            if (t.getName().contains(searchWord)) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "                temp.add(t);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "        printForFind(temp);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "     * Prints out a string whenever the user inputs in an invalid task number to mark as done"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    public void respondToDoneFail() {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "        System.out.println(\"The specified todo does not exist!\");"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "     * Prints out a string whenever the user forgets to input in the task number"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    public void respondToDoneWrongSyntax() {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "        System.out.println(\"Provide a number of the todo that you want to mark as done!\");"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "     * Prints out the statement saying that task has been marked as done and updates the list"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    public void respondToDone(int taskNumber) throws Exception {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "        ArrayList\u003cTask\u003e arr \u003d tl.getArr();"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "        Task t \u003d arr.get(taskNumber - 1);"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "        t.taskIsDone();"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "        printForDone(arr, t);"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "        s.listWriter(arr);"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "     * Prints out an error message when the user inputs in the wrong syntax for todo"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    public void respondToTodoWrongSyntax() {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "        TodoException te \u003d new TodoException();"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "        System.out.println(te.getErrorMessage());"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "     * Prints out the statement saying that todo has been added and updates the list"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    public void respondToTodo(String name) throws Exception {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "        Todo t \u003d new Todo(name);"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "        tl.addTask(t);"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "        print(tl.getArr(), t);"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "        s.listWriter(tl.getArr());"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "     * Prints out an error message when the user forgets to input the deadline details"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    public void respondToEventFail() {"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "        EventException ee \u003d new EventException();"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "        System.out.println(ee.getErrorMessage());"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": ""
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "     * Prints out a statement saying that an event has been added to the list and updates the list"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "     * @param name name of the event"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "     * @param time deadline of the event"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "     * @throws Exception"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    public void respondToEvent(String name, String time) throws Exception {"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "        ArrayList\u003cTask\u003e arr \u003d tl.getArr();"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "        Event e \u003d new Event(name, time);"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "        tl.addTask(e);"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "        print(arr, e);"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "        s.listWriter(arr);"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": ""
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "     * Prints out an error message when the user inputs in the wrong syntax for delete"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    public void respondToDeleteWrongSyntax() {"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "        System.out.println(\"Provide the number of the todo that you want to delete!\");"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": ""
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "     * Prints out a statement saying that the specified task number does not exists"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    public void respondToDeleteFail() {"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "        System.out.println(\"The specified todo does not exist!\");"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": ""
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "     * Prints out a statement saying that the task has been deleted and updates the list"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "     * @param taskNumber task number of the task that is being deleted"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "     * @throws Exception"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    public void respondToDelete(int taskNumber) throws Exception {"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "        ArrayList\u003cTask\u003e arr \u003d tl.getArr();"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "        Task t \u003d arr.get(taskNumber - 1);"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "        tl.removeTask(t);"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "        printForDelete(arr, t);"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "        s.listWriter(arr);"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": ""
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "     * Prints out an error message when the user forgets to input the deadline details"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    public void respondToDeadlineFail() {"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "        DeadlineException de \u003d new DeadlineException();"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "        System.out.println(de.getErrorMessage());"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": ""
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "     * Prints out a statement saying that a deadline has been added to the list and updates the list"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "     * @param name name of the event"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "     * @param time deadline of the event"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "     * @throws Exception"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    public void respondToDeadline(String name, String time) throws Exception {"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "        ArrayList\u003cTask\u003e arr \u003d tl.getArr();"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "        Deadline d \u003d new Deadline(name, time);"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "        tl.addTask(d);"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "        print(arr, d);"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "        s.listWriter(arr);"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": ""
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "     * Prints out a statement saying that the command does not exist"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    public void respondToCommandDoesNotExist() {"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "        System.out.println(\"Command does not exist!\" + \"\\n\");"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "juandavinlie": 294
    }
  },
  {
    "path": "src/test/java/duke/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    public void eventTest() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "        Event e \u003d new Event(\"meeting\", \"school\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "        assertEquals(e.getIndicator(), \"[E]\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    public void deadlineTest() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "        Deadline d \u003d new Deadline(\"hw\", \"monday\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "        assertEquals(d.getIndicator(), \"[D]\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    public void todoTest() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "        Todo t \u003d new Todo(\"say hbd\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "        assertEquals(t.getIndicator(), \"[T]\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "juandavinlie": 24
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "deadline say hbd /by Monday"
      }
    ],
    "authorContributionMap": {
      "juandavinlie": 1
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/duke/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "juandavinlie"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "juandavinlie": 2,
      "-": 32
    }
  }
]
