[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seowalex"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.9\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00276.0.0\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seowalex"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seowalex"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    jcenter()"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seowalex"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seowalex"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter-api:5.6.2\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter-params:5.6.2\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    testRuntimeOnly \u0027org.junit.jupiter:junit-jupiter-engine:5.6.2\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seowalex"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seowalex"
        },
        "content": "application {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    mainClassName \u003d \u0027duke.Launcher\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seowalex"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seowalex"
        },
        "content": "test {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seowalex"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seowalex"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    version \u003d \"11\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    modules \u003d [ \u0027javafx.base\u0027, \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027, \u0027javafx.graphics\u0027 ]"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "seowalex"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "seowalex"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    archiveBaseName \u003d \u0027duke\u0027"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    archiveClassifier \u003d \u0027\u0027"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "seowalex"
        },
        "content": "}"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "seowalex"
        },
        "content": "run{"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "seowalex"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seowalex": 39
    }
  },
  {
    "path": "gradlew.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seowalex"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seowalex"
        },
        "content": "@rem Copyright 2015 the original author or authors."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seowalex"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seowalex"
        },
        "content": "@rem Licensed under the Apache License, Version 2.0 (the \"License\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seowalex"
        },
        "content": "@rem you may not use this file except in compliance with the License."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seowalex"
        },
        "content": "@rem You may obtain a copy of the License at"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seowalex"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seowalex"
        },
        "content": "@rem      https://www.apache.org/licenses/LICENSE-2.0"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seowalex"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seowalex"
        },
        "content": "@rem Unless required by applicable law or agreed to in writing, software"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seowalex"
        },
        "content": "@rem distributed under the License is distributed on an \"AS IS\" BASIS,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seowalex"
        },
        "content": "@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seowalex"
        },
        "content": "@rem See the License for the specific language governing permissions and"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seowalex"
        },
        "content": "@rem limitations under the License."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seowalex"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seowalex"
        },
        "content": "@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seowalex"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seowalex"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seowalex"
        },
        "content": "@rem  Gradle startup script for Windows"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seowalex"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seowalex"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seowalex"
        },
        "content": "@rem Set local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seowalex"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seowalex"
        },
        "content": "set DIRNAME\u003d%~dp0"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "seowalex"
        },
        "content": "if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "seowalex"
        },
        "content": "set APP_BASE_NAME\u003d%~n0"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "seowalex"
        },
        "content": "set APP_HOME\u003d%DIRNAME%"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "seowalex"
        },
        "content": "@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "seowalex"
        },
        "content": "for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "seowalex"
        },
        "content": "@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "seowalex"
        },
        "content": "set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "seowalex"
        },
        "content": "@rem Find java.exe"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "seowalex"
        },
        "content": "if defined JAVA_HOME goto findJavaFromJavaHome"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "seowalex"
        },
        "content": "set JAVA_EXE\u003djava.exe"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "seowalex"
        },
        "content": "%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "seowalex"
        },
        "content": "if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto execute"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "seowalex"
        },
        "content": "echo."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "seowalex"
        },
        "content": "echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "seowalex"
        },
        "content": "echo."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "seowalex"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "seowalex"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "seowalex"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "seowalex"
        },
        "content": ":findJavaFromJavaHome"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "seowalex"
        },
        "content": "set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "seowalex"
        },
        "content": "set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "seowalex"
        },
        "content": "if exist \"%JAVA_EXE%\" goto execute"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "seowalex"
        },
        "content": "echo."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "seowalex"
        },
        "content": "echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "seowalex"
        },
        "content": "echo."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "seowalex"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "seowalex"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "seowalex"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "seowalex"
        },
        "content": ":execute"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "seowalex"
        },
        "content": "@rem Setup the command line"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "seowalex"
        },
        "content": "set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "seowalex"
        },
        "content": "@rem Execute Gradle"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "seowalex"
        },
        "content": "\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %*"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "seowalex"
        },
        "content": ":end"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "seowalex"
        },
        "content": "@rem End local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "seowalex"
        },
        "content": "if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "seowalex"
        },
        "content": ":fail"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "seowalex"
        },
        "content": "rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "seowalex"
        },
        "content": "rem the _cmd.exe /c_ return code!"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "seowalex"
        },
        "content": "if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "seowalex"
        },
        "content": "exit /b 1"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "seowalex"
        },
        "content": ":mainEnd"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "seowalex"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "seowalex"
        },
        "content": ":omega"
      }
    ],
    "authorContributionMap": {
      "seowalex": 89
    }
  },
  {
    "path": "settings.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seowalex"
        },
        "content": "/*"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seowalex"
        },
        "content": " * This file was generated by the Gradle \u0027init\u0027 task."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seowalex"
        },
        "content": " *"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seowalex"
        },
        "content": " * The settings file is used to specify which projects to include in your build."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seowalex"
        },
        "content": " *"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seowalex"
        },
        "content": " * Detailed information about configuring a multi-project build in Gradle can be found"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seowalex"
        },
        "content": " * in the user manual at https://docs.gradle.org/6.6.1/userguide/multi_project_builds.html"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seowalex"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seowalex"
        },
        "content": "rootProject.name \u003d \u0027duke\u0027"
      }
    ],
    "authorContributionMap": {
      "seowalex": 10
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seowalex"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import duke.response.Response;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seowalex"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seowalex"
        },
        "content": " * The main program"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seowalex"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    private final Storage storage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    private final TaskList taskList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    private final Response initResponse;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     * The main program\u0027s constructor."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     * @param filePath The path to the data file."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        this.storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        TaskList taskList;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        Response initResponse;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            taskList \u003d new TaskList(this.storage.load());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            initResponse \u003d new Response();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            initResponse \u003d new Response(e.getMessage(), true, false);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        this.initResponse \u003d initResponse;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public String getWelcome() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        return \"Hello! I\u0027m Duke\\n\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                + \"What can I do for you?\\n\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public Response getInitResponse() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        return this.initResponse;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public Response getResponse(String input) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            Command command \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            return command.execute(this.taskList, this.storage);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            return new Response(e.getMessage(), true, false);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seowalex": 51,
      "-": 2
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seowalex"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seowalex"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public DukeException() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     * A Duke exception."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     * @param message The exception message."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        super(\"\\u2639 OOPS!!! \" + message);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        assert(!message.isBlank()) : \"DukeException should not have an empty message\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seowalex"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seowalex": 17
    }
  },
  {
    "path": "src/main/java/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seowalex"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seowalex"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seowalex"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seowalex": 9
    }
  },
  {
    "path": "src/main/java/duke/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seowalex"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import duke.response.Response;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import duke.view.MainWindow;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import javafx.scene.control.Alert;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seowalex"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    private final Duke duke;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     * The main GUI class."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public Main() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        this.duke \u003d new Duke(\"data/tasks.txt\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        Response initResponse \u003d this.duke.getInitResponse();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        assert(!initResponse.isExit()) : \"initResponse should not cause an exit\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        if (initResponse.isError()) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            Alert alert \u003d new Alert(Alert.AlertType.ERROR, initResponse.getMessage());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            alert.showAndWait();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        AnchorPane mainWindow \u003d new MainWindow(this.duke);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        Scene scene \u003d new Scene(mainWindow);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        scene.getStylesheets().add(\"/stylesheets/base.css\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        stage.setScene(scene);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        stage.setTitle(\"Duke\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        stage.getIcons().add(new Image(this.getClass().getResourceAsStream(\"/images/crown-solid.png\")));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        stage.show();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "seowalex"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seowalex": 41
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seowalex"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import java.time.MonthDay;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import java.time.Year;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import java.time.temporal.TemporalAccessor;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import duke.command.AddCommand;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import duke.command.Argument;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import duke.command.DoneCommand;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import duke.command.DueCommand;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import duke.command.ExitCommand;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import duke.command.FindCommand;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import duke.task.TaskPriority;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import duke.task.TaskType;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seowalex"
        },
        "content": "/**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "seowalex"
        },
        "content": " * The command line parser."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "seowalex"
        },
        "content": " */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "seowalex"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     * Parses a string and gives a datetime for use in creating tasks."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     * @param dateTime A string representing a date and a time."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     * @return a LocalDateTime object represented by the string."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     * @throws DukeException if the string cannot be parsed."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public static LocalDateTime parseDateTime(String dateTime) throws DukeException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        String[] dateTimes \u003d dateTime.split(\"\\\\s+\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        String date \u003d dateTimes[0];"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        String time \u003d dateTimes.length \u003e 1"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                ? String.join(\" \", Arrays.copyOfRange(dateTimes, 1, dateTimes.length))"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                : \"\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        return LocalDateTime.of(Parser.parseDate(date), Parser.parseTime(time));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     * Parses a string and gives a date for use in creating tasks."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     * @param dateStr A string representing a date."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     * @return a LocalDate object represented by the string."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     * @throws DukeException if the string cannot be parsed."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public static LocalDate parseDate(String dateStr) throws DukeException {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        LocalDate date;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"d/M[/yyyy][/yy]\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            TemporalAccessor result \u003d dateFormatter.parseBest(dateStr, LocalDate::from, MonthDay::from);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            if (result instanceof LocalDate) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                date \u003d ((LocalDate) result);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                date \u003d ((MonthDay) result).atYear(Year.now().getValue());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            throw new DukeException(\"Unable to parse date.\\n \\n\""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                    + \"Please input your date in one of the following formats:\\n\""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                    + \"26/08\\n\" + \"26/08/20\\n\" + \"26/08/2020\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     * Parses a string and gives a time for use in creating tasks."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     *"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     * @param timeStr A string representing a time."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     * @return a LocalTime object represented by the string."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     * @throws DukeException if the string cannot be parsed."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public static LocalTime parseTime(String timeStr) throws DukeException {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        LocalTime time \u003d LocalTime.MIDNIGHT;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        DateTimeFormatter timeFormatter \u003d DateTimeFormatter.ofPattern(timeStr.contains(\" \") ? \"h:m a\" : \"H:m\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        if (!timeStr.isBlank()) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                time \u003d timeFormatter.parse(timeStr, LocalTime::from);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                throw new DukeException(\"Unable to parse time.\\n \\n\""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                        + \"Please input your time in one of the following formats:\\n\""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                        + \"1:19\\n\" + \"1:19 AM\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        return time;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     * Parses the command arguments given and returns an Argument object containing the arguments."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     *"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     * @param argsStr A string containing the command arguments."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     * @return an Argument object containing the arguments."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     * @throws DukeException if the arguments cannot be parsed."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     */"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public static Argument parseAddCommandArgs(String argsStr) throws DukeException {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        String[] args \u003d argsStr.split(\"\\\\s\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        String description \u003d Arrays.stream(args).filter(arg -\u003e !(arg.startsWith(\"#\") || arg.startsWith(\"!\")))"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                .collect(Collectors.joining(\" \"));"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        List\u003cString\u003e tags \u003d Arrays.stream(args).filter(arg -\u003e arg.startsWith(\"#\")).map(arg -\u003e arg.substring(1))"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                .collect(Collectors.toList());"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        long priorityCount \u003d Arrays.stream(args).filter(arg -\u003e arg.startsWith(\"!\")).count();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        if (priorityCount \u003e 1) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            throw new DukeException(\"Please specify only one task priority!\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        String priorityStr \u003d Arrays.stream(args).filter(arg -\u003e arg.startsWith(\"!\")).findFirst().orElse(\"!NONE\");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            TaskPriority priority \u003d TaskPriority.valueOf(priorityStr.substring(1).toUpperCase());"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            return new Argument(description, priority, tags);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        } catch (IllegalArgumentException e) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            throw new DukeException(\"Task priority not recognised. Please use one of NONE, LOW, MEDIUM or HIGH.\");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     * Parses the command given and returns a Command object for execution."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     *"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     * @param fullCommand A string containing the full command."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     * @return a Command object representing the command."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     * @throws DukeException if the command cannot be parsed."
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     */"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public static Command parse(String fullCommand) throws DukeException {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        String[] commands \u003d fullCommand.split(\"\\\\s\");"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        String command \u003d commands[0];"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        String argsStr \u003d commands.length \u003e 1 ? String.join(\" \", Arrays.copyOfRange(commands, 1, commands.length)) : \"\";"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        switch (command) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            if (!argsStr.isBlank()) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            if (!argsStr.isBlank()) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        case \"due\":"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            if (argsStr.isBlank()) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                throw new DukeException(\"Date required for the due command.\");"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            return new DueCommand(Parser.parseDate(argsStr));"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            if (argsStr.isBlank()) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                throw new DukeException(\"Task number required for the done command.\");"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            } else if (!argsStr.chars().allMatch(Character::isDigit)) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                throw new DukeException(\"Only positive integers allowed for the done command.\");"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            return new DoneCommand(Integer.parseInt(argsStr));"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            if (argsStr.isBlank()) {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                throw new DukeException(\"Task number required for the delete command.\");"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            } else if (!argsStr.chars().allMatch(Character::isDigit)) {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                throw new DukeException(\"Only positive integers allowed for the delete command.\");"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            return new DeleteCommand(Integer.parseInt(argsStr));"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            if (argsStr.isBlank()) {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                throw new DukeException(\"Keyword cannot be blank.\");"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            return new FindCommand(argsStr);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        case \"todo\": {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            Argument args \u003d Parser.parseAddCommandArgs(argsStr);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            return new AddCommand(TaskType.TODO, args.getDescription(), args.getPriority(), args.getTags());"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        case \"deadline\": {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            Argument args \u003d Parser.parseAddCommandArgs(argsStr);"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            String[] deadlineArgs \u003d args.getDescription().split(\"\\\\s/by\\\\s\");"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            String description \u003d deadlineArgs[0];"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            String dateTime \u003d deadlineArgs.length \u003e 1"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                    ? String.join(\" \", Arrays.copyOfRange(deadlineArgs, 1, deadlineArgs.length))"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                    : \"\";"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            return new AddCommand(TaskType.DEADLINE, description, Parser.parseDateTime(dateTime),"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                    args.getPriority(), args.getTags());"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        case \"event\": {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            Argument args \u003d Parser.parseAddCommandArgs(argsStr);"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            String[] eventArgs \u003d args.getDescription().split(\"\\\\s/at\\\\s\");"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            String description \u003d eventArgs[0];"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            String dateTime \u003d eventArgs.length \u003e 1"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                    ? String.join(\" \", Arrays.copyOfRange(eventArgs, 1, eventArgs.length))"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                    : \"\";"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            return new AddCommand(TaskType.EVENT, description, Parser.parseDateTime(dateTime),"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                    args.getPriority(), args.getTags());"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        }"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        }"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "seowalex"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seowalex": 214
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seowalex"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import duke.task.TaskPriority;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seowalex"
        },
        "content": "/**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seowalex"
        },
        "content": " * The Storage helper class."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seowalex"
        },
        "content": " */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seowalex"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    private final Path filePath;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        this.filePath \u003d Paths.get(filePath);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     * Saves the given tasks into a file."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     * @param tasks A list of tasks."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     * @throws DukeException if the file cannot be saved."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public void save(List\u003cTask\u003e tasks) throws DukeException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            Files.createDirectories(this.filePath.getParent());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            List\u003cString\u003e data \u003d tasks.stream().map(Task::toSaveData).collect(Collectors.toList());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            Files.write(this.filePath, data);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            throw new DukeException(\"Unable to save file! Task will not be saved on exit.\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     * Loads tasks from a given file."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     * @return A list of tasks."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     * @throws DukeException if the file cannot be read or does not follow the required format."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public List\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        if (Files.exists(this.filePath)) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                List\u003cString\u003e lines \u003d Files.readAllLines(this.filePath);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                for (String line : lines) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                    String[] params \u003d line.split(\"\\\\s\\\\|\\\\s\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                    String type \u003d params[0];"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                    String description \u003d params[4];"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                    TaskPriority priority \u003d TaskPriority.valueOf(params[1]);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                    List\u003cString\u003e tags \u003d Arrays.asList(params[2].substring(1, params[2].length() - 1).split(\", \"));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                    boolean isDone \u003d params[3].equals(\"1\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                    if (!params[3].equals(\"0\") \u0026\u0026 !params[3].equals(\"1\")) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                        throw new DukeException();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                    switch (type) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                    case \"T\":"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                        tasks.add(new Todo(description, priority, tags, isDone));"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                    case \"D\":"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                        tasks.add(new Deadline(description, LocalDateTime.parse(params[5]), priority, tags, isDone));"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                    case \"E\":"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                        tasks.add(new Event(description, LocalDateTime.parse(params[5]), priority, tags, isDone));"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                    default:"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                        throw new DukeException();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            } catch (DukeException | IOException | ArrayIndexOutOfBoundsException"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                    | DateTimeParseException | IllegalArgumentException | StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                throw new DukeException(\"Data file is corrupt. Ignoring saved tasks :-(\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "seowalex"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seowalex": 96
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seowalex"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import duke.task.TaskPriority;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import duke.task.TaskType;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seowalex"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    private final List\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        this(Collections.emptyList());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public TaskList(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e(tasks);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     * Adds a task to the TaskList and returns it."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     * @param type The type of the task."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     * @param description The description of the task."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     * @param dateTime The date/time of the task if applicable."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     * @param priority The priority of the task."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     * @param tags The tags associated with the task."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     * @return the added task."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     * @throws DukeException if the task cannot be added."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public Task addTask(TaskType type, String description, LocalDateTime dateTime,"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                        TaskPriority priority, List\u003cString\u003e tags) throws DukeException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        if (description.contains(\"|\")) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            throw new DukeException(\"Description cannot contain \\\"|\\\".\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        switch (type) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        case TODO:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            assert(dateTime \u003d\u003d null) : \"dateTime should be null for todos\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            return addTodo(description, priority, tags);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        case DEADLINE:"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            return addDeadline(description, dateTime, priority, tags);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        case EVENT:"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            return addEvent(description, dateTime, priority, tags);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            throw new DukeException(\"Task type not recognised!\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    private Todo addTodo(String description, TaskPriority priority, List\u003cString\u003e tags) throws DukeException {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        if (description.isBlank()) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            throw new DukeException(\"The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        Todo todo \u003d new Todo(description, priority, tags);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        this.tasks.add(todo);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        return todo;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    private Deadline addDeadline(String description, LocalDateTime dateTime,"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                                 TaskPriority priority, List\u003cString\u003e tags) throws DukeException {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        if (description.isBlank()) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            throw new DukeException(\"The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        Deadline deadline \u003d new Deadline(description, dateTime, priority, tags);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        this.tasks.add(deadline);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        return deadline;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    private Event addEvent(String description, LocalDateTime dateTime,"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                           TaskPriority priority, List\u003cString\u003e tags) throws DukeException {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        if (description.isBlank()) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            throw new DukeException(\"The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        Event event \u003d new Event(description, dateTime, priority, tags);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        this.tasks.add(event);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        return event;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     * Returns the task corresponding to the given task number."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     *"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     * @param taskNo A number representing a task."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     * @return a task corresponding to the given task number."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     * @throws DukeException if the task number does not correspond to any task."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     */"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public Task getTask(int taskNo) throws DukeException {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        assert(taskNo \u003e\u003d 0) : \"Task number should be non-negative\";"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        if (taskNo \u003c\u003d 0 || taskNo \u003e this.tasks.size()) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            throw new DukeException(\"Task \" + taskNo + \" does not exist.\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        return this.tasks.get(taskNo - 1);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     * Marks a task as done and returns it."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     *"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     * @param taskNo A number representing a task."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     * @return the task which has been mark as done."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     * @throws DukeException if the task cannot be marked as done."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     */"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public Task doTask(int taskNo) throws DukeException {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        Task task \u003d this.getTask(taskNo);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        task.markAsDone();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     * Deletes a task as done and returns it."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     *"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     * @param taskNo A number representing a task."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     * @return the deleted task."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     * @throws DukeException if the task cannot be deleted."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     */"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public Task deleteTask(int taskNo) throws DukeException {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        Task task \u003d this.getTask(taskNo);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        this.tasks.remove(task);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     * Returns a list of tasks that are due on the given date."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     *"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     * @param date A date."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     * @return a list of tasks due on the given date."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     */"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public List\u003cTask\u003e getDueTasks(LocalDate date) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        return this.tasks.stream().filter(task -\u003e task.isDue(date)).collect(Collectors.toList());"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     * Returns a list of tasks containing the given keyword."
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     *"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     * @param keyword A keyword."
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     * @return a list of tasks containing the given keyword."
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     */"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public List\u003cTask\u003e findTasks(String keyword) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        return this.tasks.stream().filter(task -\u003e task.hasKeyword(keyword)).collect(Collectors.toList());"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     * Returns all tasks."
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     *"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     * @return all tasks."
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     */"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public List\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        return this.tasks;"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "seowalex"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seowalex": 166
    }
  },
  {
    "path": "src/main/java/duke/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seowalex"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import duke.response.Response;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import duke.task.TaskPriority;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import duke.task.TaskType;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seowalex"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seowalex"
        },
        "content": " * Represents an add command."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seowalex"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seowalex"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    private final TaskType type;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    private final String description;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    private final LocalDateTime dateTime;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    private final TaskPriority priority;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    private final List\u003cString\u003e tags;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public AddCommand(TaskType type, String description) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        this(type, description, TaskPriority.NONE, Collections.emptyList());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public AddCommand(TaskType type, String description, TaskPriority priority, List\u003cString\u003e tags) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        this(type, description, null, priority, tags);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public AddCommand(TaskType type, String description, LocalDateTime dateTime) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        this(type, description, dateTime, TaskPriority.NONE, Collections.emptyList());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     * The add command constructor."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     * @param type The command type."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     * @param description The description."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     * @param dateTime The date/time if applicable."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     * @param priority The priority."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     * @param tags The list of tags."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public AddCommand(TaskType type, String description, LocalDateTime dateTime,"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                      TaskPriority priority, List\u003cString\u003e tags) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        this.dateTime \u003d dateTime;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        this.priority \u003d priority;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        this.tags \u003d new ArrayList\u003c\u003e(tags);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     * Executes the command, adding a task to the given TaskList."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     *"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     * @param taskList A TaskList instance."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     * @param storage A Storage instance."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     * @throws DukeException if the task cannot be added."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public Response execute(TaskList taskList, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        Task task \u003d taskList.addTask(this.type, this.description, this.dateTime, this.priority, this.tags);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        Response response \u003d new Response(\"Got it. I\u0027ve added this task:\\n  \""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                + task + \"\\n\""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                + \"Now you have \" + taskList.getTasks().size()"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                + (taskList.getTasks().size() \u003d\u003d 1 ? \" task\" : \" tasks\") + \" in the list.\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        storage.save(taskList.getTasks());"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        return response;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public boolean equals(Object obj) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        if (obj instanceof AddCommand) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            return this.type.equals(((AddCommand) obj).type)"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                    \u0026\u0026 this.description.equals(((AddCommand) obj).description)"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                    \u0026\u0026 (this.dateTime \u003d\u003d null || this.dateTime.equals(((AddCommand) obj).dateTime));"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "seowalex"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seowalex": 85
    }
  },
  {
    "path": "src/main/java/duke/command/Argument.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seowalex"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import duke.task.TaskPriority;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seowalex"
        },
        "content": "public class Argument {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    private final String description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    private final TaskPriority priority;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    private final List\u003cString\u003e tags;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     * The Argument constructor."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     * @param description The description from the arguments."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     * @param priority THe priority from the arguments."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     * @param tags The list of tags from the arguments."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public Argument(String description, TaskPriority priority, List\u003cString\u003e tags) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        this.priority \u003d priority;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        this.tags \u003d new ArrayList\u003c\u003e(tags);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public TaskPriority getPriority() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        return this.priority;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public List\u003cString\u003e getTags() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        return this.tags;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "seowalex"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seowalex": 37
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seowalex"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import duke.response.Response;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seowalex"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seowalex"
        },
        "content": " * Represents a command."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seowalex"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seowalex"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     * @param taskList A TaskList instance."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     * @param storage A storage instance."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     * @throws DukeException if the command cannot be executed."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public abstract Response execute(TaskList taskList, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     * Returns a boolean indicating the program exit status."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     * @return true if the program should exit after executing this command."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "seowalex"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seowalex": 29
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seowalex"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import duke.response.Response;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seowalex"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seowalex"
        },
        "content": " * Represents a delete command."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seowalex"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seowalex"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    private final int taskNo;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public DeleteCommand(int taskNo) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        this.taskNo \u003d taskNo;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     * Executes the command, deleting a task from the given TaskList."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     * @param taskList A TaskList instance."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     * @param storage A Storage instance."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     * @throws DukeException if the task cannot be found."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public Response execute(TaskList taskList, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        Task task \u003d taskList.deleteTask(this.taskNo);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        Response response \u003d new Response(\"Noted. I\u0027ve removed this task:\\n  \""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                + task + \"\\n\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                + \"Now you have \" + taskList.getTasks().size()"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                + (taskList.getTasks().size() \u003d\u003d 1 ? \" task\" : \" tasks\") + \" in the list.\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        storage.save(taskList.getTasks());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        return response;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public boolean equals(Object obj) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        if (obj instanceof DeleteCommand) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            return this.taskNo \u003d\u003d ((DeleteCommand) obj).taskNo;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "seowalex"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seowalex": 46
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seowalex"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import duke.response.Response;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seowalex"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seowalex"
        },
        "content": " * Represents a done command."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seowalex"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seowalex"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    private final int taskNo;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public DoneCommand(int taskNo) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        this.taskNo \u003d taskNo;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     * Executes the command, marking a task as done in the given TaskList."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     * @param taskList A TaskList instance."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     * @param storage A Storage instance."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     * @throws DukeException if the task cannot be found."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public Response execute(TaskList taskList, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        Task task \u003d taskList.doTask(this.taskNo);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        Response response \u003d new Response(\"Nice! I\u0027ve marked this task as done:\\n  \" + task);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        storage.save(taskList.getTasks());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        return response;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public boolean equals(Object obj) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        if (obj instanceof DoneCommand) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            return this.taskNo \u003d\u003d ((DoneCommand) obj).taskNo;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "seowalex"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seowalex": 43
    }
  },
  {
    "path": "src/main/java/duke/command/DueCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seowalex"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import duke.response.Response;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seowalex"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seowalex"
        },
        "content": " * Represents a due command."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seowalex"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seowalex"
        },
        "content": "public class DueCommand extends Command {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    private final LocalDate date;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public DueCommand(LocalDate date) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     * Executes the command, listing all tasks due on the given date."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     * @param taskList A TaskList instance."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     * @param storage A Storage instance."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     * @throws DukeException if there are no tasks due on the given date."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public Response execute(TaskList taskList, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        List\u003cTask\u003e dueTasks \u003d taskList.getDueTasks(this.date);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d MMM yyyy\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        if (dueTasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            throw new DukeException(\"There are no tasks in your list occurring on \""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                    + this.date.format(formatter) + \".\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        StringBuilder output \u003d new StringBuilder(\"Here are the tasks in your list occurring on \""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                + this.date.format(formatter) + \":\\n\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        for (Task task : dueTasks) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            output.append(taskList.getTasks().indexOf(task) + 1).append(\".\").append(task).append(\u0027\\n\u0027);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        return new Response(output.toString());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public boolean equals(Object obj) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        if (obj instanceof DueCommand) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            return this.date.equals(((DueCommand) obj).date);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "seowalex"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seowalex": 58
    }
  },
  {
    "path": "src/main/java/duke/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seowalex"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import duke.response.Response;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seowalex"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seowalex"
        },
        "content": " * Represents an exit command."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seowalex"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seowalex"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     * Executes the command, exiting the program."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     * @param taskList A TaskList instance."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     * @param storage A Storage instance."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     * @throws DukeException if the tasks cannot be saved."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public Response execute(TaskList taskList, Storage storage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        return new Response(\"Bye. Hope to see you again soon!\", false, this.isExit());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     * Returns true to indicate that the program should exit."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     * @return true"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public boolean equals(Object obj) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        return obj instanceof ExitCommand;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "seowalex"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seowalex": 38
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seowalex"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import duke.response.Response;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seowalex"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seowalex"
        },
        "content": " * Represents a find command."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seowalex"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seowalex"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    private final String keyword;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public FindCommand(String keyword) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     * Executes the command, listing all tasks containing the given keyword."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     * @param taskList A TaskList instance."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     * @param storage A Storage instance."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     * @throws DukeException if there are no tasks containing the given keyword."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public Response execute(TaskList taskList, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        List\u003cTask\u003e foundTasks \u003d taskList.findTasks(this.keyword);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        if (foundTasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            throw new DukeException(\"There are no tasks in your list with the keyword \\\"\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                    + this.keyword + \"\\\".\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        StringBuilder output \u003d new StringBuilder(\"Here are the matching tasks in your list:\\n\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        for (Task task : foundTasks) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            output.append(taskList.getTasks().indexOf(task) + 1).append(\".\").append(task).append(\u0027\\n\u0027);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        return new Response(output.toString());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public boolean equals(Object obj) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        if (obj instanceof FindCommand) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            return this.keyword.equals(((FindCommand) obj).keyword);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "seowalex"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seowalex": 54
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seowalex"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import duke.response.Response;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seowalex"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seowalex"
        },
        "content": " * Represents a list command."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seowalex"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seowalex"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     * Executes the command, listing all tasks."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     * @param taskList A TaskList instance."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     * @param storage A Storage instance."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     * @throws DukeException if there are no tasks."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public Response execute(TaskList taskList, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        List\u003cTask\u003e tasks \u003d taskList.getTasks();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        if (tasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            throw new DukeException(\"There are no tasks in your list.\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        StringBuilder output \u003d new StringBuilder(\"Here are the tasks in your list:\\n\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            output.append(tasks.indexOf(task) + 1).append(\".\").append(task).append(\u0027\\n\u0027);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        return new Response(output.toString());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public boolean equals(Object obj) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        return obj instanceof ListCommand;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "seowalex"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seowalex": 43
    }
  },
  {
    "path": "src/main/java/duke/response/Response.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seowalex"
        },
        "content": "package duke.response;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seowalex"
        },
        "content": "public class Response {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    private final String message;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    private final boolean isError;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    private final boolean isExit;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public Response() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        this(null, false, false);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public Response(String message) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        this(message, false, false);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     * A Response object."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     * @param message The message string."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     * @param isError The error status."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     * @param isExit The exit status."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public Response(String message, boolean isError, boolean isExit) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        this.message \u003d message;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        this.isError \u003d isError;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        this.isExit \u003d isExit;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        return this.message;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public boolean isError() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        return this.isError;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        return this.isExit;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "seowalex"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seowalex": 40
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seowalex"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seowalex"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seowalex"
        },
        "content": " * Represents a deadline."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seowalex"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seowalex"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    private final LocalDateTime dateTime;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public Deadline(String description, LocalDateTime dateTime) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        this(description, dateTime, TaskPriority.NONE, Collections.emptyList(), false);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public Deadline(String description, LocalDateTime dateTime, TaskPriority priority, List\u003cString\u003e tags) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        this(description, dateTime, priority, tags, false);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     * The deadline constructor."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     * @param description The description of the deadline."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     * @param dateTime The date/time the deadline is due by."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     * @param priority Priority of deadline."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     * @param tags List of tags."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     * @param isDone The boolean keeping track of whether the deadline is done."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public Deadline(String description, LocalDateTime dateTime,"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                    TaskPriority priority, List\u003cString\u003e tags, boolean isDone) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        super(description, priority, tags, isDone);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        this.dateTime \u003d dateTime;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public LocalDateTime getDateTime() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        return this.dateTime;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     * Returns a boolean indicating if the deadline is due by the given date."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     * @param date A date."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     * @return true if the deadline is due by the given date."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public boolean isDue(LocalDate date) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        return this.dateTime.toLocalDate().equals(date);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public String toSaveData() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        return \"D | \" + super.toSaveData() + \" | \" + this.dateTime;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d MMM yyyy, h:mm a\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + this.dateTime.format(formatter) + \")\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "seowalex"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seowalex": 64
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seowalex"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seowalex"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seowalex"
        },
        "content": " * Represents an event."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seowalex"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seowalex"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    private final LocalDateTime dateTime;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public Event(String description, LocalDateTime dateTime) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        this(description, dateTime, TaskPriority.NONE, Collections.emptyList(), false);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public Event(String description, LocalDateTime dateTime, TaskPriority priority, List\u003cString\u003e tags) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        this(description, dateTime, priority, tags, false);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     * The event constructor."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     * @param description The description of the event."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     * @param dateTime The date/time the event is due by."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     * @param priority Priority of event."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     * @param tags List of tags."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     * @param isDone The boolean keeping track of whether the event is done."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public Event(String description, LocalDateTime dateTime,"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                 TaskPriority priority, List\u003cString\u003e tags, boolean isDone) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        super(description, priority, tags, isDone);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        this.dateTime \u003d dateTime;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public LocalDateTime getDateTime() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        return this.dateTime;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     * Returns a boolean indicating if the event is happening at the given date."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     * @param date A date."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     * @return true if the event is happening at the given date."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public boolean isDue(LocalDate date) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        return this.dateTime.toLocalDate().equals(date);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public String toSaveData() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        return \"E | \" + super.toSaveData() + \" | \" + this.dateTime;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d MMM yyyy, h:mm a\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + this.dateTime.format(formatter) + \")\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "seowalex"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seowalex": 64
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seowalex"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seowalex"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seowalex"
        },
        "content": " * Represents a task, which can be a todo, deadline or event."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seowalex"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seowalex"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    private final String description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    private final TaskPriority priority;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    private final List\u003cString\u003e tags;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     * The task constructor."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     * @param description The description of the task."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     * @param priority Priority of task."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     * @param tags List of tags."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     * @param isDone The boolean keeping track of whether the task is done."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public Task(String description, TaskPriority priority, List\u003cString\u003e tags, boolean isDone) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        assert(!description.isBlank()) : \"Task description should not be empty\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        this.priority \u003d priority;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        this.tags \u003d new ArrayList\u003c\u003e(tags);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public abstract boolean isDue(LocalDate date);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     * Returns a boolean indicating if the task contains the given keyword."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     * @param keyword A keyword."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     * @return true if the task contains the given keyword."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public boolean hasKeyword(String keyword) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        assert(!keyword.isBlank()) : \"Keyword should not be blank\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        return this.description.contains(keyword);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     * Returns a status icon corresponding to whether the task is done."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     * @return a tick if the task is done, and a cross otherwise."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        return this.isDone ? \"\\u2713\" : \"\\u2718\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     * Marks the task as done."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     * Returns a string representation of the task for saving into a file."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     *"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     * @return a string representation of the task."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public String toSaveData() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        return this.priority + \" | \" + this.tags + \" | \" + (this.isDone ? 1 : 0) + \" | \" + this.description;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     * Returns a string representation of the task for displaying."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     *"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     * @return a string representation of the task."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.priority.toSymbol() + \" \" + this.description + \" \" + this.tags;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "seowalex"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seowalex": 84
    }
  },
  {
    "path": "src/main/java/duke/task/TaskPriority.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seowalex"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seowalex"
        },
        "content": "public enum TaskPriority {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    NONE(\"\\u24ff\"), LOW(\"\\u2778\"), MEDIUM(\"\\u2777\"), HIGH(\"\\u2776\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    private final String symbol;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    TaskPriority(String symbol) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        this.symbol \u003d symbol;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public String toSymbol() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        return symbol;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seowalex"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seowalex": 15
    }
  },
  {
    "path": "src/main/java/duke/task/TaskType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seowalex"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seowalex"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seowalex"
        },
        "content": " * Represents the types of tasks."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seowalex"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seowalex"
        },
        "content": "public enum TaskType {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    TODO, DEADLINE, EVENT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seowalex"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seowalex": 8
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seowalex"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seowalex"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seowalex"
        },
        "content": " * Represents a todo."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seowalex"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seowalex"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        this(description, TaskPriority.NONE, Collections.emptyList(), false);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public Todo(String description, TaskPriority priority, List\u003cString\u003e tags) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        this(description, priority, tags, false);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public Todo(String description, TaskPriority priority, List\u003cString\u003e tags, boolean isDone) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        super(description, priority, tags, isDone);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     * Returns false as a todo has no date."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     * @param date A date."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     * @return false."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public boolean isDue(LocalDate date) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public String toSaveData() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        return \"T | \" + super.toSaveData();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "seowalex"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seowalex": 42
    }
  },
  {
    "path": "src/main/java/duke/view/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seowalex"
        },
        "content": "package duke.view;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seowalex"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(this.getClass().getResource(\"/views/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        this.dialog.setText(text);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        this.displayPicture.setImage(img);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        DialogBox dialogBox \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        dialogBox.getStyleClass().add(\"user-dialog-box\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        return dialogBox;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "seowalex"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seowalex": 42
    }
  },
  {
    "path": "src/main/java/duke/view/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seowalex"
        },
        "content": "package duke.view;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import java.util.Timer;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import java.util.TimerTask;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import duke.response.Response;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seowalex"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    private final Duke duke;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    private final Image userImage;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    private final Image dukeImage;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     * The main window for Duke,"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     * @param duke A Duke instance."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "seowalex"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public MainWindow(Duke duke) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        this.duke \u003d duke;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        this.userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/user-solid.png\"));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        this.dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/crown-solid.png\"));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(this.getClass().getResource(\"/views/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        this.dialogContainer.getChildren().add(DialogBox.getDukeDialog(this.duke.getWelcome(), this.dukeImage));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    private void initialize() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        this.scrollPane.vvalueProperty().bind(this.dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        String input \u003d this.userInput.getText();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        Response response \u003d this.duke.getResponse(this.userInput.getText());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        this.dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                DialogBox.getUserDialog(input, this.userImage),"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                DialogBox.getDukeDialog(response.getMessage(), this.dukeImage)"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        );"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        this.userInput.clear();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        if (response.isExit()) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            Timer timer \u003d new Timer();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            TimerTask task \u003d new TimerTask() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                @Override"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                public void run() {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                    Platform.exit();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                    System.exit(0);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            };"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            this.userInput.setDisable(true);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            this.sendButton.setDisable(true);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            timer.schedule(task, 2000);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "seowalex"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seowalex": 87
    }
  },
  {
    "path": "src/main/resources/views/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seowalex"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seowalex"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seowalex"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seowalex"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seowalex"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seowalex"
        },
        "content": "\u003cfx:root"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seowalex"
        },
        "content": "   type\u003d\"javafx.scene.layout.HBox\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seowalex"
        },
        "content": "   xmlns\u003d\"http://javafx.com/javafx\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seowalex"
        },
        "content": "   xmlns:fx\u003d\"http://javafx.com/fxml\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seowalex"
        },
        "content": "\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        \u003cInsets top\u003d\"8.0\" left\u003d\"8.0\" right\u003d\"8.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"16.0\" fitWidth\u003d\"16.0\" preserveRatio\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            \u003cInsets right\u003d\"6.0\" /\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    \u003c/ImageView\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" minHeight\u003d\"-Infinity\" /\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seowalex"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "seowalex": 22
    }
  },
  {
    "path": "src/main/resources/views/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seowalex"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seowalex"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seowalex"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seowalex"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seowalex"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seowalex"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seowalex"
        },
        "content": "\u003c?import javafx.scene.layout.ColumnConstraints?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seowalex"
        },
        "content": "\u003c?import javafx.scene.layout.GridPane?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seowalex"
        },
        "content": "\u003c?import javafx.scene.layout.RowConstraints?\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seowalex"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seowalex"
        },
        "content": "\u003cfx:root"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    maxHeight\u003d\"-Infinity\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    maxWidth\u003d\"-Infinity\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    minHeight\u003d\"-Infinity\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    minWidth\u003d\"-Infinity\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    prefHeight\u003d\"600.0\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    prefWidth\u003d\"400.0\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    type\u003d\"javafx.scene.layout.AnchorPane\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    xmlns\u003d\"http://javafx.com/javafx\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    xmlns:fx\u003d\"http://javafx.com/fxml\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seowalex"
        },
        "content": "\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    \u003cScrollPane"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        fx:id\u003d\"scrollPane\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        hbarPolicy\u003d\"NEVER\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        vbarPolicy\u003d\"ALWAYS\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        fitToHeight\u003d\"true\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        fitToWidth\u003d\"true\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        AnchorPane.leftAnchor\u003d\"0.0\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        AnchorPane.rightAnchor\u003d\"0.0\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        AnchorPane.topAnchor\u003d\"0.0\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        AnchorPane.bottomAnchor\u003d\"48.0\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    \u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        \u003cVBox fx:id\u003d\"dialogContainer\" /\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    \u003cGridPane"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        AnchorPane.leftAnchor\u003d\"0.0\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        AnchorPane.rightAnchor\u003d\"0.0\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        AnchorPane.bottomAnchor\u003d\"0.0\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    \u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        \u003cpadding\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            \u003cInsets top\u003d\"4.0\" right\u003d\"6.0\" bottom\u003d\"4.0\" left\u003d\"6.0\" /\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        \u003c/padding\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        \u003ccolumnConstraints\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\"/\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            \u003cColumnConstraints hgrow\u003d\"NEVER\" minWidth\u003d\"80.0\" /\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        \u003c/columnConstraints\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        \u003crowConstraints\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            \u003cRowConstraints minHeight\u003d\"40.0\" vgrow\u003d\"NEVER\" /\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        \u003c/rowConstraints\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"32.0\"\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            \u003cGridPane.margin\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                \u003cInsets right\u003d\"8.0\" /\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            \u003c/GridPane.margin\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        \u003c/TextField\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        \u003cButton"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            fx:id\u003d\"sendButton\""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            mnemonicParsing\u003d\"false\""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            onAction\u003d\"#handleUserInput\""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            prefHeight\u003d\"32.0\""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            prefWidth\u003d\"80.0\""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            text\u003d\"Send\""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            GridPane.columnIndex\u003d\"1\""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        /\u003e"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    \u003c/GridPane\u003e"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "seowalex"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "seowalex": 67
    }
  },
  {
    "path": "src/test/java/duke/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seowalex"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertArrayEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import org.junit.jupiter.params.ParameterizedTest;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import org.junit.jupiter.params.provider.ValueSource;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import duke.command.AddCommand;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import duke.command.DoneCommand;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import duke.command.DueCommand;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import duke.command.ExitCommand;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import duke.command.FindCommand;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import duke.task.TaskType;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seowalex"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    @ParameterizedTest"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    @ValueSource(strings \u003d { \"20/1/20 14:14\", \"20/01/20 2:14 PM\", \"20/1/2020 14:14\", \"20/01/2020 2:14 PM\" })"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public void parseDateTime_validDateTimeStr_dateTimeReturned(String dateTimeStr) throws DukeException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        LocalDateTime expectedDateTime \u003d LocalDateTime.of(2020, 1, 20, 14, 14, 0);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        LocalDateTime actualDateTime \u003d Parser.parseDateTime(dateTimeStr);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        assertEquals(expectedDateTime, actualDateTime);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    @ParameterizedTest"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    @ValueSource(strings \u003d { \"20 1400\", \"20-01 14:00 PM\", \"20-01-20 2PM\", \"20-01-2020 2 PM\" })"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public void parseDateTime_invalidDateTimeStr_exceptionThrown(String dateTimeStr) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        assertThrows(DukeException.class, () -\u003e Parser.parseDateTime(dateTimeStr));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    @ParameterizedTest"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    @ValueSource(strings \u003d { \"20/1/20\", \"20/01/20\", \"20/1/2020\", \"20/01/2020\" })"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public void parseDate_validDateStr_dateReturned(String dateStr) throws DukeException {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        LocalDate expectedDate \u003d LocalDate.of(2020, 1, 20);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        LocalDate actualDate \u003d Parser.parseDate(dateStr);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        assertEquals(expectedDate, actualDate);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    @ParameterizedTest"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    @ValueSource(strings \u003d { \"20\", \"20-01\", \"20-01-20\", \"20-01-2020\" })"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public void parseDate_invalidDateStr_exceptionThrown(String dateStr) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        assertThrows(DukeException.class, () -\u003e Parser.parseDate(dateStr));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    @ParameterizedTest"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    @ValueSource(strings \u003d { \"14:14\", \"2:14 PM\" })"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public void parseTime_validTimeStr_timeReturned(String timeStr) throws DukeException {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        LocalTime expectedTime \u003d LocalTime.of(14, 14, 0);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        LocalTime actualTime \u003d Parser.parseTime(timeStr);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        assertEquals(expectedTime, actualTime);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    @ParameterizedTest"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    @ValueSource(strings \u003d { \"1400\", \"14:00 PM\", \"2PM\", \"2 PM\" })"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public void parseTime_invalidTimeStr_exceptionThrown(String timeStr) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        assertThrows(DukeException.class, () -\u003e Parser.parseTime(timeStr));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public void parse_validAddCommand_addCommandReturned() throws DukeException {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        List\u003cAddCommand\u003e expectedCommands \u003d Arrays.asList("
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                new AddCommand(TaskType.TODO, \"todo\"),"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                new AddCommand(TaskType.DEADLINE, \"deadline\", LocalDateTime.of(2020, 1, 20, 14, 14, 0)),"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                new AddCommand(TaskType.EVENT, \"event\", LocalDateTime.of(2020, 1, 20, 14, 14, 0)));"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        List\u003cCommand\u003e actualCommands \u003d Arrays.asList("
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                Parser.parse(\"todo todo\"),"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                Parser.parse(\"deadline deadline /by 20/1/2020 2:14 PM\"),"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                Parser.parse(\"event event /at 20/1/2020 2:14 PM\"));"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        assertArrayEquals(expectedCommands.toArray(), actualCommands.toArray());"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public void parse_validDeleteCommand_deleteCommandReturned() throws DukeException {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        DeleteCommand expectedCommand \u003d new DeleteCommand(1);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        Command actualCommand \u003d Parser.parse(\"delete 1\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        assertEquals(expectedCommand, actualCommand);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public void parse_invalidDeleteCommand_exceptionThrown() {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        assertThrows(DukeException.class, () -\u003e Parser.parse(\"delete -1\"));"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public void parse_validDoneCommand_doneCommandReturned() throws DukeException {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        DoneCommand expectedCommand \u003d new DoneCommand(1);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        Command actualCommand \u003d Parser.parse(\"done 1\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        assertEquals(expectedCommand, actualCommand);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public void parse_invalidDoneCommand_exceptionThrown() {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        assertThrows(DukeException.class, () -\u003e Parser.parse(\"done -1\"));"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public void parse_validDueCommand_dueCommandReturned() throws DukeException {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        DueCommand expectedCommand \u003d new DueCommand(LocalDate.of(2020, 1, 20));"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        Command actualCommand \u003d Parser.parse(\"due 20/1/2020\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        assertEquals(expectedCommand, actualCommand);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public void parse_invalidDueCommand_exceptionThrown() {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        assertThrows(DukeException.class, () -\u003e Parser.parse(\"due 20\"));"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public void parse_validExitCommand_exitCommandReturned() throws DukeException {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        ExitCommand expectedCommand \u003d new ExitCommand();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        Command actualCommand \u003d Parser.parse(\"bye\");"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        assertEquals(expectedCommand, actualCommand);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public void parse_invalidExitCommand_exceptionThrown() {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        assertThrows(DukeException.class, () -\u003e Parser.parse(\"bye invalid\"));"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public void parse_validFindCommand_findCommandReturned() throws DukeException {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        FindCommand expectedCommand \u003d new FindCommand(\"task\");"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        Command actualCommand \u003d Parser.parse(\"find task\");"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        assertEquals(expectedCommand, actualCommand);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public void parse_invalidFindCommand_exceptionThrown() {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        assertThrows(DukeException.class, () -\u003e Parser.parse(\"find\"));"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public void parse_validListCommand_listCommandReturned() throws DukeException {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        ListCommand expectedCommand \u003d new ListCommand();"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        Command actualCommand \u003d Parser.parse(\"list\");"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        assertEquals(expectedCommand, actualCommand);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public void parse_invalidListCommand_exceptionThrown() {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        assertThrows(DukeException.class, () -\u003e Parser.parse(\"list invalid\"));"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public void parse_invalidCommand_exceptionThrown() {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        assertThrows(DukeException.class, () -\u003e Parser.parse(\"invalid\"));"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "seowalex"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seowalex": 169
    }
  },
  {
    "path": "src/test/java/duke/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seowalex"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import duke.task.TaskPriority;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import duke.task.TaskType;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seowalex"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    private static final String DESCRIPTION \u003d \"description\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    private static final LocalDateTime DATE_TIME \u003d LocalDateTime.now();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public void addTodo_validTodo_todoReturned() throws DukeException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        Todo expectedTask \u003d new Todo(TaskListTest.DESCRIPTION);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        taskList.addTask(TaskType.TODO, TaskListTest.DESCRIPTION, null, TaskPriority.NONE, Collections.emptyList());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        assertEquals(expectedTask.getDescription(), taskList.getTask(1).getDescription());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public void addDeadline_validDeadline_deadlineReturned() throws DukeException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        Deadline expectedTask \u003d new Deadline(TaskListTest.DESCRIPTION, TaskListTest.DATE_TIME);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        taskList.addTask(TaskType.DEADLINE, TaskListTest.DESCRIPTION, TaskListTest.DATE_TIME,"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                TaskPriority.NONE, Collections.emptyList());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        assertEquals(expectedTask.getDescription(), taskList.getTask(1).getDescription());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        assertEquals(expectedTask.getDateTime(), ((Deadline) taskList.getTask(1)).getDateTime());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public void addEvent_validEvent_eventReturned() throws DukeException {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        Event expectedTask \u003d new Event(TaskListTest.DESCRIPTION, TaskListTest.DATE_TIME);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        taskList.addTask(TaskType.EVENT, TaskListTest.DESCRIPTION, TaskListTest.DATE_TIME,"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                TaskPriority.NONE, Collections.emptyList());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        assertEquals(expectedTask.getDescription(), taskList.getTask(1).getDescription());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        assertEquals(expectedTask.getDateTime(), ((Event) taskList.getTask(1)).getDateTime());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public void addTask_invalidTask_exceptionThrown() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        assertThrows(DukeException.class, () -\u003e taskList.addTask(TaskType.TODO, \"\", null,"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                TaskPriority.NONE, Collections.emptyList()));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        assertThrows(DukeException.class, () -\u003e taskList.addTask(TaskType.DEADLINE, \"\", TaskListTest.DATE_TIME,"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                TaskPriority.NONE, Collections.emptyList()));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        assertThrows(DukeException.class, () -\u003e taskList.addTask(TaskType.EVENT, \"\", TaskListTest.DATE_TIME,"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                TaskPriority.NONE, Collections.emptyList()));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public void getTask_invalidTaskNo_exceptionThrown() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        assertThrows(DukeException.class, () -\u003e taskList.getTask(0));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        assertThrows(DukeException.class, () -\u003e taskList.getTask(1));"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public void deleteTask_validTaskNo_taskDeleted() throws DukeException {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        List\u003cTask\u003e tasks \u003d Arrays.asList("
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                new Todo(TaskListTest.DESCRIPTION),"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                new Deadline(TaskListTest.DESCRIPTION, TaskListTest.DATE_TIME),"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                new Event(TaskListTest.DESCRIPTION, TaskListTest.DATE_TIME));"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        TaskList taskList \u003d new TaskList(tasks);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        int initialSize \u003d taskList.getTasks().size();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        taskList.deleteTask(1);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        assertEquals(initialSize - 1, taskList.getTasks().size());"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "seowalex"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seowalex": 87
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seowalex"
        },
        "content": "list"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seowalex"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seowalex"
        },
        "content": "deadline return book /by June 6th"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seowalex"
        },
        "content": "event project meeting /at Aug 6th 2-4pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seowalex"
        },
        "content": "todo join sports club"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seowalex"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seowalex"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seowalex"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seowalex"
        },
        "content": "list"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seowalex"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seowalex"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seowalex"
        },
        "content": "deadline do homework /by no idea :-p"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seowalex"
        },
        "content": "todo"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seowalex"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seowalex"
        },
        "content": "event"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seowalex"
        },
        "content": "deadline test /by"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seowalex"
        },
        "content": "event test /at"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seowalex"
        },
        "content": "done"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seowalex"
        },
        "content": "done something"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seowalex"
        },
        "content": "done 0"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seowalex"
        },
        "content": "blah"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seowalex"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "seowalex": 22
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seowalex"
        },
        "content": "if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/Duke.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "seowalex": 1,
      "-": 37
    }
  }
]
