[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ktaekwon000": 13
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "    private static final String LINE \u003d \"    ____________________________________________________________\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "    private static final String WELCOME_MESSAGE \u003d \"Hello, I\u0027m Duke, your personal assistant!\\n\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "        + \"     What can I do for you?\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "    private static final String GOODBYE_MESSAGE \u003d \"Bye. Hope to see you again soon! :)\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "    private static ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "    private static String makeWrappedString(String txt) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "        return LINE + \"\\n     \" + txt + \"\\n\" + LINE;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "    private static void addToList(Task task) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "        list.add(task);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "        System.out.println(LINE"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "            + \"\\n     Sure, I\u0027ve added this task to your list:\\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "            + \"       \" + task"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "            + \"\\n     You now have \" + list.size() + \" task(s) in the list!\\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "            + LINE);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "        System.out.println(makeWrappedString(WELCOME_MESSAGE));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "        String input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "        while (!input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "                switch (input.split(\" \")[0]) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "                case \"todo\":"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "                    if (input.length() \u003c\u003d 5 || input.split(\" \").length \u003c 2) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "                        throw new IllegalArgumentException(\"The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "                    addToList(new Todo(input.substring(5)));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "                case \"deadline\":"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "                    int indexOfBy \u003d input.indexOf(\" /by \");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "                    if (input.length() \u003c\u003d 9 || input.split(\" \").length \u003c 2) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "                        throw new IllegalArgumentException(\"The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "                    if (indexOfBy \u003c 0 || input.substring(indexOfBy + 5).split(\" \").length \u003c\u003d 0) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "                        throw new IllegalArgumentException("
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "                            \"A date needs to be provided with /by when adding a deadline.\\n\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "                                + \"     Usage: deadline return book /by tomorrow\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "                    addToList(new Deadline(input.substring(9, indexOfBy), input.substring(indexOfBy + 5)));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "                case \"event\":"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "                    int indexOfAt \u003d input.indexOf(\" /at \");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "                    if (input.length() \u003c\u003d 6 || input.split(\" \").length \u003c 2) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "                        throw new IllegalArgumentException(\"The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "                    if (indexOfAt \u003c 0 || input.substring(indexOfAt + 5).split(\" \").length \u003c\u003d 0) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "                        throw new IllegalArgumentException(\"A date needs to be provided with /at when adding a event.\\n\""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "                            + \"     Usage: event library renewal /at next sunday\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "                    addToList(new Event(input.substring(6, indexOfAt), input.substring(indexOfAt + 5)));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "                case \"list\":"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "                    System.out.println(LINE + \"\\n     Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "                    if (list.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "                        System.out.println(\"     Your list is empty. How about adding some tasks?\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "                        for (int i \u003d 0; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "                            System.out.println(\"     \" + (i + 1) + \": \" + list.get(i));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "                    System.out.println(LINE);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "                case \"done\":"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "                    if (input.split(\" \").length \u003c 2 || !input.split(\" \")[1].matches(\"\\\\d+\")) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "                        throw new IllegalArgumentException(\"The index of the task to be marked done must be provided.\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "                    if (Integer.parseInt(input.split(\" \")[1]) \u003e list.size()) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "                        throw new IllegalArgumentException("
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "                            \"The index provided is too large.\\n     Run list to see your list of tasks.\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "                    if (Integer.parseInt(input.split(\" \")[1]) \u003c 1) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "                        throw new IllegalArgumentException("
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "                            \"The index provided is too small.\\n     Input an integer that is 1 or greater.\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "                    Task doneTask \u003d list.get(Integer.parseInt(input.split(\" \")[1]) - 1);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "                    doneTask.setDone(true);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "                    System.out.println("
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "                        makeWrappedString(\"Great Job! I\u0027ve marked this task as done:\\n       \" + doneTask));"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "                case \"delete\":"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "                    if (input.split(\" \").length \u003c 2 || !input.split(\" \")[1].matches(\"\\\\d+\")) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "                        throw new IllegalArgumentException(\"The index of the task to be deleted must be provided.\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "                    if (Integer.parseInt(input.split(\" \")[1]) \u003e list.size()) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "                        throw new IllegalArgumentException("
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "                            \"The index provided is too large.\\n     Run list to see your list of tasks.\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "                    if (Integer.parseInt(input.split(\" \")[1]) \u003c 1) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "                        throw new IllegalArgumentException("
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "                            \"The index provided is too small.\\n     Input an integer that is 1 or greater.\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "                    Task deleted \u003d list.remove(Integer.parseInt(input.split(\" \")[1]) - 1);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "                    System.out.println(LINE"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "                        + \"\\n     Sure, I\u0027ve deleted this task from your list:\\n\""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "                        + \"       \" + deleted"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "                        + \"\\n     You now have \" + list.size() + \" task(s) in the list.\\n\""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "                        + LINE);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "                    throw new IllegalArgumentException(\"Your input must start with one of the following:\\n\""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "                        + \"     \\\"todo\\\", \\\"deadline\\\", \\\"event\\\", \\\"list\\\", \\\"done\\\" or \\\"delete\\\".\""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "                    );"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "                    // break;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "                }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "            } catch (IllegalArgumentException e) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "                System.out.println(makeWrappedString(\"Error! We had a problem understanding your message.\\n     \""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "                    + e.getMessage()));"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "            }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "            input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "        System.out.println(makeWrappedString(GOODBYE_MESSAGE));"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ktaekwon000": 121,
      "-": 4
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ktaekwon000": 13
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "    public void setDone(boolean done) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "        isDone \u003d done;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "        return (isDone ? \"Y\" : \"X\"); //return tick or X symbols"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ktaekwon000": 22
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ktaekwon000": 10
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "todo"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "todo     "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "deadline return book"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "deadline return book /by tomorrow"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "event"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "event library renewal"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "event library renewal /at next Sunday"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "todo do homework"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "list"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "done"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "done -1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "done 0"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "done 5"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "list"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "delete"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "delete -1"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "delete 0"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "delete 4"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "delete 4"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "list"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "blahblah"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "ktaekwon000": 26
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "dir /s /B ..\\src\\main\\java\\*.java \u003e sources.txt"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin @sources.txt"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "PAUSE"
      }
    ],
    "authorContributionMap": {
      "ktaekwon000": 4,
      "-": 20
    }
  },
  {
    "path": "text-ui-test/sources.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "C:\\Users\\Kimmie\\Documents\\git\\ip\\src\\main\\java\\Deadline.java"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "C:\\Users\\Kimmie\\Documents\\git\\ip\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "C:\\Users\\Kimmie\\Documents\\git\\ip\\src\\main\\java\\Event.java"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "C:\\Users\\Kimmie\\Documents\\git\\ip\\src\\main\\java\\Task.java"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ktaekwon000"
        },
        "content": "C:\\Users\\Kimmie\\Documents\\git\\ip\\src\\main\\java\\Todo.java"
      }
    ],
    "authorContributionMap": {
      "ktaekwon000": 5
    }
  }
]
