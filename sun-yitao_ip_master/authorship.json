[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"sun-yitao"},"content":"    String javaFxVersion \u003d \u002711.0.1\u0027"},{"lineNumber":14,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":15,"author":{"gitId":"sun-yitao"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":16,"author":{"gitId":"sun-yitao"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":17,"author":{"gitId":"sun-yitao"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":18,"author":{"gitId":"sun-yitao"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":19,"author":{"gitId":"sun-yitao"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":20,"author":{"gitId":"sun-yitao"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":21,"author":{"gitId":"sun-yitao"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":22,"author":{"gitId":"sun-yitao"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":23,"author":{"gitId":"sun-yitao"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":24,"author":{"gitId":"sun-yitao"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":25,"author":{"gitId":"sun-yitao"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":26,"author":{"gitId":"sun-yitao"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":27,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":47,"author":{"gitId":"sun-yitao"},"content":"    mainClassName \u003d \"duke.Launcher\""},{"lineNumber":48,"author":{"gitId":"-"},"content":"}"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\""},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":56,"author":{"gitId":"sun-yitao"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"sun-yitao":17,"-":44}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"sun-yitao"},"content":"## User Interface"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"sun-yitao"},"content":"![UI](Ui.png)"},{"lineNumber":6,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"## Features"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"sun-yitao"},"content":"### Todo List App"},{"lineNumber":10,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":11,"author":{"gitId":"sun-yitao"},"content":"Duke is a todo list app that works with using text commands. It allows users to add, delete and search todos, deadlines and events."},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"## Usage"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"sun-yitao"},"content":"### 1. `list` - List tasks"},{"lineNumber":16,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":17,"author":{"gitId":"sun-yitao"},"content":"Lists all tasks"},{"lineNumber":18,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":19,"author":{"gitId":"sun-yitao"},"content":"Example of usage:"},{"lineNumber":20,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":21,"author":{"gitId":"sun-yitao"},"content":"`list`"},{"lineNumber":22,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":23,"author":{"gitId":"sun-yitao"},"content":"Expected outcome:"},{"lineNumber":24,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":25,"author":{"gitId":"sun-yitao"},"content":"`1.[T][✗] Finish CS2103T IP`"},{"lineNumber":26,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":27,"author":{"gitId":"sun-yitao"},"content":"### 2. `bye` - Exit application"},{"lineNumber":28,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":29,"author":{"gitId":"sun-yitao"},"content":"Exits Duke application."},{"lineNumber":30,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":31,"author":{"gitId":"sun-yitao"},"content":"Example of usage:"},{"lineNumber":32,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":33,"author":{"gitId":"sun-yitao"},"content":"`bye`"},{"lineNumber":34,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":35,"author":{"gitId":"sun-yitao"},"content":"Expected outcome:"},{"lineNumber":36,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":37,"author":{"gitId":"sun-yitao"},"content":"`Application exits`"},{"lineNumber":38,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":39,"author":{"gitId":"sun-yitao"},"content":"### 3. `todo TASKNAME` - Add todo"},{"lineNumber":40,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":41,"author":{"gitId":"sun-yitao"},"content":"Adds a Todo Task to task list."},{"lineNumber":42,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":43,"author":{"gitId":"sun-yitao"},"content":"Example of usage:"},{"lineNumber":44,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":45,"author":{"gitId":"sun-yitao"},"content":"`todo do laundry`"},{"lineNumber":46,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":47,"author":{"gitId":"sun-yitao"},"content":"Expected outcome:"},{"lineNumber":48,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":49,"author":{"gitId":"sun-yitao"},"content":"```text"},{"lineNumber":50,"author":{"gitId":"sun-yitao"},"content":"Got it. I\u0027ve added this task:"},{"lineNumber":51,"author":{"gitId":"sun-yitao"},"content":"  [T][✗] do laundry"},{"lineNumber":52,"author":{"gitId":"sun-yitao"},"content":"Now you have 4 tasks in the list."},{"lineNumber":53,"author":{"gitId":"sun-yitao"},"content":"```"},{"lineNumber":54,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":55,"author":{"gitId":"sun-yitao"},"content":"### 4. `deadline TASKNAME /by DD/MM/YYYY HHmm` - Add Deadline"},{"lineNumber":56,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":57,"author":{"gitId":"sun-yitao"},"content":"Adds a Deadline Task to task list."},{"lineNumber":58,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":59,"author":{"gitId":"sun-yitao"},"content":"Example of usage:"},{"lineNumber":60,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":61,"author":{"gitId":"sun-yitao"},"content":"`deadline do laundry /by 01/01/2020 1200`"},{"lineNumber":62,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":63,"author":{"gitId":"sun-yitao"},"content":"Expected outcome:"},{"lineNumber":64,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":65,"author":{"gitId":"sun-yitao"},"content":"```text"},{"lineNumber":66,"author":{"gitId":"sun-yitao"},"content":"Got it. I\u0027ve added this task:"},{"lineNumber":67,"author":{"gitId":"sun-yitao"},"content":"  [D][✗] do laundry (by: Jan 01 2020 1200)"},{"lineNumber":68,"author":{"gitId":"sun-yitao"},"content":"Now you have 4 tasks in the list."},{"lineNumber":69,"author":{"gitId":"sun-yitao"},"content":"```"},{"lineNumber":70,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":71,"author":{"gitId":"sun-yitao"},"content":"### 5. `event TASKNAME /AT DURATION` - Add event"},{"lineNumber":72,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":73,"author":{"gitId":"sun-yitao"},"content":"Adds a Event Task to task list."},{"lineNumber":74,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":75,"author":{"gitId":"sun-yitao"},"content":"Example of usage:"},{"lineNumber":76,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":77,"author":{"gitId":"sun-yitao"},"content":"`event do laundry /at 01/01/2020 1200 to 1300`"},{"lineNumber":78,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":79,"author":{"gitId":"sun-yitao"},"content":"Expected outcome:"},{"lineNumber":80,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":81,"author":{"gitId":"sun-yitao"},"content":"```text"},{"lineNumber":82,"author":{"gitId":"sun-yitao"},"content":"Got it. I\u0027ve added this task:"},{"lineNumber":83,"author":{"gitId":"sun-yitao"},"content":"  [E][✗] do laundry (at: 01/01/2020 1200 to 1300)"},{"lineNumber":84,"author":{"gitId":"sun-yitao"},"content":"Now you have 4 tasks in the list."},{"lineNumber":85,"author":{"gitId":"sun-yitao"},"content":"```"},{"lineNumber":86,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":87,"author":{"gitId":"sun-yitao"},"content":"### 6. `done TASKINDEX` - Mark task as done"},{"lineNumber":88,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":89,"author":{"gitId":"sun-yitao"},"content":"Marks the task at TASKINDEX as done."},{"lineNumber":90,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":91,"author":{"gitId":"sun-yitao"},"content":"Example of usage:"},{"lineNumber":92,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":93,"author":{"gitId":"sun-yitao"},"content":"`done 1`"},{"lineNumber":94,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":95,"author":{"gitId":"sun-yitao"},"content":"Expected outcome:"},{"lineNumber":96,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":97,"author":{"gitId":"sun-yitao"},"content":"```text"},{"lineNumber":98,"author":{"gitId":"sun-yitao"},"content":"Nice! I\u0027ve marked this task as done:"},{"lineNumber":99,"author":{"gitId":"sun-yitao"},"content":"  [T][✓] Finish CS2103T IP"},{"lineNumber":100,"author":{"gitId":"sun-yitao"},"content":"```"},{"lineNumber":101,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":102,"author":{"gitId":"sun-yitao"},"content":"### 7. `delete TASKINDEX` - Delete task"},{"lineNumber":103,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":104,"author":{"gitId":"sun-yitao"},"content":"Deletes a task at TASKINDEX."},{"lineNumber":105,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":106,"author":{"gitId":"sun-yitao"},"content":"Example of usage:"},{"lineNumber":107,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":108,"author":{"gitId":"sun-yitao"},"content":"`delete 1`"},{"lineNumber":109,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":110,"author":{"gitId":"sun-yitao"},"content":"Expected outcome:"},{"lineNumber":111,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":112,"author":{"gitId":"sun-yitao"},"content":"```text"},{"lineNumber":113,"author":{"gitId":"sun-yitao"},"content":"Noted. I\u0027ve removed this task:"},{"lineNumber":114,"author":{"gitId":"sun-yitao"},"content":"  [T][✓] Finish CS2103T IP"},{"lineNumber":115,"author":{"gitId":"sun-yitao"},"content":"Now you have 3 tasks in the list."},{"lineNumber":116,"author":{"gitId":"sun-yitao"},"content":"```"},{"lineNumber":117,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":118,"author":{"gitId":"sun-yitao"},"content":"### 8. `find KEYWORD` - Find task"},{"lineNumber":119,"author":{"gitId":"-"},"content":""},{"lineNumber":120,"author":{"gitId":"sun-yitao"},"content":"Find a task by TASKNAME substring."},{"lineNumber":121,"author":{"gitId":"-"},"content":""},{"lineNumber":122,"author":{"gitId":"-"},"content":"Example of usage:"},{"lineNumber":123,"author":{"gitId":"-"},"content":""},{"lineNumber":124,"author":{"gitId":"sun-yitao"},"content":"`find CS2103`"},{"lineNumber":125,"author":{"gitId":"-"},"content":""},{"lineNumber":126,"author":{"gitId":"-"},"content":"Expected outcome:"},{"lineNumber":127,"author":{"gitId":"-"},"content":""},{"lineNumber":128,"author":{"gitId":"sun-yitao"},"content":"```text"},{"lineNumber":129,"author":{"gitId":"sun-yitao"},"content":"Here are the matching takss in your list:"},{"lineNumber":130,"author":{"gitId":"sun-yitao"},"content":"1.[T][✗] Finish CS2103T IP"},{"lineNumber":131,"author":{"gitId":"sun-yitao"},"content":"```"}],"authorContributionMap":{"sun-yitao":116,"-":15}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sun-yitao"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":3,"author":{"gitId":"sun-yitao"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"sun-yitao"},"content":"import java.util.Collections;"},{"lineNumber":5,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":6,"author":{"gitId":"sun-yitao"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":7,"author":{"gitId":"sun-yitao"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":8,"author":{"gitId":"sun-yitao"},"content":"import javafx.fxml.FXML;"},{"lineNumber":9,"author":{"gitId":"sun-yitao"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":10,"author":{"gitId":"sun-yitao"},"content":"import javafx.geometry.Pos;"},{"lineNumber":11,"author":{"gitId":"sun-yitao"},"content":"import javafx.scene.Node;"},{"lineNumber":12,"author":{"gitId":"sun-yitao"},"content":"import javafx.scene.control.Label;"},{"lineNumber":13,"author":{"gitId":"sun-yitao"},"content":"import javafx.scene.image.Image;"},{"lineNumber":14,"author":{"gitId":"sun-yitao"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":15,"author":{"gitId":"sun-yitao"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":16,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":17,"author":{"gitId":"sun-yitao"},"content":"/**"},{"lineNumber":18,"author":{"gitId":"sun-yitao"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"},{"lineNumber":19,"author":{"gitId":"sun-yitao"},"content":" * containing text from the speaker."},{"lineNumber":20,"author":{"gitId":"sun-yitao"},"content":" */"},{"lineNumber":21,"author":{"gitId":"sun-yitao"},"content":"public class DialogBox extends HBox {"},{"lineNumber":22,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":23,"author":{"gitId":"sun-yitao"},"content":"    private static final Image userImage \u003d new Image(MainWindow.class.getResourceAsStream(\"/images/DaUser.png\"));"},{"lineNumber":24,"author":{"gitId":"sun-yitao"},"content":"    private static final Image dukeImage \u003d new Image(MainWindow.class.getResourceAsStream(\"/images/DaDuke.png\"));"},{"lineNumber":25,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":26,"author":{"gitId":"sun-yitao"},"content":"    @FXML"},{"lineNumber":27,"author":{"gitId":"sun-yitao"},"content":"    private Label dialog;"},{"lineNumber":28,"author":{"gitId":"sun-yitao"},"content":"    @FXML"},{"lineNumber":29,"author":{"gitId":"sun-yitao"},"content":"    private ImageView displayPicture;"},{"lineNumber":30,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":31,"author":{"gitId":"sun-yitao"},"content":"    private DialogBox(String text, Image image) {"},{"lineNumber":32,"author":{"gitId":"sun-yitao"},"content":"        try {"},{"lineNumber":33,"author":{"gitId":"sun-yitao"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"},{"lineNumber":34,"author":{"gitId":"sun-yitao"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":35,"author":{"gitId":"sun-yitao"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":36,"author":{"gitId":"sun-yitao"},"content":"            fxmlLoader.load();"},{"lineNumber":37,"author":{"gitId":"sun-yitao"},"content":"        } catch (IOException e) {"},{"lineNumber":38,"author":{"gitId":"sun-yitao"},"content":"            e.printStackTrace();"},{"lineNumber":39,"author":{"gitId":"sun-yitao"},"content":"        }"},{"lineNumber":40,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":41,"author":{"gitId":"sun-yitao"},"content":"        dialog.setText(text);"},{"lineNumber":42,"author":{"gitId":"sun-yitao"},"content":"        displayPicture.setImage(image);"},{"lineNumber":43,"author":{"gitId":"sun-yitao"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":45,"author":{"gitId":"sun-yitao"},"content":"    /**"},{"lineNumber":46,"author":{"gitId":"sun-yitao"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":47,"author":{"gitId":"sun-yitao"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"sun-yitao"},"content":"    private void flip() {"},{"lineNumber":49,"author":{"gitId":"sun-yitao"},"content":"        ObservableList\u003cNode\u003e observableList \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":50,"author":{"gitId":"sun-yitao"},"content":"        Collections.reverse(observableList);"},{"lineNumber":51,"author":{"gitId":"sun-yitao"},"content":"        getChildren().setAll(observableList);"},{"lineNumber":52,"author":{"gitId":"sun-yitao"},"content":"        setAlignment(Pos.TOP_LEFT);"},{"lineNumber":53,"author":{"gitId":"sun-yitao"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":55,"author":{"gitId":"sun-yitao"},"content":"    public static DialogBox getUserDialog(String text) {"},{"lineNumber":56,"author":{"gitId":"sun-yitao"},"content":"        return new DialogBox(text, userImage);"},{"lineNumber":57,"author":{"gitId":"sun-yitao"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":59,"author":{"gitId":"sun-yitao"},"content":"    public static DialogBox getDukeDialog(String text) {"},{"lineNumber":60,"author":{"gitId":"sun-yitao"},"content":"        var dialogBox \u003d new DialogBox(text, dukeImage);"},{"lineNumber":61,"author":{"gitId":"sun-yitao"},"content":"        dialogBox.flip();"},{"lineNumber":62,"author":{"gitId":"sun-yitao"},"content":"        return dialogBox;"},{"lineNumber":63,"author":{"gitId":"sun-yitao"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"sun-yitao"},"content":"}"}],"authorContributionMap":{"sun-yitao":64}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sun-yitao"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":3,"author":{"gitId":"sun-yitao"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":4,"author":{"gitId":"sun-yitao"},"content":"import java.io.IOException;"},{"lineNumber":5,"author":{"gitId":"sun-yitao"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":7,"author":{"gitId":"sun-yitao"},"content":"import duke.task.Task;"},{"lineNumber":8,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":9,"author":{"gitId":"sun-yitao"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"sun-yitao"},"content":" * Main program for Duke."},{"lineNumber":11,"author":{"gitId":"sun-yitao"},"content":" */"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":13,"author":{"gitId":"sun-yitao"},"content":"    private final TaskList userTaskList;"},{"lineNumber":14,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":15,"author":{"gitId":"sun-yitao"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"sun-yitao"},"content":"     * Initialise duke and load tasks."},{"lineNumber":17,"author":{"gitId":"sun-yitao"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"sun-yitao"},"content":"    public Duke() {"},{"lineNumber":19,"author":{"gitId":"sun-yitao"},"content":"        ArrayList\u003cTask\u003e tasks;"},{"lineNumber":20,"author":{"gitId":"sun-yitao"},"content":"        try {"},{"lineNumber":21,"author":{"gitId":"sun-yitao"},"content":"            tasks \u003d Storage.load();"},{"lineNumber":22,"author":{"gitId":"sun-yitao"},"content":"        } catch (FileNotFoundException | Storage.InvalidSaveFileException exception) {"},{"lineNumber":23,"author":{"gitId":"sun-yitao"},"content":"            tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":24,"author":{"gitId":"sun-yitao"},"content":"        }"},{"lineNumber":25,"author":{"gitId":"sun-yitao"},"content":"        userTaskList \u003d new TaskList(tasks);"},{"lineNumber":26,"author":{"gitId":"sun-yitao"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":28,"author":{"gitId":"sun-yitao"},"content":"    public String getResponse(String userInput, UserCommandType userCommandType)"},{"lineNumber":29,"author":{"gitId":"sun-yitao"},"content":"            throws TaskList.InvalidIndexException, Parser.InvalidCommandException, IOException {"},{"lineNumber":30,"author":{"gitId":"sun-yitao"},"content":"        switch (userCommandType) {"},{"lineNumber":31,"author":{"gitId":"sun-yitao"},"content":"        case EXIT:"},{"lineNumber":32,"author":{"gitId":"sun-yitao"},"content":"            return StringConstants.EXIT_MESSAGE;"},{"lineNumber":33,"author":{"gitId":"sun-yitao"},"content":"        case LIST:"},{"lineNumber":34,"author":{"gitId":"sun-yitao"},"content":"            return saveTaskListAndJoinMessages(userTaskList.getTasksAsStrings());"},{"lineNumber":35,"author":{"gitId":"sun-yitao"},"content":"        case DONE:"},{"lineNumber":36,"author":{"gitId":"sun-yitao"},"content":"            int doneIndex \u003d Parser.getTaskIndex(userInput);"},{"lineNumber":37,"author":{"gitId":"sun-yitao"},"content":"            return saveTaskListAndJoinMessages(userTaskList.markTaskDoneAtIndex(doneIndex));"},{"lineNumber":38,"author":{"gitId":"sun-yitao"},"content":"        case DELETE:"},{"lineNumber":39,"author":{"gitId":"sun-yitao"},"content":"            int deleteIndex \u003d Parser.getTaskIndex(userInput);"},{"lineNumber":40,"author":{"gitId":"sun-yitao"},"content":"            return saveTaskListAndJoinMessages(userTaskList.deleteTaskAtIndex(deleteIndex));"},{"lineNumber":41,"author":{"gitId":"sun-yitao"},"content":"        case TODO:"},{"lineNumber":42,"author":{"gitId":"sun-yitao"},"content":"        case DEADLINE:"},{"lineNumber":43,"author":{"gitId":"sun-yitao"},"content":"        case EVENT:"},{"lineNumber":44,"author":{"gitId":"sun-yitao"},"content":"            return saveTaskListAndJoinMessages(userTaskList.addTask(userInput, userCommandType));"},{"lineNumber":45,"author":{"gitId":"sun-yitao"},"content":"        case FIND:"},{"lineNumber":46,"author":{"gitId":"sun-yitao"},"content":"            return saveTaskListAndJoinMessages(userTaskList.find(userInput));"},{"lineNumber":47,"author":{"gitId":"sun-yitao"},"content":"        default:"},{"lineNumber":48,"author":{"gitId":"sun-yitao"},"content":"            return \"Error: Unrecognised command type\";"},{"lineNumber":49,"author":{"gitId":"sun-yitao"},"content":"        }"},{"lineNumber":50,"author":{"gitId":"sun-yitao"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":52,"author":{"gitId":"sun-yitao"},"content":"    private String saveTaskListAndJoinMessages(String[] messages) throws IOException {"},{"lineNumber":53,"author":{"gitId":"sun-yitao"},"content":"        userTaskList.saveTaskList();"},{"lineNumber":54,"author":{"gitId":"sun-yitao"},"content":"        return StringConstants.joinStrings(messages);"},{"lineNumber":55,"author":{"gitId":"sun-yitao"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":57,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"sun-yitao":55,"-":2}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sun-yitao"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":3,"author":{"gitId":"sun-yitao"},"content":"import javafx.application.Application;"},{"lineNumber":4,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":5,"author":{"gitId":"sun-yitao"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"sun-yitao"},"content":" * A launcher class to workaround classpath issues."},{"lineNumber":7,"author":{"gitId":"sun-yitao"},"content":" */"},{"lineNumber":8,"author":{"gitId":"sun-yitao"},"content":"public class Launcher {"},{"lineNumber":9,"author":{"gitId":"sun-yitao"},"content":"    public static void main(String[] args) {"},{"lineNumber":10,"author":{"gitId":"sun-yitao"},"content":"        Application.launch(Main.class, args);"},{"lineNumber":11,"author":{"gitId":"sun-yitao"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"sun-yitao"},"content":"}"}],"authorContributionMap":{"sun-yitao":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sun-yitao"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":3,"author":{"gitId":"sun-yitao"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":5,"author":{"gitId":"sun-yitao"},"content":"import javafx.application.Application;"},{"lineNumber":6,"author":{"gitId":"sun-yitao"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":7,"author":{"gitId":"sun-yitao"},"content":"import javafx.scene.Scene;"},{"lineNumber":8,"author":{"gitId":"sun-yitao"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":9,"author":{"gitId":"sun-yitao"},"content":"import javafx.stage.Stage;"},{"lineNumber":10,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":11,"author":{"gitId":"sun-yitao"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"sun-yitao"},"content":" * A GUI for Duke using FXML."},{"lineNumber":13,"author":{"gitId":"sun-yitao"},"content":" */"},{"lineNumber":14,"author":{"gitId":"sun-yitao"},"content":"public class Main extends Application {"},{"lineNumber":15,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":16,"author":{"gitId":"sun-yitao"},"content":"    private final Duke duke \u003d new Duke();"},{"lineNumber":17,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":18,"author":{"gitId":"sun-yitao"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"sun-yitao"},"content":"    public void start(Stage stage) {"},{"lineNumber":20,"author":{"gitId":"sun-yitao"},"content":"        try {"},{"lineNumber":21,"author":{"gitId":"sun-yitao"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":22,"author":{"gitId":"sun-yitao"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":23,"author":{"gitId":"sun-yitao"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":24,"author":{"gitId":"sun-yitao"},"content":"            stage.setScene(scene);"},{"lineNumber":25,"author":{"gitId":"sun-yitao"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"},{"lineNumber":26,"author":{"gitId":"sun-yitao"},"content":"            stage.show();"},{"lineNumber":27,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":28,"author":{"gitId":"sun-yitao"},"content":"        } catch (IOException e) {"},{"lineNumber":29,"author":{"gitId":"sun-yitao"},"content":"            e.printStackTrace();"},{"lineNumber":30,"author":{"gitId":"sun-yitao"},"content":"        }"},{"lineNumber":31,"author":{"gitId":"sun-yitao"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":33,"author":{"gitId":"sun-yitao"},"content":"}"}],"authorContributionMap":{"sun-yitao":33}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sun-yitao"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":3,"author":{"gitId":"sun-yitao"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":5,"author":{"gitId":"sun-yitao"},"content":"import javafx.application.Platform;"},{"lineNumber":6,"author":{"gitId":"sun-yitao"},"content":"import javafx.fxml.FXML;"},{"lineNumber":7,"author":{"gitId":"sun-yitao"},"content":"import javafx.scene.control.Button;"},{"lineNumber":8,"author":{"gitId":"sun-yitao"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":9,"author":{"gitId":"sun-yitao"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":10,"author":{"gitId":"sun-yitao"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":11,"author":{"gitId":"sun-yitao"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":12,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":13,"author":{"gitId":"sun-yitao"},"content":"/**"},{"lineNumber":14,"author":{"gitId":"sun-yitao"},"content":" * Controller for MainWindow. Provides the layout for the other controls."},{"lineNumber":15,"author":{"gitId":"sun-yitao"},"content":" */"},{"lineNumber":16,"author":{"gitId":"sun-yitao"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":17,"author":{"gitId":"sun-yitao"},"content":"    @FXML"},{"lineNumber":18,"author":{"gitId":"sun-yitao"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":19,"author":{"gitId":"sun-yitao"},"content":"    @FXML"},{"lineNumber":20,"author":{"gitId":"sun-yitao"},"content":"    private VBox dialogContainer;"},{"lineNumber":21,"author":{"gitId":"sun-yitao"},"content":"    @FXML"},{"lineNumber":22,"author":{"gitId":"sun-yitao"},"content":"    private TextField userInput;"},{"lineNumber":23,"author":{"gitId":"sun-yitao"},"content":"    @FXML"},{"lineNumber":24,"author":{"gitId":"sun-yitao"},"content":"    private Button sendButton;"},{"lineNumber":25,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":26,"author":{"gitId":"sun-yitao"},"content":"    private Duke duke;"},{"lineNumber":27,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":28,"author":{"gitId":"sun-yitao"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"sun-yitao"},"content":"     * Initialise main windows."},{"lineNumber":30,"author":{"gitId":"sun-yitao"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"sun-yitao"},"content":"    @FXML"},{"lineNumber":32,"author":{"gitId":"sun-yitao"},"content":"    public void initialize() {"},{"lineNumber":33,"author":{"gitId":"sun-yitao"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":34,"author":{"gitId":"sun-yitao"},"content":"        addDukeDialog(StringConstants.getGreeting());"},{"lineNumber":35,"author":{"gitId":"sun-yitao"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":37,"author":{"gitId":"sun-yitao"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"sun-yitao"},"content":"     * Set duke object to main window."},{"lineNumber":39,"author":{"gitId":"sun-yitao"},"content":"     * @param d duke object"},{"lineNumber":40,"author":{"gitId":"sun-yitao"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"sun-yitao"},"content":"    public void setDuke(Duke d) {"},{"lineNumber":42,"author":{"gitId":"sun-yitao"},"content":"        duke \u003d d;"},{"lineNumber":43,"author":{"gitId":"sun-yitao"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":45,"author":{"gitId":"sun-yitao"},"content":"    /**"},{"lineNumber":46,"author":{"gitId":"sun-yitao"},"content":"     *  Handles user input by getting duke response, adding dialog boxes and clearing user input after processing."},{"lineNumber":47,"author":{"gitId":"sun-yitao"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"sun-yitao"},"content":"    @FXML"},{"lineNumber":49,"author":{"gitId":"sun-yitao"},"content":"    private void handleUserInput() {"},{"lineNumber":50,"author":{"gitId":"sun-yitao"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":51,"author":{"gitId":"sun-yitao"},"content":"        String response;"},{"lineNumber":52,"author":{"gitId":"sun-yitao"},"content":"        UserCommandType userCommandType;"},{"lineNumber":53,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":54,"author":{"gitId":"sun-yitao"},"content":"        try {"},{"lineNumber":55,"author":{"gitId":"sun-yitao"},"content":"            userCommandType \u003d Parser.parseUserCommand(input);"},{"lineNumber":56,"author":{"gitId":"sun-yitao"},"content":"            response \u003d duke.getResponse(input, userCommandType);"},{"lineNumber":57,"author":{"gitId":"sun-yitao"},"content":"        } catch (Parser.InvalidCommandException | TaskList.InvalidIndexException | IOException exception) {"},{"lineNumber":58,"author":{"gitId":"sun-yitao"},"content":"            response \u003d exception.getMessage();"},{"lineNumber":59,"author":{"gitId":"sun-yitao"},"content":"            userCommandType \u003d UserCommandType.ERROR;"},{"lineNumber":60,"author":{"gitId":"sun-yitao"},"content":"        }"},{"lineNumber":61,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":62,"author":{"gitId":"sun-yitao"},"content":"        addUserAndDukeDialogs(input, response);"},{"lineNumber":63,"author":{"gitId":"sun-yitao"},"content":"        userInput.clear();"},{"lineNumber":64,"author":{"gitId":"sun-yitao"},"content":"        if (userCommandType \u003d\u003d UserCommandType.EXIT) {"},{"lineNumber":65,"author":{"gitId":"sun-yitao"},"content":"            Platform.exit();"},{"lineNumber":66,"author":{"gitId":"sun-yitao"},"content":"        }"},{"lineNumber":67,"author":{"gitId":"sun-yitao"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":69,"author":{"gitId":"sun-yitao"},"content":"    /**"},{"lineNumber":70,"author":{"gitId":"sun-yitao"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"},{"lineNumber":71,"author":{"gitId":"sun-yitao"},"content":"     * the dialog container."},{"lineNumber":72,"author":{"gitId":"sun-yitao"},"content":"     * @param userDialog user dialog String"},{"lineNumber":73,"author":{"gitId":"sun-yitao"},"content":"     * @param dukeDialog Duke dialog String"},{"lineNumber":74,"author":{"gitId":"sun-yitao"},"content":"     */"},{"lineNumber":75,"author":{"gitId":"sun-yitao"},"content":"    private void addUserAndDukeDialogs(String userDialog, String dukeDialog) {"},{"lineNumber":76,"author":{"gitId":"sun-yitao"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":77,"author":{"gitId":"sun-yitao"},"content":"                DialogBox.getUserDialog(userDialog),"},{"lineNumber":78,"author":{"gitId":"sun-yitao"},"content":"                DialogBox.getDukeDialog(dukeDialog)"},{"lineNumber":79,"author":{"gitId":"sun-yitao"},"content":"        );"},{"lineNumber":80,"author":{"gitId":"sun-yitao"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":82,"author":{"gitId":"sun-yitao"},"content":"    /**"},{"lineNumber":83,"author":{"gitId":"sun-yitao"},"content":"     * Creates Duke dialog box and appends to dialog container."},{"lineNumber":84,"author":{"gitId":"sun-yitao"},"content":"     * @param dukeDialog Duke dialog String"},{"lineNumber":85,"author":{"gitId":"sun-yitao"},"content":"     */"},{"lineNumber":86,"author":{"gitId":"sun-yitao"},"content":"    private void addDukeDialog(String dukeDialog) {"},{"lineNumber":87,"author":{"gitId":"sun-yitao"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(dukeDialog));"},{"lineNumber":88,"author":{"gitId":"sun-yitao"},"content":"    }"},{"lineNumber":89,"author":{"gitId":"sun-yitao"},"content":"}"},{"lineNumber":90,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":91,"author":{"gitId":"sun-yitao"},"content":""}],"authorContributionMap":{"sun-yitao":91}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sun-yitao"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":3,"author":{"gitId":"sun-yitao"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"sun-yitao"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"sun-yitao"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":6,"author":{"gitId":"sun-yitao"},"content":"import java.util.Arrays;"},{"lineNumber":7,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":8,"author":{"gitId":"sun-yitao"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"sun-yitao"},"content":" * Class for parsing user commands."},{"lineNumber":10,"author":{"gitId":"sun-yitao"},"content":" */"},{"lineNumber":11,"author":{"gitId":"sun-yitao"},"content":"public class Parser {"},{"lineNumber":12,"author":{"gitId":"sun-yitao"},"content":"    private static final String TODO_COMMAND \u003d \"todo\";"},{"lineNumber":13,"author":{"gitId":"sun-yitao"},"content":"    private static final String DEADLINE_COMMAND \u003d \"deadline\";"},{"lineNumber":14,"author":{"gitId":"sun-yitao"},"content":"    private static final String EVENT_COMMAND \u003d \"event\";"},{"lineNumber":15,"author":{"gitId":"sun-yitao"},"content":"    private static final String LIST_COMMAND \u003d \"list\";"},{"lineNumber":16,"author":{"gitId":"sun-yitao"},"content":"    private static final String DONE_COMMAND \u003d \"done\";"},{"lineNumber":17,"author":{"gitId":"sun-yitao"},"content":"    private static final String FIND_COMMAND \u003d \"find\";"},{"lineNumber":18,"author":{"gitId":"sun-yitao"},"content":"    private static final String DELETE_COMMAND \u003d \"delete\";"},{"lineNumber":19,"author":{"gitId":"sun-yitao"},"content":"    private static final String EXIT_COMMAND \u003d \"bye\";"},{"lineNumber":20,"author":{"gitId":"sun-yitao"},"content":"    private static final DateTimeFormatter dateTimeFormatter \u003d"},{"lineNumber":21,"author":{"gitId":"sun-yitao"},"content":"            DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");"},{"lineNumber":22,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":23,"author":{"gitId":"sun-yitao"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"sun-yitao"},"content":"     * Parses user command as a String and returns the corresponding UserCommandType."},{"lineNumber":25,"author":{"gitId":"sun-yitao"},"content":"     * @param command String of user command"},{"lineNumber":26,"author":{"gitId":"sun-yitao"},"content":"     * @return UserCommandType"},{"lineNumber":27,"author":{"gitId":"sun-yitao"},"content":"     * @throws InvalidCommandException if user command is not recognised"},{"lineNumber":28,"author":{"gitId":"sun-yitao"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"sun-yitao"},"content":"    public static UserCommandType parseUserCommand(String command) throws InvalidCommandException {"},{"lineNumber":30,"author":{"gitId":"sun-yitao"},"content":"        assert command !\u003d null : \"Command is null\";"},{"lineNumber":31,"author":{"gitId":"sun-yitao"},"content":"        if (command.equals(LIST_COMMAND)) {"},{"lineNumber":32,"author":{"gitId":"sun-yitao"},"content":"            return UserCommandType.LIST;"},{"lineNumber":33,"author":{"gitId":"sun-yitao"},"content":"        } else if (command.equals(EXIT_COMMAND)) {"},{"lineNumber":34,"author":{"gitId":"sun-yitao"},"content":"            return UserCommandType.EXIT;"},{"lineNumber":35,"author":{"gitId":"sun-yitao"},"content":"        } else if (command.startsWith(DONE_COMMAND)) {"},{"lineNumber":36,"author":{"gitId":"sun-yitao"},"content":"            return UserCommandType.DONE;"},{"lineNumber":37,"author":{"gitId":"sun-yitao"},"content":"        } else if (command.startsWith(DELETE_COMMAND)) {"},{"lineNumber":38,"author":{"gitId":"sun-yitao"},"content":"            return UserCommandType.DELETE;"},{"lineNumber":39,"author":{"gitId":"sun-yitao"},"content":"        } else if (command.startsWith(TODO_COMMAND)) {"},{"lineNumber":40,"author":{"gitId":"sun-yitao"},"content":"            return UserCommandType.TODO;"},{"lineNumber":41,"author":{"gitId":"sun-yitao"},"content":"        } else if (command.startsWith(DEADLINE_COMMAND)) {"},{"lineNumber":42,"author":{"gitId":"sun-yitao"},"content":"            return UserCommandType.DEADLINE;"},{"lineNumber":43,"author":{"gitId":"sun-yitao"},"content":"        } else if (command.startsWith(EVENT_COMMAND)) {"},{"lineNumber":44,"author":{"gitId":"sun-yitao"},"content":"            return UserCommandType.EVENT;"},{"lineNumber":45,"author":{"gitId":"sun-yitao"},"content":"        } else if (command.startsWith(FIND_COMMAND)) {"},{"lineNumber":46,"author":{"gitId":"sun-yitao"},"content":"            return UserCommandType.FIND;"},{"lineNumber":47,"author":{"gitId":"sun-yitao"},"content":"        } else {"},{"lineNumber":48,"author":{"gitId":"sun-yitao"},"content":"            throw new InvalidCommandException();"},{"lineNumber":49,"author":{"gitId":"sun-yitao"},"content":"        }"},{"lineNumber":50,"author":{"gitId":"sun-yitao"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":52,"author":{"gitId":"sun-yitao"},"content":"    /**"},{"lineNumber":53,"author":{"gitId":"sun-yitao"},"content":"     * Parses a task command and return the String components."},{"lineNumber":54,"author":{"gitId":"sun-yitao"},"content":"     * @param command user command String"},{"lineNumber":55,"author":{"gitId":"sun-yitao"},"content":"     * @return String array of the command components as Task name, dateTimeString"},{"lineNumber":56,"author":{"gitId":"sun-yitao"},"content":"     * @throws InvalidCommandException if command syntax is unrecognised"},{"lineNumber":57,"author":{"gitId":"sun-yitao"},"content":"     */"},{"lineNumber":58,"author":{"gitId":"sun-yitao"},"content":"    public static String[] parseTask(String command) throws InvalidCommandException {"},{"lineNumber":59,"author":{"gitId":"sun-yitao"},"content":"        assert command !\u003d null : \"Command is null\";"},{"lineNumber":60,"author":{"gitId":"sun-yitao"},"content":"        String[] components \u003d command.split(\" \");"},{"lineNumber":61,"author":{"gitId":"sun-yitao"},"content":"        String taskType \u003d components[0];"},{"lineNumber":62,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":63,"author":{"gitId":"sun-yitao"},"content":"        if (taskType.equals(TODO_COMMAND)) {"},{"lineNumber":64,"author":{"gitId":"sun-yitao"},"content":"            if (components.length \u003c 2) {"},{"lineNumber":65,"author":{"gitId":"sun-yitao"},"content":"                throw new InvalidCommandException(\"The description of a todo cannot be empty.\");"},{"lineNumber":66,"author":{"gitId":"sun-yitao"},"content":"            }"},{"lineNumber":67,"author":{"gitId":"sun-yitao"},"content":"            return new String[]{"},{"lineNumber":68,"author":{"gitId":"sun-yitao"},"content":"                String.join(\" \", Arrays.copyOfRange(components, 1, components.length))"},{"lineNumber":69,"author":{"gitId":"sun-yitao"},"content":"            };"},{"lineNumber":70,"author":{"gitId":"sun-yitao"},"content":"        } else if (taskType.equals(DEADLINE_COMMAND) || taskType.equals(EVENT_COMMAND)) {"},{"lineNumber":71,"author":{"gitId":"sun-yitao"},"content":"            for (int i \u003d 0; i \u003c components.length - 1; i++) {"},{"lineNumber":72,"author":{"gitId":"sun-yitao"},"content":"                if (components[i].equals(\"/at\") || components[i].equals(\"/by\")) {"},{"lineNumber":73,"author":{"gitId":"sun-yitao"},"content":"                    String dateTimeString \u003d i + 2 \u003d\u003d components.length"},{"lineNumber":74,"author":{"gitId":"sun-yitao"},"content":"                            ? components[i + 1] + \" 0000\""},{"lineNumber":75,"author":{"gitId":"sun-yitao"},"content":"                            : String.join(\" \","},{"lineNumber":76,"author":{"gitId":"sun-yitao"},"content":"                            Arrays.copyOfRange(components, i + 1, components.length));"},{"lineNumber":77,"author":{"gitId":"sun-yitao"},"content":"                    // Task name, Datetime"},{"lineNumber":78,"author":{"gitId":"sun-yitao"},"content":"                    return new String[]{"},{"lineNumber":79,"author":{"gitId":"sun-yitao"},"content":"                        String.join(\" \", Arrays.copyOfRange(components, 1, i)),"},{"lineNumber":80,"author":{"gitId":"sun-yitao"},"content":"                        dateTimeString"},{"lineNumber":81,"author":{"gitId":"sun-yitao"},"content":"                    };"},{"lineNumber":82,"author":{"gitId":"sun-yitao"},"content":"                }"},{"lineNumber":83,"author":{"gitId":"sun-yitao"},"content":"            }"},{"lineNumber":84,"author":{"gitId":"sun-yitao"},"content":"            throw new InvalidCommandException(\"No date provided\");"},{"lineNumber":85,"author":{"gitId":"sun-yitao"},"content":"        } else {"},{"lineNumber":86,"author":{"gitId":"sun-yitao"},"content":"            throw new InvalidCommandException();"},{"lineNumber":87,"author":{"gitId":"sun-yitao"},"content":"        }"},{"lineNumber":88,"author":{"gitId":"sun-yitao"},"content":"    }"},{"lineNumber":89,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":90,"author":{"gitId":"sun-yitao"},"content":"    /**"},{"lineNumber":91,"author":{"gitId":"sun-yitao"},"content":"     * Parses datetime String and return LocalDateTime."},{"lineNumber":92,"author":{"gitId":"sun-yitao"},"content":"     * @param dateString datetime String"},{"lineNumber":93,"author":{"gitId":"sun-yitao"},"content":"     * @return LocalDateTime"},{"lineNumber":94,"author":{"gitId":"sun-yitao"},"content":"     * @throws InvalidCommandException if cannot parse dateString"},{"lineNumber":95,"author":{"gitId":"sun-yitao"},"content":"     */"},{"lineNumber":96,"author":{"gitId":"sun-yitao"},"content":"    public static LocalDateTime parseDateTime(String dateString) throws InvalidCommandException {"},{"lineNumber":97,"author":{"gitId":"sun-yitao"},"content":"        assert dateString !\u003d null : \"dateString is null\";"},{"lineNumber":98,"author":{"gitId":"sun-yitao"},"content":"        try {"},{"lineNumber":99,"author":{"gitId":"sun-yitao"},"content":"            return LocalDateTime.parse(dateString, dateTimeFormatter);"},{"lineNumber":100,"author":{"gitId":"sun-yitao"},"content":"        } catch (DateTimeParseException exception) {"},{"lineNumber":101,"author":{"gitId":"sun-yitao"},"content":"            throw new InvalidCommandException(\"Invalid date time format, \""},{"lineNumber":102,"author":{"gitId":"sun-yitao"},"content":"                    + \"please specify your date in dd/MM/yyyy HHmm format\");"},{"lineNumber":103,"author":{"gitId":"sun-yitao"},"content":"        }"},{"lineNumber":104,"author":{"gitId":"sun-yitao"},"content":"    }"},{"lineNumber":105,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":106,"author":{"gitId":"sun-yitao"},"content":"    /**"},{"lineNumber":107,"author":{"gitId":"sun-yitao"},"content":"     * Gets Task index of done user command."},{"lineNumber":108,"author":{"gitId":"sun-yitao"},"content":"     * @param command User command String"},{"lineNumber":109,"author":{"gitId":"sun-yitao"},"content":"     * @return task index"},{"lineNumber":110,"author":{"gitId":"sun-yitao"},"content":"     * @throws InvalidCommandException if command syntax is invalid"},{"lineNumber":111,"author":{"gitId":"sun-yitao"},"content":"     */"},{"lineNumber":112,"author":{"gitId":"sun-yitao"},"content":"    public static int getTaskIndex(String command) throws InvalidCommandException {"},{"lineNumber":113,"author":{"gitId":"sun-yitao"},"content":"        assert command !\u003d null : \"Command is null\";"},{"lineNumber":114,"author":{"gitId":"sun-yitao"},"content":"        String[] components \u003d command.split(\" \");"},{"lineNumber":115,"author":{"gitId":"sun-yitao"},"content":"        if (components.length !\u003d 2) {"},{"lineNumber":116,"author":{"gitId":"sun-yitao"},"content":"            throw new InvalidCommandException(\"Done command should have 2 components\");"},{"lineNumber":117,"author":{"gitId":"sun-yitao"},"content":"        }"},{"lineNumber":118,"author":{"gitId":"sun-yitao"},"content":"        return Integer.parseInt(components[1]) - 1;"},{"lineNumber":119,"author":{"gitId":"sun-yitao"},"content":"    }"},{"lineNumber":120,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":121,"author":{"gitId":"sun-yitao"},"content":"    /**"},{"lineNumber":122,"author":{"gitId":"sun-yitao"},"content":"     * Gets Keyword String from find command."},{"lineNumber":123,"author":{"gitId":"sun-yitao"},"content":"     * @param command user command"},{"lineNumber":124,"author":{"gitId":"sun-yitao"},"content":"     * @return keyword String"},{"lineNumber":125,"author":{"gitId":"sun-yitao"},"content":"     * @throws InvalidCommandException if keyword string not provided"},{"lineNumber":126,"author":{"gitId":"sun-yitao"},"content":"     */"},{"lineNumber":127,"author":{"gitId":"sun-yitao"},"content":"    public static String getFindKeyWordString(String command) throws InvalidCommandException {"},{"lineNumber":128,"author":{"gitId":"sun-yitao"},"content":"        assert command !\u003d null : \"Command is null\";"},{"lineNumber":129,"author":{"gitId":"sun-yitao"},"content":"        String[] components \u003d command.split(\" \");"},{"lineNumber":130,"author":{"gitId":"sun-yitao"},"content":"        if (components.length \u003c 2) {"},{"lineNumber":131,"author":{"gitId":"sun-yitao"},"content":"            throw new InvalidCommandException(\"Done command should have 2 components\");"},{"lineNumber":132,"author":{"gitId":"sun-yitao"},"content":"        }"},{"lineNumber":133,"author":{"gitId":"sun-yitao"},"content":"        return String.join(\" \", Arrays.copyOfRange(components, 1, components.length));"},{"lineNumber":134,"author":{"gitId":"sun-yitao"},"content":"    }"},{"lineNumber":135,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":136,"author":{"gitId":"sun-yitao"},"content":"    /**"},{"lineNumber":137,"author":{"gitId":"sun-yitao"},"content":"     * An exception for invalid user command."},{"lineNumber":138,"author":{"gitId":"sun-yitao"},"content":"     */"},{"lineNumber":139,"author":{"gitId":"sun-yitao"},"content":"    public static class InvalidCommandException extends Exception {"},{"lineNumber":140,"author":{"gitId":"sun-yitao"},"content":"        public InvalidCommandException(String errorMessage) {"},{"lineNumber":141,"author":{"gitId":"sun-yitao"},"content":"            super(errorMessage);"},{"lineNumber":142,"author":{"gitId":"sun-yitao"},"content":"        }"},{"lineNumber":143,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":144,"author":{"gitId":"sun-yitao"},"content":"        public InvalidCommandException() {"},{"lineNumber":145,"author":{"gitId":"sun-yitao"},"content":"            super(\"Unrecognised command\");"},{"lineNumber":146,"author":{"gitId":"sun-yitao"},"content":"        }"},{"lineNumber":147,"author":{"gitId":"sun-yitao"},"content":"    }"},{"lineNumber":148,"author":{"gitId":"sun-yitao"},"content":"}"}],"authorContributionMap":{"sun-yitao":148}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sun-yitao"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":3,"author":{"gitId":"sun-yitao"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"sun-yitao"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":5,"author":{"gitId":"sun-yitao"},"content":"import java.io.FileWriter;"},{"lineNumber":6,"author":{"gitId":"sun-yitao"},"content":"import java.io.IOException;"},{"lineNumber":7,"author":{"gitId":"sun-yitao"},"content":"import java.time.LocalDateTime;"},{"lineNumber":8,"author":{"gitId":"sun-yitao"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":9,"author":{"gitId":"sun-yitao"},"content":"import java.util.ArrayList;"},{"lineNumber":10,"author":{"gitId":"sun-yitao"},"content":"import java.util.Scanner;"},{"lineNumber":11,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":12,"author":{"gitId":"sun-yitao"},"content":"import duke.task.Deadline;"},{"lineNumber":13,"author":{"gitId":"sun-yitao"},"content":"import duke.task.Event;"},{"lineNumber":14,"author":{"gitId":"sun-yitao"},"content":"import duke.task.Task;"},{"lineNumber":15,"author":{"gitId":"sun-yitao"},"content":"import duke.task.Todo;"},{"lineNumber":16,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":17,"author":{"gitId":"sun-yitao"},"content":"/**"},{"lineNumber":18,"author":{"gitId":"sun-yitao"},"content":" * Class for loading and persisting data to disk."},{"lineNumber":19,"author":{"gitId":"sun-yitao"},"content":" */"},{"lineNumber":20,"author":{"gitId":"sun-yitao"},"content":"public class Storage {"},{"lineNumber":21,"author":{"gitId":"sun-yitao"},"content":"    private static final String saveFilePath \u003d \"data/duke.txt\";"},{"lineNumber":22,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":23,"author":{"gitId":"sun-yitao"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"sun-yitao"},"content":"     * Saves tasks to disk."},{"lineNumber":25,"author":{"gitId":"sun-yitao"},"content":"     * @param tasks ArrayList of tasks to save"},{"lineNumber":26,"author":{"gitId":"sun-yitao"},"content":"     * @throws IOException if cannot write to saveFilePath"},{"lineNumber":27,"author":{"gitId":"sun-yitao"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"sun-yitao"},"content":"    public static void save(ArrayList\u003cTask\u003e tasks) throws IOException {"},{"lineNumber":29,"author":{"gitId":"sun-yitao"},"content":"        createSaveDirectoryIfNotExists();"},{"lineNumber":30,"author":{"gitId":"sun-yitao"},"content":"        FileWriter fileWriter \u003d new FileWriter(saveFilePath);"},{"lineNumber":31,"author":{"gitId":"sun-yitao"},"content":"        for (Task task: tasks) {"},{"lineNumber":32,"author":{"gitId":"sun-yitao"},"content":"            fileWriter.write(task.toSaveString() + System.lineSeparator());"},{"lineNumber":33,"author":{"gitId":"sun-yitao"},"content":"        }"},{"lineNumber":34,"author":{"gitId":"sun-yitao"},"content":"        fileWriter.close();"},{"lineNumber":35,"author":{"gitId":"sun-yitao"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":37,"author":{"gitId":"sun-yitao"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"sun-yitao"},"content":"     * Loads tasks from saveFilePath."},{"lineNumber":39,"author":{"gitId":"sun-yitao"},"content":"     * @return ArrayList of loaded tasks"},{"lineNumber":40,"author":{"gitId":"sun-yitao"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"sun-yitao"},"content":"    public static ArrayList\u003cTask\u003e load() throws InvalidSaveFileException, DateTimeParseException,"},{"lineNumber":42,"author":{"gitId":"sun-yitao"},"content":"            FileNotFoundException {"},{"lineNumber":43,"author":{"gitId":"sun-yitao"},"content":"        createSaveDirectoryIfNotExists();"},{"lineNumber":44,"author":{"gitId":"sun-yitao"},"content":"        File file \u003d new File(saveFilePath);"},{"lineNumber":45,"author":{"gitId":"sun-yitao"},"content":"        Scanner scanner \u003d new Scanner(file);"},{"lineNumber":46,"author":{"gitId":"sun-yitao"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":47,"author":{"gitId":"sun-yitao"},"content":"        final String doneString \u003d \"1\";"},{"lineNumber":48,"author":{"gitId":"sun-yitao"},"content":"        while (scanner.hasNext()) {"},{"lineNumber":49,"author":{"gitId":"sun-yitao"},"content":"            String[] components \u003d scanner.nextLine().split(\"\\\\|\");"},{"lineNumber":50,"author":{"gitId":"sun-yitao"},"content":"            switch (components[0]) {"},{"lineNumber":51,"author":{"gitId":"sun-yitao"},"content":"            case \"T\":"},{"lineNumber":52,"author":{"gitId":"sun-yitao"},"content":"                tasks.add(new Todo(components[2], components[1].equals(doneString)));"},{"lineNumber":53,"author":{"gitId":"sun-yitao"},"content":"                break;"},{"lineNumber":54,"author":{"gitId":"sun-yitao"},"content":"            case \"D\":"},{"lineNumber":55,"author":{"gitId":"sun-yitao"},"content":"                tasks.add(new Deadline(components[2], components[1].equals(doneString),"},{"lineNumber":56,"author":{"gitId":"sun-yitao"},"content":"                        LocalDateTime.parse(components[3])));"},{"lineNumber":57,"author":{"gitId":"sun-yitao"},"content":"                break;"},{"lineNumber":58,"author":{"gitId":"sun-yitao"},"content":"            case \"E\":"},{"lineNumber":59,"author":{"gitId":"sun-yitao"},"content":"                tasks.add(new Event(components[2], components[1].equals(doneString),"},{"lineNumber":60,"author":{"gitId":"sun-yitao"},"content":"                        components[3]));"},{"lineNumber":61,"author":{"gitId":"sun-yitao"},"content":"                break;"},{"lineNumber":62,"author":{"gitId":"sun-yitao"},"content":"            default:"},{"lineNumber":63,"author":{"gitId":"sun-yitao"},"content":"                throw new InvalidSaveFileException();"},{"lineNumber":64,"author":{"gitId":"sun-yitao"},"content":"            }"},{"lineNumber":65,"author":{"gitId":"sun-yitao"},"content":"        }"},{"lineNumber":66,"author":{"gitId":"sun-yitao"},"content":"        return tasks;"},{"lineNumber":67,"author":{"gitId":"sun-yitao"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":69,"author":{"gitId":"sun-yitao"},"content":"    private static void createSaveDirectoryIfNotExists() {"},{"lineNumber":70,"author":{"gitId":"sun-yitao"},"content":"        File saveDirectory \u003d new File(\"data\");"},{"lineNumber":71,"author":{"gitId":"sun-yitao"},"content":"        if (!saveDirectory.exists()) {"},{"lineNumber":72,"author":{"gitId":"sun-yitao"},"content":"            saveDirectory.mkdir();"},{"lineNumber":73,"author":{"gitId":"sun-yitao"},"content":"        }"},{"lineNumber":74,"author":{"gitId":"sun-yitao"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":76,"author":{"gitId":"sun-yitao"},"content":"    /**"},{"lineNumber":77,"author":{"gitId":"sun-yitao"},"content":"     * Exception when save file syntax is invalid."},{"lineNumber":78,"author":{"gitId":"sun-yitao"},"content":"     */"},{"lineNumber":79,"author":{"gitId":"sun-yitao"},"content":"    public static class InvalidSaveFileException extends Exception {"},{"lineNumber":80,"author":{"gitId":"sun-yitao"},"content":"        public InvalidSaveFileException() {"},{"lineNumber":81,"author":{"gitId":"sun-yitao"},"content":"            super(\"Invalid save file\");"},{"lineNumber":82,"author":{"gitId":"sun-yitao"},"content":"        }"},{"lineNumber":83,"author":{"gitId":"sun-yitao"},"content":"    }"},{"lineNumber":84,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":85,"author":{"gitId":"sun-yitao"},"content":"}"}],"authorContributionMap":{"sun-yitao":85}},{"path":"src/main/java/duke/StringConstants.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sun-yitao"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":3,"author":{"gitId":"sun-yitao"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"sun-yitao"},"content":" * String constants for printing to user."},{"lineNumber":5,"author":{"gitId":"sun-yitao"},"content":" */"},{"lineNumber":6,"author":{"gitId":"sun-yitao"},"content":"public class StringConstants {"},{"lineNumber":7,"author":{"gitId":"sun-yitao"},"content":"    public static final String[] GREETING_MESSAGES \u003d new String[]{"},{"lineNumber":8,"author":{"gitId":"sun-yitao"},"content":"        \"Hello! I\u0027m Duke\","},{"lineNumber":9,"author":{"gitId":"sun-yitao"},"content":"        \"What can I do for you?\""},{"lineNumber":10,"author":{"gitId":"sun-yitao"},"content":"    };"},{"lineNumber":11,"author":{"gitId":"sun-yitao"},"content":"    public static final String DONE_MESSAGE \u003d \"Nice! I\u0027ve marked this task as done:\";"},{"lineNumber":12,"author":{"gitId":"sun-yitao"},"content":"    public static final String ADD_MESSAGE \u003d \"Got it. I\u0027ve added this task: \";"},{"lineNumber":13,"author":{"gitId":"sun-yitao"},"content":"    public static final String DELETE_MESSAGE \u003d \"Noted. I\u0027ve removed this task:\";"},{"lineNumber":14,"author":{"gitId":"sun-yitao"},"content":"    public static final String COUNT_MESSAGE \u003d \"Now you have %d tasks in the list.\";"},{"lineNumber":15,"author":{"gitId":"sun-yitao"},"content":"    public static final String EXIT_MESSAGE \u003d \"Bye. Hope to see you again soon!\";"},{"lineNumber":16,"author":{"gitId":"sun-yitao"},"content":"    public static final String TASK_FOUND_MESSAGE \u003d \"Here are the matching tasks in your list:\";"},{"lineNumber":17,"author":{"gitId":"sun-yitao"},"content":"    public static final String NO_TASK_FOUND_MESSAGE \u003d \"No matching tasks found.\";"},{"lineNumber":18,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":19,"author":{"gitId":"sun-yitao"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"sun-yitao"},"content":"     * Joins array of strings together separated by newline character."},{"lineNumber":21,"author":{"gitId":"sun-yitao"},"content":"     * @param strings array of strings to join"},{"lineNumber":22,"author":{"gitId":"sun-yitao"},"content":"     * @return joined string"},{"lineNumber":23,"author":{"gitId":"sun-yitao"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"sun-yitao"},"content":"    public static String joinStrings(String[] strings) {"},{"lineNumber":25,"author":{"gitId":"sun-yitao"},"content":"        return String.join(\"\\n\", strings);"},{"lineNumber":26,"author":{"gitId":"sun-yitao"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":28,"author":{"gitId":"sun-yitao"},"content":"    public static String getGreeting() {"},{"lineNumber":29,"author":{"gitId":"sun-yitao"},"content":"        return joinStrings(StringConstants.GREETING_MESSAGES);"},{"lineNumber":30,"author":{"gitId":"sun-yitao"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":32,"author":{"gitId":"sun-yitao"},"content":"}"}],"authorContributionMap":{"sun-yitao":32}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sun-yitao"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":3,"author":{"gitId":"sun-yitao"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"sun-yitao"},"content":"import java.util.ArrayList;"},{"lineNumber":5,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":6,"author":{"gitId":"sun-yitao"},"content":"import duke.task.Deadline;"},{"lineNumber":7,"author":{"gitId":"sun-yitao"},"content":"import duke.task.Event;"},{"lineNumber":8,"author":{"gitId":"sun-yitao"},"content":"import duke.task.Task;"},{"lineNumber":9,"author":{"gitId":"sun-yitao"},"content":"import duke.task.Todo;"},{"lineNumber":10,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":11,"author":{"gitId":"sun-yitao"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"sun-yitao"},"content":" * TaskList for manipulating user tasks."},{"lineNumber":13,"author":{"gitId":"sun-yitao"},"content":" */"},{"lineNumber":14,"author":{"gitId":"sun-yitao"},"content":"public class TaskList {"},{"lineNumber":15,"author":{"gitId":"sun-yitao"},"content":"    private final ArrayList\u003cTask\u003e tasks;"},{"lineNumber":16,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":17,"author":{"gitId":"sun-yitao"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"sun-yitao"},"content":"     * Loads tasks from saveFilePath."},{"lineNumber":19,"author":{"gitId":"sun-yitao"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"sun-yitao"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {"},{"lineNumber":21,"author":{"gitId":"sun-yitao"},"content":"        this.tasks \u003d tasks;"},{"lineNumber":22,"author":{"gitId":"sun-yitao"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":24,"author":{"gitId":"sun-yitao"},"content":"    private void addTask(Task task) {"},{"lineNumber":25,"author":{"gitId":"sun-yitao"},"content":"        assert task !\u003d null : \"Task being added is null\";"},{"lineNumber":26,"author":{"gitId":"sun-yitao"},"content":"        tasks.add(task);"},{"lineNumber":27,"author":{"gitId":"sun-yitao"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":29,"author":{"gitId":"sun-yitao"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"sun-yitao"},"content":"     * Parse add task command and adds corresponding task."},{"lineNumber":31,"author":{"gitId":"sun-yitao"},"content":"     * @param command User command String"},{"lineNumber":32,"author":{"gitId":"sun-yitao"},"content":"     * @param userCommandType UserCommandType"},{"lineNumber":33,"author":{"gitId":"sun-yitao"},"content":"     * @return String array of output messages"},{"lineNumber":34,"author":{"gitId":"sun-yitao"},"content":"     * @throws Parser.InvalidCommandException if user command syntax is invalid"},{"lineNumber":35,"author":{"gitId":"sun-yitao"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"sun-yitao"},"content":"    public String[] addTask(String command, UserCommandType userCommandType)"},{"lineNumber":37,"author":{"gitId":"sun-yitao"},"content":"            throws Parser.InvalidCommandException {"},{"lineNumber":38,"author":{"gitId":"sun-yitao"},"content":"        assert command !\u003d null : \"Command is null\";"},{"lineNumber":39,"author":{"gitId":"sun-yitao"},"content":"        assert userCommandType !\u003d null : \"userCommandType is null\";"},{"lineNumber":40,"author":{"gitId":"sun-yitao"},"content":"        Task task;"},{"lineNumber":41,"author":{"gitId":"sun-yitao"},"content":"        String[] taskComponents \u003d Parser.parseTask(command);"},{"lineNumber":42,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":43,"author":{"gitId":"sun-yitao"},"content":"        switch (userCommandType) {"},{"lineNumber":44,"author":{"gitId":"sun-yitao"},"content":"        case TODO:"},{"lineNumber":45,"author":{"gitId":"sun-yitao"},"content":"            task \u003d new Todo(taskComponents[0], false);"},{"lineNumber":46,"author":{"gitId":"sun-yitao"},"content":"            break;"},{"lineNumber":47,"author":{"gitId":"sun-yitao"},"content":"        case DEADLINE:"},{"lineNumber":48,"author":{"gitId":"sun-yitao"},"content":"            task \u003d new Deadline(taskComponents[0], false,"},{"lineNumber":49,"author":{"gitId":"sun-yitao"},"content":"                    Parser.parseDateTime(taskComponents[1]));"},{"lineNumber":50,"author":{"gitId":"sun-yitao"},"content":"            break;"},{"lineNumber":51,"author":{"gitId":"sun-yitao"},"content":"        case EVENT:"},{"lineNumber":52,"author":{"gitId":"sun-yitao"},"content":"            task \u003d new Event(taskComponents[0], false, taskComponents[1]);"},{"lineNumber":53,"author":{"gitId":"sun-yitao"},"content":"            break;"},{"lineNumber":54,"author":{"gitId":"sun-yitao"},"content":"        default:"},{"lineNumber":55,"author":{"gitId":"sun-yitao"},"content":"            throw new Parser.InvalidCommandException();"},{"lineNumber":56,"author":{"gitId":"sun-yitao"},"content":"        }"},{"lineNumber":57,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":58,"author":{"gitId":"sun-yitao"},"content":"        for (Task existingTask: tasks) {"},{"lineNumber":59,"author":{"gitId":"sun-yitao"},"content":"            if (existingTask.equals(task)) {"},{"lineNumber":60,"author":{"gitId":"sun-yitao"},"content":"                return new String[]{ String.format(\"Task \\\"%s\\\" already exists\", task.getName()) };"},{"lineNumber":61,"author":{"gitId":"sun-yitao"},"content":"            }"},{"lineNumber":62,"author":{"gitId":"sun-yitao"},"content":"        }"},{"lineNumber":63,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":64,"author":{"gitId":"sun-yitao"},"content":"        addTask(task);"},{"lineNumber":65,"author":{"gitId":"sun-yitao"},"content":"        return new String[] {"},{"lineNumber":66,"author":{"gitId":"sun-yitao"},"content":"            StringConstants.ADD_MESSAGE,"},{"lineNumber":67,"author":{"gitId":"sun-yitao"},"content":"            \"  \" + task.toString(),"},{"lineNumber":68,"author":{"gitId":"sun-yitao"},"content":"            String.format(StringConstants.COUNT_MESSAGE, tasks.size())"},{"lineNumber":69,"author":{"gitId":"sun-yitao"},"content":"        };"},{"lineNumber":70,"author":{"gitId":"sun-yitao"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":72,"author":{"gitId":"sun-yitao"},"content":"    /**"},{"lineNumber":73,"author":{"gitId":"sun-yitao"},"content":"     * Mark task done at index."},{"lineNumber":74,"author":{"gitId":"sun-yitao"},"content":"     * @param index index of task to be marked done"},{"lineNumber":75,"author":{"gitId":"sun-yitao"},"content":"     * @return String array of messages to be printed"},{"lineNumber":76,"author":{"gitId":"sun-yitao"},"content":"     * @throws InvalidIndexException if index is out of bounds"},{"lineNumber":77,"author":{"gitId":"sun-yitao"},"content":"     */"},{"lineNumber":78,"author":{"gitId":"sun-yitao"},"content":"    public String[] markTaskDoneAtIndex(int index) throws InvalidIndexException {"},{"lineNumber":79,"author":{"gitId":"sun-yitao"},"content":"        try {"},{"lineNumber":80,"author":{"gitId":"sun-yitao"},"content":"            Task task \u003d tasks.get(index);"},{"lineNumber":81,"author":{"gitId":"sun-yitao"},"content":"            task.markDone();"},{"lineNumber":82,"author":{"gitId":"sun-yitao"},"content":"            return new String[] {"},{"lineNumber":83,"author":{"gitId":"sun-yitao"},"content":"                StringConstants.DONE_MESSAGE,"},{"lineNumber":84,"author":{"gitId":"sun-yitao"},"content":"                \"  \" + task.toString()"},{"lineNumber":85,"author":{"gitId":"sun-yitao"},"content":"            };"},{"lineNumber":86,"author":{"gitId":"sun-yitao"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":87,"author":{"gitId":"sun-yitao"},"content":"            throw new InvalidIndexException();"},{"lineNumber":88,"author":{"gitId":"sun-yitao"},"content":"        }"},{"lineNumber":89,"author":{"gitId":"sun-yitao"},"content":"    }"},{"lineNumber":90,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":91,"author":{"gitId":"sun-yitao"},"content":"    /**"},{"lineNumber":92,"author":{"gitId":"sun-yitao"},"content":"     * Delete task at index."},{"lineNumber":93,"author":{"gitId":"sun-yitao"},"content":"     * @param index index of task to delete"},{"lineNumber":94,"author":{"gitId":"sun-yitao"},"content":"     * @return String array of messages to be printed"},{"lineNumber":95,"author":{"gitId":"sun-yitao"},"content":"     * @throws InvalidIndexException if index is out of bounds"},{"lineNumber":96,"author":{"gitId":"sun-yitao"},"content":"     */"},{"lineNumber":97,"author":{"gitId":"sun-yitao"},"content":"    public String[] deleteTaskAtIndex(int index) throws InvalidIndexException {"},{"lineNumber":98,"author":{"gitId":"sun-yitao"},"content":"        try {"},{"lineNumber":99,"author":{"gitId":"sun-yitao"},"content":"            Task task \u003d tasks.get(index);"},{"lineNumber":100,"author":{"gitId":"sun-yitao"},"content":"            tasks.remove(index);"},{"lineNumber":101,"author":{"gitId":"sun-yitao"},"content":"            return new String[] {"},{"lineNumber":102,"author":{"gitId":"sun-yitao"},"content":"                StringConstants.DELETE_MESSAGE,"},{"lineNumber":103,"author":{"gitId":"sun-yitao"},"content":"                \"  \" + task.toString(),"},{"lineNumber":104,"author":{"gitId":"sun-yitao"},"content":"                String.format(StringConstants.COUNT_MESSAGE, tasks.size())"},{"lineNumber":105,"author":{"gitId":"sun-yitao"},"content":"            };"},{"lineNumber":106,"author":{"gitId":"sun-yitao"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":107,"author":{"gitId":"sun-yitao"},"content":"            throw new InvalidIndexException();"},{"lineNumber":108,"author":{"gitId":"sun-yitao"},"content":"        }"},{"lineNumber":109,"author":{"gitId":"sun-yitao"},"content":"    }"},{"lineNumber":110,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":111,"author":{"gitId":"sun-yitao"},"content":"    /**"},{"lineNumber":112,"author":{"gitId":"sun-yitao"},"content":"     * Gets task at index."},{"lineNumber":113,"author":{"gitId":"sun-yitao"},"content":"     * @param index index of task to get"},{"lineNumber":114,"author":{"gitId":"sun-yitao"},"content":"     * @return task at index"},{"lineNumber":115,"author":{"gitId":"sun-yitao"},"content":"     * @throws InvalidIndexException if index is out of bounds"},{"lineNumber":116,"author":{"gitId":"sun-yitao"},"content":"     */"},{"lineNumber":117,"author":{"gitId":"sun-yitao"},"content":"    public Task getTaskAtIndex(int index) throws InvalidIndexException {"},{"lineNumber":118,"author":{"gitId":"sun-yitao"},"content":"        try {"},{"lineNumber":119,"author":{"gitId":"sun-yitao"},"content":"            return tasks.get(index);"},{"lineNumber":120,"author":{"gitId":"sun-yitao"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":121,"author":{"gitId":"sun-yitao"},"content":"            throw new InvalidIndexException();"},{"lineNumber":122,"author":{"gitId":"sun-yitao"},"content":"        }"},{"lineNumber":123,"author":{"gitId":"sun-yitao"},"content":"    }"},{"lineNumber":124,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":125,"author":{"gitId":"sun-yitao"},"content":"    /**"},{"lineNumber":126,"author":{"gitId":"sun-yitao"},"content":"     * Gets tasks\u0027 String representations as String array"},{"lineNumber":127,"author":{"gitId":"sun-yitao"},"content":"     * @return String array of tasks\u0027 print Strings"},{"lineNumber":128,"author":{"gitId":"sun-yitao"},"content":"     */"},{"lineNumber":129,"author":{"gitId":"sun-yitao"},"content":"    public String[] getTasksAsStrings() {"},{"lineNumber":130,"author":{"gitId":"sun-yitao"},"content":"        String[] messages \u003d new String[tasks.size()];"},{"lineNumber":131,"author":{"gitId":"sun-yitao"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {"},{"lineNumber":132,"author":{"gitId":"sun-yitao"},"content":"            Task task \u003d tasks.get(i);"},{"lineNumber":133,"author":{"gitId":"sun-yitao"},"content":"            messages[i] \u003d String.format(\"%d.%s\", i + 1, task.toString());"},{"lineNumber":134,"author":{"gitId":"sun-yitao"},"content":"        }"},{"lineNumber":135,"author":{"gitId":"sun-yitao"},"content":"        return messages;"},{"lineNumber":136,"author":{"gitId":"sun-yitao"},"content":"    }"},{"lineNumber":137,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":138,"author":{"gitId":"sun-yitao"},"content":"    /**"},{"lineNumber":139,"author":{"gitId":"sun-yitao"},"content":"     * Finds tasks matching with keyword String and prints them."},{"lineNumber":140,"author":{"gitId":"sun-yitao"},"content":"     * @param command user command String"},{"lineNumber":141,"author":{"gitId":"sun-yitao"},"content":"     * @return String array of output messages"},{"lineNumber":142,"author":{"gitId":"sun-yitao"},"content":"     */"},{"lineNumber":143,"author":{"gitId":"sun-yitao"},"content":"    public String[] find(String command) throws Parser.InvalidCommandException {"},{"lineNumber":144,"author":{"gitId":"sun-yitao"},"content":"        assert command !\u003d null : \"Command is null\";"},{"lineNumber":145,"author":{"gitId":"sun-yitao"},"content":"        String keyWordString \u003d Parser.getFindKeyWordString(command);"},{"lineNumber":146,"author":{"gitId":"sun-yitao"},"content":"        ArrayList\u003cString\u003e messages \u003d new ArrayList\u003c\u003e();"},{"lineNumber":147,"author":{"gitId":"sun-yitao"},"content":"        messages.add(StringConstants.TASK_FOUND_MESSAGE);"},{"lineNumber":148,"author":{"gitId":"sun-yitao"},"content":"        int i \u003d 1;"},{"lineNumber":149,"author":{"gitId":"sun-yitao"},"content":"        for (Task task: tasks) {"},{"lineNumber":150,"author":{"gitId":"sun-yitao"},"content":"            if (task.getName().contains(keyWordString)) {"},{"lineNumber":151,"author":{"gitId":"sun-yitao"},"content":"                messages.add(String.format(\"%d.%s\", i, task.toString()));"},{"lineNumber":152,"author":{"gitId":"sun-yitao"},"content":"                i++;"},{"lineNumber":153,"author":{"gitId":"sun-yitao"},"content":"            }"},{"lineNumber":154,"author":{"gitId":"sun-yitao"},"content":"        }"},{"lineNumber":155,"author":{"gitId":"sun-yitao"},"content":"        if (messages.size() \u003d\u003d 1) {"},{"lineNumber":156,"author":{"gitId":"sun-yitao"},"content":"            return new String[]{StringConstants.NO_TASK_FOUND_MESSAGE};"},{"lineNumber":157,"author":{"gitId":"sun-yitao"},"content":"        } else {"},{"lineNumber":158,"author":{"gitId":"sun-yitao"},"content":"            return messages.toArray(new String[0]);"},{"lineNumber":159,"author":{"gitId":"sun-yitao"},"content":"        }"},{"lineNumber":160,"author":{"gitId":"sun-yitao"},"content":"    }"},{"lineNumber":161,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":162,"author":{"gitId":"sun-yitao"},"content":"    /**"},{"lineNumber":163,"author":{"gitId":"sun-yitao"},"content":"     * Saves user tasks to disk."},{"lineNumber":164,"author":{"gitId":"sun-yitao"},"content":"     */"},{"lineNumber":165,"author":{"gitId":"sun-yitao"},"content":"    public void saveTaskList() throws IOException {"},{"lineNumber":166,"author":{"gitId":"sun-yitao"},"content":"        Storage.save(tasks);"},{"lineNumber":167,"author":{"gitId":"sun-yitao"},"content":"    }"},{"lineNumber":168,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":169,"author":{"gitId":"sun-yitao"},"content":"    /**"},{"lineNumber":170,"author":{"gitId":"sun-yitao"},"content":"     * Exception for when task index is out of bounds."},{"lineNumber":171,"author":{"gitId":"sun-yitao"},"content":"     */"},{"lineNumber":172,"author":{"gitId":"sun-yitao"},"content":"    public static class InvalidIndexException extends Exception {"},{"lineNumber":173,"author":{"gitId":"sun-yitao"},"content":"        public InvalidIndexException() {"},{"lineNumber":174,"author":{"gitId":"sun-yitao"},"content":"            super(\"Invalid task index\");"},{"lineNumber":175,"author":{"gitId":"sun-yitao"},"content":"        }"},{"lineNumber":176,"author":{"gitId":"sun-yitao"},"content":"    }"},{"lineNumber":177,"author":{"gitId":"sun-yitao"},"content":"}"}],"authorContributionMap":{"sun-yitao":177}},{"path":"src/main/java/duke/UserCommandType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sun-yitao"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":3,"author":{"gitId":"sun-yitao"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"sun-yitao"},"content":" * Type of user command."},{"lineNumber":5,"author":{"gitId":"sun-yitao"},"content":" */"},{"lineNumber":6,"author":{"gitId":"sun-yitao"},"content":"public enum UserCommandType {"},{"lineNumber":7,"author":{"gitId":"sun-yitao"},"content":"    TODO,"},{"lineNumber":8,"author":{"gitId":"sun-yitao"},"content":"    DEADLINE,"},{"lineNumber":9,"author":{"gitId":"sun-yitao"},"content":"    EVENT,"},{"lineNumber":10,"author":{"gitId":"sun-yitao"},"content":"    LIST,"},{"lineNumber":11,"author":{"gitId":"sun-yitao"},"content":"    DONE,"},{"lineNumber":12,"author":{"gitId":"sun-yitao"},"content":"    FIND,"},{"lineNumber":13,"author":{"gitId":"sun-yitao"},"content":"    DELETE,"},{"lineNumber":14,"author":{"gitId":"sun-yitao"},"content":"    EXIT,"},{"lineNumber":15,"author":{"gitId":"sun-yitao"},"content":"    ERROR"},{"lineNumber":16,"author":{"gitId":"sun-yitao"},"content":"}"}],"authorContributionMap":{"sun-yitao":16}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sun-yitao"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":3,"author":{"gitId":"sun-yitao"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"sun-yitao"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":6,"author":{"gitId":"sun-yitao"},"content":"public class Deadline extends Task {"},{"lineNumber":7,"author":{"gitId":"sun-yitao"},"content":"    private final LocalDateTime deadline;"},{"lineNumber":8,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":9,"author":{"gitId":"sun-yitao"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"sun-yitao"},"content":"     * A Task with deadline."},{"lineNumber":11,"author":{"gitId":"sun-yitao"},"content":"     * @param name name of Task"},{"lineNumber":12,"author":{"gitId":"sun-yitao"},"content":"     * @param isDone whether Task is done"},{"lineNumber":13,"author":{"gitId":"sun-yitao"},"content":"     * @param deadline deadline of task in LocalDateTime"},{"lineNumber":14,"author":{"gitId":"sun-yitao"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"sun-yitao"},"content":"    public Deadline(final String name, final boolean isDone, final LocalDateTime deadline) {"},{"lineNumber":16,"author":{"gitId":"sun-yitao"},"content":"        super(name, isDone);"},{"lineNumber":17,"author":{"gitId":"sun-yitao"},"content":"        assert deadline !\u003d null : \"Deadline is null\";"},{"lineNumber":18,"author":{"gitId":"sun-yitao"},"content":"        this.deadline \u003d deadline;"},{"lineNumber":19,"author":{"gitId":"sun-yitao"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":21,"author":{"gitId":"sun-yitao"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"sun-yitao"},"content":"     * Returns String representation of Task presented to user."},{"lineNumber":23,"author":{"gitId":"sun-yitao"},"content":"     * @return String representation of Task presented to user"},{"lineNumber":24,"author":{"gitId":"sun-yitao"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"sun-yitao"},"content":"    @Override"},{"lineNumber":26,"author":{"gitId":"sun-yitao"},"content":"    public String toString() {"},{"lineNumber":27,"author":{"gitId":"sun-yitao"},"content":"        String doneSymbol \u003d getIsDone() ? \"✓\" : \"✗\";"},{"lineNumber":28,"author":{"gitId":"sun-yitao"},"content":"        return String.format(\"[D][%s] %s (by: %s)\", doneSymbol, getName(),"},{"lineNumber":29,"author":{"gitId":"sun-yitao"},"content":"                deadline.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HHmm\")));"},{"lineNumber":30,"author":{"gitId":"sun-yitao"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":32,"author":{"gitId":"sun-yitao"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"sun-yitao"},"content":"     * Compares two deadlines and check if they are the same"},{"lineNumber":34,"author":{"gitId":"sun-yitao"},"content":"     * @param o object to compare equality"},{"lineNumber":35,"author":{"gitId":"sun-yitao"},"content":"     * @return true if the deadlines are the same"},{"lineNumber":36,"author":{"gitId":"sun-yitao"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"sun-yitao"},"content":"    @Override"},{"lineNumber":38,"author":{"gitId":"sun-yitao"},"content":"    public boolean equals(Object o) {"},{"lineNumber":39,"author":{"gitId":"sun-yitao"},"content":"        if (o \u003d\u003d this) {"},{"lineNumber":40,"author":{"gitId":"sun-yitao"},"content":"            return true;"},{"lineNumber":41,"author":{"gitId":"sun-yitao"},"content":"        } else if (!(o instanceof Deadline)) {"},{"lineNumber":42,"author":{"gitId":"sun-yitao"},"content":"            return false;"},{"lineNumber":43,"author":{"gitId":"sun-yitao"},"content":"        }"},{"lineNumber":44,"author":{"gitId":"sun-yitao"},"content":"        Deadline d \u003d (Deadline) o;"},{"lineNumber":45,"author":{"gitId":"sun-yitao"},"content":"        return getName().equals(d.getName()) \u0026\u0026 deadline.equals(d.deadline);"},{"lineNumber":46,"author":{"gitId":"sun-yitao"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":48,"author":{"gitId":"sun-yitao"},"content":"    /**"},{"lineNumber":49,"author":{"gitId":"sun-yitao"},"content":"     * Returns String representation of Task to be saved."},{"lineNumber":50,"author":{"gitId":"sun-yitao"},"content":"     * @return String representation of Task to be saved"},{"lineNumber":51,"author":{"gitId":"sun-yitao"},"content":"     */"},{"lineNumber":52,"author":{"gitId":"sun-yitao"},"content":"    @Override"},{"lineNumber":53,"author":{"gitId":"sun-yitao"},"content":"    public String toSaveString() {"},{"lineNumber":54,"author":{"gitId":"sun-yitao"},"content":"        return String.format(\"D|%d|%s|%s\", getIsDone() ? 1 : 0, getName(), deadline);"},{"lineNumber":55,"author":{"gitId":"sun-yitao"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":57,"author":{"gitId":"sun-yitao"},"content":"}"}],"authorContributionMap":{"sun-yitao":57}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sun-yitao"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":3,"author":{"gitId":"sun-yitao"},"content":"public class Event extends Task {"},{"lineNumber":4,"author":{"gitId":"sun-yitao"},"content":"    private final String duration;"},{"lineNumber":5,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":6,"author":{"gitId":"sun-yitao"},"content":"    /**"},{"lineNumber":7,"author":{"gitId":"sun-yitao"},"content":"     * A Task with duration."},{"lineNumber":8,"author":{"gitId":"sun-yitao"},"content":"     * @param name name of Task"},{"lineNumber":9,"author":{"gitId":"sun-yitao"},"content":"     * @param isDone whether Task is done"},{"lineNumber":10,"author":{"gitId":"sun-yitao"},"content":"     * @param duration duration of Task as a String"},{"lineNumber":11,"author":{"gitId":"sun-yitao"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"sun-yitao"},"content":"    public Event(String name, boolean isDone, String duration) {"},{"lineNumber":13,"author":{"gitId":"sun-yitao"},"content":"        super(name, isDone);"},{"lineNumber":14,"author":{"gitId":"sun-yitao"},"content":"        assert duration !\u003d null : \"Duration is null\";"},{"lineNumber":15,"author":{"gitId":"sun-yitao"},"content":"        this.duration \u003d duration;"},{"lineNumber":16,"author":{"gitId":"sun-yitao"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":18,"author":{"gitId":"sun-yitao"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"sun-yitao"},"content":"     * Returns String representation of Task presented to user."},{"lineNumber":20,"author":{"gitId":"sun-yitao"},"content":"     * @return String representation of Task presented to user"},{"lineNumber":21,"author":{"gitId":"sun-yitao"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"sun-yitao"},"content":"    @Override"},{"lineNumber":23,"author":{"gitId":"sun-yitao"},"content":"    public String toString() {"},{"lineNumber":24,"author":{"gitId":"sun-yitao"},"content":"        String doneSymbol \u003d getIsDone() ? \"✓\" : \"✗\";"},{"lineNumber":25,"author":{"gitId":"sun-yitao"},"content":"        return String.format(\"[E][%s] %s (at: %s)\", doneSymbol, getName(), duration);"},{"lineNumber":26,"author":{"gitId":"sun-yitao"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":28,"author":{"gitId":"sun-yitao"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"sun-yitao"},"content":"     * Compares two events and check if they are the same"},{"lineNumber":30,"author":{"gitId":"sun-yitao"},"content":"     * @param o object to compare equality"},{"lineNumber":31,"author":{"gitId":"sun-yitao"},"content":"     * @return true if the events are the same"},{"lineNumber":32,"author":{"gitId":"sun-yitao"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"sun-yitao"},"content":"    @Override"},{"lineNumber":34,"author":{"gitId":"sun-yitao"},"content":"    public boolean equals(Object o) {"},{"lineNumber":35,"author":{"gitId":"sun-yitao"},"content":"        if (o \u003d\u003d this) {"},{"lineNumber":36,"author":{"gitId":"sun-yitao"},"content":"            return true;"},{"lineNumber":37,"author":{"gitId":"sun-yitao"},"content":"        } else if (!(o instanceof Event)) {"},{"lineNumber":38,"author":{"gitId":"sun-yitao"},"content":"            return false;"},{"lineNumber":39,"author":{"gitId":"sun-yitao"},"content":"        }"},{"lineNumber":40,"author":{"gitId":"sun-yitao"},"content":"        Event e \u003d (Event) o;"},{"lineNumber":41,"author":{"gitId":"sun-yitao"},"content":"        return getName().equals(e.getName()) \u0026\u0026 duration.equals(e.duration);"},{"lineNumber":42,"author":{"gitId":"sun-yitao"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":44,"author":{"gitId":"sun-yitao"},"content":"    /**"},{"lineNumber":45,"author":{"gitId":"sun-yitao"},"content":"     * Returns String representation of Task to be saved."},{"lineNumber":46,"author":{"gitId":"sun-yitao"},"content":"     * @return String representation of Task to be saved"},{"lineNumber":47,"author":{"gitId":"sun-yitao"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"sun-yitao"},"content":"    @Override"},{"lineNumber":49,"author":{"gitId":"sun-yitao"},"content":"    public String toSaveString() {"},{"lineNumber":50,"author":{"gitId":"sun-yitao"},"content":"        return String.format(\"E|%d|%s|%s\", getIsDone() ? 1 : 0, getName(), duration);"},{"lineNumber":51,"author":{"gitId":"sun-yitao"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"sun-yitao"},"content":"}"}],"authorContributionMap":{"sun-yitao":52}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sun-yitao"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":3,"author":{"gitId":"sun-yitao"},"content":"public abstract class Task {"},{"lineNumber":4,"author":{"gitId":"sun-yitao"},"content":"    private final String name;"},{"lineNumber":5,"author":{"gitId":"sun-yitao"},"content":"    private boolean isDone;"},{"lineNumber":6,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":7,"author":{"gitId":"sun-yitao"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"sun-yitao"},"content":"     * A base Task to inherit from."},{"lineNumber":9,"author":{"gitId":"sun-yitao"},"content":"     * @param name name of Task"},{"lineNumber":10,"author":{"gitId":"sun-yitao"},"content":"     * @param isDone whether Task is done"},{"lineNumber":11,"author":{"gitId":"sun-yitao"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"sun-yitao"},"content":"    public Task(String name, boolean isDone) {"},{"lineNumber":13,"author":{"gitId":"sun-yitao"},"content":"        assert name !\u003d null : \"Task name is null\";"},{"lineNumber":14,"author":{"gitId":"sun-yitao"},"content":"        this.name \u003d name;"},{"lineNumber":15,"author":{"gitId":"sun-yitao"},"content":"        this.isDone \u003d isDone;"},{"lineNumber":16,"author":{"gitId":"sun-yitao"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":18,"author":{"gitId":"sun-yitao"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"sun-yitao"},"content":"     * Marks task as done."},{"lineNumber":20,"author":{"gitId":"sun-yitao"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"sun-yitao"},"content":"    public void markDone() {"},{"lineNumber":22,"author":{"gitId":"sun-yitao"},"content":"        this.isDone \u003d true;"},{"lineNumber":23,"author":{"gitId":"sun-yitao"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":25,"author":{"gitId":"sun-yitao"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"sun-yitao"},"content":"     * Returns whether Task is done."},{"lineNumber":27,"author":{"gitId":"sun-yitao"},"content":"     * @return boolean of task is done"},{"lineNumber":28,"author":{"gitId":"sun-yitao"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"sun-yitao"},"content":"    public boolean getIsDone() {"},{"lineNumber":30,"author":{"gitId":"sun-yitao"},"content":"        return isDone;"},{"lineNumber":31,"author":{"gitId":"sun-yitao"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":33,"author":{"gitId":"sun-yitao"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"sun-yitao"},"content":"     * Gets name of task."},{"lineNumber":35,"author":{"gitId":"sun-yitao"},"content":"     * @return name of task as a String"},{"lineNumber":36,"author":{"gitId":"sun-yitao"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"sun-yitao"},"content":"    public String getName() {"},{"lineNumber":38,"author":{"gitId":"sun-yitao"},"content":"        return name;"},{"lineNumber":39,"author":{"gitId":"sun-yitao"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":41,"author":{"gitId":"sun-yitao"},"content":"    /**"},{"lineNumber":42,"author":{"gitId":"sun-yitao"},"content":"     * Returns String representation of Task presented to user."},{"lineNumber":43,"author":{"gitId":"sun-yitao"},"content":"     * @return String representation of Task presented to user"},{"lineNumber":44,"author":{"gitId":"sun-yitao"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"sun-yitao"},"content":"    @Override"},{"lineNumber":46,"author":{"gitId":"sun-yitao"},"content":"    public String toString() {"},{"lineNumber":47,"author":{"gitId":"sun-yitao"},"content":"        String doneSymbol \u003d getIsDone() ? \"✓\" : \"✗\";"},{"lineNumber":48,"author":{"gitId":"sun-yitao"},"content":"        return String.format(\"[%s] %s\", doneSymbol, getName());"},{"lineNumber":49,"author":{"gitId":"sun-yitao"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":51,"author":{"gitId":"sun-yitao"},"content":"    /**"},{"lineNumber":52,"author":{"gitId":"sun-yitao"},"content":"     * Compares two tasks and check if they are the same"},{"lineNumber":53,"author":{"gitId":"sun-yitao"},"content":"     * @param o object to compare equality"},{"lineNumber":54,"author":{"gitId":"sun-yitao"},"content":"     * @return true if the tasks are the same"},{"lineNumber":55,"author":{"gitId":"sun-yitao"},"content":"     */"},{"lineNumber":56,"author":{"gitId":"sun-yitao"},"content":"    @Override"},{"lineNumber":57,"author":{"gitId":"sun-yitao"},"content":"    public boolean equals(Object o) {"},{"lineNumber":58,"author":{"gitId":"sun-yitao"},"content":"        if (o \u003d\u003d this) {"},{"lineNumber":59,"author":{"gitId":"sun-yitao"},"content":"            return true;"},{"lineNumber":60,"author":{"gitId":"sun-yitao"},"content":"        } else if (!(o instanceof Task)) {"},{"lineNumber":61,"author":{"gitId":"sun-yitao"},"content":"            return false;"},{"lineNumber":62,"author":{"gitId":"sun-yitao"},"content":"        }"},{"lineNumber":63,"author":{"gitId":"sun-yitao"},"content":"        Task t \u003d (Task) o;"},{"lineNumber":64,"author":{"gitId":"sun-yitao"},"content":"        return name.equals(t.name);"},{"lineNumber":65,"author":{"gitId":"sun-yitao"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":67,"author":{"gitId":"sun-yitao"},"content":"    /**"},{"lineNumber":68,"author":{"gitId":"sun-yitao"},"content":"     * Returns String representation of Task to be saved."},{"lineNumber":69,"author":{"gitId":"sun-yitao"},"content":"     * @return String representation of Task to be saved"},{"lineNumber":70,"author":{"gitId":"sun-yitao"},"content":"     */"},{"lineNumber":71,"author":{"gitId":"sun-yitao"},"content":"    public abstract String toSaveString();"},{"lineNumber":72,"author":{"gitId":"sun-yitao"},"content":"}"}],"authorContributionMap":{"sun-yitao":72}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sun-yitao"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":3,"author":{"gitId":"sun-yitao"},"content":"public class Todo extends Task {"},{"lineNumber":4,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":5,"author":{"gitId":"sun-yitao"},"content":"    /**"},{"lineNumber":6,"author":{"gitId":"sun-yitao"},"content":"     * A Task without deadline or duration."},{"lineNumber":7,"author":{"gitId":"sun-yitao"},"content":"     * @param name name of Task"},{"lineNumber":8,"author":{"gitId":"sun-yitao"},"content":"     * @param isDone whether Task is done"},{"lineNumber":9,"author":{"gitId":"sun-yitao"},"content":"     */"},{"lineNumber":10,"author":{"gitId":"sun-yitao"},"content":"    public Todo(String name, boolean isDone) {"},{"lineNumber":11,"author":{"gitId":"sun-yitao"},"content":"        super(name, isDone);"},{"lineNumber":12,"author":{"gitId":"sun-yitao"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":14,"author":{"gitId":"sun-yitao"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"sun-yitao"},"content":"     * Returns String representation of Task presented to user."},{"lineNumber":16,"author":{"gitId":"sun-yitao"},"content":"     * @return String representation of Task presented to user"},{"lineNumber":17,"author":{"gitId":"sun-yitao"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"sun-yitao"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"sun-yitao"},"content":"    public String toString() {"},{"lineNumber":20,"author":{"gitId":"sun-yitao"},"content":"        String doneSymbol \u003d getIsDone() ? \"✓\" : \"✗\";"},{"lineNumber":21,"author":{"gitId":"sun-yitao"},"content":"        return String.format(\"[T][%s] %s\", doneSymbol, getName());"},{"lineNumber":22,"author":{"gitId":"sun-yitao"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":24,"author":{"gitId":"sun-yitao"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"sun-yitao"},"content":"     * Compares two todos and check if they are the same"},{"lineNumber":26,"author":{"gitId":"sun-yitao"},"content":"     * @param o object to compare equality"},{"lineNumber":27,"author":{"gitId":"sun-yitao"},"content":"     * @return true if the todos are the same"},{"lineNumber":28,"author":{"gitId":"sun-yitao"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"sun-yitao"},"content":"    @Override"},{"lineNumber":30,"author":{"gitId":"sun-yitao"},"content":"    public boolean equals(Object o) {"},{"lineNumber":31,"author":{"gitId":"sun-yitao"},"content":"        if (o \u003d\u003d this) {"},{"lineNumber":32,"author":{"gitId":"sun-yitao"},"content":"            return true;"},{"lineNumber":33,"author":{"gitId":"sun-yitao"},"content":"        } else if (!(o instanceof Todo)) {"},{"lineNumber":34,"author":{"gitId":"sun-yitao"},"content":"            return false;"},{"lineNumber":35,"author":{"gitId":"sun-yitao"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"sun-yitao"},"content":"        Todo t \u003d (Todo) o;"},{"lineNumber":37,"author":{"gitId":"sun-yitao"},"content":"        return getName().equals(t.getName());"},{"lineNumber":38,"author":{"gitId":"sun-yitao"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":40,"author":{"gitId":"sun-yitao"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"sun-yitao"},"content":"     * Returns String representation of Task to be saved."},{"lineNumber":42,"author":{"gitId":"sun-yitao"},"content":"     * @return String representation of Task to be saved"},{"lineNumber":43,"author":{"gitId":"sun-yitao"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"sun-yitao"},"content":"    @Override"},{"lineNumber":45,"author":{"gitId":"sun-yitao"},"content":"    public String toSaveString() {"},{"lineNumber":46,"author":{"gitId":"sun-yitao"},"content":"        return String.format(\"T|%d|%s\", getIsDone() ? 1 : 0, getName());"},{"lineNumber":47,"author":{"gitId":"sun-yitao"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"sun-yitao"},"content":"}"}],"authorContributionMap":{"sun-yitao":48}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"sun-yitao"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":3,"author":{"gitId":"sun-yitao"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"sun-yitao"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"sun-yitao"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":6,"author":{"gitId":"sun-yitao"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":7,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":8,"author":{"gitId":"sun-yitao"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxWidth\u003d\"1.7976931348623157E308\" prefHeight\u003d\"225.0\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":9,"author":{"gitId":"sun-yitao"},"content":"  \u003cchildren\u003e"},{"lineNumber":10,"author":{"gitId":"sun-yitao"},"content":"    \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e"},{"lineNumber":11,"author":{"gitId":"sun-yitao"},"content":"         \u003cHBox.margin\u003e"},{"lineNumber":12,"author":{"gitId":"sun-yitao"},"content":"            \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\" /\u003e"},{"lineNumber":13,"author":{"gitId":"sun-yitao"},"content":"         \u003c/HBox.margin\u003e\u003c/Label\u003e"},{"lineNumber":14,"author":{"gitId":"sun-yitao"},"content":"    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"},{"lineNumber":15,"author":{"gitId":"sun-yitao"},"content":"  \u003c/children\u003e"},{"lineNumber":16,"author":{"gitId":"sun-yitao"},"content":"  \u003cpadding\u003e"},{"lineNumber":17,"author":{"gitId":"sun-yitao"},"content":"    \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":18,"author":{"gitId":"sun-yitao"},"content":"  \u003c/padding\u003e"},{"lineNumber":19,"author":{"gitId":"sun-yitao"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"sun-yitao":19}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"sun-yitao"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":3,"author":{"gitId":"sun-yitao"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":4,"author":{"gitId":"sun-yitao"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":5,"author":{"gitId":"sun-yitao"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":6,"author":{"gitId":"sun-yitao"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":7,"author":{"gitId":"sun-yitao"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":8,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":9,"author":{"gitId":"sun-yitao"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e"},{"lineNumber":10,"author":{"gitId":"sun-yitao"},"content":"  \u003cchildren\u003e"},{"lineNumber":11,"author":{"gitId":"sun-yitao"},"content":"    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"},{"lineNumber":12,"author":{"gitId":"sun-yitao"},"content":"    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"},{"lineNumber":13,"author":{"gitId":"sun-yitao"},"content":"    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"},{"lineNumber":14,"author":{"gitId":"sun-yitao"},"content":"      \u003ccontent\u003e"},{"lineNumber":15,"author":{"gitId":"sun-yitao"},"content":"        \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"},{"lineNumber":16,"author":{"gitId":"sun-yitao"},"content":"      \u003c/content\u003e"},{"lineNumber":17,"author":{"gitId":"sun-yitao"},"content":"    \u003c/ScrollPane\u003e"},{"lineNumber":18,"author":{"gitId":"sun-yitao"},"content":"  \u003c/children\u003e"},{"lineNumber":19,"author":{"gitId":"sun-yitao"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"sun-yitao":19}},{"path":"src/test/java/duke/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sun-yitao"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":3,"author":{"gitId":"sun-yitao"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":5,"author":{"gitId":"sun-yitao"},"content":"import java.time.LocalDateTime;"},{"lineNumber":6,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":7,"author":{"gitId":"sun-yitao"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":8,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":9,"author":{"gitId":"sun-yitao"},"content":"public class DeadlineTest {"},{"lineNumber":10,"author":{"gitId":"sun-yitao"},"content":"    private final Deadline deadline1 \u003d new Deadline(\"example 1\", false,"},{"lineNumber":11,"author":{"gitId":"sun-yitao"},"content":"            LocalDateTime.of(2020, 12, 12, 12, 12));"},{"lineNumber":12,"author":{"gitId":"sun-yitao"},"content":"    private final Deadline deadline2 \u003d new Deadline(\"example 2\", true,"},{"lineNumber":13,"author":{"gitId":"sun-yitao"},"content":"            LocalDateTime.of(2020, 1, 1, 0, 0));"},{"lineNumber":14,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":15,"author":{"gitId":"sun-yitao"},"content":"    @Test"},{"lineNumber":16,"author":{"gitId":"sun-yitao"},"content":"    public void testTodoToString() {"},{"lineNumber":17,"author":{"gitId":"sun-yitao"},"content":"        assertEquals(\"[D][✗] example 1 (by: Dec 12 2020 1212)\", deadline1.toString());"},{"lineNumber":18,"author":{"gitId":"sun-yitao"},"content":"        assertEquals(\"[D][✓] example 2 (by: Jan 01 2020 0000)\", deadline2.toString());"},{"lineNumber":19,"author":{"gitId":"sun-yitao"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":21,"author":{"gitId":"sun-yitao"},"content":"    @Test"},{"lineNumber":22,"author":{"gitId":"sun-yitao"},"content":"    public void testTodoToSaveString() {"},{"lineNumber":23,"author":{"gitId":"sun-yitao"},"content":"        assertEquals(\"D|0|example 1|2020-12-12T12:12\", deadline1.toSaveString());"},{"lineNumber":24,"author":{"gitId":"sun-yitao"},"content":"        assertEquals(\"D|1|example 2|2020-01-01T00:00\", deadline2.toSaveString());"},{"lineNumber":25,"author":{"gitId":"sun-yitao"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"sun-yitao"},"content":"}"}],"authorContributionMap":{"sun-yitao":26}},{"path":"src/test/java/duke/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sun-yitao"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":3,"author":{"gitId":"sun-yitao"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":5,"author":{"gitId":"sun-yitao"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":7,"author":{"gitId":"sun-yitao"},"content":"public class TodoTest {"},{"lineNumber":8,"author":{"gitId":"sun-yitao"},"content":"    private final Todo todo1 \u003d new Todo(\"example 1\", false);"},{"lineNumber":9,"author":{"gitId":"sun-yitao"},"content":"    private final Todo todo2 \u003d new Todo(\"example 2\", true);"},{"lineNumber":10,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":11,"author":{"gitId":"sun-yitao"},"content":"    @Test"},{"lineNumber":12,"author":{"gitId":"sun-yitao"},"content":"    public void testTodoToString() {"},{"lineNumber":13,"author":{"gitId":"sun-yitao"},"content":"        assertEquals(\"[T][✗] example 1\", todo1.toString());"},{"lineNumber":14,"author":{"gitId":"sun-yitao"},"content":"        assertEquals(\"[T][✓] example 2\", todo2.toString());"},{"lineNumber":15,"author":{"gitId":"sun-yitao"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":17,"author":{"gitId":"sun-yitao"},"content":"    @Test"},{"lineNumber":18,"author":{"gitId":"sun-yitao"},"content":"    public void testTodoToSaveString() {"},{"lineNumber":19,"author":{"gitId":"sun-yitao"},"content":"        assertEquals(\"T|0|example 1\", todo1.toSaveString());"},{"lineNumber":20,"author":{"gitId":"sun-yitao"},"content":"        assertEquals(\"T|1|example 2\", todo2.toSaveString());"},{"lineNumber":21,"author":{"gitId":"sun-yitao"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"sun-yitao"},"content":"}"}],"authorContributionMap":{"sun-yitao":22}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"sun-yitao"},"content":"todo join sports club"},{"lineNumber":2,"author":{"gitId":"sun-yitao"},"content":"event project meeting /at Aug 6th 2-4pm"},{"lineNumber":3,"author":{"gitId":"sun-yitao"},"content":"deadline return book /by Sunday"},{"lineNumber":4,"author":{"gitId":"sun-yitao"},"content":"list"},{"lineNumber":5,"author":{"gitId":"sun-yitao"},"content":"done 2"},{"lineNumber":6,"author":{"gitId":"sun-yitao"},"content":"list"},{"lineNumber":7,"author":{"gitId":"sun-yitao"},"content":"done 1"},{"lineNumber":8,"author":{"gitId":"sun-yitao"},"content":"list"},{"lineNumber":9,"author":{"gitId":"sun-yitao"},"content":"done 3"},{"lineNumber":10,"author":{"gitId":"sun-yitao"},"content":"list"},{"lineNumber":11,"author":{"gitId":"sun-yitao"},"content":"done 4"},{"lineNumber":12,"author":{"gitId":"sun-yitao"},"content":"list"},{"lineNumber":13,"author":{"gitId":"sun-yitao"},"content":"delete 3"},{"lineNumber":14,"author":{"gitId":"sun-yitao"},"content":"list"},{"lineNumber":15,"author":{"gitId":"sun-yitao"},"content":""},{"lineNumber":16,"author":{"gitId":"sun-yitao"},"content":"blah"},{"lineNumber":17,"author":{"gitId":"sun-yitao"},"content":"todo"},{"lineNumber":18,"author":{"gitId":"sun-yitao"},"content":"todo   "},{"lineNumber":19,"author":{"gitId":"sun-yitao"},"content":"deadline return book"},{"lineNumber":20,"author":{"gitId":"sun-yitao"},"content":"event project meeting"},{"lineNumber":21,"author":{"gitId":"sun-yitao"},"content":"bye"}],"authorContributionMap":{"sun-yitao":21}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred"},{"lineNumber":16,"author":{"gitId":"sun-yitao"},"content":"if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/duke/**/*.java"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\""},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT"},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"# compare the output to the expected output"},{"lineNumber":29,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":30,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]"},{"lineNumber":31,"author":{"gitId":"-"},"content":"then"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\""},{"lineNumber":33,"author":{"gitId":"-"},"content":"    exit 0"},{"lineNumber":34,"author":{"gitId":"-"},"content":"else"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\""},{"lineNumber":36,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":37,"author":{"gitId":"-"},"content":"fi"}],"authorContributionMap":{"sun-yitao":1,"-":36}}]
