[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hjl99"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hjl99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hjl99"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hjl99"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hjl99"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hjl99"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hjl99"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hjl99"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hjl99"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hjl99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hjl99"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hjl99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hjl99"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hjl99"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hjl99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hjl99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hjl99": 16
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hjl99"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hjl99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hjl99"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hjl99"
        },
        "content": "import java.util.Iterator;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hjl99"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hjl99"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hjl99"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hjl99"
        },
        "content": "    public static Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hjl99"
        },
        "content": "        /*String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hjl99"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);*/"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hjl99"
        },
        "content": "        String separation_line \u003d \"    ____________________________________________________________\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hjl99"
        },
        "content": "        String indent \u003d \"     \";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hjl99"
        },
        "content": "        String starting_line \u003d separation_line + \"\\n\" + indent;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hjl99"
        },
        "content": "        String ending_line \u003d \"\\n\" + separation_line + \"\\n\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hjl99"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hjl99"
        },
        "content": "        //Task[] task_arr \u003d new Task[100];"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hjl99"
        },
        "content": "        List\u003cTask\u003e task_collections \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hjl99"
        },
        "content": "        //int count \u003d 0;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hjl99"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hjl99"
        },
        "content": "        String greeting \u003d starting_line + \"Hello! This is J.A.R.V.I.S.\\n\" + indent + \"How may I help you?\" + ending_line;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hjl99"
        },
        "content": "        System.out.println(greeting);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hjl99"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hjl99"
        },
        "content": "        boolean exit_bye \u003d false;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hjl99"
        },
        "content": "        while (!exit_bye) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hjl99"
        },
        "content": "            String input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hjl99"
        },
        "content": "            boolean exception_absent \u003d true;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hjl99"
        },
        "content": "            if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                System.out.println(starting_line + \"Bye. Hope to see you again soon!\" +  ending_line);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                exit_bye \u003d true;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hjl99"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                System.out.println(separation_line);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                    int temp \u003d 1;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                    System.out.println(indent + \"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                    Iterator task_iter \u003d task_collections.iterator();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                    /*while (task_collections.get(temp - 1) !\u003d null) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                        System.out.println(indent + temp + \".\" + task_collections.get(temp - 1));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                        temp++;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                    }*/"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                    while (task_iter.hasNext()) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                        System.out.println(indent + temp + \".\" + task_iter.next());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                        temp++;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                    String[] input_split_arr \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                    String type \u003d input_split_arr[0];"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                    if (type.equals(\"done\")) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                        int done_number \u003d -1;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                            done_number \u003d Integer.parseInt(input_split_arr[1]);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                        } catch (Exception ex) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                            exception_absent \u003d false;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                            //DukeException de \u003d new DukeException(\"done\", null, \"empty\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                            DukeException de \u003d new DukeException(DukeException.ExceptionType.empty_illegal);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                            System.out.println(de);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                        if (exception_absent) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                            try {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                                task_collections.get(done_number - 1).markAsDone();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                            } catch (Exception ex) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                                exception_absent \u003d false;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                                //DukeException de \u003d new DukeException(\"done\", null, \"illegal\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                                DukeException de \u003d new DukeException(DukeException.ExceptionType.empty_illegal);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                                System.out.println(de);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                        if (exception_absent) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                            System.out.println(indent + \"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                            System.out.println(indent + \"  [\\u2713] \" + task_collections.get(done_number - 1).toString().split(\"] \", 2)[1]);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                    } else if (type.equals(\"delete\")) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                        int delete_number \u003d -1;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                        String success_result \u003d \"\";"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                            delete_number \u003d Integer.parseInt(input_split_arr[1]);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                        } catch (Exception ex) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                            exception_absent \u003d false;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                            //DukeException de \u003d new DukeException(\"delete\", null, \"empty\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                            DukeException de \u003d new DukeException(DukeException.ExceptionType.empty_illegal);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                            System.out.println(de);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                        if (exception_absent) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                            try {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                                success_result \u003d task_collections.get(delete_number - 1).toString();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                                task_collections.remove(delete_number - 1);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                            } catch (Exception ex) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                                exception_absent \u003d false;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                                //DukeException de \u003d new DukeException(\"delete\", null, \"illegal\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                                DukeException de \u003d new DukeException(DukeException.ExceptionType.empty_illegal);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                                System.out.println(de);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                        if (exception_absent) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                            System.out.println(indent + \"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                            System.out.println(indent + success_result);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                            System.out.println(indent + \"Now you have \" + task_collections.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                    } else if (type.equals(\"deadline\") || type.equals(\"event\") || type.equals(\"todo\")){"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                        if (type.equals(\"todo\")) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                            try {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                                task_collections.add(new Todo(input_split_arr[1]));"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                            } catch (Exception ex) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                                exception_absent \u003d false;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                                //DukeException de \u003d new DukeException(\"todo\", null, \"empty\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                                DukeException de \u003d new DukeException(DukeException.ExceptionType.todo_empty);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                                System.out.println(de);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                        } else if (type.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                            try {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                                input_split_arr \u003d input_split_arr[1].split(\" /\", 2);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                            } catch (Exception ex) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                                exception_absent \u003d false;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                                //DukeException de \u003d new DukeException(\"deadline\", \"content\", \"empty\");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                                DukeException de \u003d new DukeException(DukeException.ExceptionType.deadline_empty_incomplete);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                                System.out.println(de);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                            } if (exception_absent) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                                try {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                                    task_collections.add(new Deadline(input_split_arr[0], input_split_arr[1].split(\" \", 2)[1]));"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                                } catch (Exception ex) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                                    exception_absent \u003d false;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                                    //DukeException de \u003d new DukeException(\"deadline\", \"date\", \"empty\");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                                    DukeException de \u003d new DukeException(DukeException.ExceptionType.deadline_empty_incomplete);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                                    System.out.println(de);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                                }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                        } else if (type.equals(\"event\")) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                            try {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                                input_split_arr \u003d input_split_arr[1].split(\" /\", 2);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                            } catch (Exception ex) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                                exception_absent \u003d false;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                                //DukeException de \u003d new DukeException(\"event\", \"content\", \"empty\");"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                                DukeException de \u003d new DukeException(DukeException.ExceptionType.event_empty_incomplete);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                                System.out.println(de);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                            if (exception_absent) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                                try {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                                    task_collections.add(new Event(input_split_arr[0], input_split_arr[1].split(\" \", 2)[1]));"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                                } catch (Exception ex) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                                    exception_absent \u003d false;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                                    //DukeException de \u003d new DukeException(\"event\", \"date\", \"empty\");"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                                    DukeException de \u003d new DukeException(DukeException.ExceptionType.event_empty_incomplete);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                                    System.out.println(de);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                                }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                        if (exception_absent) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                            System.out.println(indent + \"Got it. I\u0027ve added ths task:\");"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                            System.out.println(indent + \"  \" + task_collections.get(task_collections.size() - 1));"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                            //count++;"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                            System.out.println(indent + \"Now you have \" + task_collections.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                        //DukeException de \u003d new DukeException(\"input\", null, \"no_meaning\");"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                        DukeException de \u003d new DukeException(DukeException.ExceptionType.no_meaning);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                        System.out.println(de);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                System.out.println(separation_line + \"\\n\");"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "hjl99"
        },
        "content": "            }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "hjl99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "hjl99"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "hjl99"
        },
        "content": "//compile when current directory is at IndividualProject/text-ui-test"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "hjl99"
        },
        "content": "//javac -cp ../src/ ../src/main/java/Task.java   etc. (Task, Deadline, Event, Todo, Duke)"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "hjl99"
        },
        "content": "//sh runtest.sh"
      }
    ],
    "authorContributionMap": {
      "hjl99": 164,
      "-": 8
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hjl99"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hjl99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hjl99"
        },
        "content": "public class DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hjl99"
        },
        "content": "    protected ExceptionType et;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hjl99"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hjl99"
        },
        "content": "    public DukeException(ExceptionType et) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hjl99"
        },
        "content": "        this.et \u003d et;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hjl99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hjl99"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hjl99"
        },
        "content": "    public enum ExceptionType {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hjl99"
        },
        "content": "        no_meaning,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hjl99"
        },
        "content": "        empty_illegal,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hjl99"
        },
        "content": "        todo_empty,"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hjl99"
        },
        "content": "        deadline_empty_incomplete,"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hjl99"
        },
        "content": "        event_empty_incomplete"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hjl99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hjl99"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hjl99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hjl99"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hjl99"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hjl99"
        },
        "content": "        String full_guide \u003d \"\\n     Please follow the format:\" +"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                \"\\n     \u0027list\u0027\" + \"\\n     \u0027done TASK_NUMBER\u0027 or \u0027delete TASK_NUMBER\u0027\" + \"\\n     \u0027todo MY_TASK\u0027\" +"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                \"\\n     \u0027deadline MY_TASK /by DATE_OR_TIME\u0027\" + \"\\n     \u0027event MY_TASK /at DATE_OR_TIME\u0027\" +"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                \"\\n     \u0027bye\u0027\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hjl99"
        },
        "content": "        switch(et) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hjl99"
        },
        "content": "            case no_meaning:"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                output \u003d \"     ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\" + full_guide;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hjl99"
        },
        "content": "            case empty_illegal:"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                output \u003d \"     ☹ OOPS!!! Your number input is empty or invalid.\" +"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                            \"\\n     Please follow the format: \u0027done TASK_NUMBER\u0027 or \u0027delete TASK_NUMBER\u0027\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hjl99"
        },
        "content": "            case todo_empty:"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                output \u003d \"     ☹ OOPS!!! The description of a todo cannot be empty.\" +"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                            \"\\n     Please follow the format: \u0027todo MY_TASK\u0027\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hjl99"
        },
        "content": "            case deadline_empty_incomplete:"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                output \u003d \"     ☹ OOPS!!! The description of a deadline cannot be empty or incomplete.\" +"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                            \"\\n     Please follow the format: \u0027deadline MY_TASK /by DATE_OR_TIME\u0027\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hjl99"
        },
        "content": "            case event_empty_incomplete:"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                output \u003d \"     ☹ OOPS!!! The description of an event cannot be empty or incomplete.\" +"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                            \"\\n     Please follow the format: \u0027event MY_TASK /at DATE_OR_TIME\u0027\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hjl99"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                output \u003d \"     ☹ OOPS!!! Unspecified problem detected!\" + full_guide;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hjl99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hjl99"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hjl99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hjl99"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hjl99"
        },
        "content": "    /*protected String type;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hjl99"
        },
        "content": "    protected String exact;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hjl99"
        },
        "content": "    protected String problem;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hjl99"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hjl99"
        },
        "content": "    public DukeException(String type, String exact, String problem) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hjl99"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hjl99"
        },
        "content": "        this.exact \u003d exact;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hjl99"
        },
        "content": "        this.problem \u003d problem;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hjl99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hjl99"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hjl99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hjl99"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hjl99"
        },
        "content": "        String msg \u003d \"     \";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hjl99"
        },
        "content": "        if (type.equals(\"input\") \u0026\u0026 problem.equals(\"no_meaning\")) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hjl99"
        },
        "content": "            msg +\u003d \"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hjl99"
        },
        "content": "        } else if (type.equals(\"done\")) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hjl99"
        },
        "content": "            if (problem.equals(\"empty\")) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                msg +\u003d \"☹ OOPS!!! Please indicate which one to mark.\";"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hjl99"
        },
        "content": "            } else if (problem.equals(\"illegal\")) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                msg +\u003d \"☹ OOPS!!! You did not enter a valid number.\";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "hjl99"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hjl99"
        },
        "content": "        } else if (type.equals(\"delete\")) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "hjl99"
        },
        "content": "            if (problem.equals(\"empty\")) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                msg +\u003d \"☹ OOPS!!! Please indicate which one to delete.\";"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "hjl99"
        },
        "content": "            } else if (problem.equals(\"illegal\")) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                msg +\u003d \"☹ OOPS!!! You did not enter a valid number.\";"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "hjl99"
        },
        "content": "            }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "hjl99"
        },
        "content": "        } else if (type.equals(\"todo\") \u0026\u0026 problem.equals(\"empty\")) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "hjl99"
        },
        "content": "            msg +\u003d \"☹ OOPS!!! The description of a todo cannot be empty.\";"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "hjl99"
        },
        "content": "        } else if (type.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "hjl99"
        },
        "content": "            if (exact.equals(\"content\")) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                msg +\u003d \"☹ OOPS!!! The description of a deadline cannot be empty.\";"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "hjl99"
        },
        "content": "            } else if (exact.equals(\"date\")) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                msg +\u003d \"☹ OOPS!!! The final date of a deadline cannot be empty.\";"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "hjl99"
        },
        "content": "            }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "hjl99"
        },
        "content": "        } else if (type.equals(\"event\")) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "hjl99"
        },
        "content": "            if (exact.equals(\"content\")) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                msg +\u003d \"☹ OOPS!!! The description of an event cannot be empty.\";"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "hjl99"
        },
        "content": "            } else if (exact.equals(\"date\")) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "hjl99"
        },
        "content": "                msg +\u003d \"☹ OOPS!!! The date of an event cannot be empty.\";"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "hjl99"
        },
        "content": "            }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "hjl99"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "hjl99"
        },
        "content": "            msg +\u003d \"Unspecified Exception Detected\";"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "hjl99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "hjl99"
        },
        "content": "        return msg;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "hjl99"
        },
        "content": "    }*/"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "hjl99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hjl99": 98
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hjl99"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hjl99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hjl99"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hjl99"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hjl99"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hjl99"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hjl99"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hjl99"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hjl99"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hjl99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hjl99"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hjl99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hjl99"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hjl99"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hjl99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hjl99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hjl99": 16
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hjl99"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hjl99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hjl99"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hjl99"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hjl99"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hjl99"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hjl99"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hjl99"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hjl99"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hjl99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hjl99"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hjl99"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hjl99"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hjl99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hjl99"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hjl99"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hjl99"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hjl99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hjl99"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hjl99"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hjl99"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hjl99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hjl99"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hjl99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hjl99"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hjl99"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hjl99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hjl99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hjl99": 28
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hjl99"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hjl99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hjl99"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hjl99"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hjl99"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hjl99"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hjl99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hjl99"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hjl99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hjl99"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hjl99"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hjl99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hjl99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hjl99": 13
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hjl99"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hjl99"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hjl99"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hjl99"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hjl99"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hjl99"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hjl99"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "hjl99": 7
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hjl99"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/Task.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hjl99"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hjl99"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hjl99"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hjl99"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hjl99"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hjl99"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/Deadline.java"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hjl99"
        },
        "content": "then"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hjl99"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hjl99"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hjl99"
        },
        "content": "fi"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hjl99"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hjl99"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/Event.java"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hjl99"
        },
        "content": "then"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hjl99"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hjl99"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hjl99"
        },
        "content": "fi"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hjl99"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hjl99"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/Todo.java"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hjl99"
        },
        "content": "then"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hjl99"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hjl99"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hjl99"
        },
        "content": "fi"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hjl99"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/Duke.java"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hjl99"
        },
        "content": "java -classpath ../bin main.java.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hjl99"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "hjl99": 26,
      "-": 32
    }
  }
]
