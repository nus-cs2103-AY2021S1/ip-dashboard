[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    mainClassName \u003d \"duke.Launcher\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    toolVersion \u003d \u00278.29\u0027"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "PrestonTYR": 16,
      "-": 44
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": " * A chatbot that helps the user keep track of todo, deadline and event tasks"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": " * by storing them in a list."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * Constructs a Duke object and initialises the TaskList, Ui and Storage."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * @param filepath location of the save file containing the list of tasks."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    public Duke (String filepath) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        storage \u003d new Storage(filepath);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "            storage.pullList(tasks);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "            ui.printError(e);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * Saves the current list of tasks into storage."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    public void save() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        storage.storelist(tasks);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * Prints the welcome message."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * @return A string representing Duke starting up."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    public String welcome() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        return ui.greet();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * Executes the command entered by the user and generates a response."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * @param input The command entered by the user."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * @return A string representing the relevant response to the command entered."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "            Command nextCommand \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "            return nextCommand.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "            return e.toString();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "PrestonTYR": 62
    }
  },
  {
    "path": "src/main/java/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "import duke.gui.Main;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * Launches Duke."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * @param args Standard arguments."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "PrestonTYR": 18
    }
  },
  {
    "path": "src/main/java/duke/command/ArchiveCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "public class ArchiveCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    private String[] nextCommandArr;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    public ArchiveCommand(String[] nextCommandArr) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        this.nextCommandArr \u003d nextCommandArr;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    public String execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        if (this.nextCommandArr.length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "                String archivePath \u003d nextCommandArr[1];"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "                storage.archive(taskList, archivePath);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "                taskList.newList();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "                return ui.archiveText();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "                return new DukeException(\"Please provide a valid archive path~\").toString();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "            }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "            return new DukeException(\"Please provide an archive path~\").toString();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    public boolean continueRunning() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "PrestonTYR": 37
    }
  },
  {
    "path": "src/main/java/duke/command/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": " * Represents a command to terminate Duke."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * Exit the program and saves the information to a file."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * @param tasks The list of tasks stored by Duke."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * @param ui The user interface to read inputs from the user and print messages."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * @param storage The class that deals with saving tasks into the file and loading tasks"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     *                from the file."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * @return A string representing the goodbye message when Duke is shut down."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        storage.storelist(tasks);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        return ui.farewell();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * Indicates Duke should not keep running after this command is executed."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * @return false."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    public boolean continueRunning() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "PrestonTYR": 34
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": " * Represents an abstract command that is to be executed by Duke."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * Executes the command based on the type of command it is."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * @param taskList is the list of tasks stored by Duke."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * @param ui is the user interface to read inputs from the user and print messages."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * @param storage deals with saving tasks into the file and loading tasks"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     *                from the file."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * @throws DukeException if the command to be executed is incorrect."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    public abstract String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    ;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * Indicates if Duke should still be running after the command is executed."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * @return true if Duke should keep running and false if not."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    public abstract boolean continueRunning();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "PrestonTYR": 32
    }
  },
  {
    "path": "src/main/java/duke/command/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": " * Represents a command to add a Deadline task to the list."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "public class DeadlineCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * A string array that represents the instructions for this command."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    private String[] nextCommandArr;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    public DeadlineCommand(String[] nextCommandArr) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        this.nextCommandArr \u003d nextCommandArr;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * Adds a deadline task to the TaskList."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * @param tasks is the list of tasks stored by Duke."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * @param ui is the user interface to read inputs from the user and print messages."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * @param storage deals with saving tasks into the file and loading tasks"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     *                from the file."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * @return A string indicating the deadline task added."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        if (this.nextCommandArr.length \u003e\u003d 2) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "                String[] deadlineArr \u003d nextCommandArr[1].split(\"/by\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "                Deadline newDeadline \u003d new Deadline(deadlineArr[0], deadlineArr[1].strip());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "                tasks.add(newDeadline);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "                return ui.addTaskText(newDeadline, tasks);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "                return new DukeException(\"Please input a proper due date for your deadline~\").toString();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "            return new DukeException(\"The description of a deadline cannot be empty~\").toString();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * Indicates Duke should keep running after this command is executed."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * @return true."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    public boolean continueRunning() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "PrestonTYR": 53
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": " * Represents a command to delete a task from the list."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * A string array that represents the instruction for this command."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    private String[] nextCommandArr;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    public DeleteCommand(String[] nextCommandArr) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        this.nextCommandArr \u003d nextCommandArr;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * Deletes a Task from the taskList."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * @param tasks is the list of tasks stored by Duke."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * @param ui is the user interface to read inputs from the user and print messages."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * @param storage deals with saving tasks into the file and loading tasks"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     *                from the file."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * @return A string indicating the task deleted."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "            int deleteTaskRef \u003d Integer.parseInt(this.nextCommandArr[1]);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "            Task deleteTask \u003d tasks.get(deleteTaskRef - 1);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "            tasks.remove(deleteTaskRef - 1);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "            return ui.deleteTaskText(deleteTask, tasks);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "            return new DukeException(\"Please provide a valid task number to delete~\").toString();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * Indicates Duke should keep running after this command is executed."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * @return true."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    public boolean continueRunning() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "PrestonTYR": 52
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": " * Represents a command to mark a task as done."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * A string array that represents the instructions in this command."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    private String[] nextCommandArr;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    public DoneCommand(String[] nextCommandArr) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        this.nextCommandArr \u003d nextCommandArr;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * Marks a task in the taskList as done."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * @param tasks is the list of tasks stored by Duke."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * @param ui is the user interface to read inputs from the user and print messages."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * @param storage deals with saving tasks into the file and loading tasks"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     *                from the file."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * @return A string indicating the task marked as done."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "            int doneTaskRef \u003d Integer.parseInt(this.nextCommandArr[1]);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "            Task doneTask \u003d tasks.get(doneTaskRef - 1);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "            doneTask.setDone();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "            return ui.doneText(doneTask);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "            return new DukeException(\"Please input a valid task number~\").toString();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * Indicates Duke should keep running after this command is executed."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * @return true."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    public boolean continueRunning() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "PrestonTYR": 51
    }
  },
  {
    "path": "src/main/java/duke/command/EnumCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "public enum EnumCommand {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    TODO, DEADLINE, EVENT, LIST, DONE, DELETE, BYE, FIND, ARCHIVE;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "PrestonTYR": 4
    }
  },
  {
    "path": "src/main/java/duke/command/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": " * Represents a command to add an Event task to the list."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "public class EventCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * A string array that represents the instructions of this command."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    private String[] nextCommandArr;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    public EventCommand(String[] nextCommandArr) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        this.nextCommandArr \u003d nextCommandArr;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * Adds an Event task to the taskList."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * @param tasks is the list of tasks stored by Duke."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * @param ui is the user interface to read inputs from the user and print messages."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * @param storage deals with saving tasks into the file and loading tasks"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     *                from the file."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * @return A string indicating the event task added."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        if (this.nextCommandArr.length \u003e\u003d 2) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "                String[] eventArr \u003d this.nextCommandArr[1].split(\"/at\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "                Event newEvent \u003d new Event(eventArr[0], eventArr[1].strip());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "                tasks.add(newEvent);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "                return ui.addTaskText(newEvent, tasks);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "                return new DukeException(\"Please input a proper date for your event~\").toString();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "            return new DukeException(\"The description of an event cannot be empty~\").toString();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * Indicates Duke should keep running after this command is executed."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * @return true."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    public boolean continueRunning() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "PrestonTYR": 54
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "/** Represents a command to find and prints tasks that contain a specific keyword."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    private String[] nextCommandArr;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    public FindCommand(String[] nextCommandArr) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        this.nextCommandArr \u003d nextCommandArr;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * Lists all tasks containing the keyword in the taskList."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * @param tasks is the list of tasks stored by Duke."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * @param ui is the user interface to read inputs from the user and print messages."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * @param storage deals with saving tasks into the file and loading tasks"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     *                from the file."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * @return A string listing all the relevant tasks."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        String keyword \u003d nextCommandArr[1];"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        return ui.listRelevantTasks(tasks, keyword);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    public boolean continueRunning() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "PrestonTYR": 35
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": " * Represents a command to print all the tasks in the list."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * Lists all the tasks in the taskList."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * @param tasks is the list of tasks stored by Duke."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * @param ui is the user interface to read inputs from the user and print messages."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * @param storage deals with saving tasks into the file and loading tasks"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     *                from the file."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * @return A string listing all the tasks."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        return ui.listText(tasks);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * Indicates Duke should keep running after this command is executed."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * @return true."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    public boolean continueRunning() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "PrestonTYR": 34
    }
  },
  {
    "path": "src/main/java/duke/command/TodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": " * Represents a command to add a Todo task to the list."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "public class TodoCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * A string array that represents the instructions of this command."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    private String[] nextCommandArr;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    public TodoCommand(String[] nextCommandArr) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        this.nextCommandArr \u003d nextCommandArr;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * Adds a Todo task to the taskList."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * @param tasks is the list of tasks stored by Duke."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * @param ui is the user interface to read inputs from the user and print messages."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * @param storage deals with saving tasks into the file and loading tasks"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     *                from the file."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * @return A string indicating the todo task is added."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "            Todo newTodo \u003d new Todo(nextCommandArr[1]);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "            tasks.add(newTodo);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "            return ui.addTaskText(newTodo, tasks);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "            return new DukeException(\"The description of a todo cannot be empty~\").toString();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * Indicates Duke should keep running after this command is executed."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * @return true."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    public boolean continueRunning() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "PrestonTYR": 49
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": " * Represents the exceptions that Duke will print if invalid commands are input by the user."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * Represents the error message of the exception."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    private String msg;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * Constructs a new DukeException."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * @param msg the error message of the DukeException."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    public DukeException(String msg) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        this.msg \u003d msg;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        return this.msg;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "PrestonTYR": 25
    }
  },
  {
    "path": "src/main/java/duke/gui/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "package duke.gui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        this.getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        this.setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "PrestonTYR": 61
    }
  },
  {
    "path": "src/main/java/duke/gui/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "package duke.gui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    private static final String filepath \u003d \"duke.txt\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    private Duke duke \u003d new Duke(filepath);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "PrestonTYR": 34
    }
  },
  {
    "path": "src/main/java/duke/gui/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "package duke.gui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    private boolean continueRunning \u003d true;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        dialogContainer.getChildren().add(DialogBox.getDukeDialog(duke.welcome(), dukeImage));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    private void handleUserInput() throws DukeException {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "            duke.save();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "            Platform.exit();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "            String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "            dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "                    DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "                    DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "            );"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "            userInput.clear();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "PrestonTYR": 61
    }
  },
  {
    "path": "src/main/java/duke/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "import duke.command.ArchiveCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "import duke.command.ByeCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "import duke.command.DeadlineCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "import duke.command.DoneCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "import duke.command.EnumCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "import duke.command.EventCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "import duke.command.FindCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "import duke.command.TodoCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": " * A class to analyse the user\u0027s input and determine what command it is."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    public Parser() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * Parses the input from the user and turn it into a command."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * @param nextCommand the string of instruction input by the user"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * @return Command that represents what the user wants Duke to do."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * @throws DukeException if the user\u0027s input is not a valid Command type for Duke."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    public static Command parse(String nextCommand) throws DukeException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        String[] nextCommandArr \u003d nextCommand.split(\" \", 2);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        assert nextCommandArr.length \u003c\u003d 2 : \"The length of next command array cannot be more than 2\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        Command next;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        EnumCommand enumCommand;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        String command \u003d nextCommandArr[0];"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        if (command.equals(\"bye\")) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "            enumCommand \u003d EnumCommand.BYE;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        } else if (command.equals(\"list\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "            enumCommand \u003d EnumCommand.LIST;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        } else if (command.equals(\"done\")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "            enumCommand \u003d EnumCommand.DONE;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        } else if (command.equals(\"todo\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "            enumCommand \u003d EnumCommand.TODO;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        } else if (command.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "            enumCommand \u003d EnumCommand.DEADLINE;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        } else if (command.equals(\"event\")) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "            enumCommand \u003d EnumCommand.EVENT;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        } else if (command.equals(\"delete\")) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "            enumCommand \u003d EnumCommand.DELETE;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        } else if (command.equals(\"find\")) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "            enumCommand \u003d EnumCommand.FIND;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        } else if (command.equals(\"archive\")) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "            enumCommand \u003d EnumCommand.ARCHIVE;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "            throw new DukeException(\"Sorry, I don\u0027t know what that means~\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        switch (enumCommand) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        case BYE:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "            next \u003d new ByeCommand();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        case LIST:"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "            next \u003d new ListCommand();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        case DONE:"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "            next \u003d new DoneCommand(nextCommandArr);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        case TODO:"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "            next \u003d new TodoCommand(nextCommandArr);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        case DEADLINE:"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "            next \u003d new DeadlineCommand(nextCommandArr);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        case EVENT:"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "            next \u003d new EventCommand(nextCommandArr);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        case DELETE:"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "            next \u003d new DeleteCommand(nextCommandArr);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        case FIND:"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "            next \u003d new FindCommand(nextCommandArr);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        case ARCHIVE:"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "            next \u003d new ArchiveCommand(nextCommandArr);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "            break;    "
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "            throw new DukeException(\"Sorry, I don\u0027t know what that means~\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        assert next !\u003d null : \"Command cannot be empty\";"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        return next;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "PrestonTYR": 89
    }
  },
  {
    "path": "src/main/java/duke/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": " * A class to save tasks into the file and to load tasks from the file."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * The file location where Duke\u0027s list of tasks if stored."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    private String filepath;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    public Storage(String filepath) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        this.filepath \u003d filepath;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * Loads all the tasks saved in the file."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * @param taskList the TaskList where all the tasks should be loaded into."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    public void pullList(TaskList taskList) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "            File file \u003d new File(filepath);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "            file.createNewFile();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "            Scanner sc \u003d new Scanner(file);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "            while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "                Task temp;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "                String line \u003d sc.nextLine();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "                String[] nextTaskArr \u003d line.split(\"\\\\|\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "                int nextTaskLength \u003d nextTaskArr.length;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "                String nextTaskType \u003d nextTaskArr[0].strip();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "                if (nextTaskType.equals(\"T\")) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "                    if (nextTaskLength !\u003d 3) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "                        throw new DukeException(\"Your data might be corrupted~\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "                    temp \u003d new Todo(nextTaskArr[2].strip());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "                    if (nextTaskArr[1].strip().equals(\"1\")) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "                        temp.setDone();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "                    taskList.add(temp);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "                } else if (nextTaskType.equals(\"D\")) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "                    if (nextTaskLength !\u003d 4) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "                        throw new DukeException(\"Your data might be corrupted~\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "                    temp \u003d new Deadline(nextTaskArr[2].strip(), nextTaskArr[3].strip());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "                    if (nextTaskArr[1].strip().equals(\"1\")) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "                        temp.setDone();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "                    taskList.add(temp);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "                } else if (nextTaskType.equals(\"E\")) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "                    if (nextTaskLength !\u003d 4) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "                        throw new DukeException(\"Your data might be corrupted~\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "                    temp \u003d new Event(nextTaskArr[2].strip(), nextTaskArr[3].strip());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "                    if (nextTaskArr[1].strip().equals(\"1\")) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "                        temp.setDone();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "                    taskList.add(temp);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "                }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "            }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "            System.out.println(e);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * Saves all the tasks into the file."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * @param tasks the TaskList whose tasks should be stored into the file."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    public void storelist(TaskList tasks) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "            String seperator \u003d \" | \";"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "            FileWriter fileWriter \u003d new FileWriter(filepath);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "            for (int i \u003d 0; i \u003c tasks.getSize(); i++) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "                Task temp \u003d tasks.get(i);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "                String doneStatus \u003d \"0\";"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "                if (temp.checkDone()) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "                    doneStatus \u003d \"1\";"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "                }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "                if (temp instanceof Todo) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "                    fileWriter.write(\"T\" + seperator + doneStatus + seperator"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "                            + temp.getTaskName() + \"\\n\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "                } else if (temp instanceof Deadline) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "                    Deadline tempDeadline \u003d (Deadline) temp;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "                    fileWriter.write(\"D\" + seperator + doneStatus + seperator"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "                            + tempDeadline.getTaskName() + seperator + tempDeadline.getDeadlineDate());"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "                } else if (temp instanceof Event) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "                    Event tempEvent \u003d (Event) temp;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "                    fileWriter.write(\"E\" + seperator + doneStatus + seperator"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "                            + tempEvent.getTaskName() + seperator + tempEvent.getEventDate());"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "                }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "            }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "            fileWriter.close();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "            System.out.println(e);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * Archives all the tasks into a specified file."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * @param tasks the TaskList whose tasks should be stored."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * @param archivePath the file name where the tasks should be archived."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    public void archive(TaskList tasks, String archivePath) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "            String seperator \u003d \" | \";"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "            FileWriter fileWriter \u003d new FileWriter(archivePath);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "            for (int i \u003d 0; i \u003c tasks.getSize(); i++) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "                Task temp \u003d tasks.get(i);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "                String doneStatus \u003d \"0\";"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "                if (temp.checkDone()) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "                    doneStatus \u003d \"1\";"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "                }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "                if (temp instanceof Todo) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "                    fileWriter.write(\"T\" + seperator + doneStatus + seperator"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "                            + temp.getTaskName() + \"\\n\");"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "                } else if (temp instanceof Deadline) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "                    Deadline tempDeadline \u003d (Deadline) temp;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "                    fileWriter.write(\"D\" + seperator + doneStatus + seperator"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "                            + tempDeadline.getTaskName() + seperator + tempDeadline.getDeadlineDate());"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "                } else if (temp instanceof Event) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "                    Event tempEvent \u003d (Event) temp;"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "                    fileWriter.write(\"E\" + seperator + doneStatus + seperator"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "                            + tempEvent.getTaskName() + seperator + tempEvent.getEventDate());"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "                }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "            }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "            fileWriter.close();"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "            System.out.println(e);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "PrestonTYR": 150
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": " * Represents a deadline that extends from the Task class, which consists of a description and a due date."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    private String deadlineDate;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    private LocalDate deadlineLocalDate;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    private String formatDeadlineDate;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * Constructs a new Deadline object."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * @param taskName name of the Deadline."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * @param deadlineDate date which the Deadline is due."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * @throws DukeException if the date provided is of the wrong format."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    public Deadline(String taskName, String deadlineDate) throws DukeException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        super(taskName, \"D\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "            this.deadlineDate \u003d deadlineDate;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "            this.deadlineLocalDate \u003d LocalDate.parse(deadlineDate);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "            this.formatDeadlineDate \u003d this.deadlineLocalDate.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "            throw new DukeException(\"Please use YYYY-MM-DD format for dates~\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * Gets the due date of the Deadline."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * @return a string representing a due date in DD-MMM-YYYY format."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    public String getDeadlineDate() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        return this.deadlineDate;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        String check;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        if (done \u003d\u003d true) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "            check \u003d \"✓\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "            check \u003d \"✗\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        return \"[\" + taskType + \"][\" + check + \"] \" + taskName + \" (by:\" + formatDeadlineDate + \")\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "}"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "PrestonTYR": 52
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": " * Represents an event task that extends from the Task class, which consists of a description and a date."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    private String eventDate;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    private LocalDate eventLocalDate;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    private String formatEventDate;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * Constructs a new Event object."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * @param taskName name of the Event."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * @param eventDate date of the Event."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * @throws DukeException if the date provided is of the wrong format."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    public Event(String taskName, String eventDate) throws DukeException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        super(taskName, \"E\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "            this.eventDate \u003d eventDate;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "            this.eventLocalDate \u003d LocalDate.parse(eventDate);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "            this.formatEventDate \u003d this.eventLocalDate.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "            throw new DukeException(\"Please use YYYY-MM-DD format for dates~\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * Gets the date at which the Event is occurring."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * @return a string representing the date in DD-MMM-YYYY format."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    public String getEventDate() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        return this.eventDate;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        String check;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        if (done \u003d\u003d true) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "            check \u003d \"✓\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "            check \u003d \"✗\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        return \"[\" + taskType + \"][\" + check + \"] \" + taskName + \" (at:\" + formatEventDate + \")\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "PrestonTYR": 51
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": " * Represents a task which Todo, Deadline and Event extend from."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    protected String taskName;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    protected boolean done;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    protected String taskType;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * Constructs a new Task object."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * @param taskName name of the Task."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * @param taskType type of Task (Todo, Deadline or Event)."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    public Task(String taskName, String taskType) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        this.taskName \u003d taskName;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        this.done \u003d false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * Sets a task as done."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    public void setDone() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        this.done \u003d true;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * Gets the name of the task."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * @return a string representing the name of the task."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    public String getTaskName() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        return this.taskName;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * Checks if a task is done."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * @return true if the task is done and false if it isn\u0027t."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    public boolean checkDone() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        return this.done;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * Checks if a task contains a keyword."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * @param keyword The keyword it is checking for."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * @return true if the task contains the keyword and false if it doesn\u0027t."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    public boolean containsKeyword(String keyword) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        if (this.taskName.contains(keyword)) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        String check;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        if (done \u003d\u003d true) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "            check \u003d \"✓\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "            check \u003d \"✗\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        return \"[\" + taskType + \"][\" + check + \"] \" + taskName;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "PrestonTYR": 69
    }
  },
  {
    "path": "src/main/java/duke/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": " * Represents the list in which all the tasks are stored while Duke is running."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    private List\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    public TaskList(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * Adds a task to the list."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * @param task The task that should be added to the list."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    public void add(Task task) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * Gets a specific task from the list."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * @param index the number representing the task in the list."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * @return a Task from the list."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    public Task get(int index) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        return tasks.get(index);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * Gets the number of tasks in the list."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * @return an integer that represents the number of tasks in the list."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * Removes a task from the list."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * @param index the number representing the task that should be removed."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    public void remove(int index) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        tasks.remove(index);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * Iterates through the list and add them all to a string."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * @return A string that contains every task currently in the list."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    public String iterateList() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        StringBuilder builder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "            Task current \u003d tasks.get(i);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "            builder.append(i + 1).append(\". \").append(current).append(\"\\n\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        return builder.toString();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * Iterates through the list and add all relevant tasks to a string."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * @param keyword the keyword that determines if a task is relevant or not."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * @return A string containing all relevant tasks from the list."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    public String iterateFind(String keyword) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        assert keyword.length() \u003e 0 : \"Keyword should have at least 1 character\";"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        StringBuilder builder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "            Task current \u003d tasks.get(i);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "            if (current.containsKeyword(keyword)) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "                builder.append(i + 1).append(\". \").append(current).append(\"\\n\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "            }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        return builder.toString();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * Clears the entire list of tasks."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    public void newList() {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "}"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "PrestonTYR": 87
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": " * Represents a todo task that extends from the Task class, which consists of a description."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    public Todo(String taskName) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        super(taskName, \"T\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "PrestonTYR": 11
    }
  },
  {
    "path": "src/main/java/duke/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": " * A class that deals with all interactions with the user."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    private static final String MESSAGE_GREETING \u003d \"Hello~ I\u0027m Duke!\\n\" + \"What can I do for you?\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    private static final String MESSAGE_FAREWELL \u003d \"Goodbye~\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    private static final String MESSAGE_DONE \u003d \"Nice! I\u0027ve set this task as done~\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    private static final String MESSAGE_ADD_TASK \u003d \"Got it~ I\u0027ve added this task:\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    private static final String MESSAGE_NUMBER_OF_TASKS \u003d \"You now have %d tasks in the list~\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    private static final String MESSAGE_REMOVE_TASK \u003d \"Alright~ I\u0027ve removed this task:\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    private static final String MESSAGE_LIST \u003d \"Here are your tasks~\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    private static final String MESSAGE_FIND \u003d \"Here are the matching tasks in your list~\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    private static final String MESSAGE_ARCHIVE \u003d \"Understood~ Your tasks have been archived~\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    private Scanner sc;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * Prints the welcome message when starting Duke."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * @return A string containing the greeting message."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    public String greet() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        return MESSAGE_GREETING;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * Prints the goodbye message when stopping Duke."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * @return A string containing the goodbye message."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    public String farewell() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        return (MESSAGE_FAREWELL);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * Prints the message when marking a task as done."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * @param doneTask the Task marked as done."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * @return A string indicating that the task is marked as done."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    public String doneText(Task doneTask) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        return (MESSAGE_DONE + \"\\n\" + doneTask);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * Prints the message when adding a task to the list."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * @param addTask the Task added to the list."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * @param result the TaskList the task is added to."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * @return A string indicating that the task is added."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    public String addTaskText(Task addTask, TaskList result) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        return (MESSAGE_ADD_TASK + \"\\n\" + addTask"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "                + \"\\n\" + String.format(MESSAGE_NUMBER_OF_TASKS, result.getSize()));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * Prints the message when deleting a task from the list."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * @param deleteTask the Task deleted from the list."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * @param result the TaskList the task is deleted from."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * @return A string indicating that the selected task is deleted."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    public String deleteTaskText(Task deleteTask, TaskList result) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        return (MESSAGE_REMOVE_TASK + \"\\n\" + deleteTask"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "                + \"\\n\" + String.format(MESSAGE_NUMBER_OF_TASKS, result.getSize()));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * Prints all the tasks in the list."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * @param tasks the TaskList from which all the tasks should be printed from."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * @return A string containing all tasks in the list."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    public String listText(TaskList tasks) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        return MESSAGE_LIST + \"\\n\" + tasks.iterateList();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * Prints all tasks containing the keyword from the list."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * @param tasks the TaskList from which all relevant tasks are taken from."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * @param keyword the keyword used to determine if a task is relevant."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * @return A string containing all relevant tasks from the list."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    public String listRelevantTasks(TaskList tasks, String keyword) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        return MESSAGE_FIND + \"\\n\" + tasks.iterateFind(keyword);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * A function to print an error message for the user."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * @param e the error message."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * @return A string representing the error message."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    public String printError(Exception e) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        return e.toString();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * A function to scan the user\u0027s next input and convert it to lower case."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     * @return a string representing the user\u0027s input."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        return sc.nextLine().toLowerCase();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    "
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    public String archiveText() {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        return MESSAGE_ARCHIVE;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "PrestonTYR": 111
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "\u003cfx:root"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        alignment\u003d\"TOP_RIGHT\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        maxHeight\u003d\"1.7976931348623157E308\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        maxWidth\u003d\"1.7976931348623157E308\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        prefWidth\u003d\"400.0\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        type\u003d\"javafx.scene.layout.HBox\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        xmlns\u003d\"http://javafx.com/javafx/8.0.171\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "  \u003cchildren\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    \u003cLabel"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "            fx:id\u003d\"dialog\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "            text\u003d\"Label\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "            wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    \u003cImageView"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "            fx:id\u003d\"displayPicture\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "            fitHeight\u003d\"99.0\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "            fitWidth\u003d\"99.0\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "            pickOnBounds\u003d\"true\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "            preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "  \u003c/children\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "  \u003cpadding\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    \u003cInsets"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "            bottom\u003d\"15.0\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "            left\u003d\"5.0\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "            right\u003d\"5.0\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "            top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "  \u003c/padding\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "\u003c/fx:root\u003e "
      }
    ],
    "authorContributionMap": {
      "PrestonTYR": 35
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "\u003cAnchorPane"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        maxHeight\u003d\"-Infinity\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        maxWidth\u003d\"-Infinity\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        minHeight\u003d\"-Infinity\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        minWidth\u003d\"-Infinity\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        prefHeight\u003d\"600.0\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        prefWidth\u003d\"400.0\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        xmlns\u003d\"http://javafx.com/javafx/8.0.171\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        xmlns:fx\u003d\"http://javafx.com/fxml/1\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        fx:controller\u003d\"duke.gui.MainWindow\"\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "  \u003cchildren\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    \u003cTextField"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "            fx:id\u003d\"userInput\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "            layoutY\u003d\"558.0\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "            onAction\u003d\"#handleUserInput\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "            prefHeight\u003d\"41.0\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "            prefWidth\u003d\"324.0\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "            AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    \u003cButton"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "            fx:id\u003d\"sendButton\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "            layoutX\u003d\"324.0\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "            layoutY\u003d\"558.0\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "            mnemonicParsing\u003d\"false\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "            onAction\u003d\"#handleUserInput\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "            prefHeight\u003d\"41.0\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "            prefWidth\u003d\"76.0\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "            text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    \u003cScrollPane"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "            fx:id\u003d\"scrollPane\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "            hbarPolicy\u003d\"NEVER\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "            hvalue\u003d\"1.0\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "            prefHeight\u003d\"557.0\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "            prefWidth\u003d\"400.0\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "            vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "      \u003ccontent\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        \u003cVBox"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "                fx:id\u003d\"dialogContainer\""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "                prefHeight\u003d\"552.0\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "                prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "      \u003c/content\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "  \u003c/children\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "\u003c/AnchorPane\u003e "
      }
    ],
    "authorContributionMap": {
      "PrestonTYR": 51
    }
  },
  {
    "path": "src/test/java/duke/command/AddDeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "public class AddDeadlineTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    public void testExecute_exceptionEmptyThrown() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        String[] command \u003d {\"deadline\"};"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        DeadlineCommand test \u003d new DeadlineCommand(command);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        TaskList list \u003d new TaskList();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        Storage storage \u003d new Storage(\"test.txt\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        test.execute(list, ui, storage);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    public void testExecute_exceptionDateFormatThrown() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        String[] command \u003d {\"deadline\", \"test /by tuesday\"};"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        DeadlineCommand test \u003d new DeadlineCommand(command);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        TaskList list \u003d new TaskList();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        Storage storage \u003d new Storage(\"test.txt\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        test.execute(list, ui, storage);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "PrestonTYR": 28
    }
  },
  {
    "path": "src/test/java/duke/command/AddEventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "public class AddEventTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    public void testExecute_exceptionEmptyThrown() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        String[] command \u003d {\"event\"};"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        EventCommand test \u003d new EventCommand(command);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        TaskList list \u003d new TaskList();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        Storage storage \u003d new Storage(\"test.txt\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        test.execute(list, ui, storage);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    public void testExecute_exceptionDateFormatThrown() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        String[] command \u003d {\"event\", \"test /by tuesday\"};"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        EventCommand test \u003d new EventCommand(command);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        TaskList list \u003d new TaskList();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        Storage storage \u003d new Storage(\"test.txt\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        test.execute(list, ui, storage);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "PrestonTYR": 29
    }
  },
  {
    "path": "src/test/java/duke/command/AddTodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "public class AddTodoTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    public void testExecute_exceptionEmptyThrown() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        String[] command \u003d {\"todo\"};"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        TodoCommand test \u003d new TodoCommand(command);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        TaskList list \u003d new TaskList();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        Storage storage \u003d new Storage(\"test.txt\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "        test.execute(list, ui, storage);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "PrestonTYR": 19
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "todo finish level-6"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "deadline ip /by thursday 12pm"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "event dinner /at 7pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "todo"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "event"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "deadline homework"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "event dinner"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "list"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "list"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "delete 5"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "Blah"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "PrestonTYR": 17
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "PrestonTYR"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "PrestonTYR": 1,
      "-": 37
    }
  }
]
