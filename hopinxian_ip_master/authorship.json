[
  {
    "path": "data/tasks.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "incomplete todo bvd"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "incomplete deadline wgewg /by 2133-02-24"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "complete todo wesgvqdv"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "incomplete todo bvd"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "complete todo wesgvqdv"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "incomplete todo bvd"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "incomplete todo agwg"
      }
    ],
    "authorContributionMap": {
      "hopinxian": 7
    }
  },
  {
    "path": "src/main/java/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    private Task task;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public AddCommand(Task task) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException{"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        taskList.addTask(task);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        storage.storeTaskList(taskList);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        ui.showTaskAdded(task);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public Boolean isExit() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public Task getTask() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hopinxian": 23
    }
  },
  {
    "path": "src/main/java/Butler.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "public class Butler {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    private Butler(String filePath) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    private void run() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                ui.showLine(); // show the divider line (\"_______\")"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            } catch (DukeException e) { // reaches here due to invalid command"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        new Butler(\"data/tasks.txt\").run();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hopinxian": 37,
      "-": 2
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public abstract void execute(TaskList taskList, Ui Ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public abstract Boolean isExit();"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hopinxian": 5
    }
  },
  {
    "path": "src/main/java/CompleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "public class CompleteCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    private ArrayList\u003cInteger\u003e indexArray;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public CompleteCommand(ArrayList\u003cInteger\u003e indexArray) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        this.indexArray \u003d indexArray;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException{"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        for (int i : indexArray) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            taskList.completeTask(i);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            storage.storeTaskList(taskList);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            ui.showTaskCompleted(i);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public Boolean isExit() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hopinxian": 23
    }
  },
  {
    "path": "src/main/java/DeadlineTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "public class DeadlineTask extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    private LocalDate deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public DeadlineTask(String summary, LocalDate deadline) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        super(summary);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        this.taskType \u003d \"deadline\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public String getDeadlineString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        return deadline.getDayOfMonth() + \" \""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                + deadline.getMonth().toString() + \" \""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                + deadline.getYear();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public LocalDate getDeadline() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        return this.deadline;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + getDeadlineString() + \")\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hopinxian": 26
    }
  },
  {
    "path": "src/main/java/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    private int taskIndex;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public DeleteCommand(int taskIndex) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        this.taskIndex \u003d taskIndex;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        taskList.deleteTask(taskIndex);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        storage.storeTaskList(taskList);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        ui.showTaskDeleted(taskIndex);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public Boolean isExit() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hopinxian": 19
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public DukeException(String errorMessage) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hopinxian": 7
    }
  },
  {
    "path": "src/main/java/EventTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "public class EventTask extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    private LocalDate startDate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    private LocalDate endDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public EventTask(String summary, LocalDate startDate, LocalDate endDate) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        super(summary);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        this.startDate \u003d startDate;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        this.endDate \u003d endDate;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        this.taskType \u003d \"event\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public String getTime() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        return startDate.getDayOfMonth() + \" \""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                + startDate.getMonth().toString() + \" \""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                + startDate.getYear() + \" to \""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                + endDate.getDayOfMonth() + \" \""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                + endDate.getMonth().toString() + \" \""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                + endDate.getYear();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public LocalDate getStartDate() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        return startDate;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public LocalDate getEndDate() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        return endDate;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        return \"[E]\" + super.toString() + \" (from: \" + getTime() + \")\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hopinxian": 35
    }
  },
  {
    "path": "src/main/java/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public ExitCommand() {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException{"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        ui.showExit();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        storage.storeTaskList(taskList);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public Boolean isExit() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hopinxian": 16
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "// Class  deals with making sense of the user command"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public static Command parse(String input) throws DukeException {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        String commandType \u003d input.split(\" \")[0];"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            return new PrintCommand();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        switch (commandType) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                String[] indexStringArray \u003d Arrays.copyOfRange(input.split(\" \"), 1, input.split(\" \").length);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                ArrayList\u003cInteger\u003e indexList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                // Convert string index to integer"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                for (String index : indexStringArray) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                        Integer i \u003d Integer.parseInt(index);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                        if (i \u003c 1) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                            throw new DukeException(\"An invalid index was given.\\n\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                                    + \"Index must be positive.\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                            indexList.add(i);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                    } catch (Exception e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                        throw new DukeException(\"An invalid index was given.\\n\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                                + index + \" is not an integer.\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                if (indexList.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                    throw new DukeException(\"No index was given . Please provide a valid index.\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                return new CompleteCommand(indexList);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                String stringIndex \u003d input.split(\" \")[1];"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                    int index \u003d Integer.parseInt(stringIndex);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                    return new DeleteCommand(index);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                } catch (Exception e) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                    throw new DukeException(\"An invalid index was given.\\n\""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                            + stringIndex + \" is not an integer.\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                    String taskDetails \u003d input.split(\" \", 2)[1];"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                    Task task \u003d new ToDoTask(taskDetails);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                    return new AddCommand(task);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                    throw new DukeException(\"Please add a description for the ToDo task.\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                    String taskDetails \u003d input.split(\" \", 2)[1];"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                    String summary \u003d taskDetails.split(\" /at \", 2)[0];"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                    String date \u003d taskDetails.split(\" /at \", 2)[1];"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                    LocalDate startDate \u003d LocalDate.parse(date.split(\" \")[0]);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                    LocalDate endDate \u003d LocalDate.parse(date.split(\" \")[1]);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                    Task task \u003d new EventTask(summary, startDate, endDate);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                    return new AddCommand(task);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                    throw new DukeException(\"Please provide a summary and date of event.\\n\""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                            + \"Separate the dates from summary using \\\" /at \\\" and \""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                            + \"separate the two dates using a space.\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                    throw new DukeException(\"Please input a valid Date format.\\n\""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                            + \"Valid Date format is YYYY-MM-DD.\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                    String taskDetails \u003d input.split(\" \", 2)[1];"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                    String summary \u003d taskDetails.split(\" /by \", 2)[0];"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                    String deadline \u003d taskDetails.split(\" /by \", 2)[1];"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                    LocalDate formattedDeadline \u003d LocalDate.parse(deadline);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                    Task task \u003d new DeadlineTask(summary, formattedDeadline);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                    return new AddCommand(task);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                    throw new DukeException(\"Please provide a summary and deadline.\\n\""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                            + \"Separate the deadline from summary using \\\" /by \\\".\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                    throw new DukeException(\"Please input a valid Date format.\\n\""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                            + \"Valid Date format is YYYY-MM-DD.\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        throw new DukeException(\"This is not a valid command type.\\n\" +"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                \"Valid commands start with list, done, delete, todo, deadline, event or bye.\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hopinxian": 112
    }
  },
  {
    "path": "src/main/java/PrintCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "public class PrintCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public PrintCommand() {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        ui.printTaskList(taskList);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public Boolean isExit() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hopinxian": 15
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "// Class deals with loading tasks from the file and saving tasks in the file"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public void storeTaskList(TaskList taskList) throws DukeException{"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            String fileText \u003d \"\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            int size \u003d taskList.getSize();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            for (int i \u003d 0; i \u003c size; i++) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                Task task \u003d taskList.getTask(i);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                String taskDetails;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                if (task.isComplete) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                    taskDetails \u003d \"complete\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                    taskDetails \u003d \"incomplete\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                String taskType \u003d task.getTaskType();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                switch (taskType) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                    case \"todo\":"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                        taskDetails +\u003d \" todo \" + task.getSummary();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                    case \"deadline\":"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                        DeadlineTask deadlineTask \u003d (DeadlineTask) task;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                        taskDetails +\u003d \" deadline \" + deadlineTask.getSummary()"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                                + \" /by \" + deadlineTask.getDeadline();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                    case \"event\":"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                        EventTask eventTask \u003d (EventTask) task;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                        taskDetails +\u003d \" event \" + eventTask.getSummary()"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                                + \" /at \" + eventTask.getStartDate() + \" \""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                                + eventTask.getEndDate();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                    default:"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                        throw new DukeException(\"Something is wrong. This place should be unreachable.\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                fileText +\u003d taskDetails + System.lineSeparator();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            fw.write(fileText);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            throw new DukeException(\"There is an error with writing to the path. File is not detected.\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        } catch (ClassCastException e) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            throw new DukeException(\"Something is wrong. ClassCastException should be unreachable.\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            File f \u003d new File(filePath);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            Scanner s \u003d new Scanner(f);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            while (s.hasNext()) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                // read in file input into tasks"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                String input \u003d s.nextLine();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                // first detect completion status"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                String completionStatus \u003d input.split(\" \", 2)[0];"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                String details \u003d input.split(\" \", 2)[1];"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                AddCommand c \u003d (AddCommand) Parser.parse(details);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                Task task \u003d c.getTask();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                if (completionStatus.equals(\"complete\")) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                    task.markComplete();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                taskList.add(task);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            return taskList;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                Files.createDirectory(Paths.get(\"./data/\"));"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                Files.createFile(Paths.get(filePath));"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            } catch (IOException f) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                System.out.println(\"Code should never reach here.\" + f.getMessage());"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            throw new DukeException(\"There is no file to access.\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            throw new DukeException(\"There is an error inside the file.\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        } catch (ClassCastException e) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            throw new DukeException(\"Instead of tasks, a command was written into the file.\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            throw new DukeException(\"There is an error within the task in the file.\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hopinxian": 98
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    protected String summary;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    protected boolean isComplete;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    protected String taskType;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public Task(String summary) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        this.summary \u003d summary;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        this.isComplete \u003d false;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        this.taskType \u003d null;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public String getStatus() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        return (isComplete ? \"[Y]\" : \"[N]\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public String getSummary() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        return summary;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public boolean isComplete() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        return isComplete;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public String getTaskType() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        return taskType;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public void markComplete() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        this.isComplete \u003d true;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        return this.getStatus() + \" \" + this.getSummary();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hopinxian": 36
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "// contains the task list"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    private ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        this.taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public void completeTask(int i) throws DukeException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            taskList.get(i - 1).markComplete();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            throw new DukeException(\"Please give a valid index. \\\"\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                    + i + \"\\\" is not a valid index.\\n\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        taskList.add(task);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public void deleteTask(int index) throws DukeException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            taskList.remove(index - 1);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            throw new DukeException(\"Please give a valid index. \\\"\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                    + index + \"\\\" is not a valid index.\\n\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        return taskList.size();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public Task getTask(int i) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        return taskList.get(i);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hopinxian": 44
    }
  },
  {
    "path": "src/main/java/ToDoTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "public class ToDoTask extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public ToDoTask(String summary) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        super(summary);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        this.taskType \u003d \"todo\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hopinxian": 12
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "// Class deals with interactions with the user"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    Scanner sc;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        String greetings \u003d \"Welcome! I am your personal manager, Butler.\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                + \"How may I help you today?\\n\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        System.out.println(greetings);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        return sc.nextLine();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        System.out.println(\"------------------------------\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public void showError(String errorMessage) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        System.out.println(\"ERROR: \" + errorMessage);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public void showExit() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        String farewells \u003d \"It is my honor to have served you.\\n\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                + \"Please come back again.\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        System.out.println(farewells);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        String loadingErrorMessage \u003d \"taskList.txt file was not detected.\\n\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                + \"A new task list will be created.\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        System.out.println(loadingErrorMessage);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public void showTaskCompleted(int i) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        String msg \u003d \"Task \" + i + \" has been marked as complete.\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        System.out.println(msg);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public void showTaskAdded(Task task) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        String msg \u003d \"The following task has been added to task list.\\n\" + task;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        System.out.println(msg);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public void printTaskList(TaskList taskList) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        String msg \u003d \"Here are your list of tasks.\\n\""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                + \"You have \" + taskList.getSize()"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                + (taskList.getSize() \u003e 1 ? \" tasks\" : \" task\")"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                + \" in total.\\n\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.getSize(); i++) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            msg +\u003d \"\\n\" + (i+1) + \": \" + taskList.getTask(i);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        System.out.println(msg);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public void showTaskDeleted(int taskIndex) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        String msg \u003d \"Task \" + taskIndex + \" has been deleted.\\n\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        System.out.println(msg);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hopinxian": 66
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "list"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "todo sth"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "deadline do this /by this date"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "event conduct event /at this location"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "done 0 3"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "list"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "done 1 2 3 4"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "list"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "ekwjwl"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "deadline ewff /at ewsf"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "comment"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "event cwfwe /by"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "event ffwef /at"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "delete 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "delete 6"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "list"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "hopinxian": 19
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\Task.java ..\\src\\main\\java\\ToDoTask.java ..\\src\\main\\java\\EventTask.java ..\\src\\main\\java\\DeadlineTask.java ..\\src\\main\\java\\Butler.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "java -classpath ..\\bin Butler \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "hopinxian": 2,
      "-": 19
    }
  }
]
