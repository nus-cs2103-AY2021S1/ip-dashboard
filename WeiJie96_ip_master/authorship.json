[
  {
    "path": "data/tasks.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "D | 1 | deadline | 2020-09-10"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "E | 1 | event | 2019-10-22"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "E | 1 | event | 2019-10-22"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "T | 0 | todo sth"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "T | 0 | todo sth"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "E | 0 | haha | 2999-10-22"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "T | 0 | aa"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "D | 0 | lala | 2020-10-10"
      }
    ],
    "authorContributionMap": {
      "WeiJie96": 8
    }
  },
  {
    "path": "src/main/java/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": " * Controls logic of adding tasks."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    /** Name of command e.g. Todo. */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    private CommandName commandName;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    /** Description of task. */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    /** Date in string format. */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    private String date;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    public AddCommand(CommandName commandName, String description) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        this.commandName \u003d commandName;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    public AddCommand(CommandName commandName, String description, String date) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        this.commandName \u003d commandName;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * Executes adding tasks."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @param tasks Stores task list."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @param ui Handles user interaction."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @param storage Handles input output to hard disk."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @throws DukeException When date time in wrong format, or description not given,"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        String output \u003d tasks.addTask(commandName, description, date);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        ArrayList\u003cTask\u003e taskList \u003d tasks.getTasks();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        ui.printOutput(output, true);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        storage.save(taskList);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * Checks if should exit program."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @return Should not exit program."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeiJie96": 51
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": " * Controls main logic of all user commands."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * Executes command."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @param tasks Stores task list."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @param ui Handles user interaction."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @param storage Handles input output to hard disk."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @throws DukeException When date time in wrong format, or description not given, or I/O error."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    abstract public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * Checks if should exit program."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @return Whether or not to exit program."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    abstract public boolean isExit();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeiJie96": 21
    }
  },
  {
    "path": "src/main/java/CommandName.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": " * Enumeration of all valid commands by user."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "public enum CommandName {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    LIST, DONE, TODO, DEADLINE, EVENT, DELETE, BYE, FIND"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeiJie96": 6
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "import java.time.format.FormatStyle;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": " * Class used for deadline tasks."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     *  String used to store deadline."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    protected LocalDate by;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * Constructor for deadline class."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @param description Task description."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @param by Deadline."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    public Deadline(String description, LocalDate by) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * Constructor for deadline class."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @param description Task description."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @param by Deadline."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @param isDone Describes if task is completed."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    public Deadline(String description, LocalDate by, boolean isDone) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * Returns simple string format for file."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @return Simple string description."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    public String toStringSimple() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        return \"D | \" + super.toStringSimple() + \" | \" + by;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        String formattedDate \u003d this.by.format(DateTimeFormatter.ofLocalizedDate(FormatStyle.MEDIUM));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + formattedDate + \")\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeiJie96": 54
    }
  },
  {
    "path": "src/main/java/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": " * Controls logic of deleting tasks."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    /** Index to delete task. */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    public DeleteCommand(int index) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * Executes deleting of tasks."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @param tasks Stores task list."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @param ui Handles user interaction."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @param storage Handles input output to hard disk."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @throws DukeException When I/O error occurs."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        String output \u003d tasks.deleteTask(index);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        ArrayList\u003cTask\u003e taskList \u003d tasks.getTasks();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        ui.printOutput(output, true);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        storage.save(taskList);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * Checks if should exit program."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @return Should not exit program."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeiJie96": 40
    }
  },
  {
    "path": "src/main/java/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": " * Controls logic of completing tasks."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    /** Index of task to be done. */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    public DoneCommand(int index) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * Executes completing tasks."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @param tasks Stores task list."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @param ui Handles user interaction."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @param storage Handles input output to hard disk."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @throws DukeException When I/O error occurs."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        String output \u003d tasks.doTask(index);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        ArrayList\u003cTask\u003e taskList \u003d tasks.getTasks();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        ui.printOutput(output, true);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        storage.save(taskList);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * Checks if should exit program."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @return Should not exit program."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeiJie96": 41
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": " * Main class that drives the application."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    /** Deals with input output of files. */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    /** Task list. */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    /** Deals with user input output. */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * Constructor for the main driver."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @param filePath File path to load history, and to save history."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            ui.showError(e);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "                ui.showError(e);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * Creates new Duke object to start operations."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        new Duke(\"data/tasks.txt\").run();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "WeiJie96": 53,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": " * Class for duke-specific exceptions."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * Constructor of duke-specific exception."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @param s string input of exception."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    DukeException(String s){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeiJie96": 13
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "import java.time.format.FormatStyle;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": " * Class representing events."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * Variable to store event time."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    protected LocalDate at;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * Constructor used to create Event."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @param description Event description."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @param at Event time."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    public Event(String description, LocalDate at) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * Constructor used to create Event."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @param description Event description."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @param at Event time."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @param isDone Describes if task is completed."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    public Event(String description, LocalDate at, boolean isDone) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * Returns simple string format for file."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @return Simple string description."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    public String toStringSimple() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        return \"E | \" + super.toStringSimple() + \" | \" + at;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        String formattedDate \u003d this.at.format(DateTimeFormatter.ofLocalizedDate(FormatStyle.MEDIUM));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + formattedDate + \")\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeiJie96": 54
    }
  },
  {
    "path": "src/main/java/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": " * Controls logic of exiting program."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * Executes exit."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @param tasks Stores task list."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @param ui Handles user interaction."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @param storage Handles input output to hard disk."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        ui.showExit();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * Checks if should exit program."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @return Should exit program."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeiJie96": 28
    }
  },
  {
    "path": "src/main/java/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    private String search;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    public FindCommand(String search) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        this.search \u003d search;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        String output \u003d tasks.findTasks(search);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        ui.printOutput(output, false);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeiJie96": 19
    }
  },
  {
    "path": "src/main/java/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": " * Controls logic of listing tasks."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * Executes list tasks."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @param tasks Stores task list."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @param ui Handles user interaction."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @param storage Handles input output to hard disk."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @throws DukeException When date time in wrong format, or description not given,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        String output \u003d tasks.listTasks();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        ui.printOutput(output, false);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * Checks if should exit program."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @return Should not exit program."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeiJie96": 29
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": " * Class used for parsing input from user command."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * Parses input, and calls corresponding functions."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @param input String input from user."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @return Corresponding Command with respect to input."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @throws DukeException  When date is in wrong format, or task lacks description."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    public static Command parse(String input) throws DukeException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        String second;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        int index;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        String[] parts \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        String action \u003d parts[0].toUpperCase();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        CommandName commandName \u003d tryEnum(action);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        switch(commandName) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        case LIST:"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        case DONE:"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            second \u003d parts[1];"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            index \u003d Integer.parseInt(second);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            return new DoneCommand(index);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        case TODO:"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            // Fallthrough"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        case DEADLINE:"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            // Fallthrough"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        case EVENT:"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            return handleTask(parts, commandName);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        case DELETE:"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            second \u003d parts[1];"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            index \u003d Integer.parseInt(second);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            return new DeleteCommand(index);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        case FIND:"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            second \u003d parts[1];"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            return new FindCommand(second);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        case BYE:"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            // Fallthrough"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * Takes in task info and command and calls respective handler (e.g. handle event)."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @param inputs Task info, after removing first word from user input."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @param commandName CommandName (e.g. Event), first word from user input."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @throws DukeException If deadline date not input for deadline, or event date not input for event."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    private static Command handleTask(String[] inputs, CommandName commandName) throws DukeException {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            String taskInfo \u003d inputs[1];"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            String[] taskInfoParts;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            String description;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            String date;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            //TODO: in switch/if-else statement, okay to define early if we use the same variable name?"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            switch (commandName) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            case TODO:"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "                return new AddCommand(commandName, taskInfo);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            case DEADLINE:"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "                taskInfoParts \u003d taskInfo.split(\" /by \", 2);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "                description \u003d taskInfoParts[0];"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "                date \u003d taskInfoParts[1];"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "                return new AddCommand(commandName, description, date);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            case EVENT:"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "                taskInfoParts \u003d taskInfo.split(\" /at \", 2);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "                description \u003d taskInfoParts[0];"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "                date \u003d taskInfoParts[1];"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "                return new AddCommand(commandName, description, date);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "                return new AddCommand(commandName, \"\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            String error \u003d \"     OOPS!!! The description of a \" + commandName.toString().toLowerCase()"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "                + \" cannot be empty.\";"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            throw new DukeException(error);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    private static CommandName tryEnum(String action) throws DukeException {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            return CommandName.valueOf(action);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        } catch (IllegalArgumentException e) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            throw new DukeException(\"     OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeiJie96": 93
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": " * Deals with loading and saving tasks from file."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    /** Variable to store file path for I/O. */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * Constructor used to create file storage."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @param filePath Filepath of input and output file."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * Loads existing file."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @return A list of list of strings, outer list for many lines in file;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * inner list is one line in file, split by delimiter"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @throws DukeException When IO error occurs."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    public ArrayList\u003cArrayList\u003cString\u003e\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        File f \u003d new File(this.filePath);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        f.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            if (!f.exists()) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "                f.createNewFile();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "                return new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "                return readTasksFromFile();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            throw new DukeException(\"     A file error has occurred!\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    private ArrayList\u003cArrayList\u003cString\u003e\u003e readTasksFromFile() throws DukeException {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        // File structure"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        // D | isDoneInt | description | by"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        // E | isDoneInt | description | at"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        // T | isDoneInt | description"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        // TODO: Can store Deadline, Event, Todo string instead, and can use same Enums"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        File f \u003d new File(this.filePath);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        ArrayList\u003cArrayList\u003cString\u003e\u003e formattedOutput \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            Scanner s \u003d new Scanner(f);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            while (s.hasNext()) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "                String line \u003d s.nextLine();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "                String[] lineParts \u003d line.split(\" \\\\| \");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "                ArrayList\u003cString\u003e linePartArray \u003d new ArrayList\u003c\u003e(Arrays.asList(lineParts));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "                formattedOutput.add(linePartArray);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            return formattedOutput;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        } catch (java.io.FileNotFoundException e) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            throw new DukeException(\"     A file error has occurred!\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    public void save(ArrayList\u003cTask\u003e tasks) throws DukeException {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        StringBuilder output \u003d new StringBuilder();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            output.append(task.toStringSimple()).append(System.lineSeparator());"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        appendToFile(output.toString());"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    private void appendToFile(String textToAppend) throws DukeException {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            FileWriter fw \u003d new FileWriter(this.filePath); // create a FileWriter in append mode"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            fw.write(textToAppend);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            throw new DukeException(\"     A file error has occurred!\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "}"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "WeiJie96": 90
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": " * Class representing generic tasks."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    /** Variable to store task description. */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    /** Variable to store if the task is completed. */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * Constructor used to create tasks."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @param description Task description."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * Constructor used to create tasks."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @param description Task description."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @param isDone Describes if task is completed."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    public Task(String description, boolean isDone) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * Gets status icon, depending on whether task is done."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @return String representing status icon."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * Gets task description."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @return Task description."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * Gets task done status."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @param done Task done status."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    public void setDone(boolean done) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        isDone \u003d done;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * Returns simple string format for file."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @return Simple string description."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    public String toStringSimple() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        int intDone \u003d isDone ? 1 : 0;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        return intDone + \" | \" + this.getDescription();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.getDescription();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeiJie96": 73
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": " "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": " * Contains task list, and has operations like list and delete."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    /** List of tasks. */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    private ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * Constructor used to create list of tasks."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * Constructor used to create list of tasks."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @param taskStrings List of tasks in string format."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @throws DukeException  When date is in wrong format."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    public TaskList(ArrayList\u003cArrayList\u003cString\u003e\u003e taskStrings) throws DukeException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        //TODO: Create Enum for this, or just store as Deadline, Event, Todo"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        for (ArrayList\u003cString\u003e taskString : taskStrings) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            int isDoneInt \u003d Integer.parseInt(taskString.get(1));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            boolean isDone \u003d isDoneInt \u003e 0;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            switch (taskString.get(0)) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            case \"D\":"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "                handleDeadline(taskString.get(2), taskString.get(3), isDone);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            case \"E\":"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "                handleEvent(taskString.get(2), taskString.get(3), isDone);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            case \"T\":"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "                handleTodo(taskString.get(2), isDone);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * Getter to retrieve list of tasks."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @return List of tasks."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    public ArrayList\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    public String addTask(CommandName commandName, String description, String date) throws DukeException {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        switch (commandName) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        case TODO:"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            task \u003d handleTodo(description);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        case DEADLINE:"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            task \u003d handleDeadline(description, date);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        case EVENT:"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            task \u003d handleEvent(description, date);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            task \u003d new Task(\"\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        int len \u003d taskList.size();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        return \"     Got it. I\u0027ve added this task:\\n       \""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "                + task.toString() + \"\\n     Now you have \" + len"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "                + \" tasks in the list.\";"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    private Task handleTodo(String todoTask) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        Task todo \u003d new Todo(todoTask);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        taskList.add(todo);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        return todo;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    private void handleTodo(String todoTask, boolean isDone) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        Task todo \u003d new Todo(todoTask, isDone);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        taskList.add(todo);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    private Task handleDeadline(String deadlineTask, String deadlineBy) throws DukeException {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            LocalDate deadlineByLocalDate \u003d LocalDate.parse(deadlineBy);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            Task deadline \u003d new Deadline(deadlineTask, deadlineByLocalDate);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            taskList.add(deadline);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            return deadline;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            throw new DukeException(\"     OOPS!!! Pass in a date in yyyy-mm-dd :-(\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    private void handleDeadline(String deadlineTask, String deadlineBy, boolean isDone) throws DukeException {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            LocalDate deadlineByLocalDate \u003d LocalDate.parse(deadlineBy);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            Task deadline \u003d new Deadline(deadlineTask, deadlineByLocalDate, isDone);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            taskList.add(deadline);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            throw new DukeException(\"     OOPS!!! Pass in a date in yyyy-mm-dd :-(\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    private Task handleEvent(String eventTask, String eventAt) throws DukeException {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            LocalDate eventAtLocalDate \u003d LocalDate.parse(eventAt);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            Task event \u003d new Event(eventTask, eventAtLocalDate);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            taskList.add(event);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            return event;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            throw new DukeException(\"     OOPS!!! Pass in a date in yyyy-mm-dd :-(\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    private void handleEvent(String eventTask, String eventAt, boolean isDone) throws DukeException {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            LocalDate eventAtLocalDate \u003d LocalDate.parse(eventAt);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            Task event \u003d new Event(eventTask, eventAtLocalDate, isDone);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            taskList.add(event);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            throw new DukeException(\"     OOPS!!! Pass in a date in yyyy-mm-dd :-(\");"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    public String listTasks() {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        StringBuilder output \u003d new StringBuilder(\"     Here are the tasks in your list:\\n\");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        int index \u003d 1;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        for (Task task : taskList) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            output.append(\"     \").append(index).append(\".\").append(task.toString()).append(\"\\n\");"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            index++;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        return output.toString();"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    public String doTask(int index) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        Task task \u003d taskList.get(index - 1);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        task.setDone(true);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        return \"     Nice! I\u0027ve marked this task as done: \\n\""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "                + \"       \" + task.toString();"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    public String deleteTask(int index) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        Task task \u003d taskList.get(index - 1);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        taskList.remove(index - 1);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        int len \u003d taskList.size();"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        return \"     Noted. I\u0027ve removed this task:\\n       \""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "                + task.toString() + \"\\n     Now you have \" + len"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "                + \" tasks in the list.\";"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    public String findTasks(String search) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        StringBuilder output \u003d new StringBuilder(\"     Here are the matching tasks in your list:\\n\");"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        int index \u003d 1;"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        for (Task task : taskList) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            if (task.toString().contains(search)) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "                output.append(\"     \").append(index).append(\".\").append(task.toString()).append(\"\\n\");"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "                index++;"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        return output.toString();"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeiJie96": 169
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": " * Class representing tasks to be done"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * Constructor of Todo class."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @param description Todo description."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * Constructor of Todo class."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @param description Todo description."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @param isDone Describes if task is completed."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    public Todo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * Returns simple string format for file."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @return Simple string description."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    public String toStringSimple() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        return \"T | \" + super.toStringSimple();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeiJie96": 40
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": " * Deals with user interaction."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    /** Takes in user input. */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    private Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * Constructor used to create UI ."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * Reads the next line."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @return Next line."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        return scanner.nextLine();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * Displays error message."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @param e Duke Exception."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    public void showError(DukeException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        printOutput(e.getMessage(), true);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * Prints output in a nice format."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @param input String input."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @param hasLastNewLine Option to choose if an extra line break is needed."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    public void printOutput(String input, boolean hasLastNewLine) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        if (hasLastNewLine) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            System.out.println(\"    ____________________________________________________________\\n\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "                    + input + \"\\n\""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "                    + \"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            System.out.println(\"    ____________________________________________________________\\n\""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "                    + input + \"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        printOutput(\"     Hello! I\u0027m Duke\\n\""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "                + \"     What can I do for you?\", true);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    public void showExit() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        printOutput(\"     Bye. Hope to see you again soon!\", true);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeiJie96": 61
    }
  },
  {
    "path": "src/test/java/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    public void parse_noDescription_exceptionThrown() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            Parser.parse(\"event\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            assertEquals(\"     OOPS!!! The description of a event cannot be empty.\", e.getMessage());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    public void parse_wrongCommand_exceptionThrown() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            Parser.parse(\"random\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            assertEquals(\"     OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\", e.getMessage());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeiJie96": 27
    }
  },
  {
    "path": "src/test/java/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    public void handleDeadline_wrongDateFormat_exceptionThrown() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            CommandName deadline \u003d CommandName.DEADLINE;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            tasks.addTask(deadline, \"desc\", \"2020/10/10\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            assertEquals(\"     OOPS!!! Pass in a date in yyyy-mm-dd :-(\", e.getMessage());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeiJie96": 19
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "todo"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "list"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "list"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "WeiJie96": 10
    }
  }
]
