[
  {
    "path": "data/king.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "todoge"
        },
        "content": "T@0@run"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "todoge"
        },
        "content": "T@0@sing"
      }
    ],
    "authorContributionMap": {
      "todoge": 2
    }
  },
  {
    "path": "src/main/java/Chat.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "todoge"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "todoge"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "todoge"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "todoge"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "todoge"
        },
        "content": "public class Chat {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "todoge"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "todoge"
        },
        "content": "    // Returns a printable chatBox around a single-line string"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "todoge"
        },
        "content": "    public static String chatBox(String chatContent){"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "todoge"
        },
        "content": "        return \"\\t\u003d\u003d King says \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\\n\" +"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "todoge"
        },
        "content": "                \"\\t \" + chatContent + \"\\n\" +"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "todoge"
        },
        "content": "                \"\\t\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\\n\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "todoge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "todoge"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "todoge"
        },
        "content": "    // Returns a printable error message box around the error String"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "todoge"
        },
        "content": "    public static String errorBox(String error){"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "todoge"
        },
        "content": "        return \"-------- Error Encountered -------------------------------------\\n\" +"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "todoge"
        },
        "content": "                \"\\t \" + error + \"\\n\" +"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "todoge"
        },
        "content": "                \"----------------------------------------------------------------\\n\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "todoge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "todoge"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "todoge"
        },
        "content": "    // Creates a chat box when item is added"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "todoge"
        },
        "content": "    public static String addItemChatBox(String chatContent, int noOfItems){"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "todoge"
        },
        "content": "        return \"\\t\u003d\u003d King says \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\\n\" +"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "todoge"
        },
        "content": "                \"\\t Got it. I\u0027ve added this task:\\n\" +"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "todoge"
        },
        "content": "                \"\\t\\t\" + chatContent + \"\\n\" +"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "todoge"
        },
        "content": "                \"\\t Now you have \" + noOfItems + \" tasks in the list.\\n\" +"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "todoge"
        },
        "content": "                \"\\t\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\\n\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "todoge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "todoge"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "todoge"
        },
        "content": "    // Returns a printable chatBox numbering each item in given a list"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "todoge"
        },
        "content": "    public static \u003cT\u003e String numberedListChatBox(List\u003cT\u003e chatContent){"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "todoge"
        },
        "content": "        StringBuilder formatted \u003d new StringBuilder();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "todoge"
        },
        "content": "        int len \u003d chatContent.size();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "todoge"
        },
        "content": "        if (len !\u003d 0){"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "todoge"
        },
        "content": "            int number \u003d 1;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "todoge"
        },
        "content": "            for (T item : chatContent){"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "todoge"
        },
        "content": "                formatted.append(\"\\t\" + Integer.toString(number) + \". \" + item.toString() + \"\\n\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "todoge"
        },
        "content": "                number++;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "todoge"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "todoge"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "todoge"
        },
        "content": "        return \"\\t\u003d\u003d King says \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\\n\" +"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "todoge"
        },
        "content": "                \"\\tHere are the items in your list:\\n\" +"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "todoge"
        },
        "content": "                formatted.toString() +"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "todoge"
        },
        "content": "                \"\\t\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\\n\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "todoge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "todoge"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "todoge": 46
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "todoge"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "todoge"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "todoge"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "todoge"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "todoge"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "todoge"
        },
        "content": "    Deadline(String description, String by){"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "todoge"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "todoge"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "todoge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "todoge"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "todoge"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "todoge"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "todoge"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "todoge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "todoge"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "todoge": 15
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "todoge"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "todoge"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "todoge"
        },
        "content": "public class Event extends Task{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "todoge"
        },
        "content": "    protected String time;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "todoge"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "todoge"
        },
        "content": "    Event(String description, String time){"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "todoge"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "todoge"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "todoge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "todoge"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "todoge"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "todoge"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "todoge"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + time + \")\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "todoge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "todoge"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "todoge": 15
    }
  },
  {
    "path": "src/main/java/King.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "todoge"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "todoge"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "todoge"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "todoge"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "todoge"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "todoge"
        },
        "content": "public class King {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "todoge"
        },
        "content": "    private ArrayList\u003cTask\u003e items \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "todoge"
        },
        "content": "    private File listData;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "todoge"
        },
        "content": "    private final String path \u003d \"data/king.txt\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "todoge"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "todoge"
        },
        "content": "    King(){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "todoge"
        },
        "content": "        File directory \u003d new File(\"data\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "todoge"
        },
        "content": "        if (!directory.exists()){"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "todoge"
        },
        "content": "            directory.mkdir();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "todoge"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "todoge"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "todoge"
        },
        "content": "            listData \u003d new File(path);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "todoge"
        },
        "content": "            listData.createNewFile();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "todoge"
        },
        "content": "            initialise();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "todoge"
        },
        "content": "        } catch (IOException e){"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "todoge"
        },
        "content": "            System.out.println(Chat.errorBox(\"Error occurred while loading asset.\"));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "todoge"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "todoge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "todoge"
        },
        "content": "    // method to load the asset into items"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "todoge"
        },
        "content": "    private void initialise(){"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "todoge"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "todoge"
        },
        "content": "        FileReader input \u003d new FileReader(listData.getAbsoluteFile());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "todoge"
        },
        "content": "        Scanner scanner \u003d new Scanner(input);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "todoge"
        },
        "content": "        while (scanner.hasNextLine()){"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "todoge"
        },
        "content": "            String data[] \u003d scanner.nextLine().split(\"@\",4);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "todoge"
        },
        "content": "                Task loadedItem;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "todoge"
        },
        "content": "                switch (data[0]){"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "todoge"
        },
        "content": "                    case \"T\":"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "todoge"
        },
        "content": "                        loadedItem \u003d new ToDo(data[2]);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "todoge"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "todoge"
        },
        "content": "                    case \"D\":"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "todoge"
        },
        "content": "                        loadedItem \u003d new Deadline(data[2],data[3]);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "todoge"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "todoge"
        },
        "content": "                    default:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "todoge"
        },
        "content": "                        loadedItem \u003d new Event(data[2],data[3]);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "todoge"
        },
        "content": "                }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "todoge"
        },
        "content": "                if (data[1].equals(1)){"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "todoge"
        },
        "content": "                    loadedItem.markAsDone();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "todoge"
        },
        "content": "                }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "todoge"
        },
        "content": "                items.add(loadedItem);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "todoge"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "todoge"
        },
        "content": "        input.close();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "todoge"
        },
        "content": "        scanner.close();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "todoge"
        },
        "content": "        } catch (IOException e){"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "todoge"
        },
        "content": "            System.out.println(Chat.errorBox(\"Error occurred while reading asset.\"));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "todoge"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "todoge"
        },
        "content": "            System.out.println(Chat.errorBox(\"Asset file is corrupted.\"));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "todoge"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "todoge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "todoge"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "todoge"
        },
        "content": "    // method to persist the items into asset"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "todoge"
        },
        "content": "    private void persistData(){"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "todoge"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "todoge"
        },
        "content": "            BufferedWriter output \u003d new BufferedWriter(new FileWriter(path));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "todoge"
        },
        "content": "            for (Task task : items) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "todoge"
        },
        "content": "                String isLoaded \u003d task.isDone() ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "todoge"
        },
        "content": "                if (task.getClass().isAssignableFrom(ToDo.class)) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "todoge"
        },
        "content": "                    String s \u003d \"T@\" + isLoaded + \"@\" + task.description;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "todoge"
        },
        "content": "                    output.write(s);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "todoge"
        },
        "content": "                } else if (task.getClass().isAssignableFrom(Event.class)){"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "todoge"
        },
        "content": "                    String s \u003d \"E@\" + isLoaded + \"@\" + task.description + \"@\" + ((Event) task).time;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "todoge"
        },
        "content": "                    output.write(s);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "todoge"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "todoge"
        },
        "content": "                    String s \u003d \"D@\" + isLoaded + \"@\" + task.description + \"@\" + ((Deadline) task).by;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "todoge"
        },
        "content": "                    output.write(s);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "todoge"
        },
        "content": "                }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "todoge"
        },
        "content": "                output.newLine();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "todoge"
        },
        "content": "            }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "todoge"
        },
        "content": "            output.close();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "todoge"
        },
        "content": "        } catch (IOException e){"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "todoge"
        },
        "content": "            System.out.println(Chat.errorBox(\"Error was encountered when saving list to asset.\"));"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "todoge"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "todoge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "todoge"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "todoge"
        },
        "content": "    // method generates reply based on the phrase given by the User"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "todoge"
        },
        "content": "    private String generateReply(String phrase) throws KingException {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "todoge"
        },
        "content": "        int phraseLength \u003d phrase.length();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "todoge"
        },
        "content": "        if (phrase.equals(\"list\")){"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "todoge"
        },
        "content": "            return Chat.numberedListChatBox(items);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "todoge"
        },
        "content": "        } else if((phrase.startsWith(\"done\") \u0026\u0026 phraseLength \u003d\u003d 4) || phrase.startsWith(\"done \")){"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "todoge"
        },
        "content": "            String stringItem \u003d phrase.substring(4).trim();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "todoge"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "todoge"
        },
        "content": "                int itemNo \u003d Integer.parseInt(stringItem) - 1;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "todoge"
        },
        "content": "                Task item \u003d items.get(itemNo);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "todoge"
        },
        "content": "                item.markAsDone();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "todoge"
        },
        "content": "                return Chat.chatBox("
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "todoge"
        },
        "content": "                        \"Nice! I\u0027ve marked this task as done:\\n\""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "todoge"
        },
        "content": "                                + \"\\t\\t\" + item.toString()"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "todoge"
        },
        "content": "                );"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "todoge"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "todoge"
        },
        "content": "                throw new KingException(\"Item \" + stringItem + \" not found.\", e);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "todoge"
        },
        "content": "            } catch (NumberFormatException e){"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "todoge"
        },
        "content": "                throw (stringItem.isEmpty())"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "todoge"
        },
        "content": "                    ? new KingException(\"Done must be followed by item number\", e)"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "todoge"
        },
        "content": "                        : new KingException(stringItem + \" is not a valid item number!\", e);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "todoge"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "todoge"
        },
        "content": "                throw new KingException(\"Please follow the syntax: done \u003citem no.\u003e\", e);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "todoge"
        },
        "content": "            }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "todoge"
        },
        "content": "        } else if (phrase.startsWith(\"todo \") || (phrase.startsWith(\"todo\") \u0026\u0026 phraseLength \u003d\u003d 4)) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "todoge"
        },
        "content": "            String item;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "todoge"
        },
        "content": "            if (phraseLength !\u003d 4 \u0026\u0026 (item \u003d phrase.substring(5).trim()).length() !\u003d 0){"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "todoge"
        },
        "content": "                ToDo todo \u003d new ToDo(item);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "todoge"
        },
        "content": "                items.add(todo);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "todoge"
        },
        "content": "                return Chat.addItemChatBox(todo.toString(),items.size());"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "todoge"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "todoge"
        },
        "content": "                throw new KingException(\"Todo cannot be empty!\", new Throwable(\"empty field\"));"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "todoge"
        },
        "content": "            }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "todoge"
        },
        "content": "        } else if (phrase.startsWith(\"event \") || (phrase.startsWith(\"event\") \u0026\u0026 phraseLength \u003d\u003d 5)) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "todoge"
        },
        "content": "            String item \u003d phrase.substring(5).trim();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "todoge"
        },
        "content": "            String[] tokens \u003d item.split(\" /at \");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "todoge"
        },
        "content": "            if (tokens.length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "todoge"
        },
        "content": "                Event event \u003d new Event(tokens[0],tokens[1]);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "todoge"
        },
        "content": "                items.add(event);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "todoge"
        },
        "content": "                return Chat.addItemChatBox(event.toString(),items.size());"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "todoge"
        },
        "content": "            } else if(tokens.length \u003c 2){"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "todoge"
        },
        "content": "                throw new KingException(\"Event description and time CANNOT be empty!\", new Throwable(\"empty field\"));"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "todoge"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "todoge"
        },
        "content": "                throw new KingException(\"Follow the syntax event: \u003cdescription\u003e /at \u003ctime\u003e\", new Throwable("
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "todoge"
        },
        "content": "                        \"bad event\""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "todoge"
        },
        "content": "                ));"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "todoge"
        },
        "content": "            }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "todoge"
        },
        "content": "        } else if (phrase.startsWith(\"deadline \") || (phrase.startsWith(\"deadline\") \u0026\u0026 phraseLength \u003d\u003d 8)) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "todoge"
        },
        "content": "            String item \u003d phrase.substring(8).trim();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "todoge"
        },
        "content": "            String[] tokens \u003d item.split(\" /by \");"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "todoge"
        },
        "content": "            if (tokens.length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "todoge"
        },
        "content": "                Deadline deadline \u003d new Deadline(tokens[0],tokens[1]);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "todoge"
        },
        "content": "                items.add(deadline);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "todoge"
        },
        "content": "                return Chat.addItemChatBox(deadline.toString(),items.size());"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "todoge"
        },
        "content": "            } else if(tokens.length \u003c 2){"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "todoge"
        },
        "content": "                throw new KingException(\"Deadline description and time CANNOT be empty!\", new Throwable(\"empty field\"));"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "todoge"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "todoge"
        },
        "content": "                throw new KingException(\"Follow the syntax: deadline \u003cdescription\u003e /by \u003ctime\u003e\", new Throwable("
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "todoge"
        },
        "content": "                        \"bad deadline\""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "todoge"
        },
        "content": "                ));"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "todoge"
        },
        "content": "            }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "todoge"
        },
        "content": "        } else if (phrase.startsWith(\"delete \") || (phrase.startsWith(\"delete\") \u0026\u0026 phraseLength \u003d\u003d 6)) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "todoge"
        },
        "content": "            String stringItem \u003d phrase.substring(6).trim();"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "todoge"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "todoge"
        },
        "content": "                int itemNo \u003d Integer.parseInt(stringItem) - 1;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "todoge"
        },
        "content": "                Task item \u003d items.get(itemNo);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "todoge"
        },
        "content": "                items.remove(itemNo);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "todoge"
        },
        "content": "                return Chat.chatBox("
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "todoge"
        },
        "content": "                        \"I have deleted the following item:\\n\""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "todoge"
        },
        "content": "                                + \"\\t\\t\" + item.toString() +"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "todoge"
        },
        "content": "                                \"\\n\\t You got \" + items.size() + \" task(s) left.\""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "todoge"
        },
        "content": "                );"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "todoge"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "todoge"
        },
        "content": "                throw new KingException(\"Item \" + stringItem + \" not found.\", e);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "todoge"
        },
        "content": "            } catch (NumberFormatException e){"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "todoge"
        },
        "content": "                throw (stringItem.isEmpty())"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "todoge"
        },
        "content": "                        ? new KingException(\"delete must be followed by item number\", e)"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "todoge"
        },
        "content": "                        : new KingException(stringItem + \" is not a valid item number\", e);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "todoge"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "todoge"
        },
        "content": "                throw new KingException(\"Please follow the syntax: delete \u003citem no.\u003e\", e);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "todoge"
        },
        "content": "            }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "todoge"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "todoge"
        },
        "content": "            throw new KingException(\"I don\u0027t understand you!\", new Throwable(\"invalid command\"));"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "todoge"
        },
        "content": "        }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "todoge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "todoge"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "todoge"
        },
        "content": "    // handles user input"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "todoge"
        },
        "content": "    public void chat() {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "todoge"
        },
        "content": "        Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "todoge"
        },
        "content": "        String phrase;"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "todoge"
        },
        "content": "        while(scanner.hasNextLine() \u0026\u0026 !(phrase \u003d scanner.nextLine()).equals(\"bye\")){"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "todoge"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "todoge"
        },
        "content": "                System.out.println(generateReply(phrase));"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "todoge"
        },
        "content": "            } catch (KingException e) {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "todoge"
        },
        "content": "                System.out.println(Chat.chatBox(e.message));"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "todoge"
        },
        "content": "            }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "todoge"
        },
        "content": "        }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "todoge"
        },
        "content": "        System.out.print(Chat.chatBox(\"Bye. Hope to see you again soon!\"));"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "todoge"
        },
        "content": "        scanner.close();"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "todoge"
        },
        "content": "        persistData();"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "todoge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "todoge"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "todoge"
        },
        "content": "        String logo \u003d"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "todoge"
        },
        "content": "                \" ____  __.__\\n\" +"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "todoge"
        },
        "content": "                        \"|    |/ _|__| ____    ____\\n\" +"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "todoge"
        },
        "content": "                        \"|      \u003c |  |/    \\\\  / ___\\\\ \\n\" +"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "todoge"
        },
        "content": "                        \"|    |  \\\\|  |   |  \\\\/ /_/  \u003e\\n\" +"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "todoge"
        },
        "content": "                        \"|____|__ \\\\__|___|  /\\\\___  /\\n\" +"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "todoge"
        },
        "content": "                        \"        \\\\/       \\\\//_____/\\n\";"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "todoge"
        },
        "content": "        System.out.println(logo);"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "todoge"
        },
        "content": "        System.out.println(\"Hello! I\u0027m King\");"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "todoge"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "todoge"
        },
        "content": "        King king \u003d new King();"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "todoge"
        },
        "content": "        king.chat();"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "todoge": 193,
      "-": 3
    }
  },
  {
    "path": "src/main/java/KingException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "todoge"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "todoge"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "todoge"
        },
        "content": "public class KingException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "todoge"
        },
        "content": "    final String message;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "todoge"
        },
        "content": "    final Throwable error;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "todoge"
        },
        "content": "    KingException(String message, Throwable error) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "todoge"
        },
        "content": "        this.error \u003d error;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "todoge"
        },
        "content": "        this.message \u003d message;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "todoge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "todoge"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "todoge": 10
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "todoge"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "todoge"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "todoge"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "todoge"
        },
        "content": "    protected TaskStates state;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "todoge"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "todoge"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "todoge"
        },
        "content": "    Task(String task){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "todoge"
        },
        "content": "        state \u003d TaskStates.UNDONE;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "todoge"
        },
        "content": "        this.description \u003d task;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "todoge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "todoge"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "todoge"
        },
        "content": "    // set task as done"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "todoge"
        },
        "content": "    public void markAsDone(){"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "todoge"
        },
        "content": "        state \u003d TaskStates.DONE;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "todoge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "todoge"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "todoge"
        },
        "content": "    // returns true if task is done"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "todoge"
        },
        "content": "    public boolean isDone(){"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "todoge"
        },
        "content": "        return state \u003d\u003d TaskStates.DONE;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "todoge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "todoge"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "todoge"
        },
        "content": "    //return tick or X symbols"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "todoge"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "todoge"
        },
        "content": "        return (state \u003d\u003d TaskStates.DONE ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "todoge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "todoge"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "todoge"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "todoge"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "todoge"
        },
        "content": "        switch(state){"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "todoge"
        },
        "content": "            case DONE:"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "todoge"
        },
        "content": "                return \"[\\u2713] \" + description;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "todoge"
        },
        "content": "            case UNDONE:"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "todoge"
        },
        "content": "                return \"[\\u2718] \" + description;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "todoge"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "todoge"
        },
        "content": "                return description;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "todoge"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "todoge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "todoge"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "todoge": 38
    }
  },
  {
    "path": "src/main/java/TaskStates.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "todoge"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "todoge"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "todoge"
        },
        "content": "public enum TaskStates {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "todoge"
        },
        "content": "    DONE, UNDONE"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "todoge"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "todoge": 5
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "todoge"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "todoge"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "todoge"
        },
        "content": "public class ToDo extends Task{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "todoge"
        },
        "content": "        ToDo(String description){"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "todoge"
        },
        "content": "            super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "todoge"
        },
        "content": "        }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "todoge"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "todoge"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "todoge"
        },
        "content": "        public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "todoge"
        },
        "content": "            return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "todoge"
        },
        "content": "        }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "todoge"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "todoge": 12
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "todoge"
        },
        "content": "blah"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "todoge"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "todoge"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "todoge"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "todoge"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "todoge"
        },
        "content": "todo"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "todoge"
        },
        "content": "event"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "todoge"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "todoge"
        },
        "content": "delete"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "todoge"
        },
        "content": "list"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "todoge"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "todoge"
        },
        "content": "done 10"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "todoge"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "todoge": 13
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "todoge"
        },
        "content": "C:\\Program\\ Files\\Java\\jdk-11.0.5\\bin\\java -classpath ..\\bin main.java.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "todoge": 1,
      "-": 20
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "todoge"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "todoge"
        },
        "content": "/c/Program\\ Files/Java/jdk-11.0.5/bin/java -classpath ../bin main.java.King \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "todoge": 2,
      "-": 36
    }
  }
]
