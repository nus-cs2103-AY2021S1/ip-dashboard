[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    mainClassName \u003d \"duke.Launcher\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    archiveBaseName \u003d \"ip\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    toolVersion \u003d \u00278.32\u0027"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    enableAssertions \u003d true"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jonahtanjz": 19,
      "-": 43
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "### `todo \u003cdescription\u003e`"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "Add a todo task to the list."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "`todo borrow books`"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "`Got it. I\u0027ve added this task:`"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "`[T][✘] borrow books`"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "`Now you have 3 tasks in the list.`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "### `deadline \u003cdescription\u003e /by \u003cdate \u0026 time\u003e`"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "Add a deadline task to the list."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "Note: `\u003cdate \u0026 time\u003e` must be in the format `yyyy-mm-ddTHH:mm`"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "`deadline return books /by 2020-09-30T23:59`"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "`Got it. I\u0027ve added this task:`"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "`[D][✘] return books (by: Sep 30 2020, 23:59)`"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "`Now you have 4 tasks in the list.`"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "### `event \u003cdescription\u003e /at \u003cdate \u0026 time\u003e`"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "Add an event task to the list."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "Note: `\u003cdate \u0026 time\u003e` must be in the format `yyyy-mm-ddTHH:mm`"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "`event team meeting /at 2020-10-05T15:00`"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "`Got it. I\u0027ve added this task:`"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "`[E][✘] team meeting (at: Oct 5 2020, 15:00)`"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "`Now you have 5 tasks in the list.`"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "### `list`"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "Display all the tasks in the list."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "`Here are the tasks in your list:`"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "`1. [T][✘] borrow books`"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "`2. [D][✘] return books (by: Sep 30 2020, 23:59)`"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "`3. [E][✘] team meeting (by: Oct 5 2020, 15:00)`"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "### `done \u003ctask number\u003e`"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "Mark a task as completed."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "Note: `\u003ctask number\u003e` can be obtained from `list` command."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "`done 2`"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "`This task has been marked as done:`"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "`[D][✓] return books (by: Sep 30 2020, 23:59)`"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "### `delete \u003ctask number\u003e`"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "Remove a task from the list."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "Note: `\u003ctask number\u003e` can be obtained from `list` command."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "`delete 2`"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "`This task has been removed:`"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "`[D][✓] return books (by: Sep 30 2020, 23:59)`"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "`Now you have 2 tasks in the list.`"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "### `find \u003ckeyword\u003e`"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "Filter the task list and display the tasks with the keyword."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "`find meeting`"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "`Here are the matching tasks in your list:`"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "`1. [E][✘] team meeting (at: Oct 5 2020, 15:00)`"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "`2. [D][✘] email meeting notes (by: Sep 25 2020, 19:00)`"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "### `sort`"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "Sort and display the tasks in ascending order according to their dates."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "`Here are the tasks in your list:`"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "`1. [E][✘] project presentation (by: Sep 23 2020, 14:00)`"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "`2. [D][✘] return books (by: Sep 30 2020, 23:59)`"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "`3. [D][✘] submit book reviews (by: Oct 2 2020, 23:59)`"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "`4. [E][✘] team meeting (by: Oct 5 2020, 15:00)`"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "`5. [T][✘] borrow books`"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "### `bye`"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "End and close the chat window after 3 seconds."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "`Bye. Hope to see you again soon!`"
      }
    ],
    "authorContributionMap": {
      "jonahtanjz": 99,
      "-": 13
    }
  },
  {
    "path": "src/main/java/duke/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jonahtanjz": 61
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "import exception.MissingInfoException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": " * Main class for the Duke program"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    private Stage stage;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "     * Initializes a Duke object with saved tasks from the given data file."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "     * @param pathname The path of the data file."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    public Duke(String pathname) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        this.storage \u003d new Storage(pathname);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        this.taskList \u003d new TaskList(new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        this.parser \u003d new Parser(new Scanner(\"\"));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "     * Start the chat bot"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        Parser parser \u003d new Parser(new Scanner(System.in));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            this.storage.load(taskList);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            this.ui.printReply(\"OOPS!!! Can\u0027t access task data.\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            this.ui.printReply(\"OOPS!!! Something went wrong... Tasks not saved.\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        } catch (MissingInfoException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            this.ui.printReply(e.getMessage());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        this.ui.greet();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            String reply \u003d parser.executeCommand(this.taskList);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            if (reply.equals(\"bye\")) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            this.ui.printReply(reply);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "                this.storage.save(this.taskList);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "                this.ui.printReply(\"OOPS!!! Something went wrong... Tasks not saved.\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            } catch (MissingInfoException e) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "                this.ui.printReply(e.getMessage());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        this.ui.bye();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "     * Sets the Stage object in duke for the GUI."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "     * @param stage The stage object"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    public void setStage(Stage stage) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        this.stage \u003d stage;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "     * Returns the Stage object stored in Duke."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "     * @return The Stage object."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    public Stage getStage() {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        return this.stage;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "     * Returns the Storage object stored in Duke."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "     * @return The Storage object."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    public Storage getStorage() {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        return this.storage;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "     * Returns the Ui object stored in Duke."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "     * @return The Ui object."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    public Ui getUi() {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        return this.ui;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "     * Returns the Parser object stored in Duke."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "     * @return The Parser object."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    public Parser getParser() {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        return this.parser;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "     * Returns the TaskList object stored in Duke."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "     * @return The TaskList object."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    public TaskList getTaskList() {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        return this.taskList;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        new Duke(\"data/tasks.txt\").run();"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jonahtanjz": 132
    }
  },
  {
    "path": "src/main/java/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jonahtanjz": 12
    }
  },
  {
    "path": "src/main/java/duke/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    private Duke duke \u003d new Duke(\"data/tasks.txt\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        duke.setStage(stage);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jonahtanjz": 33
    }
  },
  {
    "path": "src/main/java/duke/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "import javafx.animation.KeyFrame;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "import javafx.animation.Timeline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "import javafx.util.Duration;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "import exception.MissingInfoException;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "/**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": " */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.png\"));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Duke.png\"));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "     * Sets up the Duke logic in the GUI and preload tasks from data."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "     * @param d Duke object"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        sendMessage(duke.getUi().greet());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            duke.getStorage().load(duke.getTaskList());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            sendMessage(\"OOPS!!! Can\u0027t access task data.\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            sendMessage(\"OOPS!!! Something went wrong... Tasks not saved.\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        } catch (MissingInfoException e) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            sendMessage(e.getMessage());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        duke.getParser().setScanner(new Scanner(userInput.getText()));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        String reply \u003d duke.getParser().executeCommand(duke.getTaskList());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        checkReply(reply);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "     * Prints a message in the chat box as Duke."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "     * @param text The message to send."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    private void sendMessage(String text) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        dialogContainer.getChildren().add("
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "                DialogBox.getDukeDialog(text, dukeImage)"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        );"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    private void addUserAndBotMessage(String reply) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "                DialogBox.getUserDialog(userInput.getText(), userImage),"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "                DialogBox.getDukeDialog(reply, dukeImage));"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    private void checkReply(String reply) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        if (reply.equals(\"bye\")) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            reply \u003d duke.getUi().bye();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            addUserAndBotMessage(reply);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            userInput.clear();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            Timeline timeline \u003d new Timeline(new KeyFrame(Duration.millis(3000), e -\u003e {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "                duke.getStage().close();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            }));"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            timeline.play();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            addUserAndBotMessage(reply);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            userInput.clear();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            saveTasks();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    private void saveTasks() {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            duke.getStorage().save(duke.getTaskList());"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            sendMessage(\"OOPS!!! Something went wrong... Tasks not saved.\");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        } catch (MissingInfoException e) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            sendMessage(e.getMessage());"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jonahtanjz": 119
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "import java.util.NoSuchElementException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "import exception.InvalidCommandException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "import exception.MissingInfoException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "import task.TaskDateTimeComparator;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": " * Parser deals with making sense of the user command."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    private Scanner input;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    private static final String LIST_REPLY \u003d \"Here are the tasks in your list:\\n\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    private static final String DONE_REPLY \u003d \"This task has been marked as done:\\n\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    private static final String INVALID_TASK_NUMBER \u003d \"OOPS!!! Task number is invalid.\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    private static final String NOT_A_NUMBER \u003d \"OOPS!!! Task number must be a number.\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    private static final String EMPTY_KEYWORD \u003d \"OOPS!!! Keyword cannot be empty.\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    private static final String FIND_REPLY \u003d \"Here are the matching tasks in your list:\\n\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    private static final String INVALID_DATE \u003d \"OOPS!!! Date format is invalid. Make sure it is yyyy-mm-ddTHH:mm.\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    private static final String SORT_REPLY \u003d \"Here are the tasks sorted by date and time:\\n\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    public Parser(Scanner input) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "     * Sets the scanner input stored in this object."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "     * @param scanner The scanner to store."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    public void setScanner(Scanner scanner) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        this.input \u003d scanner;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "     * Takes in the command entered by the user and execute it accordingly."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "     * @param taskList All the tasks in the to-do list."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "     * @return String The relevant reply according to command."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    public String executeCommand(TaskList taskList) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        String command \u003d this.input.next();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        if (command.equals(\"bye\")) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            return \"bye\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        } else if (command.equals(\"list\")) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            return LIST_REPLY + taskList.listTasks();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        } else if (command.equals(\"done\")) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            return executeDone(taskList);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        } else if (command.equals(\"delete\")) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            return executeDelete(taskList);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        } else if (command.equals(\"find\")) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            return executeFind(taskList);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        } else if (command.equals(\"sort\")) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            return executeSort(taskList);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            return executeNewTask(taskList, command);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    private String executeDone(TaskList taskList) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            Task task \u003d taskList.getTasks().get(this.input.nextInt() - 1);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            task.completeTask();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            return DONE_REPLY + task.toString();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            return INVALID_TASK_NUMBER;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        } catch (NoSuchElementException e) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            clearInputLine();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            return NOT_A_NUMBER;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    private String executeDelete(TaskList taskList) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            int taskNumber \u003d this.input.nextInt();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            Task task \u003d taskList.getTasks().get(taskNumber - 1);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            taskList.removeTask(taskNumber - 1);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            return concatStrings(\"This task has been removed:\\n\", task.toString(),"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "                    \"\\nNow you have \" + taskList.getTasks().size(), \" tasks in the list.\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            return INVALID_TASK_NUMBER;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        } catch (NoSuchElementException e) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            clearInputLine();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            return NOT_A_NUMBER;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    private String executeFind(TaskList taskList) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        String keyword;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            keyword \u003d input.nextLine().substring(1);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        } catch (StringIndexOutOfBoundsException | NoSuchElementException e) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            return EMPTY_KEYWORD;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        TaskList foundTasks \u003d new TaskList(taskList.findTasks(keyword));"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        return FIND_REPLY + foundTasks.listTasks();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    private String executeNewTask(TaskList taskList, String command) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            TaskType.TypeOfTask typeOfTask \u003d getTypeOfTask(command);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            Task newTask \u003d getTask(command, typeOfTask, taskList);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            taskList.addTask(newTask);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            return concatStrings(\"Got it. I\u0027ve added this task:\\n\", newTask.toString(),"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "                    \"\\nNow you have \" + taskList.getTasks().size(), \" tasks in the list.\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        } catch (InvalidCommandException e) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            return e.getMessage();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        } catch (MissingInfoException e) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            return e.getMessage();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            return INVALID_DATE;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    private String concatStrings(String ... words) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        String concatenatedString \u003d \"\";"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        for (int i \u003d 0; i \u003c words.length; i++) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            concatenatedString \u003d concatenatedString + words[i];"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        return concatenatedString;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    private TaskType.TypeOfTask getTypeOfTask(String command) throws InvalidCommandException {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        switch (command) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "                return TaskType.TypeOfTask.TODO;"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "                return TaskType.TypeOfTask.DEADLINE;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "                return TaskType.TypeOfTask.EVENT;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "                clearInputLine();"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "                throw new InvalidCommandException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    private void clearInputLine() {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        if (this.input.hasNextLine()) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            this.input.nextLine();"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    private Task getTask(String command, TaskType.TypeOfTask typeOfTask, TaskList taskList)"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            throws MissingInfoException {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        String[] commandArray;"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            commandArray \u003d this.input.nextLine().split(\" \");"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        } catch (NoSuchElementException e) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            throw new MissingInfoException(\"OOPS!!! The description of a \" + command + \" cannot be empty.\");"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        String description \u003d \"\";"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        LocalDateTime timing \u003d null;"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        for (int i \u003d 1; i \u003c commandArray.length; i++) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            if (commandArray[i].equals(\"/by\")) {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "                timing \u003d getTiming(command, commandArray, i + 1);"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            } else if (commandArray[i].equals(\"/at\")) {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "                timing \u003d getTiming(command, commandArray, i + 1);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            if (i \u003d\u003d 1) {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "                description \u003d commandArray[i];"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "                description \u003d description + \" \" + commandArray[i];"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        if (description.isEmpty()) {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            throw new MissingInfoException(\"OOPS!!! The description of a \" + command + \" cannot be empty.\");"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        if ((typeOfTask.equals(TaskType.TypeOfTask.DEADLINE) || typeOfTask.equals(TaskType.TypeOfTask.EVENT))"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "                \u0026\u0026 timing \u003d\u003d null) {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            throw new MissingInfoException(\"OOPS!!! The date/time of a \" + command + \" cannot be empty.\");"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        return taskList.createTask(typeOfTask, description, timing, false);"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    private LocalDateTime getTiming(String command, String[] commandArray, int index)"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            throws MissingInfoException, DateTimeParseException {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        String timing \u003d \"\";"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        for (int i \u003d index; i \u003c commandArray.length; i++) {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            if (i \u003d\u003d index) {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "                timing \u003d commandArray[i];"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "                timing \u003d timing + \" \" + commandArray[i];"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            }"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        if (timing.isEmpty()) {"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            throw new MissingInfoException(\"OOPS!!! The date/time of a \" + command + \" cannot be empty.\");"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            return LocalDateTime.parse(timing);"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            throw e;"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    private String executeSort(TaskList taskList) {"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        ArrayList\u003cTask\u003e copyOfTaskList \u003d new ArrayList\u003c\u003e(taskList.getTasks());"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        TaskList sortedTasks \u003d new TaskList(copyOfTaskList);"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        sortedTasks.getTasks().sort(new TaskDateTimeComparator());"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        return SORT_REPLY + sortedTasks.listTasks();"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jonahtanjz": 225
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "import exception.MissingInfoException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "import task.Event;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "import task.Deadline;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": " * Storage deals with loading tasks from the file and saving tasks in the file."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    private String pathname;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    public Storage(String pathname) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        this.pathname \u003d pathname;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "     * Fill the TaskList up with the tasks from the text file."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "     * @param taskList A TaskList with no tasks."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "     * @throws IOException If file is not found or error reading file."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    public void load(TaskList taskList) throws IOException, MissingInfoException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            File directory \u003d new File(\"data\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            checkDirectory(directory);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            File file \u003d new File(this.pathname);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            file.createNewFile();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            Scanner scanner \u003d new Scanner(file);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            processData(scanner, taskList);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            throw e;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        } catch (MissingInfoException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            throw e;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    private void checkDirectory(File directory) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        if (!directory.exists()) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            directory.mkdir();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    private void processData(Scanner scanner, TaskList taskList) throws MissingInfoException {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        while (scanner.hasNextLine()) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            String[] data;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            data \u003d scanner.nextLine().split(\" \\\\| \");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            switch (data[0]) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "                case \"T\":"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "                    taskList.addTask(taskList.createTask(TaskType.TypeOfTask.TODO, data[2],"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "                            null, data[1].equals(\"1\") ? true : false));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "                case \"D\":"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "                    taskList.addTask(taskList.createTask(TaskType.TypeOfTask.DEADLINE, data[2],"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "                            LocalDateTime.parse(data[3]), data[1].equals(\"1\") ? true : false));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "                case \"E\":"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "                    taskList.addTask(taskList.createTask(TaskType.TypeOfTask.EVENT, data[2],"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "                            LocalDateTime.parse(data[3]), data[1].equals(\"1\") ? true : false));"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "                    throw new MissingInfoException(\"There is something wrong with your database file...\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "     * Write the tasks to the text file."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "     * @param taskList The list of tasks to be saved."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "     * @throws IOException If file is not found or error writing to file."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    public void save(TaskList taskList) throws IOException, MissingInfoException {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            ArrayList\u003cTask\u003e tasks \u003d taskList.getTasks();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            String taskString \u003d convertTasksToString(tasks, \"\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            writeToFile(taskString);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            throw e;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        } catch (MissingInfoException e) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            throw e;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    private String convertTasksToString(ArrayList\u003cTask\u003e tasks, String initialString) throws MissingInfoException {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        String taskString \u003d initialString;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            Task task \u003d tasks.get(i);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            String typeOfTask \u003d task.getClass().getName();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            String timing \u003d \"\";"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            switch (typeOfTask) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "                case \"task.Todo\":"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "                    taskString \u003d taskString + \"T\";"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "                case \"task.Deadline\":"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "                    taskString \u003d taskString + \"D\";"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "                    timing \u003d timing + ((Deadline) task).getTiming();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "                case \"task.Event\":"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "                    taskString \u003d taskString + \"E\";"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "                    timing \u003d timing + ((Event) task).getTiming();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "                    throw new MissingInfoException(\"Something wrong with your function parameter?\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            taskString \u003d taskString + \" | \" + (task.getStatus() ? \"1\" : \"0\") + \" | \" + task.getTaskDescription()"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "                    + ((typeOfTask.equals(\"task.Deadline\") || typeOfTask.equals(\"task.Event\"))"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "                    ? \" | \" + timing"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "                    : \"\");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            taskString \u003d taskString + \"\\n\";"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        return taskString;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    private void writeToFile(String taskString) throws IOException {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            FileWriter fw \u003d new FileWriter(this.pathname);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            fw.write(taskString);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            throw e;"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jonahtanjz": 143
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "import task.Event;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "import task.Todo;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "import task.Deadline;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": " * TaskList contains the task list."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "     * Returns the String representation of all the tasks in the list with numbering."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "     * @return List of all tasks"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    public String listTasks() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        String listOfTasks \u003d formatTaskList(\"\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        return listOfTasks;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    private String formatTaskList(String initialList) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        String listOfTasks \u003d initialList;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        for (int i \u003d 0; i \u003c this.tasks.size(); i++) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            listOfTasks \u003d listOfTasks + (i + 1) + \". \" + this.tasks.get(i).toString()"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "                    + (i \u003d\u003d this.tasks.size() - 1 ? \"\" : \"\\n\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        return listOfTasks;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "     * Creates a new Task object to represent the task together with all the information provided."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "     * @param typeOfTask The type of tasks to create."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "     * @param description Brief description of the task."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "     * @param timing The deadline/event time if applicable."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "     * @param isDone The status of the task."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "     * @return The respective Task object"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    public Task createTask(TaskType.TypeOfTask typeOfTask, String description, LocalDateTime timing, boolean isDone) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        assert typeOfTask !\u003d null : \"Type of task cannot be null\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        assert description !\u003d null : \"Task description cannot be null\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        switch (typeOfTask) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        case TODO:"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            return new Todo(description, isDone);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        case DEADLINE:"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            return new Deadline(description, timing, isDone);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        case EVENT:"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            return new Event(description, timing, isDone);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            return new Task(description, isDone);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "     * Adds a new task to the list."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "     * @param task The task to be added"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        this.tasks.add(task);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "     * Removes a task from the list."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "     * @param task The task number to be removed."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "      */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    public void removeTask(int task) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        this.tasks.remove(task);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "     * Returns the full list of the tasks."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "     * @return All the tasks."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    public ArrayList\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        return this.tasks;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "     * Returns the list of tasks that match the keyword."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "     * @param keyword keyword to find."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "     * @return Tasks matching keyword."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    public ArrayList\u003cTask\u003e findTasks(String keyword) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        assert !keyword.isEmpty() : \"Keyword cannot be empty\";"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        ArrayList\u003cTask\u003e foundTasks \u003d new ArrayList\u003c\u003e(this.tasks);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        foundTasks.removeIf(task -\u003e !task.getTaskDescription().contains(keyword));"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        return foundTasks;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jonahtanjz": 110
    }
  },
  {
    "path": "src/main/java/duke/TaskType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": " * Represents the 3 different types of tasks."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "public class TaskType {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    public enum TypeOfTask {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        TODO,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        DEADLINE,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        EVENT"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jonahtanjz": 12
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": " * Ui deals with interactions with the user."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "     * Formats the given input and prints out the text with relevant indentations and enclosed it with lines."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "     * @param text The String to be formatted."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "     * @return Formatted string."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    public String printReply(String text) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        String line \u003d \"\\t____________________________________________________________________________________\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        return line + \"\\n\\t\\t\" + text.replaceAll(\"\\\\n\", \"\\n\\t\\t\") + \"\\n\" + line;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "     * Returns the standard greeting message when the bot is first started."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "     * @return The message as string."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    public String greet() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        return \"Hello! I\u0027m Duke\\nWhat can I do for you?\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "     * Returns the standard message when the bot is being ended."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "     * @return The message as string."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    public String bye() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        return \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jonahtanjz": 39
    }
  },
  {
    "path": "src/main/java/exception/InvalidCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": " * Exception for unknown command"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "public class InvalidCommandException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    public InvalidCommandException(String message) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jonahtanjz": 10
    }
  },
  {
    "path": "src/main/java/exception/MissingInfoException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": " * Exception for commands with missing key information."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "public class MissingInfoException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    public MissingInfoException(String message) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jonahtanjz": 10
    }
  },
  {
    "path": "src/main/java/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": " * Represents the Deadline task"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    private LocalDateTime deadlineBy;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    public Deadline(String description, LocalDateTime deadlineBy, boolean isDone) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        assert deadlineBy !\u003d null : \"Timing cannot be null\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        this.deadlineBy \u003d deadlineBy;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "     * Returns the deadline of the task."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "     * @return Date and time of the deadline."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    public LocalDateTime getTiming() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        return this.deadlineBy;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "                + this.deadlineBy.format(DateTimeFormatter.ofPattern(\"MMM d yyyy, HH:mm\")) + \")\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jonahtanjz": 33
    }
  },
  {
    "path": "src/main/java/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": " * Represents the Event task"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    private LocalDateTime eventAt;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    public Event(String description, LocalDateTime eventAt, boolean isDone) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        assert eventAt !\u003d null : \"Timing cannot be null\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        this.eventAt \u003d eventAt;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "     * Returns the event time of the task."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "     * @return Date and time of the event."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    public LocalDateTime getTiming() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        return this.eventAt;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "                + this.eventAt.format(DateTimeFormatter.ofPattern(\"MMM d yyyy, HH:mm\")) + \")\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jonahtanjz": 33
    }
  },
  {
    "path": "src/main/java/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": " * Represents the Task that the user have to do."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    protected String taskDescription;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    public Task(String taskDescription, boolean isDone) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        assert !taskDescription.isEmpty() : \"Task description cannot be empty\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        this.taskDescription \u003d taskDescription;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "     * Returns the description of the Task."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "     * @return Description"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    public String getTaskDescription() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        return this.taskDescription;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "     * Returns the status of the Task."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "     * @return Status"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    public boolean getStatus() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        return this.isDone;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "     * Mark the Task as completed."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    public void completeTask() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        return (getStatus() ? \"[\\u2713] \" : \"[\\u2717] \") + getTaskDescription();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jonahtanjz": 46
    }
  },
  {
    "path": "src/main/java/task/TaskDateTimeComparator.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "import java.util.Comparator;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "public class TaskDateTimeComparator implements Comparator\u003cTask\u003e {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    public int compare(Task task, Task otherTask) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        LocalDateTime otherTaskTiming;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        if (otherTask instanceof Deadline) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            otherTaskTiming \u003d ((Deadline) otherTask).getTiming();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        } else if (otherTask instanceof Event) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            otherTaskTiming \u003d ((Event) otherTask).getTiming();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            return -1;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        LocalDateTime taskTiming;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        if (task instanceof Deadline) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            taskTiming \u003d ((Deadline) task).getTiming();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        } else if (task instanceof Event) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            taskTiming \u003d ((Event) task).getTiming();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            return 1;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        if (taskTiming.isAfter(otherTaskTiming)) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            return 1;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        } else if (taskTiming.isBefore(otherTaskTiming)) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            return -1;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            return 0;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jonahtanjz": 36
    }
  },
  {
    "path": "src/main/java/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": " * Represents the Todo task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    public Todo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jonahtanjz": 16
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"500.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "  \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    \u003cLabel fx:id\u003d\"dialog\" lineSpacing\u003d\"1.2\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "         \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "         \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "         \u003cfont\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            \u003cFont size\u003d\"14.0\" /\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "         \u003c/font\u003e\u003c/Label\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"60.0\" fitWidth\u003d\"60.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "         \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "            \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "         \u003c/HBox.margin\u003e\u003c/ImageView\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "  \u003c/children\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "  \u003cpadding\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "  \u003c/padding\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "jonahtanjz": 26
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"700.0\" prefWidth\u003d\"500.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "  \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    \u003cTextField fx:id\u003d\"userInput\" layoutX\u003d\"2.0\" layoutY\u003d\"655.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"42.0\" prefWidth\u003d\"403.0\" AnchorPane.bottomAnchor\u003d\"2.6000000000000227\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"406.0\" layoutY\u003d\"655.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"42.0\" prefWidth\u003d\"92.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    \u003cScrollPane fx:id\u003d\"scrollPane\" hvalue\u003d\"1.0\" prefHeight\u003d\"653.0\" prefWidth\u003d\"500.0\" style\u003d\"-fx-background-color: EBEBEB;\" vbarPolicy\u003d\"ALWAYS\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "      \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        \u003cVBox fx:id\u003d\"dialogContainer\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"655.0\" prefWidth\u003d\"481.0\" style\u003d\"-fx-background-color: EBEBEB;\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "      \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "  \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "jonahtanjz": 19
    }
  },
  {
    "path": "src/test/java/duke/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "import task.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    public void createTask_createUndoneDeadlineTask_deadlineTaskReturned() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        TaskList taskList \u003d new TaskList(new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        Task createdTask \u003d taskList.createTask(TaskType.TypeOfTask.DEADLINE, \"Test\","
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "                LocalDateTime.parse(\"2020-08-23T00:00\"), false);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        assertEquals(\"[D][\\u2717] Test (by: Aug 23 2020, 00:00)\", createdTask.toString());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    public void listTask_listAllTasks_allTasksReturnedAsString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        TaskList taskList \u003d new TaskList(new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        taskList.addTask(new Todo(\"Test1\", false));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        taskList.addTask(new Todo(\"Test2\", true));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        assertEquals(\"1. [T][\\u2717] Test1\\n2. [T][\\u2713] Test2\", taskList.listTasks());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jonahtanjz": 32
    }
  },
  {
    "path": "src/test/java/task/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    public void toString_createNewDeadlineTask_deadlineTaskInfoReturned() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        assertEquals(\"[D][\\u2717] return books (by: Aug 31 2020, 18:00)\","
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "                new Deadline(\"return books\", LocalDateTime.parse(\"2020-08-31T18:00\"), false).toString());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jonahtanjz": 15
    }
  },
  {
    "path": "src/test/java/task/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "public class EventTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    public void toString_createNewEventTask_eventTaskInfoReturned() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        assertEquals(\"[E][\\u2717] 2103T Team Meeting (at: Aug 26 2020, 17:00)\","
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "                new Event(\"2103T Team Meeting\", LocalDateTime.parse(\"2020-08-26T17:00\"), false).toString());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jonahtanjz": 15
    }
  },
  {
    "path": "src/test/java/task/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "public class TodoTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    public void toString_createNewTodoTask_todoTaskInfoReturned() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "        assertEquals(\"[T][\\u2717] borrow books\","
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "                new Todo(\"borrow books\", false).toString());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jonahtanjz": 13
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "todo borrow books"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "deadline return books /by Sunday"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "todo read books"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "todo join sports club"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "list"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "jonahtanjz": 10
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jonahtanjz"
        },
        "content": "PAUSE"
      }
    ],
    "authorContributionMap": {
      "jonahtanjz": 3,
      "-": 20
    }
  }
]
