[
  {
    "path": "src/main/java/AddTaskCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "public abstract class AddTaskCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    protected String input;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        addTask(taskList, input);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        storage.saveTasks(taskList.getList());"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        taskList.printNewTask();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    public abstract void addTask(TaskList taskList, String input) throws DukeException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "erinmayg": 13
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "//public enum Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "//    list, todo, event, deadline, done, delete"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "//}"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    private String command;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    protected boolean isExit;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    public abstract void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        return isExit;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        return command;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "erinmayg": 20
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    private LocalDateTime deadline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    private Deadline (String task, LocalDateTime deadline, boolean isDone) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        super(task, isDone);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    public Deadline(String task, LocalDateTime deadline) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        super(task);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    public Deadline markDone() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        return new Deadline(task, deadline, true);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    public boolean equals(Object o) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        if (this \u003d\u003d o) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        } else if (o instanceof Deadline) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "            Deadline d \u003d (Deadline) o;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "            return d.task.equals(this.task) \u0026\u0026 d.deadline.equals(deadline);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    public LocalDate getDate() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        return deadline.toLocalDate();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    public String saveFormat() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        return \"D\" + super.saveFormat() + String.format(\"%sT%s\","
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                deadline.format(DateTimeFormatter.ofPattern(\"y-MM-dd\")),"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                deadline.format(DateTimeFormatter.ofPattern(\"HH:mm:ss\")));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        return \"[D]\" + super.toString() + String.format(\" (by: %s)\","
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                deadline.format(DateTimeFormatter.ofPattern(\"dd MMM y, h:mm a\")));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "erinmayg": 52
    }
  },
  {
    "path": "src/main/java/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "public class DeadlineCommand extends AddTaskCommand {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    public DeadlineCommand(String input) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    public void addTask(TaskList taskList, String input) throws DukeException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        taskList.addDeadline(input);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "erinmayg": 10
    }
  },
  {
    "path": "src/main/java/DeadlineInvalidDate.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "public class DeadlineInvalidDate extends InvalidDateTimeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    public DeadlineInvalidDate() {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        super(\"OOPS. You need to put \\\"/by [DateTimeFormat]\\\"\\n\" +"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                \"after a Deadline.\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "erinmayg": 6
    }
  },
  {
    "path": "src/main/java/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    private int taskNo;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    DeleteCommand(int taskNo) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        this.taskNo \u003d taskNo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        isExit \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        taskList.deleteTask(taskNo);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        storage.saveTasks(taskList.getList());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "erinmayg": 15
    }
  },
  {
    "path": "src/main/java/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    private int taskNo;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    DoneCommand(int taskNo) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        this.taskNo \u003d taskNo;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        isExit \u003d false;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        taskList.markDone(taskNo);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        storage.saveTasks(taskList.getList());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "erinmayg": 14
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    private final Ui ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    private final Storage storage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                ui.showLine(); // show the divider line (\"_______\")"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        Duke bot \u003d new Duke(\"data\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        bot.run();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 4,
      "erinmayg": 43
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    public DukeException(String msg) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "erinmayg": 5
    }
  },
  {
    "path": "src/main/java/DuplicateTaskException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "public class DuplicateTaskException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    public DuplicateTaskException() {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        super(\"OOPS. You already have this task on your list.\");"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "erinmayg": 5
    }
  },
  {
    "path": "src/main/java/EmptyTaskException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "public class EmptyTaskException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    public EmptyTaskException() {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        super(\"OOPS! The description of a task cannot be empty\");"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "erinmayg": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    private final LocalDateTime startDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    private final LocalDateTime endDate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    private Event (String task, LocalDateTime startDate, LocalDateTime endDate, boolean isDone) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        super(task, isDone);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        this.startDate \u003d startDate;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        this.endDate \u003d endDate;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    public Event(String task, LocalDateTime startDate, LocalDateTime endDate) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        super(task);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        this.startDate \u003d startDate;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        this.endDate \u003d endDate;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    public Event(String task, LocalDateTime date) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        super(task);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        this.startDate \u003d date;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        this.endDate \u003d null;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    private String dateFormat() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        if (endDate !\u003d null) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "            return String.format(\" (at: %s to %s)\","
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                    startDate.format(DateTimeFormatter.ofPattern(\"dd MMM y, h:mm a\")),"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                    startDate.toLocalDate().equals(endDate.toLocalDate())"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                            ? endDate.format(DateTimeFormatter.ofPattern(\"h:mm a\"))"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                            : endDate.format(DateTimeFormatter.ofPattern(\"dd MMM y, h:mm a\")));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "            return String.format(\" (at: %s)\","
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                    startDate.format(DateTimeFormatter.ofPattern(\"dd MMM y, h:mm a\")));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    private String dateSaveFormat() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        String startDateString \u003d String.format(\"%sT%s\","
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                startDate.format(DateTimeFormatter.ofPattern(\"y-MM-dd\")),"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                startDate.format(DateTimeFormatter.ofPattern(\"HH:mm:ss\")));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        String endDateString \u003d endDate !\u003d null"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                ? String.format(\"%sT%s\", endDate.format(DateTimeFormatter.ofPattern(\"y-MM-dd\")),"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                    endDate.format(DateTimeFormatter.ofPattern(\"HH:mm:ss\")))"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                : \"XXXXXXXXXXXXXXXXXXX\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        return startDateString + \" to \" + endDateString;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    public Event markDone() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        return new Event(task, startDate, endDate, true);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    public LocalDate getDate() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        return startDate.toLocalDate();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    public boolean equals(Object o) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        if (this \u003d\u003d o) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        } else if (o instanceof Event) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "            Event e \u003d (Event) o;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "            if (e.endDate \u003d\u003d null \u0026\u0026 endDate \u003d\u003d null) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                return e.task.equals(this.task) \u0026\u0026 e.startDate.equals(startDate);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "            } else if (e.endDate !\u003d null \u0026\u0026 endDate !\u003d null) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                return e.task.equals(this.task) \u0026\u0026 e.startDate.equals(startDate)"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                        \u0026\u0026 e.endDate.equals(endDate);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    public String saveFormat() {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        return \"E\" + super.saveFormat() + dateSaveFormat();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        return \"[E]\" + super.toString() + dateFormat();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "erinmayg": 94
    }
  },
  {
    "path": "src/main/java/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "public class EventCommand extends AddTaskCommand {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    public EventCommand(String input) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    public void addTask(TaskList taskList, String input) throws DukeException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        taskList.addEvent(input);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "erinmayg": 10
    }
  },
  {
    "path": "src/main/java/EventInvalidDate.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "public class EventInvalidDate extends InvalidDateTimeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    protected EventInvalidDate() {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        super(\"OOPS. You need to put \\\"/at [DateTimeFormat]\\\" or\\n\" +"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                \"\\\"/at [DateTimeFormat] to [DateTimeFormat]\\\" after an Event.\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "erinmayg": 6
    }
  },
  {
    "path": "src/main/java/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    public ExitCommand() {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        isExit \u003d true;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        ui.bye();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "erinmayg": 11
    }
  },
  {
    "path": "src/main/java/InvalidDateException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "public class InvalidDateException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    public InvalidDateException() {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        super(\"Invalid Date Format. Use YYYY-MM-DD\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    protected InvalidDateException(String msg) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "erinmayg": 10
    }
  },
  {
    "path": "src/main/java/InvalidDateTimeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "public class InvalidDateTimeException extends InvalidDateException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    public static String DTF \u003d \"The following DateTimeFormat is valid:\\n\""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "            + \"{YYYY-MM-DD}T{HH:MM:SS}\\n\""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "            + \"{YYYY-MM-DD}T{HH:MM}\\n\""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "            + \"{YYYY-MM-DD}\\n\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "            + \"{HH:MM:SS}\\n\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "            + \"{HH:MM}\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    public InvalidDateTimeException() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        super(\"\" + DTF);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    protected InvalidDateTimeException(String msg) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        super(msg + \"\\n\\n\" + DTF);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "erinmayg": 17
    }
  },
  {
    "path": "src/main/java/InvalidIndexException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "public class InvalidIndexException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    public InvalidIndexException(int listSize) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        super(\"Invalid index.\\n\" +"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                \"You have \" + listSize + \" items in your list.\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "erinmayg": 6
    }
  },
  {
    "path": "src/main/java/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    private String fullCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    public ListCommand(String fullCommand) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        this.fullCommand \u003d fullCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        taskList.processList(fullCommand);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "erinmayg": 13
    }
  },
  {
    "path": "src/main/java/NoIndexException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "public class NoIndexException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    public NoIndexException(String deleteOrDone) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        super(\"Invalid format. After \\\"\" + deleteOrDone + \"\\\", you need to put a positive integer\");"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "erinmayg": 5
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "//    private TaskList taskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "//    private static final String end \u003d \"bye\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "//    public Parser(TaskList taskList) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "//        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    public static Command parse(String fullCommand) throws UnrecognizedTaskException, NoIndexException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        fullCommand \u003d fullCommand.trim();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        String firstWord \u003d fullCommand.contains(\" \")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                ? fullCommand.substring(0, fullCommand.indexOf(\" \")).toLowerCase()"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                : fullCommand.toLowerCase();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        switch (firstWord) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                return new ToDoCommand(fullCommand);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                // Fallthrough"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                return new EventCommand(fullCommand);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                // Fallthrough"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                return new DeadlineCommand(fullCommand);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                // Fallthrough"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                return new ListCommand(fullCommand);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                // Fallthrough"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                if (fullCommand.equalsIgnoreCase(\"done\")) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                    throw new NoIndexException(\"done\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                        int taskNo \u003d Integer.parseInt(fullCommand.substring(5)) - 1;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                        return new DoneCommand(taskNo);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                    } catch (NumberFormatException numError) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                        throw new NoIndexException(\"done\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                // Fallthrough"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                if (fullCommand.equalsIgnoreCase(\"delete\")) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                    throw new NoIndexException(\"delete\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                        int taskNo \u003d Integer.parseInt(fullCommand.substring(7)) - 1;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                        return new DeleteCommand(taskNo);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                    } catch (NumberFormatException numError) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                        throw new NoIndexException(\"delete\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                // Fallthrough"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "            case \"bye\":"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                return new ExitCommand();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                // Fallthrough"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                throw new UnrecognizedTaskException();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                // Fallthrough"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "//        try {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "//            return Command.valueOf(firstWord);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "//        } catch (IllegalArgumentException illegalArg) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "//            throw new UnrecognizedTaskException();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "//        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "//    public void parse(String fullCommand) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "//"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "//        while (!fullCommand.equalsIgnoreCase(end)) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "//"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "//            try {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "//"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "//                Command command \u003d getCommand(fullCommand.trim());"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "//"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "//                if (command \u003d\u003d Command.list) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "//"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "//                    taskList.processList(fullCommand);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "//"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "//                } else if (command \u003d\u003d Command.done) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "//                    taskList.processDone(fullCommand);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "//                } else if (command \u003d\u003d Command.delete) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "//                    taskList.processDelete(fullCommand);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "//                } else {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "//                    taskList.addTask(command, fullCommand.trim());"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "//                }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "//"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "//            } catch (DukeException error) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "//"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "//                System.out.println(error.getMessage());"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "//"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "//            } catch (IndexOutOfBoundsException indexError) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "//"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "//                System.out.println(\"Invalid index.\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "//                taskList.printListSize();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "//            }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "//        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "erinmayg": 107
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    private Path dukeFile;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        createFile(filePath);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    private void createFile(String filePath) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "            if (Files.notExists(Paths.get(filePath))) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                Files.createDirectory(Paths.get(filePath));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "            if (Files.notExists(Paths.get(filePath + \"/duke.txt\"))) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                dukeFile \u003d Files.createFile(Paths.get(filePath + \"/duke.txt\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                dukeFile \u003d Paths.get(filePath + \"/duke.txt\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        } catch (IOException ioException) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "            ioException.printStackTrace();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    public void saveTasks(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        StringBuilder taskString \u003d new StringBuilder();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        for (Task task: taskList) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "            taskString.append(task.saveFormat());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "            taskString.append(\"\\n\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "            Files.writeString(dukeFile, taskString);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        } catch (IOException ioException) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "            ioException.printStackTrace();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "            ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "            for (String task : Files.readAllLines(dukeFile)) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                taskList.add(readTask(task));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "            return taskList;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        } catch (IOException ioException) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "            ioException.printStackTrace();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "            throw new DukeException(\"Loading Error\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    private Task readTask(String task) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        switch (task.charAt(0)) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "            case \u0027T\u0027:"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                ToDo toDo \u003d new ToDo(task.substring(3));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                if (task.charAt(1) \u003d\u003d \u00271\u0027) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                    toDo \u003d toDo.markDone();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                return toDo;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                // Fallthrough"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "            case \u0027D\u0027:"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                Deadline deadline \u003d new Deadline(task.substring(3, task.length() - 19),"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                        LocalDateTime.parse(task.substring(task.length() - 19)));"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                if (task.charAt(1) \u003d\u003d \u00271\u0027) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                    deadline \u003d deadline.markDone();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                return deadline;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                // Fallthrough"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "            case \u0027E\u0027:"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                String taskText \u003d task.substring(3, task.length() - 43);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                String startDateString \u003d task.substring(task.length() - 42, task.length() - 23);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                String endDateString \u003d task.substring(task.length() - 19);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                Event event \u003d new Event(taskText,"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                        LocalDateTime.parse(startDateString),"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                        endDateString.equals(\"XXXXXXXXXXXXXXXXXXX\")"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                                ? null"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                                : LocalDateTime.parse(endDateString));"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                if (task.charAt(1) \u003d\u003d \u00271\u0027) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                    event \u003d event.markDone();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                return event;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                // Fallthrough"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                return null;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                // Fallthrough"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "erinmayg": 114
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    protected final String task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    protected final boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    protected Task(String task, boolean isDone) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    public Task(String task){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    public abstract Task markDone();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    public abstract LocalDate getDate();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    public boolean equals(Object o) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        if (this \u003d\u003d o) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        } else if (o instanceof Task) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "            Task t \u003d (Task) o;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "            return t.task.equals(this.task);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        String symbol \u003d isDone ? \"[✓] \" : \"[✗] \";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        return String.format(\"%s %s\", symbol, task);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    public String saveFormat() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        String isDoneString \u003d isDone ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        return String.format(\"%s %s \", isDoneString, task);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "erinmayg": 43
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    private ArrayList\u003cTask\u003e list;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        this.list \u003d taskList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        this.list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    public void processList(String fullCommand) throws InvalidDateException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        if (fullCommand.trim().equalsIgnoreCase(\"list\")) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "            printList();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "            LocalDate date \u003d getDateTime(fullCommand.substring("
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                    \"list\".length()).trim()).toLocalDate();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "            printList(date);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    private void printList() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        if (list.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "            System.out.println(\"You have nothing on your list!\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        int i \u003d 1;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        for (Task todo : list) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "            System.out.println(i + \". \" + todo);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "            i++;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    private void printList(LocalDate date) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        int i \u003d 0;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        for (Task task : list) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "            if (task.getDate().equals(date)) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                if (i \u003d\u003d 0) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                    System.out.println(\"Here\u0027s your list on \" +"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                            date.format(DateTimeFormatter.ofPattern(\"dd MMM y:\")));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                System.out.println((i + 1) + \". \" + task);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                i++;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        if (i \u003d\u003d 0 || list.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "            System.out.println(\"You have nothing to do on \" +"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                    date.format(DateTimeFormatter.ofPattern(\"dd MMM y.\")));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    public void addToDo(String input) throws DuplicateTaskException, EmptyTaskException {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "            String task \u003d input.substring(\"todo\".length() + 1);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "            Task toDo \u003d new ToDo(task);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "            if (list.contains(toDo)) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                throw new DuplicateTaskException();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "            list.add(toDo);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        } catch (StringIndexOutOfBoundsException indexError) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "            throw new EmptyTaskException();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    public void addEvent(String input) throws DuplicateTaskException, EmptyTaskException, EventInvalidDate {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        String task;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "            task \u003d input.substring(\"event\".length() + 1);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "            throw new EmptyTaskException();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "            task \u003d task.substring(0, task.indexOf(\u0027/\u0027));"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "            LocalDateTime date \u003d input.contains(\"to \")"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                    ? getDateTime(input.substring(input.indexOf(\"/at\") + 4, input.indexOf(\"to \")))"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                    : getDateTime(input.substring(input.indexOf(\"/at\") + 4));"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "            LocalDateTime endDate \u003d null;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "            if (input.contains(\"to \")) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                String endDateString \u003d input.substring(input.indexOf(\"to \") + 3);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                if (endDateString.length() \u003c\u003d 8) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                    endDate \u003d LocalDateTime.of(date.toLocalDate(), LocalTime.parse(endDateString));"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                    endDate \u003d getDateTime(endDateString);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "            Event event \u003d endDate !\u003d null"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                    ? new Event(task, date, endDate)"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                    : new Event(task, date);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "            if (list.contains(event)) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                throw new DuplicateTaskException();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                list.add(event);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        } catch (StringIndexOutOfBoundsException | InvalidDateException e) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "            throw new EventInvalidDate();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    public void addDeadline(String input) throws DuplicateTaskException, EmptyTaskException, DeadlineInvalidDate {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        String task;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "            task \u003d input.substring(\"deadline\".length() + 1);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "            throw new EmptyTaskException();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "            task \u003d task.substring(0, task.indexOf(\u0027/\u0027));"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "            LocalDateTime date \u003d getDateTime(input.substring(input.indexOf(\"/by\") + 4));"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "            Deadline deadline \u003d new Deadline(task, date);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "            if (list.contains(deadline)) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                throw new DuplicateTaskException();"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                list.add(deadline);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        } catch (StringIndexOutOfBoundsException | InvalidDateException e) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "            throw new DeadlineInvalidDate();"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    public void markDone(int taskNo) throws InvalidIndexException {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "            list.set(taskNo, list.get(taskNo).markDone());"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "            System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "            System.out.println(list.get(taskNo));"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "            throw new InvalidIndexException(list.size());"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    public void deleteTask(int taskNo) throws InvalidIndexException {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "            Task deleted \u003d list.get(taskNo);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "            list.remove(taskNo);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "            System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "            System.out.println(deleted);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "            throw new InvalidIndexException(list.size());"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    private LocalDateTime getDateTime(String dateString) throws InvalidDateException {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        dateString \u003d dateString.trim();"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "            if (dateString.length() \u003d\u003d 19 || dateString.length() \u003d\u003d 16) {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                return LocalDateTime.parse(dateString);"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "            } else if (dateString.contains(\"-\")) {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                return LocalDateTime.of(LocalDate.parse(dateString), LocalTime.MAX);"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "            } else if (dateString.contains(\":\")) {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                return LocalDateTime.of(LocalDate.now(), LocalTime.parse(dateString));"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                throw new InvalidDateException();"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "            throw new InvalidDateException();"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    public void printListSize() {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        String taskText \u003d list.size() \u003d\u003d 1 ? \" task \" : \" tasks \";"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        System.out.println(\"You have \" + list.size() + taskText + \"on your list.\");"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    public void printNewTask() {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        System.out.println(list.get(list.size() - 1).toString());"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        printListSize();"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    public ArrayList\u003cTask\u003e getList() {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "erinmayg": 214
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    private ToDo (String task, boolean isDone) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        super(task, isDone);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    public ToDo(String task) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        super(task);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    public ToDo markDone() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        return new ToDo(task, true);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    public LocalDate getDate() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        return LocalDate.now();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    public boolean equals(Object o) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        return o instanceof ToDo \u0026\u0026 super.equals(o);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    public String saveFormat() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        return \"T\" + super.saveFormat();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "erinmayg": 37
    }
  },
  {
    "path": "src/main/java/ToDoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "public class ToDoCommand extends AddTaskCommand {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    public ToDoCommand(String input) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    public void addTask(TaskList taskList, String input) throws DukeException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        taskList.addToDo(input);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "erinmayg": 11
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    public static final String line \u003d \"____________________________________________________________\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    private final String botName \u003d \"Bolot\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    private final Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    private void printLogo() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        System.out.println(\"Greetings, human. I am\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        System.out.println(\" ______      ___   _____       ___    _________\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        System.out.println(\"|_   _ \\\\   .\u0027   `.|_   _|    .\u0027   `. |  _   _  |\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        System.out.println(\"  | |_) | /  .-.  \\\\ | |     /  .-.  \\\\|_/ | | \\\\_|\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        System.out.println(\" _| |__) |\\\\  `-\u0027  /_| |__/ |\\\\  `-\u0027  /   _| |_\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        System.out.println(\"|_______/  `.___.\u0027|________| `.___.\u0027   |_____|\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    private void greet() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        System.out.println(\"Hello! I am \" + botName + \", your personal chat-bot companion.\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        System.out.println(\"How may I help you?\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        printLogo();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        greet();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    public void bye() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        sc.close();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        System.out.println(\"Bye! Thank you for chatting with \" + botName + \"!\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        System.out.println(\"Hope to see you again soon!\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        return sc.nextLine();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    public void showError(String errorMessage) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        System.out.println(errorMessage);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        System.out.println(\"Unable to load the data. Creating new file...\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "erinmayg": 52
    }
  },
  {
    "path": "src/main/java/UnrecognizedTaskException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "public class UnrecognizedTaskException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    public UnrecognizedTaskException() {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        super(\"OOPS. Bolot does not recognize the command :( Try again.\");"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "erinmayg": 5
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "todo sleep"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "bleh"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "bleh kjhfkdsh"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "todo"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "todo sleep"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "event"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "event bfast /at"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "event bfast /at 2020-08-24T10:00 to 12:00"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "list"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "deadline project"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "deadline project /by 2020-08-27"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "list 2020-08-24"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "list"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "list"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "list"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "delete 4"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "erinmayg": 23
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "javac -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "-": 20,
      "erinmayg": 1
    }
  }
]
