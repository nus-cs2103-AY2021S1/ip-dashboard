[
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "public enum Command{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    INIT,"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    LIST,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    BYE,"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    DONE,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    TODO,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    DEADLINE,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    EVENT,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    DELETE,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    INVALID;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    static private String originalCommand \u003d \"\"; //originalCommand stores the original command (case sensitive)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    static private String action \u003d \"\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    static private String taskContent \u003d \"\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    Command(){}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "//    Command(String command){"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "//        this.command \u003d command.toUpperCase();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "//        this.originalCommand \u003d command;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    static String echo(){"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        return originalCommand;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    static String getTaskContent(){"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        return taskContent;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    static String getAction(){return action;}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "     * Returns a Command object that enumerate original command"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "     * @param command a string that contains the command"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "     * @return enumerated command"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    static Command getCommand(String command){"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        taskContent \u003d \"\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        action \u003d \"\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        originalCommand \u003d \"\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        originalCommand \u003d command;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        String[] splitedCommand \u003d command.split(\" \");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        action \u003d splitedCommand[0];"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        if (splitedCommand.length \u003e 1) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            taskContent \u003d String.join(\"\","
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                    Arrays.copyOfRange(splitedCommand,"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                                1,"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                                splitedCommand.length)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            );"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            return Command.valueOf(action.toUpperCase());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        } catch (Exception e){"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            return Command.INVALID;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Raymond0212": 60
    }
  },
  {
    "path": "src/main/java/CommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "public class CommandException extends DukeException{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    public CommandException(String message){"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Raymond0212": 5
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "public class Deadline extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    private String time;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    private String taskType \u003d \"D\";"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    Deadline(String taskName, String time){"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        super(taskName);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    private String getTime(){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        return this.time;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    public String getTaskType(){"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        return this.taskType;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        return super.toString()+\" (by: \" + this.time + \")\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Raymond0212": 22
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        String logo \u003d   \"_|_|_|_|_|    _|_|                _|_|_|      _|_|     _|  \\n\" +"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                        \"    _|      _|    _|              _|    _|  _|    _|   _|  \\n\" +"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                        \"    _|      _|    _|  _|_|_|_|_|  _|    _|  _|    _|   _|  \\n\" +"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                        \"    _|      _|    _|              _|    _|  _|    _|       \\n\" +"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                        \"    _|        _|_|                _|_|_|      _|_|     _|  \";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        System.out.println(\"This is a Duke Project.\\n\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        System.out.println(\"What you are going to do today?\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        ToDoList.start();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Raymond0212": 10,
      "-": 5
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "public class DukeException extends Exception{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    public DukeException(String message){"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Raymond0212": 5
    }
  },
  {
    "path": "src/main/java/EmptyDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "public class EmptyDescriptionException extends DukeException{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    public EmptyDescriptionException(String message){"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Raymond0212": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "public class Event extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    private String time;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    private String taskType \u003d \"E\";"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    Event(String taskName, String time){"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        super(taskName);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    private String getTime(){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        return this.time;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    public String getTaskType(){"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        return this.taskType;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        return super.toString()+\" (at: \" + this.time + \")\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Raymond0212": 23
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "public class Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    private String name;        // stores the name of this task"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    private Boolean closed \u003d false;     //indicates the status of this task"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    private String taskType \u003d \" \";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    Task(){}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    Task(String taskName){"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        this.name \u003d taskName;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    String getName(){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        return this.name;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "     * Returns the current status of this task and close current task"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "     * @return status of current task"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    Boolean closeTask(){"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        this.closed \u003d true;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        return this.closed;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "     * @return status of current task"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    Boolean checkDone(){"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        return this.closed;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    public String getTaskType(){"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        return this.taskType;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        return this.name;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Raymond0212": 41
    }
  },
  {
    "path": "src/main/java/ToDoList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "public class ToDoList{"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    private ArrayList\u003cTask\u003e todoList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    private int undoneCount \u003d 0;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "     * It starts to read commands from screen and stops only when \"bye\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "     * command is read."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    public static ToDoList start(){"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        Command command \u003d Command.INIT;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        ToDoList todo \u003d new ToDoList();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        while (command !\u003d Command.BYE){      //when last command was bye"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            System.out.print(\"\u003e \");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            command \u003d Command.getCommand(sc.nextLine());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            todo.runCommand(command);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        sc.close();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        return todo;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    private void runCommand(Command command){"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            switch (command) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                case BYE:"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                    print(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                case LIST:"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                    printList();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                case DONE:"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                        int index \u003d Integer.parseInt(command.getTaskContent()) - 1;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                        finishTask(index);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                    } catch (IndexOutOfBoundsException e){"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                        print(\"Sorry, I can\u0027t do that for you.\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                        print(\"You only have \" + String.format(\"%d\",todoList.size()) + \" tasks on your list.\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                    } catch (Exception e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                            String tmp \u003d command.getTaskContent();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                            if (tmp.length() \u003c 1)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                                throw new EmptyDescriptionException(command.getAction());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                            throw new WrongDescriptionException(command.getAction());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                        } catch (EmptyDescriptionException error) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                            print(\"The description of \u0027done\u0027 should not be empty.\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                            print(\"Please re-enter your command.\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                        } catch (WrongDescriptionException error){"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                            print(\"The description of \u0027done\u0027 should be an integer.\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                            print(\"Please re-enter your command.\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                case TODO:"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                    addTodo(command.getTaskContent());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                case DEADLINE:"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                        addDeadline(command.getTaskContent());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                    } catch (WrongDescriptionException e){"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                        print(\"The format of \u0027deadline\u0027 is:\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                        print(\"\u003e deadline TASK /by TIME\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                        print(\"Please re-enter your command.\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                case EVENT:"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                        addEvent(command.getTaskContent());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                    } catch (WrongDescriptionException e){"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                        print(\"The format of \u0027event\u0027 is:\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                        print(\"\u003e event TASK /at TIME\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                        print(\"Please re-enter your command.\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                case DELETE:"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                        int index \u003d Integer.parseInt(command.getTaskContent()) - 1;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                        deleteTask(index);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                    } catch (IndexOutOfBoundsException e){"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                        print(\"Sorry, I can\u0027t do that for you.\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                        print(\"You only have \" + String.format(\"%d\",todoList.size()) + \" tasks on your list.\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                    } catch (Exception e) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                            String tmp \u003d command.getTaskContent();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                            if (tmp.length() \u003c 1)"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                                throw new EmptyDescriptionException(command.getAction());"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                            throw new WrongDescriptionException(command.getAction());"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                        } catch (EmptyDescriptionException error) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                            print(\"The description of \u0027delete\u0027 should not be empty.\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                            print(\"Please re-enter your command.\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                        } catch (WrongDescriptionException error){"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                            print(\"The description of \u0027delete\u0027 should be an integer.\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                            print(\"Please re-enter your command.\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                case INVALID:"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                    throw new CommandException(command.echo() + \" is an invalid command.\\n\"+"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                                                \"please try another one.\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                    System.out.println(\"This default situation should not happen. Please contact the idiot programmer.\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        catch (CommandException e){"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            print(command.echo() + \" is an invalid command.\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            print(\"please try another one.\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        catch (EmptyDescriptionException e){"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            print(\"The description of \u0027\"+command.getAction()+\"\u0027 should not be empty.\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            print(\"Please re-enter your command.\");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        catch (Exception e){"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            System.out.println(\"This situation is not supposed to happen. Please contact the idiot programmer.\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    private void addTodo(String taskContent) throws EmptyDescriptionException{"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        if (taskContent.length() \u003c 1)"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            throw new EmptyDescriptionException(\"\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        Task task \u003d new Todo(taskContent);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        this.todoList.add(task);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        print(\"The following task has been added to your list:\");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        print(\"  [T][ ] \"+task.toString());"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        print(String.format(\"Now you have %d tasks in your list.\", todoList.size()));"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        this.undoneCount++;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        print(String.format(\"There are %d tasks waiting to be done.\", this.undoneCount));"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    private void addDeadline(String taskContent) throws WrongDescriptionException, EmptyDescriptionException{"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        if (taskContent.length() \u003c 1)"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            throw new EmptyDescriptionException(\"\");"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            String[] splitedContent \u003d taskContent.split(\"/by\");"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            Task task \u003d new Deadline(splitedContent[0], splitedContent[1]);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            this.todoList.add(task);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            print(\"The following task has been added to your list:\");"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            print(\"  [D][ ] \"+task.toString());"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            print(String.format(\"Now you have %d tasks in your list.\", todoList.size()));"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            this.undoneCount++;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            print(String.format(\"There are %d tasks waiting to be done.\", this.undoneCount));"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        } catch (Exception e){"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            throw new WrongDescriptionException(\"\");"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    private void addEvent(String taskContent) throws WrongDescriptionException, EmptyDescriptionException{"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        if (taskContent.length() \u003c 1)"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            throw new EmptyDescriptionException(\"\");"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            String[] splitedContent \u003d taskContent.split(\"/at\");"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            Task task \u003d new Event(splitedContent[0],splitedContent[1]);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            this.todoList.add(task);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            print(\"The following task has been added to your list:\");"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            print(\"  [E][ ] \"+task.toString());"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            print(String.format(\"Now you have %d tasks in your list.\", todoList.size()));"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            this.undoneCount++;"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            print(String.format(\"There are %d tasks waiting to be done.\", this.undoneCount));"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        } catch (Exception e){"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            throw new WrongDescriptionException(\"\");"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    private void printList(){"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        for (int i \u003d 0; i \u003c todoList.size(); i++){"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            Task task \u003d todoList.get(i);"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            if (task.checkDone())"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                print(i+1 + \".[\"+task.getTaskType()+\"][X] \" + task.toString());"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            else"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                print(i+1 + \".[\"+task.getTaskType()+\"][ ] \" + task.toString());"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    private void finishTask(int index) throws IndexOutOfBoundsException{"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            Task task \u003d todoList.get(index);"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            this.undoneCount--;"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            print(\"Nice! I\u0027ve marked following task as done:\");"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            task.closeTask();"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            print(\"  [\"+task.getTaskType()+\"][X] \" + task.toString());"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            print(String.format(\"Now you have %d tasks waiting to be done.\", this.undoneCount));"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        } catch (IndexOutOfBoundsException e){"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            throw new IndexOutOfBoundsException();"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    private void deleteTask(int index) throws IndexOutOfBoundsException{"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            Task task \u003d todoList.get(index);"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            if (!task.checkDone())"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                this.undoneCount--;"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            todoList.remove(index);"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            print(\"Nice! I\u0027ve deleted following task as done:\");"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            if (task.checkDone())"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                print(\"  [\"+task.getTaskType()+\"][X] \" + task.toString());"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            else"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                print(\"  [\"+task.getTaskType()+\"][ ] \" + task.toString());"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            print(String.format(\"Now you have %d tasks waiting to be done.\", this.undoneCount));"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        } catch (IndexOutOfBoundsException e){"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            throw new IndexOutOfBoundsException();"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        }"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    private void print(String str){"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        System.out.println(\"    \" + str);"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    }"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": ""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    private void print(String prefix, String str){"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        System.out.println(prefix+str);"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    }"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Raymond0212": 215
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "public class Todo extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    private String taskType \u003d \"T\";"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    Todo(String taskName){"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        super(taskName);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    public String getTaskType(){"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        return this.taskType;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Raymond0212": 11
    }
  },
  {
    "path": "src/main/java/WrongDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "public class WrongDescriptionException extends DukeException{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    public WrongDescriptionException(String message){"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Raymond0212": 5
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "todo t1"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "todo t2"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "deadline t3 /by 1"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "event t4 /at 2"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "list"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "hello"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "done 100"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "deadline 1"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "event"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "event 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "delete -1"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "delete"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "Raymond0212": 17
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "SET MY_PATH\u003dC:\\Users\\cs623\\Docs\\GitHub\\ip"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "if not exist \"%MY_PATH%\\bin\" mkdir \"%MY_PATH%\\bin\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "javac  -cp \"%MY_PATH%\\src\\main\\java\" -Xlint:none -d \"%MY_PATH%\\bin\" \"%MY_PATH%\\src\\main\\java\\Duke.java\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "FC /w ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "Raymond0212": 5,
      "-": 18
    }
  }
]
