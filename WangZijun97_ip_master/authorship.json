[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# Duke project template"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "1. Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Open or Import`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "1. After the importing is complete, locate the `src/main/java/duke/Duke.java` file, right-click it, and choose `Run Duke.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    ____        _        "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      }
    ],
    "authorContributionMap": {
      "WangZijun97": 1,
      "-": 25
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "import duke.exception.DukeInputException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "import duke.exception.DukeSaveDataException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "import duke.io.InputHandler;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "import duke.io.OutputHandler;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    private TaskManager taskManager;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    private Path filePath;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    private SaveManager saveManager;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        this(Path.of(\"/data\", \"data.txt\"));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    public Duke(Path filePath) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        this.ui \u003d new Ui(new InputHandler(), new OutputHandler());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        this.saveManager \u003d new SaveManager(this.filePath);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "            this.taskManager \u003d saveManager.load();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        } catch (DukeSaveDataException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "            this.ui.displayException(e);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "            this.taskManager \u003d new TaskManager();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        while(true) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "                Command command \u003d Parser.parse(this.ui.readCommand());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "                command.execute(this.ui, this.taskManager, this.saveManager);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "                if (command.isByeCommand()) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "            } catch (DukeInputException e) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "                ui.displayException(e);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        //initialize Duke with save data and send welcome message"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        Duke duke \u003d new Duke(Path.of(\"data/data.txt\"));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        duke.ui.displayGreet();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        //input loop"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        duke.run();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        /*testing code to check if printout to savefile worked"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "            Scanner sc2 \u003d new Scanner(new File(\"/data/data.txt\"));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "            while (sc2.hasNext()) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "                System.out.println(sc2.nextLine());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "            System.out.println(e.toString());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "         */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WangZijun97": 71,
      "-": 3
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "import duke.command.ByeCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "import duke.command.DeadlineCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "import duke.command.DoneCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "import duke.command.EventCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "import duke.command.ToDoCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "import duke.exception.DukeInputException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    public static Command parse(String userCommand) throws DukeInputException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        String[] inputs \u003d userCommand.split(\" \", 2);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        String command \u003d inputs[0];"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        String params \u003d \"\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        if (inputs.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "            switch (command) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "            case \"bye\":"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "                return new ByeCommand();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "                return new ListCommand();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        } else if (inputs.length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "            params \u003d inputs[1];"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "            switch (command) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "                return new DoneCommand(params);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "                return new ToDoCommand(params);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "                return new DeadlineCommand(params);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "                return new EventCommand(params);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "                return new DeleteCommand(params);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        throw new DukeInputException(\"Invalid command \u003c\" + userCommand + \"\u003e given.\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WangZijun97": 51
    }
  },
  {
    "path": "src/main/java/duke/SaveManager.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "import duke.exception.DukeSaveDataException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "import java.nio.file.NoSuchFileException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "public class SaveManager {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    private Path saveFilePath;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    public SaveManager(Path saveFilePath) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        this.saveFilePath \u003d saveFilePath;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    public TaskManager load() throws DukeSaveDataException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "            TaskManager taskManager \u003d new TaskManager();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "            BufferedReader br \u003d Files.newBufferedReader(this.saveFilePath);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "            String currLine \u003d br.readLine();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "            while (currLine !\u003d null) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "                taskManager.storeTask(this.loadTaskFromSave(currLine));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "                currLine \u003d br.readLine();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "            return taskManager;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        } catch (NoSuchFileException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "                Files.createDirectories(this.saveFilePath.getParent());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "                Files.createFile(this.saveFilePath);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "            } catch (IOException e2) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "                throw new DukeSaveDataException(\"Unable to load from save file or create new save file\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "            throw new DukeSaveDataException(\"Unable to load from save file - \" + e.toString());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "            throw new DukeSaveDataException(\"Unable to load from save file - \" + e.toString());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    public void save(TaskManager taskManager) throws DukeSaveDataException{"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        final String[] saveData \u003d {\"\"};"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        taskManager.forEach(task -\u003e saveData[0] +\u003d this.toSaveFormat(task.convertToHashMap()));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "            BufferedWriter bw \u003d Files.newBufferedWriter(this.saveFilePath);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "            bw.write(saveData[0]);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "            bw.close();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "            throw new DukeSaveDataException(\"Unable to save to file at \u003c\" + this.saveFilePath + \"\u003e\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    public String keyValueToString(String key, String value) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        return \"{\\\"\" + key + \"\\\":\\\"\" + value + \"\\\"}\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    public String toSaveFormat(HashMap\u003cString, String\u003e objectData) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        HashMap\u003cString, String\u003e copyData \u003d new HashMap\u003c\u003e(objectData);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        ArrayList\u003cString\u003e saveStrings \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        saveStrings.add(this.keyValueToString(\"type\", copyData.get(\"type\")));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        //remove \"type\" and iterate through the other key,value pairs in input HashMap data"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        copyData.remove(\"type\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        copyData.forEach((key, value) -\u003e saveStrings.add(this.keyValueToString(key, value)));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        //convert ArrayList to String and output"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        return saveStrings.toString() + \"\\n\";"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    public HashMap\u003cString, String\u003e loadMapFromSave(String objectData) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        String copyData \u003d objectData.substring(2, objectData.length()-2);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        String[] paramsList \u003d copyData.split(\"}, \\\\{\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        HashMap\u003cString, String\u003e paramsMap \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        for (int i \u003d 0; i \u003c paramsList.length; i++) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "            String[] keyValPair \u003d paramsList[i]"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "                    .substring(1, paramsList[i].length() - 1)"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "                    .split(\"\\\":\\\"\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "            paramsMap.put(keyValPair[0], keyValPair[1]);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        return paramsMap;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    public Task loadTaskFromMap(HashMap\u003cString, String\u003e params) throws DukeSaveDataException{"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        String type \u003d params.get(\"type\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        String name \u003d params.get(\"name\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        boolean isDone \u003d params.get(\"done\").equals(\"true\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        if (type.equals(\"duke.task.Task\")) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "            return new Task(name, isDone);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        } else if (type.equals(\"duke.task.ToDo\")) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "            return new ToDo(name, isDone);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        } else if (type.equals(\"duke.task.Deadline\")) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "            return new Deadline(name, params.get(\"deadline\"), isDone);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        } else if (type.equals(\"duke.task.Event\")) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "            return new Event(name, params.get(\"when\"), isDone);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "            throw new DukeSaveDataException(\"Save Data Error: \" + params.toString());"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    public Task loadTaskFromSave(String objectData) throws DukeSaveDataException{"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        return this.loadTaskFromMap(this.loadMapFromSave(objectData));"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WangZijun97": 116
    }
  },
  {
    "path": "src/main/java/duke/TaskManager.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "import java.util.function.Consumer;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "public class TaskManager {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    private List\u003cTask\u003e storage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    public TaskManager() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        this.storage \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    public TaskManager(List\u003cTask\u003e fromSaveData) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        this.storage \u003d new ArrayList\u003c\u003e(fromSaveData);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    public List\u003cTask\u003e getAllTasks() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        return new ArrayList\u003c\u003e(this.storage);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    public void storeTask(Task t) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        this.storage.add(t);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    public Task getTask(int index) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        return this.storage.get(index);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    public Task removeTask(int index) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        return this.storage.remove(index);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    public void forEach(Consumer\u003c? super Task\u003e action) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        this.storage.forEach(action);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        return this.storage.size();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        String printString \u003d \"\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        for (int i \u003d 0; i \u003c this.size(); i++) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "            printString +\u003d (i + 1) + \". \" + this.getTask(i).toString() + \"\\n\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        return printString;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WangZijun97": 53
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "import duke.io.InputHandler;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "import duke.io.OutputHandler;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "//handles IO between app and user"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    private InputHandler inputHandler;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    private OutputHandler outputHandler;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    public Ui(InputHandler in, OutputHandler out) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        this.inputHandler \u003d in;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        this.outputHandler \u003d out;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    public void displayGreet() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        this.display(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    public void displayGoodbye() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        this.display(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    public void display(String output) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        this.outputHandler.print(output);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    public void displayException(Exception e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        this.display(e.getMessage());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        return this.inputHandler.input();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WangZijun97": 42
    }
  },
  {
    "path": "src/main/java/duke/command/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "import duke.SaveManager;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "import duke.TaskManager;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "import duke.exception.DukeSaveDataException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    public void execute(Ui ui, TaskManager taskManager, SaveManager saveManager) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        ui.displayGoodbye();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "            saveManager.save(taskManager);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        } catch (DukeSaveDataException e) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "            ui.displayException(e);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    public boolean isByeCommand() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WangZijun97": 23
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "import duke.SaveManager;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "import duke.TaskManager;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    public abstract void execute(Ui ui, TaskManager taskManager, SaveManager saveManager);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    public abstract boolean isByeCommand();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        return this.getClass().getName();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WangZijun97": 15
    }
  },
  {
    "path": "src/main/java/duke/command/ComplexCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "public abstract class ComplexCommand extends Command{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    public String params;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    public ComplexCommand(String params) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        this.params \u003d params;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        return super.toString() + \" | \" + this.params;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WangZijun97": 14
    }
  },
  {
    "path": "src/main/java/duke/command/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "import duke.SaveManager;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "import duke.TaskManager;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "import duke.exception.DukeInputException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "public class DeadlineCommand extends ComplexCommand {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    public DeadlineCommand(String params) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        super(params);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    public void execute(Ui ui, TaskManager taskManager, SaveManager saveManager) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "            String[] splitParams \u003d this.parseParams();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "            Deadline newDeadline \u003d new Deadline(splitParams[0], splitParams[1]);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "            taskManager.storeTask(newDeadline);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        } catch (DukeInputException e) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "            ui.displayException(e);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    public String[] parseParams() throws DukeInputException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        if (this.params.equals(\"\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "            throw new DukeInputException(\"\u0027deadline\u0027 requires parameters.\\n\" +"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "                    \"Use case: deadline \u003cname\u003e /by \u003cdeadline\u003e\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        String[] splitParams \u003d this.params.split(\"/by \", 2);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        if (splitParams.length !\u003d 2) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "            throw new DukeInputException(\"\u003c\" + this.params + \"\u003e is not valid for the \u0027deadline\u0027 command.\\n\" +"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "                    \"Please add a /by deadline to the task.\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        return splitParams;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    public boolean isByeCommand() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WangZijun97": 44
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "import duke.SaveManager;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "import duke.TaskManager;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "import duke.exception.DukeInputException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "public class DeleteCommand extends ComplexCommand {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    public DeleteCommand(String params) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        super(params);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    public void execute(Ui ui, TaskManager taskManager, SaveManager saveManager) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "            int index \u003d this.parseParams(taskManager.size());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "            Task temp \u003d taskManager.removeTask(index-1);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "            ui.display(\"Alright. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "            ui.display(\"\\t\" + temp.toString());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "            ui.display(\"Now you have \" + taskManager.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        } catch (DukeInputException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "            ui.displayException(e);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    public int parseParams(int taskManagerSize) throws DukeInputException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        if (this.params.equals(\"\")) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "            throw new DukeInputException(\"\u0027delete\u0027 requires parameters.\\n\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "                    + \"Use case: delete \u003ctask number\u003e\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        int i;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "            i \u003d Integer.parseInt(params);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "            throw new DukeInputException(\"Please input number instead of \u003c\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "                    + this.params + \"\u003e after a \u0027delete\u0027 command!\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        if (i \u003c 1 || i \u003e taskManagerSize) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "            throw new DukeInputException(\"Index input out of range\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        return i;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    public boolean isByeCommand() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WangZijun97": 54
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "import duke.SaveManager;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "import duke.TaskManager;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "import duke.exception.DukeInputException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "public class DoneCommand extends ComplexCommand {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    public DoneCommand(String params) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        super(params);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    public void execute(Ui ui, TaskManager taskManager, SaveManager saveManager) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "            int index \u003d this.parseParams(taskManager.size());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "            Task temp \u003d taskManager.getTask(index-1);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "            temp.doTask();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "            ui.display(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "            ui.display(\"\\t\" + temp.toString());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        } catch (DukeInputException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "            ui.displayException(e);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    public int parseParams(int taskManagerSize) throws DukeInputException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        if (this.params.equals(\"\")) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "            throw new DukeInputException(\"\u0027done\u0027 requires parameters.\\n\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "                    + \"Use case: done \u003ctask number\u003e\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        int i;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "            i \u003d Integer.parseInt(params);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "            throw new DukeInputException(\"Please input number instead of \u003c\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "                    + this.params + \"\u003e after a \u0027done\u0027 command!\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        if (i \u003c 1 || i \u003e taskManagerSize) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "            throw new DukeInputException(\"Index input out of range\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        return i;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    public boolean isByeCommand() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WangZijun97": 54
    }
  },
  {
    "path": "src/main/java/duke/command/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "import duke.SaveManager;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "import duke.TaskManager;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "import duke.exception.DukeInputException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "public class EventCommand extends ComplexCommand {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    public EventCommand(String params) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        super(params);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    public void execute(Ui ui, TaskManager taskManager, SaveManager saveManager) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "            String[] splitParams \u003d this.parseParams();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "            Event newEvent \u003d new Event(splitParams[0], splitParams[1]);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "            taskManager.storeTask(newEvent);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        } catch (DukeInputException e) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "            ui.displayException(e);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    public String[] parseParams() throws DukeInputException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        if (this.params.equals(\"\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "            throw new DukeInputException(\"\u0027event\u0027 requires parameters.\\n\" +"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "                    \"Use case: event \u003cname\u003e /at \u003cwhen\u003e\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        String[] splitParams \u003d this.params.split(\"/at \", 2);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        if (splitParams.length !\u003d 2) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "            throw new DukeInputException(\"\u003c\" + this.params + \"\u003e is not valid for the \u0027event\u0027 command.\\n\" +"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "                    \"Please add a /at timing to the task.\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        return splitParams;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    public boolean isByeCommand() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WangZijun97": 44
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "import duke.SaveManager;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "import duke.TaskManager;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    public void execute(Ui ui, TaskManager taskManager, SaveManager saveManager) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        ui.display(taskManager.toString());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    public boolean isByeCommand() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WangZijun97": 18
    }
  },
  {
    "path": "src/main/java/duke/command/ToDoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "import duke.SaveManager;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "import duke.TaskManager;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "import duke.exception.DukeInputException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "public class ToDoCommand extends ComplexCommand {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    public ToDoCommand(String params) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        super(params);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    public void execute(Ui ui, TaskManager taskManager, SaveManager saveManager) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "            ToDo newToDo \u003d new ToDo(this.parseParams());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "            taskManager.storeTask(newToDo);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        } catch (DukeInputException e){"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "            ui.displayException(e);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    public String parseParams() throws DukeInputException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        if (this.params.equals(\"\")) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "            throw new DukeInputException(\"\u0027todo\u0027 requires parameters.\\n\" +"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "                    \"Use case: todo \u003cname\u003e\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        return this.params;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    public boolean isByeCommand() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WangZijun97": 38
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "public class DukeException extends Exception{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        return \"DUKE ERROR - \" + super.getMessage();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WangZijun97": 14
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeInputException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "public class DukeInputException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    public DukeInputException(String message) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WangZijun97": 9
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeSaveDataException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "public class DukeSaveDataException extends DukeException{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    public DukeSaveDataException(String message) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WangZijun97": 8
    }
  },
  {
    "path": "src/main/java/duke/io/InputHandler.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "package duke.io;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "public class InputHandler {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    Scanner sc;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    public InputHandler() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    public String input() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        return sc.nextLine();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WangZijun97": 16
    }
  },
  {
    "path": "src/main/java/duke/io/OutputHandler.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "package duke.io;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "public class OutputHandler {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    public OutputHandler() {}"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    public void print(String output) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        System.out.println(output);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WangZijun97": 11
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "import duke.time.TimePoint;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    private TimePoint deadline;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    public Deadline(String name, String deadline) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        this.deadline \u003d TimePoint.of(deadline);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    public Deadline(String name, String deadline, boolean done) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        super(name, done);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        this.deadline \u003d TimePoint.of(deadline);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + this.deadline.toString() + \")\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    public HashMap\u003cString, String\u003e convertToHashMap() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        HashMap\u003cString, String\u003e dict \u003d super.convertToHashMap();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        dict.put(\"type\", \"duke.task.Deadline\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        dict.put(\"deadline\", this.deadline.toSaveString());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        return dict;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WangZijun97": 33
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "import duke.time.TimePoint;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    private TimePoint when;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    public Event(String name, String when) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        this.when \u003d TimePoint.of(when);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    public Event(String name, String when, boolean done) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        super(name, done);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        this.when \u003d TimePoint.of(when);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + this.when.toString() + \")\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    public HashMap\u003cString, String\u003e convertToHashMap() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        HashMap\u003cString, String\u003e dict \u003d super.convertToHashMap();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        dict.put(\"type\", \"duke.task.Event\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        dict.put(\"when\", this.when.toSaveString());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        return dict;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WangZijun97": 33
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    private String name;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    private boolean done;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    public Task() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        this.name \u003d \"\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        this.done \u003d false;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    public Task(String name) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        this.done \u003d false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    public Task(String name, boolean done) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        this.done \u003d done;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    public void doTask() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        this.done \u003d true;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    public HashMap\u003cString, String\u003e convertToHashMap() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        HashMap\u003cString, String\u003e dict \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        dict.put(\"type\", \"duke.task.Task\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        dict.put(\"name\", this.name);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        dict.put(\"done\", this.done ? \"true\" : \"false\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        return dict;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        String check;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        if (this.done) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "            check \u003d \"\\u2713\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "            check \u003d \"\\u2718\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        return \"[\" + check + \"] \" + this.name;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WangZijun97": 45
    }
  },
  {
    "path": "src/main/java/duke/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "public class ToDo extends Task{"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    public ToDo(String name) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    public ToDo(String name, boolean done) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        super(name, done);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    public HashMap\u003cString, String\u003e convertToHashMap() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        HashMap\u003cString, String\u003e dict \u003d super.convertToHashMap();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        dict.put(\"type\", \"duke.task.ToDo\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        return dict;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WangZijun97": 26
    }
  },
  {
    "path": "src/main/java/duke/time/DateTime.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "package duke.time;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "import java.util.Locale;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "public class DateTime extends TimePoint{"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    private LocalDate date;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    private LocalTime time;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    private boolean haveTime;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    public DateTime(LocalDate date) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        this.haveTime \u003d false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    public DateTime(LocalDate date, LocalTime time) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        this.haveTime \u003d true;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        String text \u003d this.date.format(DateTimeFormatter.ofPattern(\"dd MMMM yyyy\", new Locale(\"en\")));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        if (haveTime) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "            text +\u003d \" \" + this.time.format(DateTimeFormatter.ofPattern(\"h:mma\", new Locale(\"en\")));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        return text;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    public String toSaveString() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        String text \u003d this.date.format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy\", new Locale(\"en\")));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        if (haveTime) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "            text +\u003d \" \" + this.time.format(DateTimeFormatter.ofPattern(\"HH:mm\", new Locale(\"en\")));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        return text;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WangZijun97": 43
    }
  },
  {
    "path": "src/main/java/duke/time/DateTimeParser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "package duke.time;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "import duke.exception.DukeInputException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "public class DateTimeParser {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    public static DateTime parse(String text) throws DukeInputException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        String[] dateTimeSplit \u003d text.split(\" \", 2);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        String errorMessage \u003d \"Entry not duke.time.DateTime compatible\\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "                + \"Use \u003cdd/MM/yyyy hh:mm\u003e such as 12/5/2002 13:14\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        LocalDate date;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        LocalTime time;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "            date \u003d LocalDate.parse(dateTimeSplit[0], DateTimeFormatter.ofPattern(\"d/M/y\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "            throw new DukeInputException(errorMessage);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        //adjust date to 1970-2070"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        if (date.getYear() \u003c 100) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "            date \u003d date.plusYears(2000);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        if (date.isAfter(LocalDate.now().plusYears(50))) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "            date \u003d date.minusYears(100);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        if (dateTimeSplit.length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "                time \u003d LocalTime.parse(dateTimeSplit[1], DateTimeFormatter.ofPattern(\"H:m\"));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "                return new DateTime(date, time);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "            } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "                //if unable to parse as time, take it that there is no time entry."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        return new DateTime(date);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WangZijun97": 47
    }
  },
  {
    "path": "src/main/java/duke/time/TimePoint.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "package duke.time;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "import duke.exception.DukeInputException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "public class TimePoint {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    private String timePoint;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    public TimePoint() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        this.timePoint \u003d \"\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    private TimePoint(String timePoint) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        this.timePoint \u003d timePoint;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    public static TimePoint of(String timeInfoString) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "            return DateTimeParser.parse(timeInfoString);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        } catch (DukeInputException e) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "            return new TimePoint(timeInfoString);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        return this.timePoint;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    public String toSaveString() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        return this.timePoint;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WangZijun97": 33
    }
  },
  {
    "path": "src/test/java/duke/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    public void dummyTest() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        assertEquals(2,2);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WangZijun97": 12
    }
  },
  {
    "path": "src/test/java/duke/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "import duke.command.ByeCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "import duke.exception.DukeInputException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    public void parse_correctByeCommandInput_byeCommand() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "            assertEquals(Parser.parse(\"bye\").toString(), (new ByeCommand()).toString());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        } catch (DukeInputException e) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    public void parse_wrongByeCommandInput_exceptionThrown() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "            Parser.parse(\"bye bye\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        } catch (DukeInputException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "            assertEquals(\"DUKE ERROR - Invalid command \u003cbye bye\u003e given.\", e.getMessage());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WangZijun97": 33
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "event book sharing /at Fri 2pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "deadline return book /by Saturady all day anytime :D"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "todo find new book"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "deadline become rich /by soon"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "list"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "list"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "done 5"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "list"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "WangZijun97": 12
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "pause"
      }
    ],
    "authorContributionMap": {
      "WangZijun97": 3,
      "-": 20
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WangZijun97"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "WangZijun97": 1,
      "-": 37
    }
  }
]
