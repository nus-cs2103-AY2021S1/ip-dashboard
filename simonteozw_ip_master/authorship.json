[
  {
    "path": "src/main/java/duke/DateTime.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "simonteozw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "simonteozw"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "simonteozw"
        },
        "content": " * DateTime class used to store date objects."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "simonteozw"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "public class DateTime {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    private LocalDate date \u003d LocalDate.now();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    private static final DateTimeFormatter FORMATTER \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    private final String INVALID_DATE_MESSAGE \u003d \"Your Date must be in the format yyyy-MM-dd. Initialising date to Today!\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "simonteozw"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     * Constructor for the DateTime class."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     * @param date Defaults to today if the date passed in is invalid."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    public DateTime(String date) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "        if (isValidFormat(date)) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "            this.date \u003d LocalDate.parse(date);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "            System.out.println(INVALID_DATE_MESSAGE);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "simonteozw"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     * Check if the input date is of a valid format."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     * @param date Input date."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     * @return A boolean to show whether the input date is valid."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    public static boolean isValidFormat(String date) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "            FORMATTER.parse(date);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "simonteozw"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     * Function that converts the date to the proper format to which it should be saved."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     * @return A String of the date in proper format."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    public String saveString() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "        return date.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "simonteozw"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     * Overrides the standard toString method."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     * @return A String describing the date in the MMM d yyyy format."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "        return date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "simonteozw": 61
    }
  },
  {
    "path": "src/main/java/duke/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "simonteozw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "simonteozw"
        },
        "content": " * Deadline class for tasks that have a set deadline."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "simonteozw"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    private DateTime deadline;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "simonteozw"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     * Constructor for Deadline class."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     * @param title    Title of task."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     * @param deadline Deadline of task."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    public Deadline(String title, String deadline) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "        super(title);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "        this.deadline \u003d new DateTime(deadline);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "simonteozw"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     * Overloads constructor for Deadline class."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     * @param title      Title of task."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     * @param isComplete Boolean to represent completion status of task."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     * @param deadline   Deadline of task."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    public Deadline(String title, boolean isComplete, String deadline) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "        super(title, isComplete);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "        this.deadline \u003d new DateTime(deadline);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "simonteozw"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     * Overrides method of saveString method in Task."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     * @return A string to that can be saved into the .txt file"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    public String saveString() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "        int completeSymbol \u003d this.complete ? 1 : 0;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "        return String.format(\"D|%d|%s|%s\", completeSymbol, this.title, this.deadline.saveString());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "simonteozw"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     * Overrides the standard toString method."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     * @return A String describing the task with deadline."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "        String completeSymbol \u003d this.complete ? \"[/]\" : \"[X]\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "        return String.format(\"[D]%s %s (by: %s)\", completeSymbol, this.title, this.deadline);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "simonteozw": 53
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "simonteozw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "simonteozw"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "        Ui.printWelcome();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "simonteozw"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "        TaskList t \u003d new TaskList();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "simonteozw"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "        String input \u003d \"\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "simonteozw"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "        while (!input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "            input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "            Parser.allocate(input, t);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "simonteozw"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "        Ui.printGoodbye();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 4,
      "simonteozw": 17
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "simonteozw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "simonteozw"
        },
        "content": " * Exception class unique to Duke."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "simonteozw"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     * Constructor for DukeException class."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     * @param errorMessage Error message that will be shown."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    public DukeException(String errorMessage) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "simonteozw": 15
    }
  },
  {
    "path": "src/main/java/duke/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "simonteozw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "simonteozw"
        },
        "content": " * Event class for tasks that have a set timing."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "simonteozw"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    private DateTime time;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "simonteozw"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     * Constructor for Event class."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     * @param title Title of task."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     * @param time  Time of task."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    public Event(String title, String time) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "        super(title);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "        this.time \u003d new DateTime(time);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "simonteozw"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     * Overloads constructor for Event class."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     * @param title      Title of task."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     * @param isComplete Boolean to represent completion status of task."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     * @param time       Time of task."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    public Event(String title, boolean isComplete, String time) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "        super(title, isComplete);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "        this.time \u003d new DateTime(time);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "simonteozw"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     * Overrides method of saveString method in Task."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     * @return A string to that can be saved into the .txt file"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    public String saveString() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "        int completeSymbol \u003d this.complete ? 1 : 0;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "        return String.format(\"E|%d|%s|%s\", completeSymbol, this.title, this.time.saveString());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "simonteozw"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     * Overrides the standard toString method."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     * @return A String describing the task with deadline."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "        String completeSymbol \u003d this.complete ? \"[/]\" : \"[X]\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "        return String.format(\"[E]%s %s (at: %s)\", completeSymbol, this.title, this.time);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "simonteozw": 53
    }
  },
  {
    "path": "src/main/java/duke/InvalidDataException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "simonteozw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "simonteozw"
        },
        "content": " * Invalid Data Exception that extends Duke Exception class."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "simonteozw"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "public class InvalidDataException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     * Constructor for InvalidDataException class."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    public InvalidDataException() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "        super(\"OOPS!!! The data here is invalid!\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "simonteozw": 13
    }
  },
  {
    "path": "src/main/java/duke/InvalidDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "simonteozw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "simonteozw"
        },
        "content": " * Invalid Description Exception that extends Duke Exception class."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "simonteozw"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "public class InvalidDescriptionException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     * Constructor for InvalidDescriptionException class."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    public InvalidDescriptionException() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "        super(\"OOPS!!! The description of a task cannot be empty\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "simonteozw": 13
    }
  },
  {
    "path": "src/main/java/duke/InvalidIndexException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "simonteozw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "simonteozw"
        },
        "content": " * Invalid Index Exception that extends Duke Exception class."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "simonteozw"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "public class InvalidIndexException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     * Constructor for InvalidIndexException class."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    public InvalidIndexException() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "        super(\"OOPS!!! The index you have chosen is out of bounds\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "simonteozw": 13
    }
  },
  {
    "path": "src/main/java/duke/InvalidTypeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "simonteozw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "simonteozw"
        },
        "content": " * Invalid Type Exception that extends Duke Exception class."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "simonteozw"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "public class InvalidTypeException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     * Constructor for InvalidTypeException class."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    public InvalidTypeException() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "        super(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "simonteozw": 13
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "simonteozw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "simonteozw"
        },
        "content": " * Parser class to handle user inputs."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "simonteozw"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "simonteozw"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     * Categorise user input into different types of tasks to add."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     * @param input User input."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     * @return A task to be added by the TaskList."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     * @throws InvalidDescriptionException In case the task description is empty."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     * @throws InvalidTypeException        In case the task type is not one of Event, Deadline, Todo."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    public static Task handleInput(String input) throws InvalidDescriptionException, InvalidTypeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "        String type \u003d input.split(\" \")[0];"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "        switch (type) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "            if (input.substring(4).equals(\"\") || input.substring(5).equals(\"\")) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "                throw new InvalidDescriptionException();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "            }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "            return new Todo(input.substring(5));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "            String[] dl \u003d input.split(\" /by \");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "            if (dl[0].substring(8).equals(\"\") || dl[0].substring(9).equals(\"\")) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "                throw new InvalidDescriptionException();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "            }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "            return new Deadline(dl[0].substring(9), dl[1]);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "            String[] e \u003d input.split(\" /at \");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "            if (e[0].substring(5).equals(\"\") || e[0].substring(6).equals(\"\")) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "                throw new InvalidDescriptionException();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "            return new Event(e[0].substring(6), e[1]);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "            throw new InvalidTypeException();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "simonteozw"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "simonteozw"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     * Maps user input to actions the TaskList must carry out."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     * @param input User input."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     * @param tl    TaskList to be used."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    public static void allocate(String input, TaskList tl) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "        String[] arr \u003d input.split(\" \");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "        int idx;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "simonteozw"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "        switch (arr[0]) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "            tl.bye();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "            tl.display();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "                tl.find(input);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "            } catch (InvalidDescriptionException e) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "                Ui.addLine(e.toString());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "            idx \u003d Integer.parseInt(arr[1]) - 1;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "                tl.completeTask(idx);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "            } catch (InvalidIndexException e) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "                Ui.addLine(e.toString());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "            idx \u003d Integer.parseInt(arr[1]) - 1;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "                tl.deleteTask(idx);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "            } catch (InvalidIndexException e) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "                Ui.addLine(e.toString());"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "            }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "                Task toAdd \u003d handleInput(input);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "                tl.add(toAdd);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "            } catch (InvalidDescriptionException e) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "                Ui.addLine(e.toString());"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "            } catch (InvalidTypeException e) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "                Ui.addLine(e.toString());"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "            }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "simonteozw": 94
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "simonteozw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "import java.io.PrintWriter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "simonteozw"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "simonteozw"
        },
        "content": " * Storage class that interacts with the .txt file to store and retrieve data."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "simonteozw"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    private final String HOME \u003d System.getProperty(\"user.home\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    private final Path DIR \u003d Paths.get(HOME, \"data\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    private final Path PATH \u003d Paths.get(HOME, \"data\", \"iPStore.txt\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    private final String IO_MESSAGE \u003d \"Sorry! There was an IOException! Initialising with an empty Tasklist!\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    private final String INVALID_MESSAGE \u003d \"Sorry! There was an error in reading your data! Initialising with a semi-complete Tasklist!\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "simonteozw"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     * Constructor for Storage class."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    public Storage() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "simonteozw"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     * Combines all tasks into 1 long string separated by newlines."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     * @param items List of tasks."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     * @return A string that can be stored in the .txt file."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    String allTasksCombined(ArrayList\u003cTask\u003e items) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "        String res \u003d \"\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "        for (Task item : items) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "            res +\u003d String.format(\"%s\", item.saveString());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "            res +\u003d \"\\n\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "        return res;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "simonteozw"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     * Converts string to a task."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     * @param str String to be converted."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     * @throws InvalidTypeException In case task type is not one of Event, Deadline, Todo."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     * @throws InvalidDataException In case string is not in the correct format."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    Task stringToTask(String str) throws InvalidTypeException, InvalidDataException {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "        String[] info \u003d str.split(\"\\\\|\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "        if (info.length \u003c 3) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "            throw new InvalidDataException();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "        boolean isComplete \u003d info[1].equals(\"1\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "        switch (info[0]) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "        case \"T\":"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "            return new Todo(info[2], isComplete);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "        case \"D\":"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "            return new Deadline(info[2], isComplete, info[3]);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "        case \"E\":"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "            return new Event(info[2], isComplete, info[3]);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "            throw new InvalidTypeException();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "simonteozw"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    public void writeData(ArrayList\u003cTask\u003e items) throws IOException {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "        boolean directoryExists \u003d Files.exists(DIR);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "simonteozw"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "        if (!directoryExists) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "            Files.createDirectory(DIR);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "simonteozw"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "            FileWriter fw \u003d new FileWriter(PATH.toFile());"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "            PrintWriter pw \u003d new PrintWriter(fw);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "simonteozw"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "            pw.print(allTasksCombined(items));"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "simonteozw"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "            pw.close();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "            throw e;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "simonteozw"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    public ArrayList\u003cTask\u003e readData() {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "        boolean pathExists \u003d Files.exists(PATH);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "simonteozw"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "        ArrayList\u003cTask\u003e res \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "simonteozw"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "        if (pathExists) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "                FileReader fr \u003d new FileReader(PATH.toFile());"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "                BufferedReader br \u003d new BufferedReader(fr);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "                String str;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "                while ((str \u003d br.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "                    res.add(stringToTask(str));"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "                }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "                Ui.addLine(this.IO_MESSAGE);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "            } catch (InvalidTypeException e) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "                System.out.println(e.toString());"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "                Ui.addLine(this.INVALID_MESSAGE);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "            } catch (InvalidDataException e) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "                System.out.println(e.toString());"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "                Ui.addLine(this.INVALID_MESSAGE);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "            }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "simonteozw"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "        return res;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "simonteozw": 115
    }
  },
  {
    "path": "src/main/java/duke/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "simonteozw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "simonteozw"
        },
        "content": " * Task class to represent a task to be manipulated by Duke."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "simonteozw"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    protected String title;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    protected boolean complete;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "simonteozw"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     * Constructor of Task class."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     * @param title Title of task."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    public Task(String title) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "        this.title \u003d title;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "        this.complete \u003d false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "simonteozw"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     * Overloads constructor of Task class."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     * @param title      Title of task."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     * @param isComplete Boolean to represent completion status of task."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    public Task(String title, boolean isComplete) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "        this.title \u003d title;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "        this.complete \u003d isComplete;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "simonteozw"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     * Completes this task."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    public void complete() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "        this.complete \u003d true;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "simonteozw"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     * Converts the task to a suitable string that can be saved to the .txt file."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     * @return String describing the task."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    public String saveString() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "        int completeSymbol \u003d this.complete ? 1 : 0;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "        return String.format(\"T|%d|%s\", completeSymbol, this.title);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "simonteozw"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     * Overrides the standard toString method."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     * @return A string describing the task."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "        String completeSymbol \u003d this.complete ? \"[/]\" : \"[X]\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "        return String.format(\"[T]%s %s\", completeSymbol, this.title);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "simonteozw": 58
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "simonteozw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "simonteozw"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "simonteozw"
        },
        "content": " * TaskList class to store all the tasks in Duke."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "simonteozw"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    private ArrayList\u003cTask\u003e items;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    Storage storage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "simonteozw"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     * Constructor for TaskList class."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "        this.storage \u003d new Storage();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "        this.items \u003d storage.readData();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "simonteozw"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     * Exit function for TaskList class, writes data to .txt file."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    public void bye() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "            storage.writeData(this.items);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "simonteozw"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     * Adds a task to the current TaskList."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     * @param toAdd Task to be added."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    public void add(Task toAdd) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "        this.items.add(toAdd);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "        Ui.addLine(String.format(\"    Got it. I\u0027ve added this task:\\n    %s\\n    Now you have %d tasks in the list.\", toAdd, this.items.size()));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "simonteozw"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     * Prints out all tasks in current TaskList."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    public void display() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "        String res \u003d \"Here are your tasks:\\n\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "        for (int i \u003d 0; i \u003c this.items.size(); i++) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "            res +\u003d String.format(\"    %d.%s\\n\", i + 1, this.items.get(i));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "        Ui.addLine(res);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "simonteozw"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     * Overloads display method."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     * @param arrayList ArrayList from which items are to be displayed."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    public void display(ArrayList\u003cTask\u003e arrayList) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "        String res \u003d \"Here are your tasks:\\n\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "        for (int i \u003d 0; i \u003c arrayList.size(); i++) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "            res +\u003d String.format(\"    %d.%s\\n\", i + 1, arrayList.get(i));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "        Ui.addLine(res);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "simonteozw"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     * Function to display all tasks with specified keyword."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     * @param keyWord Keyword to search for."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     * @throws InvalidDescriptionException In case keyword is empty."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    public void find(String keyWord) throws InvalidDescriptionException {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "        String[] arr \u003d keyWord.split(\" \");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "        if (keyWord.length() \u003d\u003d 4 || arr[1].equals(\"\")) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "            throw new InvalidDescriptionException();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "        ArrayList\u003cTask\u003e temp \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "        for (Task task : this.items) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "            if (task.toString().contains(arr[1])) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "                temp.add(task);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "            }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "        this.display(temp);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "simonteozw"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     * Completes the specified task."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     * @param idx Index of task to be completed."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     * @throws InvalidIndexException In case idx is out of bounds."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    public void completeTask(int idx) throws InvalidIndexException {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "        if (idx \u003c 0 || idx \u003e\u003d this.items.size()) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "            throw new InvalidIndexException();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "        Task t \u003d this.items.get(idx);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "        t.complete();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "        Ui.addLine(String.format(\"    Nice! I\u0027ve marked this task as done:\\n    %s\", t));"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "simonteozw"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     * Deletes the specified task."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     * @param idx Index of task to be deleted."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     * @throws InvalidIndexException In case idx is out of bounds."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    public void deleteTask(int idx) throws InvalidIndexException {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "        if (idx \u003c 0 || idx \u003e\u003d this.items.size()) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "            throw new InvalidIndexException();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "        Task t \u003d this.items.get(idx);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "        this.items.remove(idx);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "        Ui.addLine(String.format(\"    Nice! I\u0027ve removed this task:\\n    %s\\n    Now you have %d tasks in the list.\", t, this.items.size()));"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "simonteozw": 115
    }
  },
  {
    "path": "src/main/java/duke/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "simonteozw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "simonteozw"
        },
        "content": " * Todo class for Tasks that need to be completed."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "simonteozw"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "simonteozw"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     * Constructor for Todo class."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     * @param input Title of task."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    public Todo(String input) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "        super(input);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "simonteozw"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     * Overloads constructor for Todo class."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     * @param input      Title of task."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     * @param isComplete Boolean to represent completion status of task."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    public Todo(String input, boolean isComplete) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "        super(input, isComplete);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "simonteozw": 26
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "simonteozw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "simonteozw"
        },
        "content": " * UI class to handle aesthetics of Duke."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "simonteozw"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    private static final String OPENING \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "            + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "            + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "            + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "simonteozw"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    private static final String WELCOME \u003d OPENING + \"\\nHello I am Duke!\\nWhat can I help you with?\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    private static final String GOODBYE \u003d \"Goodbye. See you soon!\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    private static final String LINE \u003d \"--------------------------------------------------\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "simonteozw"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     * Function to print Duke\u0027s welcome message."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    public static void printWelcome() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "        System.out.println(WELCOME);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "simonteozw"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     * Function to print Duke\u0027s goodbye message."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    public static void printGoodbye() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "        System.out.println(GOODBYE);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "simonteozw"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     * Adds line under given input for aesthetics."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     * @param input Input for which line shall be printed under."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    public static void addLine(String input) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "        System.out.println(input);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "simonteozw": 42
    }
  },
  {
    "path": "src/test/java/duke/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "simonteozw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "simonteozw"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "simonteozw"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "simonteozw"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    TaskList t \u003d new TaskList();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "simonteozw"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    Storage s \u003d new Storage();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "simonteozw"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    public void invalidCommandTest() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "            Parser.handleInput(\"example hello\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "        } catch (InvalidTypeException e) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "            assertEquals(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\","
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "                    e.getMessage());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "        } catch (InvalidDescriptionException e) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "            assertEquals(\"OOPS!!! The description of a task cannot be empty\","
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "                    e.getMessage());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "simonteozw"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    public void invalidIndexTest() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "            t.completeTask(-1);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "        } catch (InvalidIndexException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "            assertEquals(\"OOPS!!! The index you have chosen is out of bounds\","
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "                    e.getMessage());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "simonteozw"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    public void invalidDataTest() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "            s.stringToTask(\"example hello\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "        } catch (InvalidTypeException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "            assertEquals(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\","
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "                    e.getMessage());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "        } catch (InvalidDataException e) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "            assertEquals(\"OOPS!!! The data here is invalid!\","
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "                    e.getMessage());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "simonteozw": 48
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "list"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "todo return book"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "event eat dinner /at 7pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "deadline finish quiz /by tonight"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "list"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "todo"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "blank"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "done 5"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "delete -1"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "list"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "simonteozw": 14
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "simonteozw"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "-": 37,
      "simonteozw": 1
    }
  }
]
