[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"drake25122000"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":16,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":17,"author":{"gitId":"drake25122000"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":18,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":19,"author":{"gitId":"drake25122000"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":20,"author":{"gitId":"drake25122000"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":21,"author":{"gitId":"drake25122000"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":22,"author":{"gitId":"drake25122000"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":23,"author":{"gitId":"drake25122000"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":24,"author":{"gitId":"drake25122000"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":25,"author":{"gitId":"drake25122000"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":26,"author":{"gitId":"drake25122000"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":27,"author":{"gitId":"drake25122000"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":28,"author":{"gitId":"drake25122000"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":29,"author":{"gitId":"drake25122000"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":30,"author":{"gitId":"drake25122000"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":31,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":32,"author":{"gitId":"drake25122000"},"content":"    compile \u0027org.openjfx:javafx-base:11:win\u0027"},{"lineNumber":33,"author":{"gitId":"drake25122000"},"content":"    compile \u0027org.openjfx:javafx-controls:11:win\u0027"},{"lineNumber":34,"author":{"gitId":"drake25122000"},"content":"    compile \u0027org.openjfx:javafx-fxml:11:win\u0027"},{"lineNumber":35,"author":{"gitId":"drake25122000"},"content":"    compile \u0027org.openjfx:javafx-graphics:11:win\u0027"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}"},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":40,"author":{"gitId":"-"},"content":""},{"lineNumber":41,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":43,"author":{"gitId":"-"},"content":""},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}"},{"lineNumber":51,"author":{"gitId":"-"},"content":""},{"lineNumber":52,"author":{"gitId":"drake25122000"},"content":"sourceCompatibility \u003d 11"},{"lineNumber":53,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":54,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":55,"author":{"gitId":"drake25122000"},"content":"    mainClassName \u003d \"Launcher\""},{"lineNumber":56,"author":{"gitId":"-"},"content":"}"},{"lineNumber":57,"author":{"gitId":"-"},"content":""},{"lineNumber":58,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\""},{"lineNumber":60,"author":{"gitId":"drake25122000"},"content":"    archiveVersion \u003d \"0.2.0\""},{"lineNumber":61,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}"},{"lineNumber":63,"author":{"gitId":"-"},"content":""},{"lineNumber":64,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":65,"author":{"gitId":"drake25122000"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}"},{"lineNumber":67,"author":{"gitId":"-"},"content":""},{"lineNumber":68,"author":{"gitId":"-"},"content":"run {"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}"},{"lineNumber":71,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":72,"author":{"gitId":"drake25122000"},"content":"javafx {"},{"lineNumber":73,"author":{"gitId":"drake25122000"},"content":"    version \u003d \"11.0.2\""},{"lineNumber":74,"author":{"gitId":"drake25122000"},"content":"    modules \u003d [ \u0027javafx.controls\u0027 , \u0027javafx.fxml\u0027 ]"},{"lineNumber":75,"author":{"gitId":"drake25122000"},"content":"}"},{"lineNumber":76,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":77,"author":{"gitId":"drake25122000"},"content":"tasks.withType(JavaCompile) {"},{"lineNumber":78,"author":{"gitId":"drake25122000"},"content":"    options.encoding \u003d \u0027UTF-8\u0027"},{"lineNumber":79,"author":{"gitId":"drake25122000"},"content":"}"}],"authorContributionMap":{"drake25122000":35,"-":44}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"drake25122000"},"content":"D | 0 | cs2103 project | 2020-06-26 2359"},{"lineNumber":2,"author":{"gitId":"drake25122000"},"content":"T | 1 | sleep"},{"lineNumber":3,"author":{"gitId":"drake25122000"},"content":"D | 1 | cs2103 tut | 2020-09-26 2359"},{"lineNumber":4,"author":{"gitId":"drake25122000"},"content":"T | 0 | eat"}],"authorContributionMap":{"drake25122000":4}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features "},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"### Feature 1 "},{"lineNumber":6,"author":{"gitId":"drake25122000"},"content":"Add tasks with specified deadline time"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"## Usage"},{"lineNumber":9,"author":{"gitId":"drake25122000"},"content":"You will always remember the deadline for every task"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"drake25122000"},"content":"### `deadline` - Set a task with a specific deadline"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"drake25122000"},"content":"Example of usage: "},{"lineNumber":14,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":15,"author":{"gitId":"drake25122000"},"content":"`deadline cs2103 project /by 2020-09-20 2359`"},{"lineNumber":16,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":17,"author":{"gitId":"drake25122000"},"content":"Expected outcome:"},{"lineNumber":18,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":19,"author":{"gitId":"drake25122000"},"content":"`Got it. I\u0027ve added this task: [D][X] cs2103 project (by: Sep 20 2020 2359)`"},{"lineNumber":20,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":21,"author":{"gitId":"drake25122000"},"content":"##"},{"lineNumber":22,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":23,"author":{"gitId":"drake25122000"},"content":"### Feature 2 "},{"lineNumber":24,"author":{"gitId":"drake25122000"},"content":"Add tasks with specified start time"},{"lineNumber":25,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":26,"author":{"gitId":"drake25122000"},"content":"## Usage"},{"lineNumber":27,"author":{"gitId":"drake25122000"},"content":"You will always remember the starting time of a certain event"},{"lineNumber":28,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":29,"author":{"gitId":"drake25122000"},"content":"### `event` - Set a task with a specific starting time"},{"lineNumber":30,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":31,"author":{"gitId":"drake25122000"},"content":"Example of usage: "},{"lineNumber":32,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":33,"author":{"gitId":"drake25122000"},"content":"`event practice session /at 2020-09-20 2359`"},{"lineNumber":34,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":35,"author":{"gitId":"drake25122000"},"content":"Expected outcome:"},{"lineNumber":36,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":37,"author":{"gitId":"drake25122000"},"content":"`Got it. I\u0027ve added this task: [E][X] cs2103 project (at: Sep 20 2020 2359)`"},{"lineNumber":38,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":39,"author":{"gitId":"drake25122000"},"content":"##"},{"lineNumber":40,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":41,"author":{"gitId":"drake25122000"},"content":"### Feature 3 "},{"lineNumber":42,"author":{"gitId":"drake25122000"},"content":"Add things to do on that day"},{"lineNumber":43,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":44,"author":{"gitId":"drake25122000"},"content":"## Usage"},{"lineNumber":45,"author":{"gitId":"drake25122000"},"content":"You will always remember what do you need to do"},{"lineNumber":46,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":47,"author":{"gitId":"drake25122000"},"content":"### `todo` - Set a task"},{"lineNumber":48,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":49,"author":{"gitId":"drake25122000"},"content":"Example of usage: "},{"lineNumber":50,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":51,"author":{"gitId":"drake25122000"},"content":"`todo sleep`"},{"lineNumber":52,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":53,"author":{"gitId":"drake25122000"},"content":"Expected outcome:"},{"lineNumber":54,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":55,"author":{"gitId":"drake25122000"},"content":"`Got it. I\u0027ve added this task: [T][X] sleep`"},{"lineNumber":56,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":57,"author":{"gitId":"drake25122000"},"content":"##"},{"lineNumber":58,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":59,"author":{"gitId":"drake25122000"},"content":"### Feature 4 "},{"lineNumber":60,"author":{"gitId":"drake25122000"},"content":"List out all your current task"},{"lineNumber":61,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":62,"author":{"gitId":"drake25122000"},"content":"## Usage"},{"lineNumber":63,"author":{"gitId":"drake25122000"},"content":"You will always remember what are the things you need to do"},{"lineNumber":64,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":65,"author":{"gitId":"drake25122000"},"content":"### `list` - Give a list of your current tasks"},{"lineNumber":66,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":67,"author":{"gitId":"drake25122000"},"content":"Example of usage: "},{"lineNumber":68,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":69,"author":{"gitId":"drake25122000"},"content":"`list`"},{"lineNumber":70,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":71,"author":{"gitId":"drake25122000"},"content":"Expected outcome:"},{"lineNumber":72,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":73,"author":{"gitId":"drake25122000"},"content":"`Here are the tasks in your list: 1. [T][X] sleep`"},{"lineNumber":74,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":75,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":76,"author":{"gitId":"drake25122000"},"content":"##"},{"lineNumber":77,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":78,"author":{"gitId":"drake25122000"},"content":"### Feature 5 "},{"lineNumber":79,"author":{"gitId":"drake25122000"},"content":"Set your specified task to done"},{"lineNumber":80,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":81,"author":{"gitId":"drake25122000"},"content":"## Usage"},{"lineNumber":82,"author":{"gitId":"drake25122000"},"content":"You will be able to set your task to done"},{"lineNumber":83,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":84,"author":{"gitId":"drake25122000"},"content":"### `done` - Set a task to be done"},{"lineNumber":85,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":86,"author":{"gitId":"drake25122000"},"content":"Example of usage: "},{"lineNumber":87,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":88,"author":{"gitId":"drake25122000"},"content":"Here are the tasks in your list: "},{"lineNumber":89,"author":{"gitId":"drake25122000"},"content":"1. [T][X] sleep"},{"lineNumber":90,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":91,"author":{"gitId":"drake25122000"},"content":"`done 1`"},{"lineNumber":92,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":93,"author":{"gitId":"drake25122000"},"content":"Expected outcome:"},{"lineNumber":94,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":95,"author":{"gitId":"drake25122000"},"content":"`Nice! I\u0027ve marked this task as done: [T][V] sleep`"},{"lineNumber":96,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":97,"author":{"gitId":"drake25122000"},"content":"##"},{"lineNumber":98,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":99,"author":{"gitId":"drake25122000"},"content":"### Feature 6 "},{"lineNumber":100,"author":{"gitId":"drake25122000"},"content":"Set your specified task to be deleted"},{"lineNumber":101,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":102,"author":{"gitId":"drake25122000"},"content":"## Usage"},{"lineNumber":103,"author":{"gitId":"drake25122000"},"content":"You will be able to delete your specified task"},{"lineNumber":104,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":105,"author":{"gitId":"drake25122000"},"content":"### `delete` - Delete a specified task"},{"lineNumber":106,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":107,"author":{"gitId":"drake25122000"},"content":"Example of usage: "},{"lineNumber":108,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":109,"author":{"gitId":"drake25122000"},"content":"Here are the tasks in your list: "},{"lineNumber":110,"author":{"gitId":"drake25122000"},"content":"1. [T][V] sleep"},{"lineNumber":111,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":112,"author":{"gitId":"drake25122000"},"content":"`delete 1`"},{"lineNumber":113,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":114,"author":{"gitId":"drake25122000"},"content":"Expected outcome:"},{"lineNumber":115,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":116,"author":{"gitId":"drake25122000"},"content":"`Noted. I\u0027ve removed this task: "},{"lineNumber":117,"author":{"gitId":"drake25122000"},"content":"   [T][V] sleep"},{"lineNumber":118,"author":{"gitId":"drake25122000"},"content":" Now you have 2 tasks in the list.`"},{"lineNumber":119,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":120,"author":{"gitId":"drake25122000"},"content":"##"},{"lineNumber":121,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":122,"author":{"gitId":"drake25122000"},"content":"### Feature 7 "},{"lineNumber":123,"author":{"gitId":"drake25122000"},"content":"To end your conversation with the bot"},{"lineNumber":124,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":125,"author":{"gitId":"drake25122000"},"content":"## Usage"},{"lineNumber":126,"author":{"gitId":"drake25122000"},"content":"You can save your current task list to data base"},{"lineNumber":127,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":128,"author":{"gitId":"drake25122000"},"content":"### `bye` - Save all tasks in your current task list to database"},{"lineNumber":129,"author":{"gitId":"-"},"content":""},{"lineNumber":130,"author":{"gitId":"-"},"content":"Example of usage: "},{"lineNumber":131,"author":{"gitId":"-"},"content":""},{"lineNumber":132,"author":{"gitId":"drake25122000"},"content":"`bye`"},{"lineNumber":133,"author":{"gitId":"-"},"content":""},{"lineNumber":134,"author":{"gitId":"-"},"content":"Expected outcome:"},{"lineNumber":135,"author":{"gitId":"-"},"content":""},{"lineNumber":136,"author":{"gitId":"drake25122000"},"content":"`Bye. Hope to see you again soon!`"},{"lineNumber":137,"author":{"gitId":"drake25122000"},"content":" "},{"lineNumber":138,"author":{"gitId":"drake25122000"},"content":" ##"},{"lineNumber":139,"author":{"gitId":"drake25122000"},"content":" "},{"lineNumber":140,"author":{"gitId":"drake25122000"},"content":" ### Feature 8 "},{"lineNumber":141,"author":{"gitId":"drake25122000"},"content":" To look for tasks that are related to your desired keyword"},{"lineNumber":142,"author":{"gitId":"drake25122000"},"content":" "},{"lineNumber":143,"author":{"gitId":"drake25122000"},"content":" ## Usage"},{"lineNumber":144,"author":{"gitId":"drake25122000"},"content":" You will be able to look after some tasks that are related to you desired keyword"},{"lineNumber":145,"author":{"gitId":"drake25122000"},"content":" "},{"lineNumber":146,"author":{"gitId":"drake25122000"},"content":" ### `find` - Find some tasks that are related to a keyword"},{"lineNumber":147,"author":{"gitId":"-"},"content":" "},{"lineNumber":148,"author":{"gitId":"-"},"content":" Example of usage: "},{"lineNumber":149,"author":{"gitId":"-"},"content":" "},{"lineNumber":150,"author":{"gitId":"drake25122000"},"content":" Here are the tasks in your list:"},{"lineNumber":151,"author":{"gitId":"drake25122000"},"content":" 1. [D][X] cs2103 project (by: Jun 26 2020 2359)"},{"lineNumber":152,"author":{"gitId":"drake25122000"},"content":" 2. [T][X] sleep"},{"lineNumber":153,"author":{"gitId":"drake25122000"},"content":" 3. [D][X] cs2103 tut (by: Sep 26 2020 2359)"},{"lineNumber":154,"author":{"gitId":"drake25122000"},"content":" "},{"lineNumber":155,"author":{"gitId":"drake25122000"},"content":" `find cs2103`"},{"lineNumber":156,"author":{"gitId":"-"},"content":" "},{"lineNumber":157,"author":{"gitId":"-"},"content":" Expected outcome:"},{"lineNumber":158,"author":{"gitId":"-"},"content":" "},{"lineNumber":159,"author":{"gitId":"drake25122000"},"content":" `Here are the matching tasks in your list:"},{"lineNumber":160,"author":{"gitId":"drake25122000"},"content":"  1. [D][X] cs2103 project (by: Jun 26 2020 2359)"},{"lineNumber":161,"author":{"gitId":"drake25122000"},"content":"  2. [D][X] cs2103 tut (by: Sep 26 2020 2359)`"}],"authorContributionMap":{"drake25122000":140,"-":21}},{"path":"src/main/java/Command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"drake25122000"},"content":"package command;"},{"lineNumber":2,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":3,"author":{"gitId":"drake25122000"},"content":"import exceptions.InvalidCommandException;"},{"lineNumber":4,"author":{"gitId":"drake25122000"},"content":"import exceptions.NoDateException;"},{"lineNumber":5,"author":{"gitId":"drake25122000"},"content":"import exceptions.NoTaskException;"},{"lineNumber":6,"author":{"gitId":"drake25122000"},"content":"import exceptions.SimilarTaskExistsException;"},{"lineNumber":7,"author":{"gitId":"drake25122000"},"content":"import exceptions.WrongDateTimeFormatException;"},{"lineNumber":8,"author":{"gitId":"drake25122000"},"content":"import parserstorageui.Storage;"},{"lineNumber":9,"author":{"gitId":"drake25122000"},"content":"import parserstorageui.Ui;"},{"lineNumber":10,"author":{"gitId":"drake25122000"},"content":"import task.TaskList;"},{"lineNumber":11,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":12,"author":{"gitId":"drake25122000"},"content":"public class AddCommand extends Command {"},{"lineNumber":13,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":14,"author":{"gitId":"drake25122000"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"drake25122000"},"content":"     * Initializes AddCommand class"},{"lineNumber":16,"author":{"gitId":"drake25122000"},"content":"     *"},{"lineNumber":17,"author":{"gitId":"drake25122000"},"content":"     * @param command"},{"lineNumber":18,"author":{"gitId":"drake25122000"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"drake25122000"},"content":"    public AddCommand(String command) {"},{"lineNumber":20,"author":{"gitId":"drake25122000"},"content":"        super(command);"},{"lineNumber":21,"author":{"gitId":"drake25122000"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":23,"author":{"gitId":"drake25122000"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"drake25122000"},"content":"     * Executes the command"},{"lineNumber":25,"author":{"gitId":"drake25122000"},"content":"     **/"},{"lineNumber":26,"author":{"gitId":"drake25122000"},"content":"    @Override"},{"lineNumber":27,"author":{"gitId":"drake25122000"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws NoDateException, InvalidCommandException,"},{"lineNumber":28,"author":{"gitId":"drake25122000"},"content":"        NoTaskException, WrongDateTimeFormatException, SimilarTaskExistsException {"},{"lineNumber":29,"author":{"gitId":"drake25122000"},"content":"        try {"},{"lineNumber":30,"author":{"gitId":"drake25122000"},"content":"            tasks \u003d tasks.add(this.command);"},{"lineNumber":31,"author":{"gitId":"drake25122000"},"content":"        } catch (WrongDateTimeFormatException e) {"},{"lineNumber":32,"author":{"gitId":"drake25122000"},"content":"            throw new WrongDateTimeFormatException(e.getMessage());"},{"lineNumber":33,"author":{"gitId":"drake25122000"},"content":"        } catch (SimilarTaskExistsException e) {"},{"lineNumber":34,"author":{"gitId":"drake25122000"},"content":"            throw new SimilarTaskExistsException(e.getMessage());"},{"lineNumber":35,"author":{"gitId":"drake25122000"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"drake25122000"},"content":"        return ui.showAddedTask(tasks.taskSize(), tasks.getAddedOrDeletedTask());"},{"lineNumber":37,"author":{"gitId":"drake25122000"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":39,"author":{"gitId":"drake25122000"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"drake25122000"},"content":"     * Check if the current command is an exit command"},{"lineNumber":41,"author":{"gitId":"drake25122000"},"content":"     **/"},{"lineNumber":42,"author":{"gitId":"drake25122000"},"content":"    @Override"},{"lineNumber":43,"author":{"gitId":"drake25122000"},"content":"    public boolean isExit() {"},{"lineNumber":44,"author":{"gitId":"drake25122000"},"content":"        return false;"},{"lineNumber":45,"author":{"gitId":"drake25122000"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":47,"author":{"gitId":"drake25122000"},"content":"    @Override"},{"lineNumber":48,"author":{"gitId":"drake25122000"},"content":"    public boolean equals(Object o) {"},{"lineNumber":49,"author":{"gitId":"drake25122000"},"content":"        if (o \u003d\u003d this) {"},{"lineNumber":50,"author":{"gitId":"drake25122000"},"content":"            return true;"},{"lineNumber":51,"author":{"gitId":"drake25122000"},"content":"        } else if (o instanceof AddCommand) {"},{"lineNumber":52,"author":{"gitId":"drake25122000"},"content":"            AddCommand temp \u003d (AddCommand) o;"},{"lineNumber":53,"author":{"gitId":"drake25122000"},"content":"            if (temp.command.equals(this.command)) {"},{"lineNumber":54,"author":{"gitId":"drake25122000"},"content":"                return true;"},{"lineNumber":55,"author":{"gitId":"drake25122000"},"content":"            } else {"},{"lineNumber":56,"author":{"gitId":"drake25122000"},"content":"                return false;"},{"lineNumber":57,"author":{"gitId":"drake25122000"},"content":"            }"},{"lineNumber":58,"author":{"gitId":"drake25122000"},"content":"        } else {"},{"lineNumber":59,"author":{"gitId":"drake25122000"},"content":"            return false;"},{"lineNumber":60,"author":{"gitId":"drake25122000"},"content":"        }"},{"lineNumber":61,"author":{"gitId":"drake25122000"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"drake25122000"},"content":"}"}],"authorContributionMap":{"drake25122000":62}},{"path":"src/main/java/Command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"drake25122000"},"content":"package command;"},{"lineNumber":2,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":3,"author":{"gitId":"drake25122000"},"content":"import exceptions.DukeException;"},{"lineNumber":4,"author":{"gitId":"drake25122000"},"content":"import parserstorageui.Storage;"},{"lineNumber":5,"author":{"gitId":"drake25122000"},"content":"import parserstorageui.Ui;"},{"lineNumber":6,"author":{"gitId":"drake25122000"},"content":"import task.TaskList;"},{"lineNumber":7,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":8,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":9,"author":{"gitId":"drake25122000"},"content":"abstract public class Command {"},{"lineNumber":10,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":11,"author":{"gitId":"drake25122000"},"content":"    protected final String command;"},{"lineNumber":12,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":13,"author":{"gitId":"drake25122000"},"content":"    public Command(String command) {"},{"lineNumber":14,"author":{"gitId":"drake25122000"},"content":"        this.command \u003d command;"},{"lineNumber":15,"author":{"gitId":"drake25122000"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":17,"author":{"gitId":"drake25122000"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"drake25122000"},"content":"     * Executes the command"},{"lineNumber":19,"author":{"gitId":"drake25122000"},"content":"     **/"},{"lineNumber":20,"author":{"gitId":"drake25122000"},"content":"    public abstract String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;"},{"lineNumber":21,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":22,"author":{"gitId":"drake25122000"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"drake25122000"},"content":"     * Check if the current command is an exit command"},{"lineNumber":24,"author":{"gitId":"drake25122000"},"content":"     **/"},{"lineNumber":25,"author":{"gitId":"drake25122000"},"content":"    public abstract boolean isExit();"},{"lineNumber":26,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":27,"author":{"gitId":"drake25122000"},"content":"}"}],"authorContributionMap":{"drake25122000":27}},{"path":"src/main/java/Command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"drake25122000"},"content":"package command;"},{"lineNumber":2,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":3,"author":{"gitId":"drake25122000"},"content":"import exceptions.MissingSpecifiedDeleteError;"},{"lineNumber":4,"author":{"gitId":"drake25122000"},"content":"import exceptions.WrongIndexError;"},{"lineNumber":5,"author":{"gitId":"drake25122000"},"content":"import parserstorageui.Storage;"},{"lineNumber":6,"author":{"gitId":"drake25122000"},"content":"import parserstorageui.Ui;"},{"lineNumber":7,"author":{"gitId":"drake25122000"},"content":"import task.TaskList;"},{"lineNumber":8,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":9,"author":{"gitId":"drake25122000"},"content":"public class DeleteCommand extends Command {"},{"lineNumber":10,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":11,"author":{"gitId":"drake25122000"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"drake25122000"},"content":"     * Initializes DeleteCommand"},{"lineNumber":13,"author":{"gitId":"drake25122000"},"content":"     *"},{"lineNumber":14,"author":{"gitId":"drake25122000"},"content":"     * @param command"},{"lineNumber":15,"author":{"gitId":"drake25122000"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"drake25122000"},"content":"    public DeleteCommand(String command) {"},{"lineNumber":17,"author":{"gitId":"drake25122000"},"content":"        super(command);"},{"lineNumber":18,"author":{"gitId":"drake25122000"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":20,"author":{"gitId":"drake25122000"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"drake25122000"},"content":"     * Executes the command"},{"lineNumber":22,"author":{"gitId":"drake25122000"},"content":"     **/"},{"lineNumber":23,"author":{"gitId":"drake25122000"},"content":"    @Override"},{"lineNumber":24,"author":{"gitId":"drake25122000"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws MissingSpecifiedDeleteError, WrongIndexError {"},{"lineNumber":25,"author":{"gitId":"drake25122000"},"content":"        try {"},{"lineNumber":26,"author":{"gitId":"drake25122000"},"content":"            tasks \u003d tasks.delete(this.command);"},{"lineNumber":27,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":28,"author":{"gitId":"drake25122000"},"content":"        } catch (MissingSpecifiedDeleteError e) {"},{"lineNumber":29,"author":{"gitId":"drake25122000"},"content":"            throw new MissingSpecifiedDeleteError(e.getMessage());"},{"lineNumber":30,"author":{"gitId":"drake25122000"},"content":"        } catch (WrongIndexError e) {"},{"lineNumber":31,"author":{"gitId":"drake25122000"},"content":"            throw new WrongIndexError(e.getMessage());"},{"lineNumber":32,"author":{"gitId":"drake25122000"},"content":"        }"},{"lineNumber":33,"author":{"gitId":"drake25122000"},"content":"        return ui.showDeletedTask(tasks.taskSize(), tasks.getAddedOrDeletedTask());"},{"lineNumber":34,"author":{"gitId":"drake25122000"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":36,"author":{"gitId":"drake25122000"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"drake25122000"},"content":"     * Check if the current command is an exit command"},{"lineNumber":38,"author":{"gitId":"drake25122000"},"content":"     **/"},{"lineNumber":39,"author":{"gitId":"drake25122000"},"content":"    @Override"},{"lineNumber":40,"author":{"gitId":"drake25122000"},"content":"    public boolean isExit() {"},{"lineNumber":41,"author":{"gitId":"drake25122000"},"content":"        return false;"},{"lineNumber":42,"author":{"gitId":"drake25122000"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":44,"author":{"gitId":"drake25122000"},"content":"    /**"},{"lineNumber":45,"author":{"gitId":"drake25122000"},"content":"     * Override the equals method from Object to handle DeleteCommand"},{"lineNumber":46,"author":{"gitId":"drake25122000"},"content":"     **/"},{"lineNumber":47,"author":{"gitId":"drake25122000"},"content":"    @Override"},{"lineNumber":48,"author":{"gitId":"drake25122000"},"content":"    public boolean equals(Object o) {"},{"lineNumber":49,"author":{"gitId":"drake25122000"},"content":"        if (o \u003d\u003d this) {"},{"lineNumber":50,"author":{"gitId":"drake25122000"},"content":"            return true;"},{"lineNumber":51,"author":{"gitId":"drake25122000"},"content":"        } else if (o instanceof DeleteCommand) {"},{"lineNumber":52,"author":{"gitId":"drake25122000"},"content":"            DeleteCommand temp \u003d (DeleteCommand) o;"},{"lineNumber":53,"author":{"gitId":"drake25122000"},"content":"            if (temp.command.equals(this.command)) {"},{"lineNumber":54,"author":{"gitId":"drake25122000"},"content":"                return true;"},{"lineNumber":55,"author":{"gitId":"drake25122000"},"content":"            } else {"},{"lineNumber":56,"author":{"gitId":"drake25122000"},"content":"                return false;"},{"lineNumber":57,"author":{"gitId":"drake25122000"},"content":"            }"},{"lineNumber":58,"author":{"gitId":"drake25122000"},"content":"        } else {"},{"lineNumber":59,"author":{"gitId":"drake25122000"},"content":"            return false;"},{"lineNumber":60,"author":{"gitId":"drake25122000"},"content":"        }"},{"lineNumber":61,"author":{"gitId":"drake25122000"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"drake25122000"},"content":"}"}],"authorContributionMap":{"drake25122000":62}},{"path":"src/main/java/Command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"drake25122000"},"content":"package command;"},{"lineNumber":2,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":3,"author":{"gitId":"drake25122000"},"content":"import exceptions.WrongIndexError;"},{"lineNumber":4,"author":{"gitId":"drake25122000"},"content":"import parserstorageui.Storage;"},{"lineNumber":5,"author":{"gitId":"drake25122000"},"content":"import parserstorageui.Ui;"},{"lineNumber":6,"author":{"gitId":"drake25122000"},"content":"import task.TaskList;"},{"lineNumber":7,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":8,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":9,"author":{"gitId":"drake25122000"},"content":"public class DoneCommand extends Command {"},{"lineNumber":10,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":11,"author":{"gitId":"drake25122000"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"drake25122000"},"content":"     * Initializes DoneCommand"},{"lineNumber":13,"author":{"gitId":"drake25122000"},"content":"     *"},{"lineNumber":14,"author":{"gitId":"drake25122000"},"content":"     * @param command"},{"lineNumber":15,"author":{"gitId":"drake25122000"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"drake25122000"},"content":"    public DoneCommand(String command) {"},{"lineNumber":17,"author":{"gitId":"drake25122000"},"content":"        super(command);"},{"lineNumber":18,"author":{"gitId":"drake25122000"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":20,"author":{"gitId":"drake25122000"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"drake25122000"},"content":"     * Executes the command"},{"lineNumber":22,"author":{"gitId":"drake25122000"},"content":"     **/"},{"lineNumber":23,"author":{"gitId":"drake25122000"},"content":"    @Override"},{"lineNumber":24,"author":{"gitId":"drake25122000"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws WrongIndexError {"},{"lineNumber":25,"author":{"gitId":"drake25122000"},"content":"        try {"},{"lineNumber":26,"author":{"gitId":"drake25122000"},"content":"            tasks \u003d tasks.done(this.command);"},{"lineNumber":27,"author":{"gitId":"drake25122000"},"content":"        } catch (WrongIndexError e) {"},{"lineNumber":28,"author":{"gitId":"drake25122000"},"content":"            throw new WrongIndexError(e.getMessage());"},{"lineNumber":29,"author":{"gitId":"drake25122000"},"content":"        }"},{"lineNumber":30,"author":{"gitId":"drake25122000"},"content":"        return ui.showDoneTask(tasks.getAddedOrDeletedTask());"},{"lineNumber":31,"author":{"gitId":"drake25122000"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":33,"author":{"gitId":"drake25122000"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"drake25122000"},"content":"     * Check if the current command is an exit command"},{"lineNumber":35,"author":{"gitId":"drake25122000"},"content":"     **/"},{"lineNumber":36,"author":{"gitId":"drake25122000"},"content":"    @Override"},{"lineNumber":37,"author":{"gitId":"drake25122000"},"content":"    public boolean isExit() {"},{"lineNumber":38,"author":{"gitId":"drake25122000"},"content":"        return false;"},{"lineNumber":39,"author":{"gitId":"drake25122000"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"drake25122000"},"content":"}"}],"authorContributionMap":{"drake25122000":40}},{"path":"src/main/java/Command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"drake25122000"},"content":"package command;"},{"lineNumber":2,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":3,"author":{"gitId":"drake25122000"},"content":"import exceptions.DukeException;"},{"lineNumber":4,"author":{"gitId":"drake25122000"},"content":"import parserstorageui.Storage;"},{"lineNumber":5,"author":{"gitId":"drake25122000"},"content":"import parserstorageui.Ui;"},{"lineNumber":6,"author":{"gitId":"drake25122000"},"content":"import task.TaskList;"},{"lineNumber":7,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":8,"author":{"gitId":"drake25122000"},"content":"public class ExitCommand extends Command {"},{"lineNumber":9,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":10,"author":{"gitId":"drake25122000"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"drake25122000"},"content":"     * Initializes ExitCommand"},{"lineNumber":12,"author":{"gitId":"drake25122000"},"content":"     *"},{"lineNumber":13,"author":{"gitId":"drake25122000"},"content":"     * @param command"},{"lineNumber":14,"author":{"gitId":"drake25122000"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"drake25122000"},"content":"    public ExitCommand(String command) {"},{"lineNumber":16,"author":{"gitId":"drake25122000"},"content":"        super(command);"},{"lineNumber":17,"author":{"gitId":"drake25122000"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":19,"author":{"gitId":"drake25122000"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"drake25122000"},"content":"     * Executes the command"},{"lineNumber":21,"author":{"gitId":"drake25122000"},"content":"     **/"},{"lineNumber":22,"author":{"gitId":"drake25122000"},"content":"    @Override"},{"lineNumber":23,"author":{"gitId":"drake25122000"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"},{"lineNumber":24,"author":{"gitId":"drake25122000"},"content":"        try {"},{"lineNumber":25,"author":{"gitId":"drake25122000"},"content":"            storage.putToDatabase(tasks.getTaskList());"},{"lineNumber":26,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":27,"author":{"gitId":"drake25122000"},"content":"        } catch (DukeException e) {"},{"lineNumber":28,"author":{"gitId":"drake25122000"},"content":"            throw new DukeException(e.getMessage());"},{"lineNumber":29,"author":{"gitId":"drake25122000"},"content":"        }"},{"lineNumber":30,"author":{"gitId":"drake25122000"},"content":"        return ui.showGoodBye();"},{"lineNumber":31,"author":{"gitId":"drake25122000"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":33,"author":{"gitId":"drake25122000"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"drake25122000"},"content":"     * Check if the current command is an exit command"},{"lineNumber":35,"author":{"gitId":"drake25122000"},"content":"     **/"},{"lineNumber":36,"author":{"gitId":"drake25122000"},"content":"    @Override"},{"lineNumber":37,"author":{"gitId":"drake25122000"},"content":"    public boolean isExit() {"},{"lineNumber":38,"author":{"gitId":"drake25122000"},"content":"        return true;"},{"lineNumber":39,"author":{"gitId":"drake25122000"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":41,"author":{"gitId":"drake25122000"},"content":"    /**"},{"lineNumber":42,"author":{"gitId":"drake25122000"},"content":"     * Override the equals method from Object to handle ExitCommand"},{"lineNumber":43,"author":{"gitId":"drake25122000"},"content":"     **/"},{"lineNumber":44,"author":{"gitId":"drake25122000"},"content":"    @Override"},{"lineNumber":45,"author":{"gitId":"drake25122000"},"content":"    public boolean equals(Object o) {"},{"lineNumber":46,"author":{"gitId":"drake25122000"},"content":"        if (o \u003d\u003d this) {"},{"lineNumber":47,"author":{"gitId":"drake25122000"},"content":"            return true;"},{"lineNumber":48,"author":{"gitId":"drake25122000"},"content":"        } else if (o instanceof ExitCommand) {"},{"lineNumber":49,"author":{"gitId":"drake25122000"},"content":"            ExitCommand temp \u003d (ExitCommand) o;"},{"lineNumber":50,"author":{"gitId":"drake25122000"},"content":"            if (temp.command.equals(this.command)) {"},{"lineNumber":51,"author":{"gitId":"drake25122000"},"content":"                return true;"},{"lineNumber":52,"author":{"gitId":"drake25122000"},"content":"            } else {"},{"lineNumber":53,"author":{"gitId":"drake25122000"},"content":"                return false;"},{"lineNumber":54,"author":{"gitId":"drake25122000"},"content":"            }"},{"lineNumber":55,"author":{"gitId":"drake25122000"},"content":"        } else {"},{"lineNumber":56,"author":{"gitId":"drake25122000"},"content":"            return false;"},{"lineNumber":57,"author":{"gitId":"drake25122000"},"content":"        }"},{"lineNumber":58,"author":{"gitId":"drake25122000"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"drake25122000"},"content":"}"}],"authorContributionMap":{"drake25122000":59}},{"path":"src/main/java/Command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"drake25122000"},"content":"package command;"},{"lineNumber":2,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":3,"author":{"gitId":"drake25122000"},"content":"import exceptions.UnSpecifiedFind;"},{"lineNumber":4,"author":{"gitId":"drake25122000"},"content":"import parserstorageui.Storage;"},{"lineNumber":5,"author":{"gitId":"drake25122000"},"content":"import parserstorageui.Ui;"},{"lineNumber":6,"author":{"gitId":"drake25122000"},"content":"import task.TaskList;"},{"lineNumber":7,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":8,"author":{"gitId":"drake25122000"},"content":"public class FindCommand extends Command {"},{"lineNumber":9,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":10,"author":{"gitId":"drake25122000"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"drake25122000"},"content":"     * Initializes FindCommand"},{"lineNumber":12,"author":{"gitId":"drake25122000"},"content":"     *"},{"lineNumber":13,"author":{"gitId":"drake25122000"},"content":"     * @param command"},{"lineNumber":14,"author":{"gitId":"drake25122000"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"drake25122000"},"content":"    public FindCommand(String command) {"},{"lineNumber":16,"author":{"gitId":"drake25122000"},"content":"        super(command);"},{"lineNumber":17,"author":{"gitId":"drake25122000"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":19,"author":{"gitId":"drake25122000"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"drake25122000"},"content":"     * Executes the command"},{"lineNumber":21,"author":{"gitId":"drake25122000"},"content":"     **/"},{"lineNumber":22,"author":{"gitId":"drake25122000"},"content":"    @Override"},{"lineNumber":23,"author":{"gitId":"drake25122000"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws UnSpecifiedFind {"},{"lineNumber":24,"author":{"gitId":"drake25122000"},"content":"        try {"},{"lineNumber":25,"author":{"gitId":"drake25122000"},"content":"            return ui.showFoundTasks(tasks, this.command.substring(5));"},{"lineNumber":26,"author":{"gitId":"drake25122000"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":27,"author":{"gitId":"drake25122000"},"content":"            throw new UnSpecifiedFind(\"☹ OOPS!!! Please specify the keyword to be found.\");"},{"lineNumber":28,"author":{"gitId":"drake25122000"},"content":"        }"},{"lineNumber":29,"author":{"gitId":"drake25122000"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":31,"author":{"gitId":"drake25122000"},"content":"    @Override"},{"lineNumber":32,"author":{"gitId":"drake25122000"},"content":"    public boolean isExit() {"},{"lineNumber":33,"author":{"gitId":"drake25122000"},"content":"        return false;"},{"lineNumber":34,"author":{"gitId":"drake25122000"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":36,"author":{"gitId":"drake25122000"},"content":"}"}],"authorContributionMap":{"drake25122000":36}},{"path":"src/main/java/Command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"drake25122000"},"content":"package command;"},{"lineNumber":2,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":3,"author":{"gitId":"drake25122000"},"content":"import parserstorageui.Storage;"},{"lineNumber":4,"author":{"gitId":"drake25122000"},"content":"import parserstorageui.Ui;"},{"lineNumber":5,"author":{"gitId":"drake25122000"},"content":"import task.TaskList;"},{"lineNumber":6,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":7,"author":{"gitId":"drake25122000"},"content":"public class ListCommand extends Command {"},{"lineNumber":8,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":9,"author":{"gitId":"drake25122000"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"drake25122000"},"content":"     * Initializes ListCommand"},{"lineNumber":11,"author":{"gitId":"drake25122000"},"content":"     *"},{"lineNumber":12,"author":{"gitId":"drake25122000"},"content":"     * @param command"},{"lineNumber":13,"author":{"gitId":"drake25122000"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"drake25122000"},"content":"    public ListCommand(String command) {"},{"lineNumber":15,"author":{"gitId":"drake25122000"},"content":"        super(command);"},{"lineNumber":16,"author":{"gitId":"drake25122000"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":18,"author":{"gitId":"drake25122000"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"drake25122000"},"content":"     * Executes the command"},{"lineNumber":20,"author":{"gitId":"drake25122000"},"content":"     **/"},{"lineNumber":21,"author":{"gitId":"drake25122000"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"drake25122000"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {"},{"lineNumber":23,"author":{"gitId":"drake25122000"},"content":"        return ui.showTasks(tasks);"},{"lineNumber":24,"author":{"gitId":"drake25122000"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":26,"author":{"gitId":"drake25122000"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"drake25122000"},"content":"     * Check if the current command is an exit command"},{"lineNumber":28,"author":{"gitId":"drake25122000"},"content":"     **/"},{"lineNumber":29,"author":{"gitId":"drake25122000"},"content":"    @Override"},{"lineNumber":30,"author":{"gitId":"drake25122000"},"content":"    public boolean isExit() {"},{"lineNumber":31,"author":{"gitId":"drake25122000"},"content":"        return false;"},{"lineNumber":32,"author":{"gitId":"drake25122000"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":34,"author":{"gitId":"drake25122000"},"content":"}"}],"authorContributionMap":{"drake25122000":34}},{"path":"src/main/java/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"drake25122000"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"drake25122000"},"content":"import java.util.Collections;"},{"lineNumber":3,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":4,"author":{"gitId":"drake25122000"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":5,"author":{"gitId":"drake25122000"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":6,"author":{"gitId":"drake25122000"},"content":"import javafx.fxml.FXML;"},{"lineNumber":7,"author":{"gitId":"drake25122000"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":8,"author":{"gitId":"drake25122000"},"content":"import javafx.geometry.Pos;"},{"lineNumber":9,"author":{"gitId":"drake25122000"},"content":"import javafx.scene.Node;"},{"lineNumber":10,"author":{"gitId":"drake25122000"},"content":"import javafx.scene.control.Label;"},{"lineNumber":11,"author":{"gitId":"drake25122000"},"content":"import javafx.scene.image.Image;"},{"lineNumber":12,"author":{"gitId":"drake25122000"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":13,"author":{"gitId":"drake25122000"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":14,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":15,"author":{"gitId":"drake25122000"},"content":"/**"},{"lineNumber":16,"author":{"gitId":"drake25122000"},"content":" * An example of a custom control using FXML."},{"lineNumber":17,"author":{"gitId":"drake25122000"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"},{"lineNumber":18,"author":{"gitId":"drake25122000"},"content":" * containing text from the speaker."},{"lineNumber":19,"author":{"gitId":"drake25122000"},"content":" */"},{"lineNumber":20,"author":{"gitId":"drake25122000"},"content":"public class DialogBox extends HBox {"},{"lineNumber":21,"author":{"gitId":"drake25122000"},"content":"    @FXML"},{"lineNumber":22,"author":{"gitId":"drake25122000"},"content":"    private Label dialog;"},{"lineNumber":23,"author":{"gitId":"drake25122000"},"content":"    @FXML"},{"lineNumber":24,"author":{"gitId":"drake25122000"},"content":"    private ImageView displayPicture;"},{"lineNumber":25,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":26,"author":{"gitId":"drake25122000"},"content":"    private DialogBox(String text, Image img) {"},{"lineNumber":27,"author":{"gitId":"drake25122000"},"content":"        try {"},{"lineNumber":28,"author":{"gitId":"drake25122000"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"},{"lineNumber":29,"author":{"gitId":"drake25122000"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":30,"author":{"gitId":"drake25122000"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":31,"author":{"gitId":"drake25122000"},"content":"            fxmlLoader.load();"},{"lineNumber":32,"author":{"gitId":"drake25122000"},"content":"        } catch (IOException e) {"},{"lineNumber":33,"author":{"gitId":"drake25122000"},"content":"            e.printStackTrace();"},{"lineNumber":34,"author":{"gitId":"drake25122000"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":36,"author":{"gitId":"drake25122000"},"content":"        dialog.setText(text);"},{"lineNumber":37,"author":{"gitId":"drake25122000"},"content":"        displayPicture.setImage(img);"},{"lineNumber":38,"author":{"gitId":"drake25122000"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":40,"author":{"gitId":"drake25122000"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"drake25122000"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":42,"author":{"gitId":"drake25122000"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"drake25122000"},"content":"    private void flip() {"},{"lineNumber":44,"author":{"gitId":"drake25122000"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":45,"author":{"gitId":"drake25122000"},"content":"        Collections.reverse(tmp);"},{"lineNumber":46,"author":{"gitId":"drake25122000"},"content":"        getChildren().setAll(tmp);"},{"lineNumber":47,"author":{"gitId":"drake25122000"},"content":"        setAlignment(Pos.TOP_LEFT);"},{"lineNumber":48,"author":{"gitId":"drake25122000"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":50,"author":{"gitId":"drake25122000"},"content":"    public static DialogBox getUserDialog(String text, Image img) {"},{"lineNumber":51,"author":{"gitId":"drake25122000"},"content":"        DialogBox user \u003d new DialogBox(text, img);"},{"lineNumber":52,"author":{"gitId":"drake25122000"},"content":"        user.setAlignment(Pos.CENTER_RIGHT);"},{"lineNumber":53,"author":{"gitId":"drake25122000"},"content":"        return user ;"},{"lineNumber":54,"author":{"gitId":"drake25122000"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":56,"author":{"gitId":"drake25122000"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {"},{"lineNumber":57,"author":{"gitId":"drake25122000"},"content":"        var db \u003d new DialogBox(text, img);"},{"lineNumber":58,"author":{"gitId":"drake25122000"},"content":"        db.flip();"},{"lineNumber":59,"author":{"gitId":"drake25122000"},"content":"        db.setAlignment(Pos.CENTER_LEFT);"},{"lineNumber":60,"author":{"gitId":"drake25122000"},"content":"        return db;"},{"lineNumber":61,"author":{"gitId":"drake25122000"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"drake25122000"},"content":"}"}],"authorContributionMap":{"drake25122000":62}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"drake25122000"},"content":"import command.Command;"},{"lineNumber":2,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":3,"author":{"gitId":"drake25122000"},"content":"import exceptions.DukeException;"},{"lineNumber":4,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":5,"author":{"gitId":"drake25122000"},"content":"import parserstorageui.Storage;"},{"lineNumber":6,"author":{"gitId":"drake25122000"},"content":"import parserstorageui.Ui;"},{"lineNumber":7,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":8,"author":{"gitId":"drake25122000"},"content":"import task.TaskList;"},{"lineNumber":9,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Duke{"},{"lineNumber":11,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":12,"author":{"gitId":"drake25122000"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"drake25122000"},"content":"     * The storage assigned to Duke"},{"lineNumber":14,"author":{"gitId":"drake25122000"},"content":"     **/"},{"lineNumber":15,"author":{"gitId":"drake25122000"},"content":"    private Storage storage;"},{"lineNumber":16,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":17,"author":{"gitId":"drake25122000"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"drake25122000"},"content":"     * The TaskList assigned to Duke"},{"lineNumber":19,"author":{"gitId":"drake25122000"},"content":"     **/"},{"lineNumber":20,"author":{"gitId":"drake25122000"},"content":"    private TaskList tasks;"},{"lineNumber":21,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":22,"author":{"gitId":"drake25122000"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"drake25122000"},"content":"     * The Ui interaction handler"},{"lineNumber":24,"author":{"gitId":"drake25122000"},"content":"     **/"},{"lineNumber":25,"author":{"gitId":"drake25122000"},"content":"    private Ui ui;"},{"lineNumber":26,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":27,"author":{"gitId":"drake25122000"},"content":"    public Duke(){"},{"lineNumber":28,"author":{"gitId":"drake25122000"},"content":"        ui \u003d new Ui();"},{"lineNumber":29,"author":{"gitId":"drake25122000"},"content":"        storage \u003d new Storage(\"data\");"},{"lineNumber":30,"author":{"gitId":"drake25122000"},"content":"        try {"},{"lineNumber":31,"author":{"gitId":"drake25122000"},"content":"            tasks \u003d new TaskList(storage.load());"},{"lineNumber":32,"author":{"gitId":"drake25122000"},"content":"        } catch (DukeException e) {"},{"lineNumber":33,"author":{"gitId":"drake25122000"},"content":"            ui.showLoadingError();"},{"lineNumber":34,"author":{"gitId":"drake25122000"},"content":"            tasks \u003d new TaskList();"},{"lineNumber":35,"author":{"gitId":"drake25122000"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":38,"author":{"gitId":"drake25122000"},"content":"    public String getResponse(Command c) throws DukeException {"},{"lineNumber":39,"author":{"gitId":"drake25122000"},"content":"        try {"},{"lineNumber":40,"author":{"gitId":"drake25122000"},"content":"            String out \u003d c.execute(tasks, ui, storage);"},{"lineNumber":41,"author":{"gitId":"drake25122000"},"content":"            System.out.println(out);"},{"lineNumber":42,"author":{"gitId":"drake25122000"},"content":"            return out;"},{"lineNumber":43,"author":{"gitId":"drake25122000"},"content":"        } catch (DukeException e) {"},{"lineNumber":44,"author":{"gitId":"drake25122000"},"content":"            throw new DukeException(e.getMessage());"},{"lineNumber":45,"author":{"gitId":"drake25122000"},"content":"        }"},{"lineNumber":46,"author":{"gitId":"drake25122000"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":48,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"drake25122000":45,"-":3}},{"path":"src/main/java/Exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"drake25122000"},"content":"package exceptions;"},{"lineNumber":2,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":3,"author":{"gitId":"drake25122000"},"content":"public class DukeException extends Exception {"},{"lineNumber":4,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":5,"author":{"gitId":"drake25122000"},"content":"    /**"},{"lineNumber":6,"author":{"gitId":"drake25122000"},"content":"     * Initializes DukeException"},{"lineNumber":7,"author":{"gitId":"drake25122000"},"content":"     *"},{"lineNumber":8,"author":{"gitId":"drake25122000"},"content":"     * @param message"},{"lineNumber":9,"author":{"gitId":"drake25122000"},"content":"     */"},{"lineNumber":10,"author":{"gitId":"drake25122000"},"content":"    public DukeException(String message) {"},{"lineNumber":11,"author":{"gitId":"drake25122000"},"content":"        super(message);"},{"lineNumber":12,"author":{"gitId":"drake25122000"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":14,"author":{"gitId":"drake25122000"},"content":"}"}],"authorContributionMap":{"drake25122000":14}},{"path":"src/main/java/Exceptions/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"drake25122000"},"content":"package exceptions;"},{"lineNumber":2,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":3,"author":{"gitId":"drake25122000"},"content":"public class InvalidCommandException extends DukeException {"},{"lineNumber":4,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":5,"author":{"gitId":"drake25122000"},"content":"    /**"},{"lineNumber":6,"author":{"gitId":"drake25122000"},"content":"     * Initializes InvalidCommandException"},{"lineNumber":7,"author":{"gitId":"drake25122000"},"content":"     *"},{"lineNumber":8,"author":{"gitId":"drake25122000"},"content":"     * @param message"},{"lineNumber":9,"author":{"gitId":"drake25122000"},"content":"     */"},{"lineNumber":10,"author":{"gitId":"drake25122000"},"content":"    public InvalidCommandException(String message) {"},{"lineNumber":11,"author":{"gitId":"drake25122000"},"content":"        super(message);"},{"lineNumber":12,"author":{"gitId":"drake25122000"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":14,"author":{"gitId":"drake25122000"},"content":"}"}],"authorContributionMap":{"drake25122000":14}},{"path":"src/main/java/Exceptions/MissingSpecifiedDeleteError.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"drake25122000"},"content":"package exceptions;"},{"lineNumber":2,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":3,"author":{"gitId":"drake25122000"},"content":"public class MissingSpecifiedDeleteError extends DukeException {"},{"lineNumber":4,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":5,"author":{"gitId":"drake25122000"},"content":"    /**"},{"lineNumber":6,"author":{"gitId":"drake25122000"},"content":"     * Initializes MissingSpecifiedDeleteError"},{"lineNumber":7,"author":{"gitId":"drake25122000"},"content":"     *"},{"lineNumber":8,"author":{"gitId":"drake25122000"},"content":"     * @param message"},{"lineNumber":9,"author":{"gitId":"drake25122000"},"content":"     */"},{"lineNumber":10,"author":{"gitId":"drake25122000"},"content":"    public MissingSpecifiedDeleteError(String message) {"},{"lineNumber":11,"author":{"gitId":"drake25122000"},"content":"        super(message);"},{"lineNumber":12,"author":{"gitId":"drake25122000"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":14,"author":{"gitId":"drake25122000"},"content":"}"}],"authorContributionMap":{"drake25122000":14}},{"path":"src/main/java/Exceptions/NoDateException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"drake25122000"},"content":"package exceptions;"},{"lineNumber":2,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":3,"author":{"gitId":"drake25122000"},"content":"public class NoDateException extends DukeException {"},{"lineNumber":4,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":5,"author":{"gitId":"drake25122000"},"content":"    /**"},{"lineNumber":6,"author":{"gitId":"drake25122000"},"content":"     * Initialize NoDateException"},{"lineNumber":7,"author":{"gitId":"drake25122000"},"content":"     *"},{"lineNumber":8,"author":{"gitId":"drake25122000"},"content":"     * @param message"},{"lineNumber":9,"author":{"gitId":"drake25122000"},"content":"     */"},{"lineNumber":10,"author":{"gitId":"drake25122000"},"content":"    public NoDateException(String message) {"},{"lineNumber":11,"author":{"gitId":"drake25122000"},"content":"        super(message);"},{"lineNumber":12,"author":{"gitId":"drake25122000"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":14,"author":{"gitId":"drake25122000"},"content":"}"}],"authorContributionMap":{"drake25122000":14}},{"path":"src/main/java/Exceptions/NoTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"drake25122000"},"content":"package exceptions;"},{"lineNumber":2,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":3,"author":{"gitId":"drake25122000"},"content":"public class NoTaskException extends DukeException {"},{"lineNumber":4,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":5,"author":{"gitId":"drake25122000"},"content":"    /**"},{"lineNumber":6,"author":{"gitId":"drake25122000"},"content":"     * Initializes NoTaskException"},{"lineNumber":7,"author":{"gitId":"drake25122000"},"content":"     *"},{"lineNumber":8,"author":{"gitId":"drake25122000"},"content":"     * @param message"},{"lineNumber":9,"author":{"gitId":"drake25122000"},"content":"     */"},{"lineNumber":10,"author":{"gitId":"drake25122000"},"content":"    public NoTaskException(String message) {"},{"lineNumber":11,"author":{"gitId":"drake25122000"},"content":"        super(message);"},{"lineNumber":12,"author":{"gitId":"drake25122000"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":14,"author":{"gitId":"drake25122000"},"content":"}"}],"authorContributionMap":{"drake25122000":14}},{"path":"src/main/java/Exceptions/SimilarTaskExistsException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"drake25122000"},"content":"package exceptions;"},{"lineNumber":2,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":3,"author":{"gitId":"drake25122000"},"content":"public class SimilarTaskExistsException extends DukeException {"},{"lineNumber":4,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":5,"author":{"gitId":"drake25122000"},"content":"    /**"},{"lineNumber":6,"author":{"gitId":"drake25122000"},"content":"     * Initialize SimilarTaskExistsException class"},{"lineNumber":7,"author":{"gitId":"drake25122000"},"content":"     * @param message"},{"lineNumber":8,"author":{"gitId":"drake25122000"},"content":"     */"},{"lineNumber":9,"author":{"gitId":"drake25122000"},"content":"    public SimilarTaskExistsException(String message) {"},{"lineNumber":10,"author":{"gitId":"drake25122000"},"content":"        super(message);"},{"lineNumber":11,"author":{"gitId":"drake25122000"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"drake25122000"},"content":"}"}],"authorContributionMap":{"drake25122000":12}},{"path":"src/main/java/Exceptions/UnSpecifiedDate.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"drake25122000"},"content":"package exceptions;"},{"lineNumber":2,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":3,"author":{"gitId":"drake25122000"},"content":"public class UnSpecifiedDate extends DukeException {"},{"lineNumber":4,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":5,"author":{"gitId":"drake25122000"},"content":"    /**"},{"lineNumber":6,"author":{"gitId":"drake25122000"},"content":"     * Initializes UnSpecifiedDate"},{"lineNumber":7,"author":{"gitId":"drake25122000"},"content":"     *"},{"lineNumber":8,"author":{"gitId":"drake25122000"},"content":"     * @param message"},{"lineNumber":9,"author":{"gitId":"drake25122000"},"content":"     */"},{"lineNumber":10,"author":{"gitId":"drake25122000"},"content":"    public UnSpecifiedDate(String message) {"},{"lineNumber":11,"author":{"gitId":"drake25122000"},"content":"        super(message);"},{"lineNumber":12,"author":{"gitId":"drake25122000"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":14,"author":{"gitId":"drake25122000"},"content":"}"}],"authorContributionMap":{"drake25122000":14}},{"path":"src/main/java/Exceptions/UnSpecifiedFind.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"drake25122000"},"content":"package exceptions;"},{"lineNumber":2,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":3,"author":{"gitId":"drake25122000"},"content":"public class UnSpecifiedFind extends DukeException {"},{"lineNumber":4,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":5,"author":{"gitId":"drake25122000"},"content":"    /**"},{"lineNumber":6,"author":{"gitId":"drake25122000"},"content":"     * Initializes UnspecifiedFind"},{"lineNumber":7,"author":{"gitId":"drake25122000"},"content":"     *"},{"lineNumber":8,"author":{"gitId":"drake25122000"},"content":"     * @param message"},{"lineNumber":9,"author":{"gitId":"drake25122000"},"content":"     */"},{"lineNumber":10,"author":{"gitId":"drake25122000"},"content":"    public UnSpecifiedFind(String message) {"},{"lineNumber":11,"author":{"gitId":"drake25122000"},"content":"        super(message);"},{"lineNumber":12,"author":{"gitId":"drake25122000"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"drake25122000"},"content":"}"}],"authorContributionMap":{"drake25122000":13}},{"path":"src/main/java/Exceptions/WrongDateTimeFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"drake25122000"},"content":"package exceptions;"},{"lineNumber":2,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":3,"author":{"gitId":"drake25122000"},"content":"public class WrongDateTimeFormatException extends DukeException {"},{"lineNumber":4,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":5,"author":{"gitId":"drake25122000"},"content":"    /**"},{"lineNumber":6,"author":{"gitId":"drake25122000"},"content":"     * Initializes WrongDateTimeFormatException"},{"lineNumber":7,"author":{"gitId":"drake25122000"},"content":"     *"},{"lineNumber":8,"author":{"gitId":"drake25122000"},"content":"     * @param message"},{"lineNumber":9,"author":{"gitId":"drake25122000"},"content":"     */"},{"lineNumber":10,"author":{"gitId":"drake25122000"},"content":"    public WrongDateTimeFormatException(String message) {"},{"lineNumber":11,"author":{"gitId":"drake25122000"},"content":"        super(message);"},{"lineNumber":12,"author":{"gitId":"drake25122000"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"drake25122000"},"content":"}"}],"authorContributionMap":{"drake25122000":13}},{"path":"src/main/java/Exceptions/WrongIndexError.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"drake25122000"},"content":"package exceptions;"},{"lineNumber":2,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":3,"author":{"gitId":"drake25122000"},"content":"public class WrongIndexError extends DukeException {"},{"lineNumber":4,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":5,"author":{"gitId":"drake25122000"},"content":"    /**"},{"lineNumber":6,"author":{"gitId":"drake25122000"},"content":"     * Initializes WrongIndexError"},{"lineNumber":7,"author":{"gitId":"drake25122000"},"content":"     *"},{"lineNumber":8,"author":{"gitId":"drake25122000"},"content":"     * @param message"},{"lineNumber":9,"author":{"gitId":"drake25122000"},"content":"     */"},{"lineNumber":10,"author":{"gitId":"drake25122000"},"content":"    public WrongIndexError(String message) {"},{"lineNumber":11,"author":{"gitId":"drake25122000"},"content":"        super(message);"},{"lineNumber":12,"author":{"gitId":"drake25122000"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"drake25122000"},"content":"}"}],"authorContributionMap":{"drake25122000":13}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"drake25122000"},"content":"import javafx.application.Application;"},{"lineNumber":2,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":3,"author":{"gitId":"drake25122000"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"drake25122000"},"content":" * A launcher class to workaround classpath issues."},{"lineNumber":5,"author":{"gitId":"drake25122000"},"content":" */"},{"lineNumber":6,"author":{"gitId":"drake25122000"},"content":"public class Launcher {"},{"lineNumber":7,"author":{"gitId":"drake25122000"},"content":"    public static void main(String[] args) {"},{"lineNumber":8,"author":{"gitId":"drake25122000"},"content":"        Application.launch(Main.class, args);"},{"lineNumber":9,"author":{"gitId":"drake25122000"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"drake25122000"},"content":"}"}],"authorContributionMap":{"drake25122000":10}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"drake25122000"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":3,"author":{"gitId":"drake25122000"},"content":"import javafx.application.Application;"},{"lineNumber":4,"author":{"gitId":"drake25122000"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":5,"author":{"gitId":"drake25122000"},"content":"import javafx.scene.Scene;"},{"lineNumber":6,"author":{"gitId":"drake25122000"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":7,"author":{"gitId":"drake25122000"},"content":"import javafx.stage.Stage;"},{"lineNumber":8,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":9,"author":{"gitId":"drake25122000"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"drake25122000"},"content":" * A GUI for Duke using FXML."},{"lineNumber":11,"author":{"gitId":"drake25122000"},"content":" */"},{"lineNumber":12,"author":{"gitId":"drake25122000"},"content":"public class Main extends Application {"},{"lineNumber":13,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":14,"author":{"gitId":"drake25122000"},"content":"    private Duke duke \u003d new Duke();"},{"lineNumber":15,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":16,"author":{"gitId":"drake25122000"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"drake25122000"},"content":"    public void start(Stage stage) {"},{"lineNumber":18,"author":{"gitId":"drake25122000"},"content":"        try {"},{"lineNumber":19,"author":{"gitId":"drake25122000"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":20,"author":{"gitId":"drake25122000"},"content":"            MainWindow mainWindow \u003d new MainWindow();"},{"lineNumber":21,"author":{"gitId":"drake25122000"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":22,"author":{"gitId":"drake25122000"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":23,"author":{"gitId":"drake25122000"},"content":"            stage.setScene(scene);"},{"lineNumber":24,"author":{"gitId":"drake25122000"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"},{"lineNumber":25,"author":{"gitId":"drake25122000"},"content":"            stage.show();"},{"lineNumber":26,"author":{"gitId":"drake25122000"},"content":"        } catch (IOException e) {"},{"lineNumber":27,"author":{"gitId":"drake25122000"},"content":"            e.printStackTrace();"},{"lineNumber":28,"author":{"gitId":"drake25122000"},"content":"        }"},{"lineNumber":29,"author":{"gitId":"drake25122000"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"drake25122000"},"content":"}"}],"authorContributionMap":{"drake25122000":30}},{"path":"src/main/java/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"drake25122000"},"content":"import command.Command;"},{"lineNumber":2,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":3,"author":{"gitId":"drake25122000"},"content":"import exceptions.DukeException;"},{"lineNumber":4,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":5,"author":{"gitId":"drake25122000"},"content":"import javafx.fxml.FXML;"},{"lineNumber":6,"author":{"gitId":"drake25122000"},"content":"import javafx.scene.control.Button;"},{"lineNumber":7,"author":{"gitId":"drake25122000"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":8,"author":{"gitId":"drake25122000"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":9,"author":{"gitId":"drake25122000"},"content":"import javafx.scene.image.Image;"},{"lineNumber":10,"author":{"gitId":"drake25122000"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":11,"author":{"gitId":"drake25122000"},"content":"import javafx.scene.layout.Background;"},{"lineNumber":12,"author":{"gitId":"drake25122000"},"content":"import javafx.scene.layout.BackgroundImage;"},{"lineNumber":13,"author":{"gitId":"drake25122000"},"content":"import javafx.scene.layout.BackgroundPosition;"},{"lineNumber":14,"author":{"gitId":"drake25122000"},"content":"import javafx.scene.layout.BackgroundRepeat;"},{"lineNumber":15,"author":{"gitId":"drake25122000"},"content":"import javafx.scene.layout.BackgroundSize;"},{"lineNumber":16,"author":{"gitId":"drake25122000"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":17,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":18,"author":{"gitId":"drake25122000"},"content":"import parserstorageui.Parser;"},{"lineNumber":19,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":20,"author":{"gitId":"drake25122000"},"content":"/**"},{"lineNumber":21,"author":{"gitId":"drake25122000"},"content":" * Controller for MainWindow. Provides the layout for the other controls."},{"lineNumber":22,"author":{"gitId":"drake25122000"},"content":" */"},{"lineNumber":23,"author":{"gitId":"drake25122000"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":24,"author":{"gitId":"drake25122000"},"content":"    @FXML"},{"lineNumber":25,"author":{"gitId":"drake25122000"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":26,"author":{"gitId":"drake25122000"},"content":"    @FXML"},{"lineNumber":27,"author":{"gitId":"drake25122000"},"content":"    private VBox dialogContainer;"},{"lineNumber":28,"author":{"gitId":"drake25122000"},"content":"    @FXML"},{"lineNumber":29,"author":{"gitId":"drake25122000"},"content":"    private TextField userInput;"},{"lineNumber":30,"author":{"gitId":"drake25122000"},"content":"    @FXML"},{"lineNumber":31,"author":{"gitId":"drake25122000"},"content":"    private Button sendButton;"},{"lineNumber":32,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":33,"author":{"gitId":"drake25122000"},"content":"    private Duke duke;"},{"lineNumber":34,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":35,"author":{"gitId":"drake25122000"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/mrbean.png\"));"},{"lineNumber":36,"author":{"gitId":"drake25122000"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/troll.png\"));"},{"lineNumber":37,"author":{"gitId":"drake25122000"},"content":"    private Image bground \u003d new Image(this.getClass().getResourceAsStream(\"/images/bg.jpg\"));"},{"lineNumber":38,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":39,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":40,"author":{"gitId":"drake25122000"},"content":"    public void initialize() {"},{"lineNumber":41,"author":{"gitId":"drake25122000"},"content":"        BackgroundSize size \u003d new BackgroundSize(100, 100, true, true, true, false);"},{"lineNumber":42,"author":{"gitId":"drake25122000"},"content":"        BackgroundImage bg \u003d new BackgroundImage(bground, BackgroundRepeat.NO_REPEAT, BackgroundRepeat.REPEAT,"},{"lineNumber":43,"author":{"gitId":"drake25122000"},"content":"            BackgroundPosition.DEFAULT, size);"},{"lineNumber":44,"author":{"gitId":"drake25122000"},"content":"        dialogContainer.setBackground(new Background(bg));"},{"lineNumber":45,"author":{"gitId":"drake25122000"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":46,"author":{"gitId":"drake25122000"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(\"Hello I\u0027m Verzachtend \\n\""},{"lineNumber":47,"author":{"gitId":"drake25122000"},"content":"            + \"What can I do for you?\\n\""},{"lineNumber":48,"author":{"gitId":"drake25122000"},"content":"            + \"BE YOURSELF, NEVER SURRENDER AND KEEP A SMILE ON YOUR FACE\" , dukeImage));"},{"lineNumber":49,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":50,"author":{"gitId":"drake25122000"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":52,"author":{"gitId":"drake25122000"},"content":"    public void setDuke(Duke d) {"},{"lineNumber":53,"author":{"gitId":"drake25122000"},"content":"        duke \u003d d;"},{"lineNumber":54,"author":{"gitId":"drake25122000"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":56,"author":{"gitId":"drake25122000"},"content":"    /**"},{"lineNumber":57,"author":{"gitId":"drake25122000"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"},{"lineNumber":58,"author":{"gitId":"drake25122000"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":59,"author":{"gitId":"drake25122000"},"content":"     */"},{"lineNumber":60,"author":{"gitId":"drake25122000"},"content":"    @FXML"},{"lineNumber":61,"author":{"gitId":"drake25122000"},"content":"    private void handleUserInput() {"},{"lineNumber":62,"author":{"gitId":"drake25122000"},"content":"        String fullCommand \u003d userInput.getText();"},{"lineNumber":63,"author":{"gitId":"drake25122000"},"content":"        try {"},{"lineNumber":64,"author":{"gitId":"drake25122000"},"content":"            Command c \u003d Parser.parse(fullCommand);"},{"lineNumber":65,"author":{"gitId":"drake25122000"},"content":"            String dukeText \u003d duke.getResponse(c);"},{"lineNumber":66,"author":{"gitId":"drake25122000"},"content":"            dialogContainer.getChildren().addAll("},{"lineNumber":67,"author":{"gitId":"drake25122000"},"content":"                DialogBox.getUserDialog(fullCommand, userImage),"},{"lineNumber":68,"author":{"gitId":"drake25122000"},"content":"                DialogBox.getDukeDialog(dukeText , dukeImage)"},{"lineNumber":69,"author":{"gitId":"drake25122000"},"content":"            );"},{"lineNumber":70,"author":{"gitId":"drake25122000"},"content":"            userInput.clear();"},{"lineNumber":71,"author":{"gitId":"drake25122000"},"content":"        } catch (DukeException e) {"},{"lineNumber":72,"author":{"gitId":"drake25122000"},"content":"            dialogContainer.getChildren().addAll("},{"lineNumber":73,"author":{"gitId":"drake25122000"},"content":"                DialogBox.getUserDialog(fullCommand, userImage),"},{"lineNumber":74,"author":{"gitId":"drake25122000"},"content":"                DialogBox.getDukeDialog(e.getMessage(), dukeImage)"},{"lineNumber":75,"author":{"gitId":"drake25122000"},"content":"            );"},{"lineNumber":76,"author":{"gitId":"drake25122000"},"content":"            userInput.clear();"},{"lineNumber":77,"author":{"gitId":"drake25122000"},"content":"        }"},{"lineNumber":78,"author":{"gitId":"drake25122000"},"content":"    }"},{"lineNumber":79,"author":{"gitId":"drake25122000"},"content":"}"}],"authorContributionMap":{"drake25122000":79}},{"path":"src/main/java/ParserStorageUi/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"drake25122000"},"content":"package parserstorageui;"},{"lineNumber":2,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":3,"author":{"gitId":"drake25122000"},"content":"import command.AddCommand;"},{"lineNumber":4,"author":{"gitId":"drake25122000"},"content":"import command.Command;"},{"lineNumber":5,"author":{"gitId":"drake25122000"},"content":"import command.DeleteCommand;"},{"lineNumber":6,"author":{"gitId":"drake25122000"},"content":"import command.DoneCommand;"},{"lineNumber":7,"author":{"gitId":"drake25122000"},"content":"import command.ExitCommand;"},{"lineNumber":8,"author":{"gitId":"drake25122000"},"content":"import command.FindCommand;"},{"lineNumber":9,"author":{"gitId":"drake25122000"},"content":"import command.ListCommand;"},{"lineNumber":10,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":11,"author":{"gitId":"drake25122000"},"content":"public class Parser {"},{"lineNumber":12,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":13,"author":{"gitId":"drake25122000"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"drake25122000"},"content":"     * The exit command"},{"lineNumber":15,"author":{"gitId":"drake25122000"},"content":"     **/"},{"lineNumber":16,"author":{"gitId":"drake25122000"},"content":"    private static String COMMAND_END \u003d \"bye\";"},{"lineNumber":17,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":18,"author":{"gitId":"drake25122000"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"drake25122000"},"content":"     * The command to set the specified task in the list to done"},{"lineNumber":20,"author":{"gitId":"drake25122000"},"content":"     **/"},{"lineNumber":21,"author":{"gitId":"drake25122000"},"content":"    private static String COMMAND_DONE \u003d \"done\";"},{"lineNumber":22,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":23,"author":{"gitId":"drake25122000"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"drake25122000"},"content":"     * The command to delete the specified task in the list"},{"lineNumber":25,"author":{"gitId":"drake25122000"},"content":"     **/"},{"lineNumber":26,"author":{"gitId":"drake25122000"},"content":"    private static String COMMAND_DELETE \u003d \"delete\";"},{"lineNumber":27,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":28,"author":{"gitId":"drake25122000"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"drake25122000"},"content":"     * The command to show the users their current list of task"},{"lineNumber":30,"author":{"gitId":"drake25122000"},"content":"     **/"},{"lineNumber":31,"author":{"gitId":"drake25122000"},"content":"    private static String COMMAND_LIST \u003d \"list\";"},{"lineNumber":32,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":33,"author":{"gitId":"drake25122000"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"drake25122000"},"content":"     * The command to find the task that matches the keyword in the list"},{"lineNumber":35,"author":{"gitId":"drake25122000"},"content":"     **/"},{"lineNumber":36,"author":{"gitId":"drake25122000"},"content":"    private static String COMMAND_FIND \u003d \"find\";"},{"lineNumber":37,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":38,"author":{"gitId":"drake25122000"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"drake25122000"},"content":"     * @param fullCommand"},{"lineNumber":40,"author":{"gitId":"drake25122000"},"content":"     * @return the specified Command class"},{"lineNumber":41,"author":{"gitId":"drake25122000"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"drake25122000"},"content":"    public static Command parse(String fullCommand) {"},{"lineNumber":43,"author":{"gitId":"drake25122000"},"content":"        assert(fullCommand !\u003d null);"},{"lineNumber":44,"author":{"gitId":"drake25122000"},"content":"        if (fullCommand.toLowerCase().contains(COMMAND_END)) {"},{"lineNumber":45,"author":{"gitId":"drake25122000"},"content":"            return new ExitCommand(fullCommand);"},{"lineNumber":46,"author":{"gitId":"drake25122000"},"content":"        } else if (fullCommand.toLowerCase().contains(COMMAND_FIND)) {"},{"lineNumber":47,"author":{"gitId":"drake25122000"},"content":"            return new FindCommand(fullCommand);"},{"lineNumber":48,"author":{"gitId":"drake25122000"},"content":"        } else if (fullCommand.toLowerCase().contains(COMMAND_LIST)) {"},{"lineNumber":49,"author":{"gitId":"drake25122000"},"content":"            return new ListCommand(fullCommand);"},{"lineNumber":50,"author":{"gitId":"drake25122000"},"content":"        } else if (fullCommand.toLowerCase().contains(COMMAND_DONE)) {"},{"lineNumber":51,"author":{"gitId":"drake25122000"},"content":"            return new DoneCommand(fullCommand);"},{"lineNumber":52,"author":{"gitId":"drake25122000"},"content":"        } else if (fullCommand.toLowerCase().contains(COMMAND_DELETE)) {"},{"lineNumber":53,"author":{"gitId":"drake25122000"},"content":"            return new DeleteCommand(fullCommand);"},{"lineNumber":54,"author":{"gitId":"drake25122000"},"content":"        } else {"},{"lineNumber":55,"author":{"gitId":"drake25122000"},"content":"            return new AddCommand(fullCommand);"},{"lineNumber":56,"author":{"gitId":"drake25122000"},"content":"        }"},{"lineNumber":57,"author":{"gitId":"drake25122000"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"drake25122000"},"content":"}"}],"authorContributionMap":{"drake25122000":58}},{"path":"src/main/java/ParserStorageUi/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"drake25122000"},"content":"package parserstorageui;"},{"lineNumber":2,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":3,"author":{"gitId":"drake25122000"},"content":"import java.io.FileWriter;"},{"lineNumber":4,"author":{"gitId":"drake25122000"},"content":"import java.io.IOException;"},{"lineNumber":5,"author":{"gitId":"drake25122000"},"content":"import java.io.PrintWriter;"},{"lineNumber":6,"author":{"gitId":"drake25122000"},"content":"import java.nio.file.Files;"},{"lineNumber":7,"author":{"gitId":"drake25122000"},"content":"import java.nio.file.Path;"},{"lineNumber":8,"author":{"gitId":"drake25122000"},"content":"import java.nio.file.Paths;"},{"lineNumber":9,"author":{"gitId":"drake25122000"},"content":"import java.util.ArrayList;"},{"lineNumber":10,"author":{"gitId":"drake25122000"},"content":"import exceptions.DukeException;"},{"lineNumber":11,"author":{"gitId":"drake25122000"},"content":"import task.Deadline;"},{"lineNumber":12,"author":{"gitId":"drake25122000"},"content":"import task.Event;"},{"lineNumber":13,"author":{"gitId":"drake25122000"},"content":"import task.Task;"},{"lineNumber":14,"author":{"gitId":"drake25122000"},"content":"import task.Todo;"},{"lineNumber":15,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":16,"author":{"gitId":"drake25122000"},"content":"public class Storage {"},{"lineNumber":17,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":18,"author":{"gitId":"drake25122000"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"drake25122000"},"content":"     * The file path of the folder of duke.txt"},{"lineNumber":20,"author":{"gitId":"drake25122000"},"content":"     **/"},{"lineNumber":21,"author":{"gitId":"drake25122000"},"content":"    private final String filePath;"},{"lineNumber":22,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":23,"author":{"gitId":"drake25122000"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"drake25122000"},"content":"     * The object file path for duke.txt"},{"lineNumber":25,"author":{"gitId":"drake25122000"},"content":"     **/"},{"lineNumber":26,"author":{"gitId":"drake25122000"},"content":"    private Path file;"},{"lineNumber":27,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":28,"author":{"gitId":"drake25122000"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"drake25122000"},"content":"     * Initializes Storage with filePath as the parameter"},{"lineNumber":30,"author":{"gitId":"drake25122000"},"content":"     *"},{"lineNumber":31,"author":{"gitId":"drake25122000"},"content":"     * @param filePath the fe"},{"lineNumber":32,"author":{"gitId":"drake25122000"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"drake25122000"},"content":"    public Storage(String filePath) {"},{"lineNumber":34,"author":{"gitId":"drake25122000"},"content":"        this.filePath \u003d filePath;"},{"lineNumber":35,"author":{"gitId":"drake25122000"},"content":"        initiateFile();"},{"lineNumber":36,"author":{"gitId":"drake25122000"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":38,"author":{"gitId":"drake25122000"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"drake25122000"},"content":"     * Initiate the file"},{"lineNumber":40,"author":{"gitId":"drake25122000"},"content":"     **/"},{"lineNumber":41,"author":{"gitId":"drake25122000"},"content":"    private void initiateFile() {"},{"lineNumber":42,"author":{"gitId":"drake25122000"},"content":"        try {"},{"lineNumber":43,"author":{"gitId":"drake25122000"},"content":"            if (Files.notExists(Paths.get(filePath))) {"},{"lineNumber":44,"author":{"gitId":"drake25122000"},"content":"                Files.createDirectory(Paths.get(filePath));"},{"lineNumber":45,"author":{"gitId":"drake25122000"},"content":"            }"},{"lineNumber":46,"author":{"gitId":"drake25122000"},"content":"            if (Files.notExists(Paths.get(filePath + \"/duke.txt\"))) {"},{"lineNumber":47,"author":{"gitId":"drake25122000"},"content":"                file \u003d Files.createFile(Paths.get(filePath + \"/duke.txt\"));"},{"lineNumber":48,"author":{"gitId":"drake25122000"},"content":"            } else {"},{"lineNumber":49,"author":{"gitId":"drake25122000"},"content":"                file \u003d Paths.get(filePath + \"/duke.txt\");"},{"lineNumber":50,"author":{"gitId":"drake25122000"},"content":"            }"},{"lineNumber":51,"author":{"gitId":"drake25122000"},"content":"        } catch (IOException e) {"},{"lineNumber":52,"author":{"gitId":"drake25122000"},"content":"            e.printStackTrace();"},{"lineNumber":53,"author":{"gitId":"drake25122000"},"content":"        }"},{"lineNumber":54,"author":{"gitId":"drake25122000"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":56,"author":{"gitId":"drake25122000"},"content":"    /**"},{"lineNumber":57,"author":{"gitId":"drake25122000"},"content":"     * Load all the tasks from the save file to ArrayList\u003cTask\u003e"},{"lineNumber":58,"author":{"gitId":"drake25122000"},"content":"     **/"},{"lineNumber":59,"author":{"gitId":"drake25122000"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException {"},{"lineNumber":60,"author":{"gitId":"drake25122000"},"content":"        ArrayList\u003cTask\u003e temp \u003d new ArrayList\u003c\u003e();"},{"lineNumber":61,"author":{"gitId":"drake25122000"},"content":"        try {"},{"lineNumber":62,"author":{"gitId":"drake25122000"},"content":"            for (String task : Files.readAllLines(file)) {"},{"lineNumber":63,"author":{"gitId":"drake25122000"},"content":"                String type \u003d task.substring(0, 1);"},{"lineNumber":64,"author":{"gitId":"drake25122000"},"content":"                String name \u003d task.substring(8);"},{"lineNumber":65,"author":{"gitId":"drake25122000"},"content":"                int isDone \u003d Integer.parseInt(task.substring(4, 5));"},{"lineNumber":66,"author":{"gitId":"drake25122000"},"content":"                boolean isTaskDone \u003d isDone \u003d\u003d 1;"},{"lineNumber":67,"author":{"gitId":"drake25122000"},"content":"                switch (type) {"},{"lineNumber":68,"author":{"gitId":"drake25122000"},"content":"                case \"T\":"},{"lineNumber":69,"author":{"gitId":"drake25122000"},"content":"                    temp.add(new Todo(name, isTaskDone));"},{"lineNumber":70,"author":{"gitId":"drake25122000"},"content":"                    break;"},{"lineNumber":71,"author":{"gitId":"drake25122000"},"content":"                case \"D\":"},{"lineNumber":72,"author":{"gitId":"drake25122000"},"content":"                    int indexOfLine \u003d name.indexOf(\"|\");"},{"lineNumber":73,"author":{"gitId":"drake25122000"},"content":"                    temp.add("},{"lineNumber":74,"author":{"gitId":"drake25122000"},"content":"                        new Deadline(name.substring(0, indexOfLine - 1), isTaskDone, name.substring(indexOfLine + 2)));"},{"lineNumber":75,"author":{"gitId":"drake25122000"},"content":"                    break;"},{"lineNumber":76,"author":{"gitId":"drake25122000"},"content":"                case \"E\":"},{"lineNumber":77,"author":{"gitId":"drake25122000"},"content":"                    int iOL \u003d name.indexOf(\"|\");"},{"lineNumber":78,"author":{"gitId":"drake25122000"},"content":"                    temp.add(new Event(name.substring(0, iOL - 1), isTaskDone, name.substring(iOL + 2)));"},{"lineNumber":79,"author":{"gitId":"drake25122000"},"content":"                    break;"},{"lineNumber":80,"author":{"gitId":"drake25122000"},"content":"                }"},{"lineNumber":81,"author":{"gitId":"drake25122000"},"content":"            }"},{"lineNumber":82,"author":{"gitId":"drake25122000"},"content":"        } catch (IOException e) {"},{"lineNumber":83,"author":{"gitId":"drake25122000"},"content":"            throw new DukeException(e.getMessage());"},{"lineNumber":84,"author":{"gitId":"drake25122000"},"content":"        }"},{"lineNumber":85,"author":{"gitId":"drake25122000"},"content":"        return temp;"},{"lineNumber":86,"author":{"gitId":"drake25122000"},"content":"    }"},{"lineNumber":87,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":88,"author":{"gitId":"drake25122000"},"content":"    /**"},{"lineNumber":89,"author":{"gitId":"drake25122000"},"content":"     * Put back all tasks from ArrayList to the save file (duke.txt)"},{"lineNumber":90,"author":{"gitId":"drake25122000"},"content":"     **/"},{"lineNumber":91,"author":{"gitId":"drake25122000"},"content":"    public void putToDatabase(ArrayList\u003cTask\u003e tasks) throws DukeException {"},{"lineNumber":92,"author":{"gitId":"drake25122000"},"content":"        assert (tasks !\u003d null);"},{"lineNumber":93,"author":{"gitId":"drake25122000"},"content":"        try {"},{"lineNumber":94,"author":{"gitId":"drake25122000"},"content":"            FileWriter fw \u003d new FileWriter(this.filePath + \"/duke.txt\");"},{"lineNumber":95,"author":{"gitId":"drake25122000"},"content":"            PrintWriter pw \u003d new PrintWriter(fw);"},{"lineNumber":96,"author":{"gitId":"drake25122000"},"content":"            for (Task task : tasks) {"},{"lineNumber":97,"author":{"gitId":"drake25122000"},"content":"                pw.println(task.getDatabaseFormat());"},{"lineNumber":98,"author":{"gitId":"drake25122000"},"content":"            }"},{"lineNumber":99,"author":{"gitId":"drake25122000"},"content":"            pw.close();"},{"lineNumber":100,"author":{"gitId":"drake25122000"},"content":"        } catch (IOException e) {"},{"lineNumber":101,"author":{"gitId":"drake25122000"},"content":"            throw new DukeException(e.getMessage());"},{"lineNumber":102,"author":{"gitId":"drake25122000"},"content":"        }"},{"lineNumber":103,"author":{"gitId":"drake25122000"},"content":"    }"},{"lineNumber":104,"author":{"gitId":"drake25122000"},"content":"}"}],"authorContributionMap":{"drake25122000":104}},{"path":"src/main/java/ParserStorageUi/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"drake25122000"},"content":"package parserstorageui;"},{"lineNumber":2,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":3,"author":{"gitId":"drake25122000"},"content":"import java.util.Scanner;"},{"lineNumber":4,"author":{"gitId":"drake25122000"},"content":"import task.Task;"},{"lineNumber":5,"author":{"gitId":"drake25122000"},"content":"import task.TaskList;"},{"lineNumber":6,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":7,"author":{"gitId":"drake25122000"},"content":"public class Ui {"},{"lineNumber":8,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":9,"author":{"gitId":"drake25122000"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"drake25122000"},"content":"     * Initializes Ui class"},{"lineNumber":11,"author":{"gitId":"drake25122000"},"content":"     **/"},{"lineNumber":12,"author":{"gitId":"drake25122000"},"content":"    public Ui() {"},{"lineNumber":13,"author":{"gitId":"drake25122000"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":15,"author":{"gitId":"drake25122000"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"drake25122000"},"content":"     * Show loading error to the user"},{"lineNumber":17,"author":{"gitId":"drake25122000"},"content":"     **/"},{"lineNumber":18,"author":{"gitId":"drake25122000"},"content":"    public void showLoadingError() {"},{"lineNumber":19,"author":{"gitId":"drake25122000"},"content":"        System.out.println(\"No task found, please blablbalba\");"},{"lineNumber":20,"author":{"gitId":"drake25122000"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":22,"author":{"gitId":"drake25122000"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"drake25122000"},"content":"     * Show added task to the user"},{"lineNumber":24,"author":{"gitId":"drake25122000"},"content":"     **/"},{"lineNumber":25,"author":{"gitId":"drake25122000"},"content":"    public String showAddedTask(int taskSize, Task added) {"},{"lineNumber":26,"author":{"gitId":"drake25122000"},"content":"        return \"Got it. I\u0027ve added this task: \\n\""},{"lineNumber":27,"author":{"gitId":"drake25122000"},"content":"            + \" \" + added + \"\\n\""},{"lineNumber":28,"author":{"gitId":"drake25122000"},"content":"            + \"Now you have \" + taskSize + \" tasks in the list.\";"},{"lineNumber":29,"author":{"gitId":"drake25122000"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":31,"author":{"gitId":"drake25122000"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"drake25122000"},"content":"     * Show deleted task to the user"},{"lineNumber":33,"author":{"gitId":"drake25122000"},"content":"     **/"},{"lineNumber":34,"author":{"gitId":"drake25122000"},"content":"    public String showDeletedTask(int taskSize, Task deleted) {"},{"lineNumber":35,"author":{"gitId":"drake25122000"},"content":"        return \"Noted. I\u0027ve removed this task: \\n\""},{"lineNumber":36,"author":{"gitId":"drake25122000"},"content":"            + \"  \""},{"lineNumber":37,"author":{"gitId":"drake25122000"},"content":"            + deleted"},{"lineNumber":38,"author":{"gitId":"drake25122000"},"content":"            + \"\\n\""},{"lineNumber":39,"author":{"gitId":"drake25122000"},"content":"            + \"Now you have \" + taskSize + \" tasks in the list.\";"},{"lineNumber":40,"author":{"gitId":"drake25122000"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":42,"author":{"gitId":"drake25122000"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"drake25122000"},"content":"     * Show the current tasks to the user"},{"lineNumber":44,"author":{"gitId":"drake25122000"},"content":"     **/"},{"lineNumber":45,"author":{"gitId":"drake25122000"},"content":"    public String showTasks(TaskList tasks) {"},{"lineNumber":46,"author":{"gitId":"drake25122000"},"content":"        int i \u003d 1;"},{"lineNumber":47,"author":{"gitId":"drake25122000"},"content":"        String output \u003d \"Here are the tasks in your list:\\n\";"},{"lineNumber":48,"author":{"gitId":"drake25122000"},"content":"        for (Task item : tasks.getTaskList()) {"},{"lineNumber":49,"author":{"gitId":"drake25122000"},"content":"            output \u003d output + i + \". \" + item + \"\\n\";"},{"lineNumber":50,"author":{"gitId":"drake25122000"},"content":"            //System.out.println(i + \". \" + item);"},{"lineNumber":51,"author":{"gitId":"drake25122000"},"content":"            i++;"},{"lineNumber":52,"author":{"gitId":"drake25122000"},"content":"        }"},{"lineNumber":53,"author":{"gitId":"drake25122000"},"content":"        return output;"},{"lineNumber":54,"author":{"gitId":"drake25122000"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":56,"author":{"gitId":"drake25122000"},"content":"    /**"},{"lineNumber":57,"author":{"gitId":"drake25122000"},"content":"     * Show done tasks to the user"},{"lineNumber":58,"author":{"gitId":"drake25122000"},"content":"     **/"},{"lineNumber":59,"author":{"gitId":"drake25122000"},"content":"    public String showDoneTask(Task done) {"},{"lineNumber":60,"author":{"gitId":"drake25122000"},"content":"        return \"Nice! I\u0027ve marked this task as done: \\n\""},{"lineNumber":61,"author":{"gitId":"drake25122000"},"content":"            + done;"},{"lineNumber":62,"author":{"gitId":"drake25122000"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":64,"author":{"gitId":"drake25122000"},"content":"    /**"},{"lineNumber":65,"author":{"gitId":"drake25122000"},"content":"     * Show the tasks that match the keyword"},{"lineNumber":66,"author":{"gitId":"drake25122000"},"content":"     **/"},{"lineNumber":67,"author":{"gitId":"drake25122000"},"content":"    public String  showFoundTasks(TaskList tasks, String keyword) {"},{"lineNumber":68,"author":{"gitId":"drake25122000"},"content":"        int i \u003d 1;"},{"lineNumber":69,"author":{"gitId":"drake25122000"},"content":"        String output \u003d \"Here are the matching tasks in your list:\\n\";"},{"lineNumber":70,"author":{"gitId":"drake25122000"},"content":"        for (Task item : tasks.getTaskList()) {"},{"lineNumber":71,"author":{"gitId":"drake25122000"},"content":"            if (item.isNameMatchKeyWord(keyword)) {"},{"lineNumber":72,"author":{"gitId":"drake25122000"},"content":"                output \u003d output + i + \". \" + item + \"\\n\";"},{"lineNumber":73,"author":{"gitId":"drake25122000"},"content":"                /*System.out.println(i + \". \" + item);*/"},{"lineNumber":74,"author":{"gitId":"drake25122000"},"content":"                i++;"},{"lineNumber":75,"author":{"gitId":"drake25122000"},"content":"            }"},{"lineNumber":76,"author":{"gitId":"drake25122000"},"content":"        }"},{"lineNumber":77,"author":{"gitId":"drake25122000"},"content":"        return output;"},{"lineNumber":78,"author":{"gitId":"drake25122000"},"content":"    }"},{"lineNumber":79,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":80,"author":{"gitId":"drake25122000"},"content":"    /**"},{"lineNumber":81,"author":{"gitId":"drake25122000"},"content":"     * Show goodbye message to the customer"},{"lineNumber":82,"author":{"gitId":"drake25122000"},"content":"     **/"},{"lineNumber":83,"author":{"gitId":"drake25122000"},"content":"    public String showGoodBye() {"},{"lineNumber":84,"author":{"gitId":"drake25122000"},"content":"        return \"Bye. Hope to see you again soon!\";"},{"lineNumber":85,"author":{"gitId":"drake25122000"},"content":"    }"},{"lineNumber":86,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":87,"author":{"gitId":"drake25122000"},"content":"}"}],"authorContributionMap":{"drake25122000":87}},{"path":"src/main/java/Task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"drake25122000"},"content":"package task;"},{"lineNumber":2,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":3,"author":{"gitId":"drake25122000"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"drake25122000"},"content":"import java.time.LocalDateTime;"},{"lineNumber":5,"author":{"gitId":"drake25122000"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":6,"author":{"gitId":"drake25122000"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":7,"author":{"gitId":"drake25122000"},"content":"import exceptions.WrongDateTimeFormatException;"},{"lineNumber":8,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":9,"author":{"gitId":"drake25122000"},"content":"public class Deadline extends Task {"},{"lineNumber":10,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":11,"author":{"gitId":"drake25122000"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"drake25122000"},"content":"     * The deadline of the task"},{"lineNumber":13,"author":{"gitId":"drake25122000"},"content":"     **/"},{"lineNumber":14,"author":{"gitId":"drake25122000"},"content":"    private final LocalDateTime deadline;"},{"lineNumber":15,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":16,"author":{"gitId":"drake25122000"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"drake25122000"},"content":"     * Initializes Deadline task"},{"lineNumber":18,"author":{"gitId":"drake25122000"},"content":"     *"},{"lineNumber":19,"author":{"gitId":"drake25122000"},"content":"     * @param name"},{"lineNumber":20,"author":{"gitId":"drake25122000"},"content":"     * @param isDone"},{"lineNumber":21,"author":{"gitId":"drake25122000"},"content":"     * @param end"},{"lineNumber":22,"author":{"gitId":"drake25122000"},"content":"     * @throws WrongDateTimeFormatException"},{"lineNumber":23,"author":{"gitId":"drake25122000"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"drake25122000"},"content":"    public Deadline(String name, boolean isDone, String end) throws WrongDateTimeFormatException {"},{"lineNumber":25,"author":{"gitId":"drake25122000"},"content":"        super(name, isDone);"},{"lineNumber":26,"author":{"gitId":"drake25122000"},"content":"        try {"},{"lineNumber":27,"author":{"gitId":"drake25122000"},"content":"            this.deadline \u003d LocalDate.parse(end.substring(0, 10)).atTime("},{"lineNumber":28,"author":{"gitId":"drake25122000"},"content":"                Integer.parseInt(end.substring(11, 13)),"},{"lineNumber":29,"author":{"gitId":"drake25122000"},"content":"                Integer.parseInt(end.substring(13))"},{"lineNumber":30,"author":{"gitId":"drake25122000"},"content":"            );"},{"lineNumber":31,"author":{"gitId":"drake25122000"},"content":"        } catch (DateTimeParseException e) {"},{"lineNumber":32,"author":{"gitId":"drake25122000"},"content":"            throw new WrongDateTimeFormatException("},{"lineNumber":33,"author":{"gitId":"drake25122000"},"content":"                \"☹ OOPS!!! Please enter the deadline time in the right format. (YYYY-MM-DD HHmm)\");"},{"lineNumber":34,"author":{"gitId":"drake25122000"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"drake25122000"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":37,"author":{"gitId":"drake25122000"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"drake25122000"},"content":"     * Initializes deadline task"},{"lineNumber":39,"author":{"gitId":"drake25122000"},"content":"     *"},{"lineNumber":40,"author":{"gitId":"drake25122000"},"content":"     * @param name"},{"lineNumber":41,"author":{"gitId":"drake25122000"},"content":"     * @param isDone"},{"lineNumber":42,"author":{"gitId":"drake25122000"},"content":"     * @param deadline"},{"lineNumber":43,"author":{"gitId":"drake25122000"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"drake25122000"},"content":"    public Deadline(String name, boolean isDone, LocalDateTime deadline) {"},{"lineNumber":45,"author":{"gitId":"drake25122000"},"content":"        super(name, isDone);"},{"lineNumber":46,"author":{"gitId":"drake25122000"},"content":"        this.deadline \u003d deadline;"},{"lineNumber":47,"author":{"gitId":"drake25122000"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":49,"author":{"gitId":"drake25122000"},"content":"    /**"},{"lineNumber":50,"author":{"gitId":"drake25122000"},"content":"     * Set the current task to done"},{"lineNumber":51,"author":{"gitId":"drake25122000"},"content":"     **/"},{"lineNumber":52,"author":{"gitId":"drake25122000"},"content":"    @Override"},{"lineNumber":53,"author":{"gitId":"drake25122000"},"content":"    public Task setToTrue() {"},{"lineNumber":54,"author":{"gitId":"drake25122000"},"content":"        return new Deadline(this.name, true, this.deadline);"},{"lineNumber":55,"author":{"gitId":"drake25122000"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":57,"author":{"gitId":"drake25122000"},"content":"    /**"},{"lineNumber":58,"author":{"gitId":"drake25122000"},"content":"     * Get the type of the current task"},{"lineNumber":59,"author":{"gitId":"drake25122000"},"content":"     **/"},{"lineNumber":60,"author":{"gitId":"drake25122000"},"content":"    @Override"},{"lineNumber":61,"author":{"gitId":"drake25122000"},"content":"    public String getType() {"},{"lineNumber":62,"author":{"gitId":"drake25122000"},"content":"        return \"D\";"},{"lineNumber":63,"author":{"gitId":"drake25122000"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":65,"author":{"gitId":"drake25122000"},"content":"    /**"},{"lineNumber":66,"author":{"gitId":"drake25122000"},"content":"     * Get the deadline of the current task"},{"lineNumber":67,"author":{"gitId":"drake25122000"},"content":"     **/"},{"lineNumber":68,"author":{"gitId":"drake25122000"},"content":"    @Override"},{"lineNumber":69,"author":{"gitId":"drake25122000"},"content":"    public String getEnd() {"},{"lineNumber":70,"author":{"gitId":"drake25122000"},"content":"        return this.deadline.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));"},{"lineNumber":71,"author":{"gitId":"drake25122000"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":73,"author":{"gitId":"drake25122000"},"content":"    /**"},{"lineNumber":74,"author":{"gitId":"drake25122000"},"content":"     * Convert the task to string"},{"lineNumber":75,"author":{"gitId":"drake25122000"},"content":"     **/"},{"lineNumber":76,"author":{"gitId":"drake25122000"},"content":"    @Override"},{"lineNumber":77,"author":{"gitId":"drake25122000"},"content":"    public String toString() {"},{"lineNumber":78,"author":{"gitId":"drake25122000"},"content":"        return isDone"},{"lineNumber":79,"author":{"gitId":"drake25122000"},"content":"            ? \"[D][✓] \" + this.getName() + \" (by: \""},{"lineNumber":80,"author":{"gitId":"drake25122000"},"content":"            + this.deadline.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HHmm\")) + \")\""},{"lineNumber":81,"author":{"gitId":"drake25122000"},"content":"            : \"[D][✗] \" + this.getName() + \" (by: \""},{"lineNumber":82,"author":{"gitId":"drake25122000"},"content":"            + this.deadline.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HHmm\")) + \")\";"},{"lineNumber":83,"author":{"gitId":"drake25122000"},"content":"    }"},{"lineNumber":84,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":85,"author":{"gitId":"drake25122000"},"content":"    /**"},{"lineNumber":86,"author":{"gitId":"drake25122000"},"content":"     * Override the equals from Object so that it can be used to handle deadline"},{"lineNumber":87,"author":{"gitId":"drake25122000"},"content":"     **/"},{"lineNumber":88,"author":{"gitId":"drake25122000"},"content":"    @Override"},{"lineNumber":89,"author":{"gitId":"drake25122000"},"content":"    public boolean equals(Object o) {"},{"lineNumber":90,"author":{"gitId":"drake25122000"},"content":"        if (o \u003d\u003d this) {"},{"lineNumber":91,"author":{"gitId":"drake25122000"},"content":"            return true;"},{"lineNumber":92,"author":{"gitId":"drake25122000"},"content":"        } else if (o instanceof Deadline) {"},{"lineNumber":93,"author":{"gitId":"drake25122000"},"content":"            Deadline temp \u003d (Deadline) o;"},{"lineNumber":94,"author":{"gitId":"drake25122000"},"content":"            return this.name.equals(temp.name) \u0026\u0026 this.deadline.equals(temp.deadline);"},{"lineNumber":95,"author":{"gitId":"drake25122000"},"content":"        } else {"},{"lineNumber":96,"author":{"gitId":"drake25122000"},"content":"            return false;"},{"lineNumber":97,"author":{"gitId":"drake25122000"},"content":"        }"},{"lineNumber":98,"author":{"gitId":"drake25122000"},"content":"    }"},{"lineNumber":99,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":100,"author":{"gitId":"drake25122000"},"content":"    @Override"},{"lineNumber":101,"author":{"gitId":"drake25122000"},"content":"    public String getDatabaseFormat() {"},{"lineNumber":102,"author":{"gitId":"drake25122000"},"content":"        return this.getType() + \" | \" + this.isDone() + \" | \" + this.getName() + \" | \" + this.getEnd();"},{"lineNumber":103,"author":{"gitId":"drake25122000"},"content":"    }"},{"lineNumber":104,"author":{"gitId":"drake25122000"},"content":"}"}],"authorContributionMap":{"drake25122000":104}},{"path":"src/main/java/Task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"drake25122000"},"content":"package task;"},{"lineNumber":2,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":3,"author":{"gitId":"drake25122000"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"drake25122000"},"content":"import java.time.LocalDateTime;"},{"lineNumber":5,"author":{"gitId":"drake25122000"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":6,"author":{"gitId":"drake25122000"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":7,"author":{"gitId":"drake25122000"},"content":"import exceptions.WrongDateTimeFormatException;"},{"lineNumber":8,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":9,"author":{"gitId":"drake25122000"},"content":"public class Event extends Task {"},{"lineNumber":10,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":11,"author":{"gitId":"drake25122000"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"drake25122000"},"content":"     * The time of the event"},{"lineNumber":13,"author":{"gitId":"drake25122000"},"content":"     **/"},{"lineNumber":14,"author":{"gitId":"drake25122000"},"content":"    private final LocalDateTime at;"},{"lineNumber":15,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":16,"author":{"gitId":"drake25122000"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"drake25122000"},"content":"     * Initializes event task"},{"lineNumber":18,"author":{"gitId":"drake25122000"},"content":"     *"},{"lineNumber":19,"author":{"gitId":"drake25122000"},"content":"     * @param name"},{"lineNumber":20,"author":{"gitId":"drake25122000"},"content":"     * @param isDone"},{"lineNumber":21,"author":{"gitId":"drake25122000"},"content":"     * @param end"},{"lineNumber":22,"author":{"gitId":"drake25122000"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"drake25122000"},"content":"    public Event(String name, boolean isDone, String end) throws WrongDateTimeFormatException {"},{"lineNumber":24,"author":{"gitId":"drake25122000"},"content":"        super(name, isDone);"},{"lineNumber":25,"author":{"gitId":"drake25122000"},"content":"        try {"},{"lineNumber":26,"author":{"gitId":"drake25122000"},"content":"            this.at \u003d LocalDate.parse(end.substring(0, 10)).atTime("},{"lineNumber":27,"author":{"gitId":"drake25122000"},"content":"                Integer.parseInt(end.substring(11, 13)),"},{"lineNumber":28,"author":{"gitId":"drake25122000"},"content":"                Integer.parseInt(end.substring(13))"},{"lineNumber":29,"author":{"gitId":"drake25122000"},"content":"            );"},{"lineNumber":30,"author":{"gitId":"drake25122000"},"content":"        } catch (DateTimeParseException e) {"},{"lineNumber":31,"author":{"gitId":"drake25122000"},"content":"            throw new WrongDateTimeFormatException("},{"lineNumber":32,"author":{"gitId":"drake25122000"},"content":"                \"☹ OOPS!!! Please enter the deadline time in the right format. (YYYY-MM-DD HHmm)\");"},{"lineNumber":33,"author":{"gitId":"drake25122000"},"content":"        }"},{"lineNumber":34,"author":{"gitId":"drake25122000"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":36,"author":{"gitId":"drake25122000"},"content":"    public Event(String name, boolean isDone, LocalDateTime at) {"},{"lineNumber":37,"author":{"gitId":"drake25122000"},"content":"        super(name, isDone);"},{"lineNumber":38,"author":{"gitId":"drake25122000"},"content":"        this.at \u003d at;"},{"lineNumber":39,"author":{"gitId":"drake25122000"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":41,"author":{"gitId":"drake25122000"},"content":"    /**"},{"lineNumber":42,"author":{"gitId":"drake25122000"},"content":"     * Set the current event to done"},{"lineNumber":43,"author":{"gitId":"drake25122000"},"content":"     **/"},{"lineNumber":44,"author":{"gitId":"drake25122000"},"content":"    @Override"},{"lineNumber":45,"author":{"gitId":"drake25122000"},"content":"    public Task setToTrue() {"},{"lineNumber":46,"author":{"gitId":"drake25122000"},"content":"        return new Event(this.name, true, this.at);"},{"lineNumber":47,"author":{"gitId":"drake25122000"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":49,"author":{"gitId":"drake25122000"},"content":"    /**"},{"lineNumber":50,"author":{"gitId":"drake25122000"},"content":"     * Get the type of the current task"},{"lineNumber":51,"author":{"gitId":"drake25122000"},"content":"     **/"},{"lineNumber":52,"author":{"gitId":"drake25122000"},"content":"    @Override"},{"lineNumber":53,"author":{"gitId":"drake25122000"},"content":"    public String getType() {"},{"lineNumber":54,"author":{"gitId":"drake25122000"},"content":"        return \"E\";"},{"lineNumber":55,"author":{"gitId":"drake25122000"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":57,"author":{"gitId":"drake25122000"},"content":"    /**"},{"lineNumber":58,"author":{"gitId":"drake25122000"},"content":"     * Get the specific time when the event is going to be held"},{"lineNumber":59,"author":{"gitId":"drake25122000"},"content":"     **/"},{"lineNumber":60,"author":{"gitId":"drake25122000"},"content":"    @Override"},{"lineNumber":61,"author":{"gitId":"drake25122000"},"content":"    public String getEnd() {"},{"lineNumber":62,"author":{"gitId":"drake25122000"},"content":"        return this.at.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));"},{"lineNumber":63,"author":{"gitId":"drake25122000"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":65,"author":{"gitId":"drake25122000"},"content":"    /**"},{"lineNumber":66,"author":{"gitId":"drake25122000"},"content":"     * Convert the current task to String"},{"lineNumber":67,"author":{"gitId":"drake25122000"},"content":"     **/"},{"lineNumber":68,"author":{"gitId":"drake25122000"},"content":"    @Override"},{"lineNumber":69,"author":{"gitId":"drake25122000"},"content":"    public String toString() {"},{"lineNumber":70,"author":{"gitId":"drake25122000"},"content":"        return isDone"},{"lineNumber":71,"author":{"gitId":"drake25122000"},"content":"            ?"},{"lineNumber":72,"author":{"gitId":"drake25122000"},"content":"            \"[E][✓] \" + this.getName() + \" (by: \" + this.at.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HHmm\")) + \")\""},{"lineNumber":73,"author":{"gitId":"drake25122000"},"content":"            : \"[E][✗] \" + this.getName() + \" (by: \" + this.at.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HHmm\")) +"},{"lineNumber":74,"author":{"gitId":"drake25122000"},"content":"            \")\";"},{"lineNumber":75,"author":{"gitId":"drake25122000"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":77,"author":{"gitId":"drake25122000"},"content":"    /**"},{"lineNumber":78,"author":{"gitId":"drake25122000"},"content":"     * Override the equals from Object so that it can be used to handle event"},{"lineNumber":79,"author":{"gitId":"drake25122000"},"content":"     **/"},{"lineNumber":80,"author":{"gitId":"drake25122000"},"content":"    @Override"},{"lineNumber":81,"author":{"gitId":"drake25122000"},"content":"    public boolean equals(Object o) {"},{"lineNumber":82,"author":{"gitId":"drake25122000"},"content":"        if (o \u003d\u003d this) {"},{"lineNumber":83,"author":{"gitId":"drake25122000"},"content":"            return true;"},{"lineNumber":84,"author":{"gitId":"drake25122000"},"content":"        } else if (o instanceof Event) {"},{"lineNumber":85,"author":{"gitId":"drake25122000"},"content":"            Event temp \u003d (Event) o;"},{"lineNumber":86,"author":{"gitId":"drake25122000"},"content":"            return this.name.equals(temp.name) \u0026\u0026 this.at.equals(temp.at);"},{"lineNumber":87,"author":{"gitId":"drake25122000"},"content":"        } else {"},{"lineNumber":88,"author":{"gitId":"drake25122000"},"content":"            return false;"},{"lineNumber":89,"author":{"gitId":"drake25122000"},"content":"        }"},{"lineNumber":90,"author":{"gitId":"drake25122000"},"content":"    }"},{"lineNumber":91,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":92,"author":{"gitId":"drake25122000"},"content":"    @Override"},{"lineNumber":93,"author":{"gitId":"drake25122000"},"content":"    public String getDatabaseFormat() {"},{"lineNumber":94,"author":{"gitId":"drake25122000"},"content":"        return this.getType() + \" | \" + this.isDone() + \" | \" + this.getName() + \" | \" + this.getEnd();"},{"lineNumber":95,"author":{"gitId":"drake25122000"},"content":"    }"},{"lineNumber":96,"author":{"gitId":"drake25122000"},"content":"}"}],"authorContributionMap":{"drake25122000":96}},{"path":"src/main/java/Task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"drake25122000"},"content":"package task;"},{"lineNumber":2,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":3,"author":{"gitId":"drake25122000"},"content":"abstract public class Task {"},{"lineNumber":4,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":5,"author":{"gitId":"drake25122000"},"content":"    /**"},{"lineNumber":6,"author":{"gitId":"drake25122000"},"content":"     * The name of the current event"},{"lineNumber":7,"author":{"gitId":"drake25122000"},"content":"     **/"},{"lineNumber":8,"author":{"gitId":"drake25122000"},"content":"    protected final String name;"},{"lineNumber":9,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":10,"author":{"gitId":"drake25122000"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"drake25122000"},"content":"     * The status of the event"},{"lineNumber":12,"author":{"gitId":"drake25122000"},"content":"     **/"},{"lineNumber":13,"author":{"gitId":"drake25122000"},"content":"    protected final boolean isDone;"},{"lineNumber":14,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":15,"author":{"gitId":"drake25122000"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"drake25122000"},"content":"     * Initializes current task"},{"lineNumber":17,"author":{"gitId":"drake25122000"},"content":"     *"},{"lineNumber":18,"author":{"gitId":"drake25122000"},"content":"     * @param name"},{"lineNumber":19,"author":{"gitId":"drake25122000"},"content":"     * @param isDone"},{"lineNumber":20,"author":{"gitId":"drake25122000"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"drake25122000"},"content":"    public Task(String name, boolean isDone) {"},{"lineNumber":22,"author":{"gitId":"drake25122000"},"content":"        this.name \u003d name;"},{"lineNumber":23,"author":{"gitId":"drake25122000"},"content":"        this.isDone \u003d isDone;"},{"lineNumber":24,"author":{"gitId":"drake25122000"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":26,"author":{"gitId":"drake25122000"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"drake25122000"},"content":"     * Get the name of the current task"},{"lineNumber":28,"author":{"gitId":"drake25122000"},"content":"     **/"},{"lineNumber":29,"author":{"gitId":"drake25122000"},"content":"    public String getName() {"},{"lineNumber":30,"author":{"gitId":"drake25122000"},"content":"        return this.name;"},{"lineNumber":31,"author":{"gitId":"drake25122000"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":33,"author":{"gitId":"drake25122000"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"drake25122000"},"content":"     * Get the type of the current task"},{"lineNumber":35,"author":{"gitId":"drake25122000"},"content":"     **/"},{"lineNumber":36,"author":{"gitId":"drake25122000"},"content":"    public abstract String getType();"},{"lineNumber":37,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":38,"author":{"gitId":"drake25122000"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"drake25122000"},"content":"     * Check get the status of the event, return 1 if done, 0 if is not done"},{"lineNumber":40,"author":{"gitId":"drake25122000"},"content":"     **/"},{"lineNumber":41,"author":{"gitId":"drake25122000"},"content":"    public int isDone() {"},{"lineNumber":42,"author":{"gitId":"drake25122000"},"content":"        return isDone ? 1 : 0;"},{"lineNumber":43,"author":{"gitId":"drake25122000"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":45,"author":{"gitId":"drake25122000"},"content":"    /**"},{"lineNumber":46,"author":{"gitId":"drake25122000"},"content":"     * Set the current task to done"},{"lineNumber":47,"author":{"gitId":"drake25122000"},"content":"     **/"},{"lineNumber":48,"author":{"gitId":"drake25122000"},"content":"    public abstract Task setToTrue();"},{"lineNumber":49,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":50,"author":{"gitId":"drake25122000"},"content":"    /**"},{"lineNumber":51,"author":{"gitId":"drake25122000"},"content":"     * Get the specific time of the current task"},{"lineNumber":52,"author":{"gitId":"drake25122000"},"content":"     **/"},{"lineNumber":53,"author":{"gitId":"drake25122000"},"content":"    public abstract String getEnd();"},{"lineNumber":54,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":55,"author":{"gitId":"drake25122000"},"content":"    /**"},{"lineNumber":56,"author":{"gitId":"drake25122000"},"content":"     * Check if the current task match the keyword"},{"lineNumber":57,"author":{"gitId":"drake25122000"},"content":"     **/"},{"lineNumber":58,"author":{"gitId":"drake25122000"},"content":"    public boolean isNameMatchKeyWord(String keyword) {"},{"lineNumber":59,"author":{"gitId":"drake25122000"},"content":"        return this.name.toLowerCase().contains(keyword);"},{"lineNumber":60,"author":{"gitId":"drake25122000"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":62,"author":{"gitId":"drake25122000"},"content":"    public abstract String getDatabaseFormat();"},{"lineNumber":63,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":64,"author":{"gitId":"drake25122000"},"content":"}"}],"authorContributionMap":{"drake25122000":64}},{"path":"src/main/java/Task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"drake25122000"},"content":"package task;"},{"lineNumber":2,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":3,"author":{"gitId":"drake25122000"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"drake25122000"},"content":"import exceptions.DukeException;"},{"lineNumber":5,"author":{"gitId":"drake25122000"},"content":"import exceptions.InvalidCommandException;"},{"lineNumber":6,"author":{"gitId":"drake25122000"},"content":"import exceptions.MissingSpecifiedDeleteError;"},{"lineNumber":7,"author":{"gitId":"drake25122000"},"content":"import exceptions.NoDateException;"},{"lineNumber":8,"author":{"gitId":"drake25122000"},"content":"import exceptions.NoTaskException;"},{"lineNumber":9,"author":{"gitId":"drake25122000"},"content":"import exceptions.SimilarTaskExistsException;"},{"lineNumber":10,"author":{"gitId":"drake25122000"},"content":"import exceptions.WrongDateTimeFormatException;"},{"lineNumber":11,"author":{"gitId":"drake25122000"},"content":"import exceptions.WrongIndexError;"},{"lineNumber":12,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":13,"author":{"gitId":"drake25122000"},"content":"public class TaskList {"},{"lineNumber":14,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":15,"author":{"gitId":"drake25122000"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"drake25122000"},"content":"     * The list of tasks"},{"lineNumber":17,"author":{"gitId":"drake25122000"},"content":"     **/"},{"lineNumber":18,"author":{"gitId":"drake25122000"},"content":"    private final ArrayList\u003cTask\u003e tasks;"},{"lineNumber":19,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":20,"author":{"gitId":"drake25122000"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"drake25122000"},"content":"     * The task that have just been added or deleted or done from the list"},{"lineNumber":22,"author":{"gitId":"drake25122000"},"content":"     **/"},{"lineNumber":23,"author":{"gitId":"drake25122000"},"content":"    private final Task addedOrDeletedTask;"},{"lineNumber":24,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":25,"author":{"gitId":"drake25122000"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"drake25122000"},"content":"     * Initialize TaskList"},{"lineNumber":27,"author":{"gitId":"drake25122000"},"content":"     **/"},{"lineNumber":28,"author":{"gitId":"drake25122000"},"content":"    public TaskList() {"},{"lineNumber":29,"author":{"gitId":"drake25122000"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":30,"author":{"gitId":"drake25122000"},"content":"        this.addedOrDeletedTask \u003d null;"},{"lineNumber":31,"author":{"gitId":"drake25122000"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":33,"author":{"gitId":"drake25122000"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"drake25122000"},"content":"     * Initializes the tasklist"},{"lineNumber":35,"author":{"gitId":"drake25122000"},"content":"     *"},{"lineNumber":36,"author":{"gitId":"drake25122000"},"content":"     * @param tasks"},{"lineNumber":37,"author":{"gitId":"drake25122000"},"content":"     * @throws DukeException"},{"lineNumber":38,"author":{"gitId":"drake25122000"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"drake25122000"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) throws DukeException {"},{"lineNumber":40,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":41,"author":{"gitId":"drake25122000"},"content":"        this.tasks \u003d tasks;"},{"lineNumber":42,"author":{"gitId":"drake25122000"},"content":"        this.addedOrDeletedTask \u003d null;"},{"lineNumber":43,"author":{"gitId":"drake25122000"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":45,"author":{"gitId":"drake25122000"},"content":"    /**"},{"lineNumber":46,"author":{"gitId":"drake25122000"},"content":"     * Initializes the tasklist"},{"lineNumber":47,"author":{"gitId":"drake25122000"},"content":"     *"},{"lineNumber":48,"author":{"gitId":"drake25122000"},"content":"     * @param tasks"},{"lineNumber":49,"author":{"gitId":"drake25122000"},"content":"     * @param addedOrDeletedTask"},{"lineNumber":50,"author":{"gitId":"drake25122000"},"content":"     */"},{"lineNumber":51,"author":{"gitId":"drake25122000"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks, Task addedOrDeletedTask) {"},{"lineNumber":52,"author":{"gitId":"drake25122000"},"content":"        this.tasks \u003d tasks;"},{"lineNumber":53,"author":{"gitId":"drake25122000"},"content":"        this.addedOrDeletedTask \u003d addedOrDeletedTask;"},{"lineNumber":54,"author":{"gitId":"drake25122000"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":56,"author":{"gitId":"drake25122000"},"content":"    private static Task assignTask(String type, String name)"},{"lineNumber":57,"author":{"gitId":"drake25122000"},"content":"        throws NoTaskException, InvalidCommandException, NoDateException, WrongDateTimeFormatException {"},{"lineNumber":58,"author":{"gitId":"drake25122000"},"content":"        try {"},{"lineNumber":59,"author":{"gitId":"drake25122000"},"content":"            if (type.equals(\"todo\")) {"},{"lineNumber":60,"author":{"gitId":"drake25122000"},"content":"                try {"},{"lineNumber":61,"author":{"gitId":"drake25122000"},"content":"                    return new Todo(name.substring(5), false);"},{"lineNumber":62,"author":{"gitId":"drake25122000"},"content":"                } catch (IndexOutOfBoundsException e) {"},{"lineNumber":63,"author":{"gitId":"drake25122000"},"content":"                    throw new NoTaskException(\"☹ OOPS!!! The description of a todo cannot be empty.\");"},{"lineNumber":64,"author":{"gitId":"drake25122000"},"content":"                }"},{"lineNumber":65,"author":{"gitId":"drake25122000"},"content":"            } else {"},{"lineNumber":66,"author":{"gitId":"drake25122000"},"content":"                int indexOfCommand \u003d name.indexOf(\"/\");"},{"lineNumber":67,"author":{"gitId":"drake25122000"},"content":"                String deadline \u003d name.substring(indexOfCommand + 4);"},{"lineNumber":68,"author":{"gitId":"drake25122000"},"content":"                if (type.equals(\"deadline\")) {"},{"lineNumber":69,"author":{"gitId":"drake25122000"},"content":"                    try {"},{"lineNumber":70,"author":{"gitId":"drake25122000"},"content":"                        String currname \u003d name.substring(9);"},{"lineNumber":71,"author":{"gitId":"drake25122000"},"content":"                        if (indexOfCommand \u003e -1) {"},{"lineNumber":72,"author":{"gitId":"drake25122000"},"content":"                            try {"},{"lineNumber":73,"author":{"gitId":"drake25122000"},"content":"                                return new Deadline(name.substring(9, indexOfCommand - 1), false, deadline);"},{"lineNumber":74,"author":{"gitId":"drake25122000"},"content":"                            } catch (WrongDateTimeFormatException e) {"},{"lineNumber":75,"author":{"gitId":"drake25122000"},"content":"                                throw new WrongDateTimeFormatException(e.getMessage());"},{"lineNumber":76,"author":{"gitId":"drake25122000"},"content":"                            }"},{"lineNumber":77,"author":{"gitId":"drake25122000"},"content":"                        } else {"},{"lineNumber":78,"author":{"gitId":"drake25122000"},"content":"                            throw new NoDateException(\"☹ OOPS!!! Please specify the deadline!\");"},{"lineNumber":79,"author":{"gitId":"drake25122000"},"content":"                        }"},{"lineNumber":80,"author":{"gitId":"drake25122000"},"content":"                    } catch (IndexOutOfBoundsException e) {"},{"lineNumber":81,"author":{"gitId":"drake25122000"},"content":"                        throw new NoTaskException(\"☹ OOPS!!! The description of a deadline cannot be empty.\");"},{"lineNumber":82,"author":{"gitId":"drake25122000"},"content":"                    }"},{"lineNumber":83,"author":{"gitId":"drake25122000"},"content":"                } else {"},{"lineNumber":84,"author":{"gitId":"drake25122000"},"content":"                    try {"},{"lineNumber":85,"author":{"gitId":"drake25122000"},"content":"                        String currname \u003d name.substring(6);"},{"lineNumber":86,"author":{"gitId":"drake25122000"},"content":"                        if (indexOfCommand \u003e -1) {"},{"lineNumber":87,"author":{"gitId":"drake25122000"},"content":"                            return new Event(name.substring(6, indexOfCommand - 1), false, deadline);"},{"lineNumber":88,"author":{"gitId":"drake25122000"},"content":"                        } else {"},{"lineNumber":89,"author":{"gitId":"drake25122000"},"content":"                            throw new NoDateException(\"☹ OOPS!!! Please specify when the event is going to be held!\");"},{"lineNumber":90,"author":{"gitId":"drake25122000"},"content":"                        }"},{"lineNumber":91,"author":{"gitId":"drake25122000"},"content":"                    } catch (IndexOutOfBoundsException e) {"},{"lineNumber":92,"author":{"gitId":"drake25122000"},"content":"                        throw new NoTaskException(\"☹ OOPS!!! The description of a event cannot be empty.\");"},{"lineNumber":93,"author":{"gitId":"drake25122000"},"content":"                    }"},{"lineNumber":94,"author":{"gitId":"drake25122000"},"content":"                }"},{"lineNumber":95,"author":{"gitId":"drake25122000"},"content":"            }"},{"lineNumber":96,"author":{"gitId":"drake25122000"},"content":"        } catch (NullPointerException e) {"},{"lineNumber":97,"author":{"gitId":"drake25122000"},"content":"            throw new InvalidCommandException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"},{"lineNumber":98,"author":{"gitId":"drake25122000"},"content":"        }"},{"lineNumber":99,"author":{"gitId":"drake25122000"},"content":"    }"},{"lineNumber":100,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":101,"author":{"gitId":"drake25122000"},"content":"    private static int decideIndexDelete(String word) throws MissingSpecifiedDeleteError {"},{"lineNumber":102,"author":{"gitId":"drake25122000"},"content":"        int index \u003d 0;"},{"lineNumber":103,"author":{"gitId":"drake25122000"},"content":"        try {"},{"lineNumber":104,"author":{"gitId":"drake25122000"},"content":"            index \u003d Integer.parseInt(word.substring(7));"},{"lineNumber":105,"author":{"gitId":"drake25122000"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":106,"author":{"gitId":"drake25122000"},"content":"            throw new MissingSpecifiedDeleteError(\"☹ OOPS!!! Please specify which task you want to delete.\");"},{"lineNumber":107,"author":{"gitId":"drake25122000"},"content":"        }"},{"lineNumber":108,"author":{"gitId":"drake25122000"},"content":"        return index;"},{"lineNumber":109,"author":{"gitId":"drake25122000"},"content":"    }"},{"lineNumber":110,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":111,"author":{"gitId":"drake25122000"},"content":"    private static Task deletedTask(int index, ArrayList\u003cTask\u003e tasks) throws WrongIndexError {"},{"lineNumber":112,"author":{"gitId":"drake25122000"},"content":"        Task curr \u003d null;"},{"lineNumber":113,"author":{"gitId":"drake25122000"},"content":"        try {"},{"lineNumber":114,"author":{"gitId":"drake25122000"},"content":"            curr \u003d tasks.get(index - 1);"},{"lineNumber":115,"author":{"gitId":"drake25122000"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":116,"author":{"gitId":"drake25122000"},"content":"            throw new WrongIndexError(\"☹ OOPS!!! You only have \" + tasks.size() + \" tasks in your list. \" +"},{"lineNumber":117,"author":{"gitId":"drake25122000"},"content":"                \"Please select a valid task to be deleted.\");"},{"lineNumber":118,"author":{"gitId":"drake25122000"},"content":"        }"},{"lineNumber":119,"author":{"gitId":"drake25122000"},"content":"        return curr;"},{"lineNumber":120,"author":{"gitId":"drake25122000"},"content":"    }"},{"lineNumber":121,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":122,"author":{"gitId":"drake25122000"},"content":"    /**"},{"lineNumber":123,"author":{"gitId":"drake25122000"},"content":"     * Get the arraylist of tasks inside the TaskList"},{"lineNumber":124,"author":{"gitId":"drake25122000"},"content":"     **/"},{"lineNumber":125,"author":{"gitId":"drake25122000"},"content":"    public ArrayList\u003cTask\u003e getTaskList() {"},{"lineNumber":126,"author":{"gitId":"drake25122000"},"content":"        return this.tasks;"},{"lineNumber":127,"author":{"gitId":"drake25122000"},"content":"    }"},{"lineNumber":128,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":129,"author":{"gitId":"drake25122000"},"content":"    /**"},{"lineNumber":130,"author":{"gitId":"drake25122000"},"content":"     * Get the number of tasks currently from the list"},{"lineNumber":131,"author":{"gitId":"drake25122000"},"content":"     **/"},{"lineNumber":132,"author":{"gitId":"drake25122000"},"content":"    public int taskSize() {"},{"lineNumber":133,"author":{"gitId":"drake25122000"},"content":"        return this.tasks.size();"},{"lineNumber":134,"author":{"gitId":"drake25122000"},"content":"    }"},{"lineNumber":135,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":136,"author":{"gitId":"drake25122000"},"content":"    /**"},{"lineNumber":137,"author":{"gitId":"drake25122000"},"content":"     * Get the task that has just been deleted or added or done from the list"},{"lineNumber":138,"author":{"gitId":"drake25122000"},"content":"     **/"},{"lineNumber":139,"author":{"gitId":"drake25122000"},"content":"    public Task getAddedOrDeletedTask() {"},{"lineNumber":140,"author":{"gitId":"drake25122000"},"content":"        return this.addedOrDeletedTask;"},{"lineNumber":141,"author":{"gitId":"drake25122000"},"content":"    }"},{"lineNumber":142,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":143,"author":{"gitId":"drake25122000"},"content":"    /**"},{"lineNumber":144,"author":{"gitId":"drake25122000"},"content":"     * Delete the task from the list"},{"lineNumber":145,"author":{"gitId":"drake25122000"},"content":"     *"},{"lineNumber":146,"author":{"gitId":"drake25122000"},"content":"     * @param task"},{"lineNumber":147,"author":{"gitId":"drake25122000"},"content":"     * @return"},{"lineNumber":148,"author":{"gitId":"drake25122000"},"content":"     * @throws WrongIndexError"},{"lineNumber":149,"author":{"gitId":"drake25122000"},"content":"     * @throws MissingSpecifiedDeleteError"},{"lineNumber":150,"author":{"gitId":"drake25122000"},"content":"     */"},{"lineNumber":151,"author":{"gitId":"drake25122000"},"content":"    public TaskList delete(String task) throws WrongIndexError, MissingSpecifiedDeleteError {"},{"lineNumber":152,"author":{"gitId":"drake25122000"},"content":"        int num \u003d 0;"},{"lineNumber":153,"author":{"gitId":"drake25122000"},"content":"        ArrayList\u003cTask\u003e tempTasks \u003d this.tasks;"},{"lineNumber":154,"author":{"gitId":"drake25122000"},"content":"        Task removed \u003d null;"},{"lineNumber":155,"author":{"gitId":"drake25122000"},"content":"        try {"},{"lineNumber":156,"author":{"gitId":"drake25122000"},"content":"            num \u003d decideIndexDelete(task);"},{"lineNumber":157,"author":{"gitId":"drake25122000"},"content":"            try {"},{"lineNumber":158,"author":{"gitId":"drake25122000"},"content":"                removed \u003d deletedTask(num, tasks);"},{"lineNumber":159,"author":{"gitId":"drake25122000"},"content":"                tempTasks.remove(num - 1);"},{"lineNumber":160,"author":{"gitId":"drake25122000"},"content":"            } catch (WrongIndexError e) {"},{"lineNumber":161,"author":{"gitId":"drake25122000"},"content":"                throw new WrongIndexError(e.getMessage());"},{"lineNumber":162,"author":{"gitId":"drake25122000"},"content":"            }"},{"lineNumber":163,"author":{"gitId":"drake25122000"},"content":"        } catch (MissingSpecifiedDeleteError e) {"},{"lineNumber":164,"author":{"gitId":"drake25122000"},"content":"            throw new MissingSpecifiedDeleteError(e.getMessage());"},{"lineNumber":165,"author":{"gitId":"drake25122000"},"content":"        }"},{"lineNumber":166,"author":{"gitId":"drake25122000"},"content":"        return new TaskList(tempTasks, removed);"},{"lineNumber":167,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":168,"author":{"gitId":"drake25122000"},"content":"    }"},{"lineNumber":169,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":170,"author":{"gitId":"drake25122000"},"content":"    /**"},{"lineNumber":171,"author":{"gitId":"drake25122000"},"content":"     * Add the specified task to the list"},{"lineNumber":172,"author":{"gitId":"drake25122000"},"content":"     *"},{"lineNumber":173,"author":{"gitId":"drake25122000"},"content":"     * @param task"},{"lineNumber":174,"author":{"gitId":"drake25122000"},"content":"     * @return"},{"lineNumber":175,"author":{"gitId":"drake25122000"},"content":"     * @throws NoTaskException"},{"lineNumber":176,"author":{"gitId":"drake25122000"},"content":"     * @throws InvalidCommandException"},{"lineNumber":177,"author":{"gitId":"drake25122000"},"content":"     * @throws NoDateException"},{"lineNumber":178,"author":{"gitId":"drake25122000"},"content":"     * @throws WrongDateTimeFormatException"},{"lineNumber":179,"author":{"gitId":"drake25122000"},"content":"     */"},{"lineNumber":180,"author":{"gitId":"drake25122000"},"content":"    public TaskList add(String task)"},{"lineNumber":181,"author":{"gitId":"drake25122000"},"content":"        throws NoTaskException, InvalidCommandException, NoDateException, WrongDateTimeFormatException, SimilarTaskExistsException {"},{"lineNumber":182,"author":{"gitId":"drake25122000"},"content":"        String firstWord \u003d task.toLowerCase().contains(\"todo\") ? \"todo\""},{"lineNumber":183,"author":{"gitId":"drake25122000"},"content":"            : task.toLowerCase().contains(\"deadline\") ? \"deadline\""},{"lineNumber":184,"author":{"gitId":"drake25122000"},"content":"            : task.toLowerCase().contains(\"event\") ? \"event\""},{"lineNumber":185,"author":{"gitId":"drake25122000"},"content":"            : null;"},{"lineNumber":186,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":187,"author":{"gitId":"drake25122000"},"content":"        Task curr \u003d null;"},{"lineNumber":188,"author":{"gitId":"drake25122000"},"content":"        ArrayList\u003cTask\u003e tempTasks \u003d this.tasks;"},{"lineNumber":189,"author":{"gitId":"drake25122000"},"content":"        try {"},{"lineNumber":190,"author":{"gitId":"drake25122000"},"content":"            curr \u003d assignTask(firstWord, task);"},{"lineNumber":191,"author":{"gitId":"drake25122000"},"content":"            boolean isDuplicateExists \u003d tempTasks.contains(curr);"},{"lineNumber":192,"author":{"gitId":"drake25122000"},"content":"            if (isDuplicateExists) {"},{"lineNumber":193,"author":{"gitId":"drake25122000"},"content":"                throw new SimilarTaskExistsException(\"☹ OOPS!!! Similar task already exists. Please insert a different task\");"},{"lineNumber":194,"author":{"gitId":"drake25122000"},"content":"            } else {"},{"lineNumber":195,"author":{"gitId":"drake25122000"},"content":"                tempTasks.add(curr);"},{"lineNumber":196,"author":{"gitId":"drake25122000"},"content":"            }"},{"lineNumber":197,"author":{"gitId":"drake25122000"},"content":"        } catch (NoTaskException e) {"},{"lineNumber":198,"author":{"gitId":"drake25122000"},"content":"            throw new NoTaskException(e.getMessage());"},{"lineNumber":199,"author":{"gitId":"drake25122000"},"content":"        } catch (InvalidCommandException e) {"},{"lineNumber":200,"author":{"gitId":"drake25122000"},"content":"            throw new InvalidCommandException(e.getMessage());"},{"lineNumber":201,"author":{"gitId":"drake25122000"},"content":"        } catch (NoDateException e) {"},{"lineNumber":202,"author":{"gitId":"drake25122000"},"content":"            throw new NoDateException(e.getMessage());"},{"lineNumber":203,"author":{"gitId":"drake25122000"},"content":"        } catch (WrongDateTimeFormatException e) {"},{"lineNumber":204,"author":{"gitId":"drake25122000"},"content":"            throw new WrongDateTimeFormatException(e.getMessage());"},{"lineNumber":205,"author":{"gitId":"drake25122000"},"content":"        }"},{"lineNumber":206,"author":{"gitId":"drake25122000"},"content":"        return new TaskList(tempTasks, curr);"},{"lineNumber":207,"author":{"gitId":"drake25122000"},"content":"    }"},{"lineNumber":208,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":209,"author":{"gitId":"drake25122000"},"content":"    /**"},{"lineNumber":210,"author":{"gitId":"drake25122000"},"content":"     * Set the specified task to done"},{"lineNumber":211,"author":{"gitId":"drake25122000"},"content":"     *"},{"lineNumber":212,"author":{"gitId":"drake25122000"},"content":"     * @param done"},{"lineNumber":213,"author":{"gitId":"drake25122000"},"content":"     * @return"},{"lineNumber":214,"author":{"gitId":"drake25122000"},"content":"     * @throws WrongIndexError"},{"lineNumber":215,"author":{"gitId":"drake25122000"},"content":"     */"},{"lineNumber":216,"author":{"gitId":"drake25122000"},"content":"    public TaskList done(String done) throws WrongIndexError {"},{"lineNumber":217,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":218,"author":{"gitId":"drake25122000"},"content":"        try {"},{"lineNumber":219,"author":{"gitId":"drake25122000"},"content":"            int num \u003d Integer.parseInt(done.substring(5));"},{"lineNumber":220,"author":{"gitId":"drake25122000"},"content":"            ArrayList\u003cTask\u003e tempTask \u003d this.tasks;"},{"lineNumber":221,"author":{"gitId":"drake25122000"},"content":"            Task curr \u003d tempTask.get(num - 1).setToTrue();"},{"lineNumber":222,"author":{"gitId":"drake25122000"},"content":"            tempTask.set(num - 1, curr);"},{"lineNumber":223,"author":{"gitId":"drake25122000"},"content":"            curr \u003d tasks.get(num - 1);"},{"lineNumber":224,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":225,"author":{"gitId":"drake25122000"},"content":"            return new TaskList(tempTask, curr);"},{"lineNumber":226,"author":{"gitId":"drake25122000"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":227,"author":{"gitId":"drake25122000"},"content":"            throw new WrongIndexError(\"☹ OOPS!!! You only have \" + tasks.size() + \" tasks in your list. \" + \"\\n\""},{"lineNumber":228,"author":{"gitId":"drake25122000"},"content":"                + \"Please select a valid task to be done.\");"},{"lineNumber":229,"author":{"gitId":"drake25122000"},"content":"        }"},{"lineNumber":230,"author":{"gitId":"drake25122000"},"content":"    }"},{"lineNumber":231,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":232,"author":{"gitId":"drake25122000"},"content":"    @Override"},{"lineNumber":233,"author":{"gitId":"drake25122000"},"content":"    public boolean equals(Object o) {"},{"lineNumber":234,"author":{"gitId":"drake25122000"},"content":"        if (o \u003d\u003d this) {"},{"lineNumber":235,"author":{"gitId":"drake25122000"},"content":"            return true;"},{"lineNumber":236,"author":{"gitId":"drake25122000"},"content":"        } else if (o instanceof TaskList) {"},{"lineNumber":237,"author":{"gitId":"drake25122000"},"content":"            TaskList temp \u003d (TaskList) o;"},{"lineNumber":238,"author":{"gitId":"drake25122000"},"content":"            if (this.taskSize() \u003d\u003d temp.taskSize()) {"},{"lineNumber":239,"author":{"gitId":"drake25122000"},"content":"                boolean isEqual \u003d true;"},{"lineNumber":240,"author":{"gitId":"drake25122000"},"content":"                for (int i \u003d 0; i \u003c this.taskSize(); i++) {"},{"lineNumber":241,"author":{"gitId":"drake25122000"},"content":"                    if (!this.tasks.get(i).equals(temp.tasks.get(i))) {"},{"lineNumber":242,"author":{"gitId":"drake25122000"},"content":"                        return false;"},{"lineNumber":243,"author":{"gitId":"drake25122000"},"content":"                    }"},{"lineNumber":244,"author":{"gitId":"drake25122000"},"content":"                }"},{"lineNumber":245,"author":{"gitId":"drake25122000"},"content":"                return this.addedOrDeletedTask.equals(temp.addedOrDeletedTask);"},{"lineNumber":246,"author":{"gitId":"drake25122000"},"content":"            } else {"},{"lineNumber":247,"author":{"gitId":"drake25122000"},"content":"                return false;"},{"lineNumber":248,"author":{"gitId":"drake25122000"},"content":"            }"},{"lineNumber":249,"author":{"gitId":"drake25122000"},"content":"        } else {"},{"lineNumber":250,"author":{"gitId":"drake25122000"},"content":"            return false;"},{"lineNumber":251,"author":{"gitId":"drake25122000"},"content":"        }"},{"lineNumber":252,"author":{"gitId":"drake25122000"},"content":"    }"},{"lineNumber":253,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":254,"author":{"gitId":"drake25122000"},"content":"}"}],"authorContributionMap":{"drake25122000":254}},{"path":"src/main/java/Task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"drake25122000"},"content":"package task;"},{"lineNumber":2,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":3,"author":{"gitId":"drake25122000"},"content":"public class Todo extends Task {"},{"lineNumber":4,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":5,"author":{"gitId":"drake25122000"},"content":"    /**"},{"lineNumber":6,"author":{"gitId":"drake25122000"},"content":"     * Initializes Todo task"},{"lineNumber":7,"author":{"gitId":"drake25122000"},"content":"     *"},{"lineNumber":8,"author":{"gitId":"drake25122000"},"content":"     * @param name"},{"lineNumber":9,"author":{"gitId":"drake25122000"},"content":"     */"},{"lineNumber":10,"author":{"gitId":"drake25122000"},"content":"    public Todo(String name) {"},{"lineNumber":11,"author":{"gitId":"drake25122000"},"content":"        super(name, false);"},{"lineNumber":12,"author":{"gitId":"drake25122000"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":14,"author":{"gitId":"drake25122000"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"drake25122000"},"content":"     * Initializes Todo task"},{"lineNumber":16,"author":{"gitId":"drake25122000"},"content":"     *"},{"lineNumber":17,"author":{"gitId":"drake25122000"},"content":"     * @param name"},{"lineNumber":18,"author":{"gitId":"drake25122000"},"content":"     * @param isDone"},{"lineNumber":19,"author":{"gitId":"drake25122000"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"drake25122000"},"content":"    public Todo(String name, boolean isDone) {"},{"lineNumber":21,"author":{"gitId":"drake25122000"},"content":"        super(name, isDone);"},{"lineNumber":22,"author":{"gitId":"drake25122000"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":24,"author":{"gitId":"drake25122000"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"drake25122000"},"content":"     * Set the task to true"},{"lineNumber":26,"author":{"gitId":"drake25122000"},"content":"     **/"},{"lineNumber":27,"author":{"gitId":"drake25122000"},"content":"    @Override"},{"lineNumber":28,"author":{"gitId":"drake25122000"},"content":"    public Task setToTrue() {"},{"lineNumber":29,"author":{"gitId":"drake25122000"},"content":"        return new Todo(this.name, true);"},{"lineNumber":30,"author":{"gitId":"drake25122000"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":32,"author":{"gitId":"drake25122000"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"drake25122000"},"content":"     * Get the type of the task"},{"lineNumber":34,"author":{"gitId":"drake25122000"},"content":"     **/"},{"lineNumber":35,"author":{"gitId":"drake25122000"},"content":"    @Override"},{"lineNumber":36,"author":{"gitId":"drake25122000"},"content":"    public String getType() {"},{"lineNumber":37,"author":{"gitId":"drake25122000"},"content":"        return \"T\";"},{"lineNumber":38,"author":{"gitId":"drake25122000"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":40,"author":{"gitId":"drake25122000"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"drake25122000"},"content":"     * Get the end of the task"},{"lineNumber":42,"author":{"gitId":"drake25122000"},"content":"     **/"},{"lineNumber":43,"author":{"gitId":"drake25122000"},"content":"    @Override"},{"lineNumber":44,"author":{"gitId":"drake25122000"},"content":"    public String getEnd() {"},{"lineNumber":45,"author":{"gitId":"drake25122000"},"content":"        return null;"},{"lineNumber":46,"author":{"gitId":"drake25122000"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":48,"author":{"gitId":"drake25122000"},"content":"    /**"},{"lineNumber":49,"author":{"gitId":"drake25122000"},"content":"     * Convert the current task to String"},{"lineNumber":50,"author":{"gitId":"drake25122000"},"content":"     **/"},{"lineNumber":51,"author":{"gitId":"drake25122000"},"content":"    @Override"},{"lineNumber":52,"author":{"gitId":"drake25122000"},"content":"    public String toString() {"},{"lineNumber":53,"author":{"gitId":"drake25122000"},"content":"        return isDone"},{"lineNumber":54,"author":{"gitId":"drake25122000"},"content":"            ? \"[T][✓] \" + this.getName()"},{"lineNumber":55,"author":{"gitId":"drake25122000"},"content":"            : \"[T][✗] \" + this.getName();"},{"lineNumber":56,"author":{"gitId":"drake25122000"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":58,"author":{"gitId":"drake25122000"},"content":"    /**"},{"lineNumber":59,"author":{"gitId":"drake25122000"},"content":"     * Override the equals from Object so that it can be used to handle Todo task"},{"lineNumber":60,"author":{"gitId":"drake25122000"},"content":"     **/"},{"lineNumber":61,"author":{"gitId":"drake25122000"},"content":"    @Override"},{"lineNumber":62,"author":{"gitId":"drake25122000"},"content":"    public boolean equals(Object o) {"},{"lineNumber":63,"author":{"gitId":"drake25122000"},"content":"        if (o \u003d\u003d this) {"},{"lineNumber":64,"author":{"gitId":"drake25122000"},"content":"            return true;"},{"lineNumber":65,"author":{"gitId":"drake25122000"},"content":"        } else if (o instanceof Todo) {"},{"lineNumber":66,"author":{"gitId":"drake25122000"},"content":"            Todo temp \u003d (Todo) o;"},{"lineNumber":67,"author":{"gitId":"drake25122000"},"content":"            return this.name.equals(temp.name);"},{"lineNumber":68,"author":{"gitId":"drake25122000"},"content":"        } else {"},{"lineNumber":69,"author":{"gitId":"drake25122000"},"content":"            return false;"},{"lineNumber":70,"author":{"gitId":"drake25122000"},"content":"        }"},{"lineNumber":71,"author":{"gitId":"drake25122000"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":73,"author":{"gitId":"drake25122000"},"content":"    @Override"},{"lineNumber":74,"author":{"gitId":"drake25122000"},"content":"    public String getDatabaseFormat() {"},{"lineNumber":75,"author":{"gitId":"drake25122000"},"content":"        return this.getType() + \" | \" + this.isDone() + \" | \" + this.getName();"},{"lineNumber":76,"author":{"gitId":"drake25122000"},"content":"    }"},{"lineNumber":77,"author":{"gitId":"drake25122000"},"content":"}"}],"authorContributionMap":{"drake25122000":77}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"drake25122000"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":3,"author":{"gitId":"drake25122000"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"drake25122000"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"drake25122000"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":6,"author":{"gitId":"drake25122000"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":7,"author":{"gitId":"drake25122000"},"content":"\u003c?import javafx.scene.text.Font?\u003e"},{"lineNumber":8,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":9,"author":{"gitId":"drake25122000"},"content":"\u003cfx:root alignment\u003d\"CENTER\" centerShape\u003d\"false\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" style\u003d\"-fx-background-radius: 15px; -fx-text-fill: #fff; -fx-border-radius: 15; -fx-border-width: 3;\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":10,"author":{"gitId":"drake25122000"},"content":"    \u003cchildren\u003e"},{"lineNumber":11,"author":{"gitId":"drake25122000"},"content":"        \u003cLabel fx:id\u003d\"dialog\" alignment\u003d\"TOP_RIGHT\" style\u003d\"-fx-border-radius: 10; -fx-border-color: 00; -fx-border-width: 3; -fx-border-style: solid; -fx-background-color: #add8e6; -fx-background-radius: 10;\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e"},{"lineNumber":12,"author":{"gitId":"drake25122000"},"content":"         \u003cHBox.margin\u003e"},{"lineNumber":13,"author":{"gitId":"drake25122000"},"content":"            \u003cInsets right\u003d\"10.0\" /\u003e"},{"lineNumber":14,"author":{"gitId":"drake25122000"},"content":"         \u003c/HBox.margin\u003e"},{"lineNumber":15,"author":{"gitId":"drake25122000"},"content":"         \u003cfont\u003e"},{"lineNumber":16,"author":{"gitId":"drake25122000"},"content":"            \u003cFont name\u003d\"Lemon Regular\" size\u003d\"12.0\" /\u003e"},{"lineNumber":17,"author":{"gitId":"drake25122000"},"content":"         \u003c/font\u003e"},{"lineNumber":18,"author":{"gitId":"drake25122000"},"content":"         \u003cpadding\u003e"},{"lineNumber":19,"author":{"gitId":"drake25122000"},"content":"            \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\" /\u003e"},{"lineNumber":20,"author":{"gitId":"drake25122000"},"content":"         \u003c/padding\u003e\u003c/Label\u003e"},{"lineNumber":21,"author":{"gitId":"drake25122000"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"81.0\" fitWidth\u003d\"92.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" style\u003d\"-fx-view-order: 15;\"\u003e"},{"lineNumber":22,"author":{"gitId":"drake25122000"},"content":"         \u003cHBox.margin\u003e"},{"lineNumber":23,"author":{"gitId":"drake25122000"},"content":"            \u003cInsets /\u003e"},{"lineNumber":24,"author":{"gitId":"drake25122000"},"content":"         \u003c/HBox.margin\u003e\u003c/ImageView\u003e"},{"lineNumber":25,"author":{"gitId":"drake25122000"},"content":"    \u003c/children\u003e"},{"lineNumber":26,"author":{"gitId":"drake25122000"},"content":"    \u003cpadding\u003e"},{"lineNumber":27,"author":{"gitId":"drake25122000"},"content":"        \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e"},{"lineNumber":28,"author":{"gitId":"drake25122000"},"content":"    \u003c/padding\u003e"},{"lineNumber":29,"author":{"gitId":"drake25122000"},"content":"   \u003copaqueInsets\u003e"},{"lineNumber":30,"author":{"gitId":"drake25122000"},"content":"      \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e"},{"lineNumber":31,"author":{"gitId":"drake25122000"},"content":"   \u003c/opaqueInsets\u003e"},{"lineNumber":32,"author":{"gitId":"drake25122000"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"drake25122000":32}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"drake25122000"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":3,"author":{"gitId":"drake25122000"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"drake25122000"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":5,"author":{"gitId":"drake25122000"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":6,"author":{"gitId":"drake25122000"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":7,"author":{"gitId":"drake25122000"},"content":"\u003c?import javafx.scene.effect.DropShadow?\u003e"},{"lineNumber":8,"author":{"gitId":"drake25122000"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":9,"author":{"gitId":"drake25122000"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":10,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":11,"author":{"gitId":"drake25122000"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background-color: #69DFF0;\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"},{"lineNumber":12,"author":{"gitId":"drake25122000"},"content":"    \u003cchildren\u003e"},{"lineNumber":13,"author":{"gitId":"drake25122000"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutX\u003d\"8.0\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"35.0\" prefWidth\u003d\"304.0\" AnchorPane.bottomAnchor\u003d\"8.0\"\u003e"},{"lineNumber":14,"author":{"gitId":"drake25122000"},"content":"         \u003ceffect\u003e"},{"lineNumber":15,"author":{"gitId":"drake25122000"},"content":"            \u003cDropShadow color\u003d\"#6954d2\" /\u003e"},{"lineNumber":16,"author":{"gitId":"drake25122000"},"content":"         \u003c/effect\u003e"},{"lineNumber":17,"author":{"gitId":"drake25122000"},"content":"         \u003cpadding\u003e"},{"lineNumber":18,"author":{"gitId":"drake25122000"},"content":"            \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e"},{"lineNumber":19,"author":{"gitId":"drake25122000"},"content":"         \u003c/padding\u003e\u003c/TextField\u003e"},{"lineNumber":20,"author":{"gitId":"drake25122000"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"555.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"35.0\" prefWidth\u003d\"66.0\" style\u003d\"-fx-background-color: #6600CC; -fx-border-width: 3; -fx-border-color: 0000;\" text\u003d\"Send\" textFill\u003d\"#fbff05\"\u003e"},{"lineNumber":21,"author":{"gitId":"drake25122000"},"content":"         \u003ceffect\u003e"},{"lineNumber":22,"author":{"gitId":"drake25122000"},"content":"            \u003cDropShadow color\u003d\"#8051f8\" /\u003e"},{"lineNumber":23,"author":{"gitId":"drake25122000"},"content":"         \u003c/effect\u003e\u003c/Button\u003e"},{"lineNumber":24,"author":{"gitId":"drake25122000"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"548.0\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background-color: #69DFF0;\" vvalue\u003d\"1.0\"\u003e"},{"lineNumber":25,"author":{"gitId":"drake25122000"},"content":"            \u003ccontent\u003e"},{"lineNumber":26,"author":{"gitId":"drake25122000"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" minHeight\u003d\"547.0\" prefWidth\u003d\"384.0\"\u003e"},{"lineNumber":27,"author":{"gitId":"drake25122000"},"content":"               \u003cpadding\u003e"},{"lineNumber":28,"author":{"gitId":"drake25122000"},"content":"                  \u003cInsets bottom\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e"},{"lineNumber":29,"author":{"gitId":"drake25122000"},"content":"               \u003c/padding\u003e"},{"lineNumber":30,"author":{"gitId":"drake25122000"},"content":"            \u003c/VBox\u003e"},{"lineNumber":31,"author":{"gitId":"drake25122000"},"content":"            \u003c/content\u003e"},{"lineNumber":32,"author":{"gitId":"drake25122000"},"content":"        \u003c/ScrollPane\u003e"},{"lineNumber":33,"author":{"gitId":"drake25122000"},"content":"    \u003c/children\u003e"},{"lineNumber":34,"author":{"gitId":"drake25122000"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"drake25122000":34}},{"path":"src/test/data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"drake25122000"},"content":"D | 0 | cs2103 project | 2020-06-26 2359"},{"lineNumber":2,"author":{"gitId":"drake25122000"},"content":"E | 0 | welcome tea angklung | 17 from 7-9 p.m."},{"lineNumber":3,"author":{"gitId":"drake25122000"},"content":"T | 1 | read book"}],"authorContributionMap":{"drake25122000":3}},{"path":"src/test/java/CommandTest/AddCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"drake25122000"},"content":"package CommandTest;"},{"lineNumber":2,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":3,"author":{"gitId":"drake25122000"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;"},{"lineNumber":4,"author":{"gitId":"drake25122000"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":5,"author":{"gitId":"drake25122000"},"content":"import command.AddCommand;"},{"lineNumber":6,"author":{"gitId":"drake25122000"},"content":"import exceptions.NoDateException;"},{"lineNumber":7,"author":{"gitId":"drake25122000"},"content":"import exceptions.NoTaskException;"},{"lineNumber":8,"author":{"gitId":"drake25122000"},"content":"import exceptions.WrongDateTimeFormatException;"},{"lineNumber":9,"author":{"gitId":"drake25122000"},"content":"import parserstorageui.Storage;"},{"lineNumber":10,"author":{"gitId":"drake25122000"},"content":"import parserstorageui.Ui;"},{"lineNumber":11,"author":{"gitId":"drake25122000"},"content":"import task.TaskList;"},{"lineNumber":12,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":13,"author":{"gitId":"drake25122000"},"content":"public class AddCommandTest {"},{"lineNumber":14,"author":{"gitId":"drake25122000"},"content":"    @Test"},{"lineNumber":15,"author":{"gitId":"drake25122000"},"content":"    public void AddCommandErrorTest() {"},{"lineNumber":16,"author":{"gitId":"drake25122000"},"content":"        assertThrows(WrongDateTimeFormatException.class, () -\u003e {"},{"lineNumber":17,"author":{"gitId":"drake25122000"},"content":"            new AddCommand(\"deadline cs2103 project /by 26-06-2020 \")"},{"lineNumber":18,"author":{"gitId":"drake25122000"},"content":"                .execute(new TaskList(new Storage(\"data\").load()), new Ui(), new Storage(\"data/duke.txt\"));"},{"lineNumber":19,"author":{"gitId":"drake25122000"},"content":"        });"},{"lineNumber":20,"author":{"gitId":"drake25122000"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":22,"author":{"gitId":"drake25122000"},"content":"    @Test"},{"lineNumber":23,"author":{"gitId":"drake25122000"},"content":"    public void AddCommandErrorTest2() {"},{"lineNumber":24,"author":{"gitId":"drake25122000"},"content":"        assertThrows(NoDateException.class, () -\u003e {"},{"lineNumber":25,"author":{"gitId":"drake25122000"},"content":"            new AddCommand(\"deadline cs2103 project\")"},{"lineNumber":26,"author":{"gitId":"drake25122000"},"content":"                .execute(new TaskList(new Storage(\"data\").load()), new Ui(), new Storage(\"data/duke.txt\"));"},{"lineNumber":27,"author":{"gitId":"drake25122000"},"content":"        });"},{"lineNumber":28,"author":{"gitId":"drake25122000"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":30,"author":{"gitId":"drake25122000"},"content":"    @Test"},{"lineNumber":31,"author":{"gitId":"drake25122000"},"content":"    public void AddCommandErrorTest3() {"},{"lineNumber":32,"author":{"gitId":"drake25122000"},"content":"        assertThrows(NoTaskException.class, () -\u003e {"},{"lineNumber":33,"author":{"gitId":"drake25122000"},"content":"            new AddCommand(\"event\")"},{"lineNumber":34,"author":{"gitId":"drake25122000"},"content":"                .execute(new TaskList(new Storage(\"data\").load()), new Ui(), new Storage(\"data/duke.txt\"));"},{"lineNumber":35,"author":{"gitId":"drake25122000"},"content":"        });"},{"lineNumber":36,"author":{"gitId":"drake25122000"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"drake25122000"},"content":"}"}],"authorContributionMap":{"drake25122000":37}},{"path":"src/test/java/CommandTest/DeleteCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"drake25122000"},"content":"package CommandTest;"},{"lineNumber":2,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":3,"author":{"gitId":"drake25122000"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;"},{"lineNumber":4,"author":{"gitId":"drake25122000"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":5,"author":{"gitId":"drake25122000"},"content":"import command.DeleteCommand;"},{"lineNumber":6,"author":{"gitId":"drake25122000"},"content":"import exceptions.MissingSpecifiedDeleteError;"},{"lineNumber":7,"author":{"gitId":"drake25122000"},"content":"import exceptions.WrongIndexError;"},{"lineNumber":8,"author":{"gitId":"drake25122000"},"content":"import parserstorageui.Storage;"},{"lineNumber":9,"author":{"gitId":"drake25122000"},"content":"import parserstorageui.Ui;"},{"lineNumber":10,"author":{"gitId":"drake25122000"},"content":"import task.TaskList;"},{"lineNumber":11,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":12,"author":{"gitId":"drake25122000"},"content":"public class DeleteCommandTest {"},{"lineNumber":13,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":14,"author":{"gitId":"drake25122000"},"content":"    @Test"},{"lineNumber":15,"author":{"gitId":"drake25122000"},"content":"    public void DeleteCommandErrorTest() {"},{"lineNumber":16,"author":{"gitId":"drake25122000"},"content":"        assertThrows(WrongIndexError.class, () -\u003e {"},{"lineNumber":17,"author":{"gitId":"drake25122000"},"content":"            new DeleteCommand(\"delete 4\")"},{"lineNumber":18,"author":{"gitId":"drake25122000"},"content":"                .execute(new TaskList(new Storage(\"data\").load()), new Ui(), new Storage(\"data/duke.txt\"));"},{"lineNumber":19,"author":{"gitId":"drake25122000"},"content":"        });"},{"lineNumber":20,"author":{"gitId":"drake25122000"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":22,"author":{"gitId":"drake25122000"},"content":"    @Test"},{"lineNumber":23,"author":{"gitId":"drake25122000"},"content":"    public void DeleteCommandErrorTest2() {"},{"lineNumber":24,"author":{"gitId":"drake25122000"},"content":"        assertThrows(MissingSpecifiedDeleteError.class, () -\u003e {"},{"lineNumber":25,"author":{"gitId":"drake25122000"},"content":"            new DeleteCommand(\"delete\")"},{"lineNumber":26,"author":{"gitId":"drake25122000"},"content":"                .execute(new TaskList(new Storage(\"data\").load()), new Ui(), new Storage(\"data/duke.txt\"));"},{"lineNumber":27,"author":{"gitId":"drake25122000"},"content":"        });"},{"lineNumber":28,"author":{"gitId":"drake25122000"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"drake25122000"},"content":"}"}],"authorContributionMap":{"drake25122000":29}},{"path":"src/test/java/CommandTest/DoneCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"drake25122000"},"content":"package CommandTest;"},{"lineNumber":2,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":3,"author":{"gitId":"drake25122000"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;"},{"lineNumber":4,"author":{"gitId":"drake25122000"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":5,"author":{"gitId":"drake25122000"},"content":"import command.DoneCommand;"},{"lineNumber":6,"author":{"gitId":"drake25122000"},"content":"import exceptions.WrongIndexError;"},{"lineNumber":7,"author":{"gitId":"drake25122000"},"content":"import parserstorageui.Storage;"},{"lineNumber":8,"author":{"gitId":"drake25122000"},"content":"import parserstorageui.Ui;"},{"lineNumber":9,"author":{"gitId":"drake25122000"},"content":"import task.TaskList;"},{"lineNumber":10,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":11,"author":{"gitId":"drake25122000"},"content":"public class DoneCommandTest {"},{"lineNumber":12,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":13,"author":{"gitId":"drake25122000"},"content":"    @Test"},{"lineNumber":14,"author":{"gitId":"drake25122000"},"content":"    public void DeleteCommandErrorTest() {"},{"lineNumber":15,"author":{"gitId":"drake25122000"},"content":"        assertThrows(WrongIndexError.class, () -\u003e {"},{"lineNumber":16,"author":{"gitId":"drake25122000"},"content":"            new DoneCommand(\"done 4\")"},{"lineNumber":17,"author":{"gitId":"drake25122000"},"content":"                .execute(new TaskList(new Storage(\"data/\").load()), new Ui(), new Storage(\"data/duke.txt\"));"},{"lineNumber":18,"author":{"gitId":"drake25122000"},"content":"        });"},{"lineNumber":19,"author":{"gitId":"drake25122000"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"drake25122000"},"content":"}"}],"authorContributionMap":{"drake25122000":20}},{"path":"src/test/java/ParserStorageUiTest/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"drake25122000"},"content":"package ParserStorageUiTest;"},{"lineNumber":2,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":3,"author":{"gitId":"drake25122000"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"drake25122000"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":5,"author":{"gitId":"drake25122000"},"content":"import command.AddCommand;"},{"lineNumber":6,"author":{"gitId":"drake25122000"},"content":"import command.DeleteCommand;"},{"lineNumber":7,"author":{"gitId":"drake25122000"},"content":"import command.ExitCommand;"},{"lineNumber":8,"author":{"gitId":"drake25122000"},"content":"import parserstorageui.Parser;"},{"lineNumber":9,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":10,"author":{"gitId":"drake25122000"},"content":"public class ParserTest {"},{"lineNumber":11,"author":{"gitId":"drake25122000"},"content":"    @Test"},{"lineNumber":12,"author":{"gitId":"drake25122000"},"content":"    public void parseTestAddCommand() {"},{"lineNumber":13,"author":{"gitId":"drake25122000"},"content":"        assertEquals(Parser.parse(\"todo sleep\"), new AddCommand(\"todo sleep\"));"},{"lineNumber":14,"author":{"gitId":"drake25122000"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":16,"author":{"gitId":"drake25122000"},"content":"    @Test"},{"lineNumber":17,"author":{"gitId":"drake25122000"},"content":"    public void parseTestExitCommand() {"},{"lineNumber":18,"author":{"gitId":"drake25122000"},"content":"        assertEquals(Parser.parse(\"bye\"), new ExitCommand(\"bye\"));"},{"lineNumber":19,"author":{"gitId":"drake25122000"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":21,"author":{"gitId":"drake25122000"},"content":"    @Test"},{"lineNumber":22,"author":{"gitId":"drake25122000"},"content":"    public void parseTestDeleteCommand() {"},{"lineNumber":23,"author":{"gitId":"drake25122000"},"content":"        assertEquals(Parser.parse(\"delete 3\"), new DeleteCommand(\"delete 3\"));"},{"lineNumber":24,"author":{"gitId":"drake25122000"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"drake25122000"},"content":"}"}],"authorContributionMap":{"drake25122000":25}},{"path":"src/test/java/TaskTest/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"drake25122000"},"content":"package TaskTest;"},{"lineNumber":2,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":3,"author":{"gitId":"drake25122000"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"drake25122000"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":5,"author":{"gitId":"drake25122000"},"content":"import exceptions.DukeException;"},{"lineNumber":6,"author":{"gitId":"drake25122000"},"content":"import task.Deadline;"},{"lineNumber":7,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":8,"author":{"gitId":"drake25122000"},"content":"public class DeadlineTest {"},{"lineNumber":9,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":10,"author":{"gitId":"drake25122000"},"content":"    @Test"},{"lineNumber":11,"author":{"gitId":"drake25122000"},"content":"    public void setToTrueTest() throws DukeException {"},{"lineNumber":12,"author":{"gitId":"drake25122000"},"content":"        assertEquals(new Deadline(\"cs2103 project\", false, \"2020-06-26 2359\").setToTrue(),"},{"lineNumber":13,"author":{"gitId":"drake25122000"},"content":"            new Deadline(\"cs2103 project\", true, \"2020-06-26 2359\"));"},{"lineNumber":14,"author":{"gitId":"drake25122000"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":16,"author":{"gitId":"drake25122000"},"content":"    @Test"},{"lineNumber":17,"author":{"gitId":"drake25122000"},"content":"    public void getTypeTest() throws DukeException {"},{"lineNumber":18,"author":{"gitId":"drake25122000"},"content":"        assertEquals(new Deadline(\"cs2103 project\", false, \"2020-06-26 2359\").getType(),"},{"lineNumber":19,"author":{"gitId":"drake25122000"},"content":"            new Deadline(\"cs2103 project\", true, \"2020-06-26 2359\").getType());"},{"lineNumber":20,"author":{"gitId":"drake25122000"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":22,"author":{"gitId":"drake25122000"},"content":"    @Test"},{"lineNumber":23,"author":{"gitId":"drake25122000"},"content":"    public void getEndTest() throws DukeException {"},{"lineNumber":24,"author":{"gitId":"drake25122000"},"content":"        assertEquals(new Deadline(\"cs2103 project\", false, \"2020-06-26 2359\").getEnd(),"},{"lineNumber":25,"author":{"gitId":"drake25122000"},"content":"            new Deadline(\"cs2103 project\", true, \"2020-06-26 2359\").getEnd());"},{"lineNumber":26,"author":{"gitId":"drake25122000"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":28,"author":{"gitId":"drake25122000"},"content":"}"}],"authorContributionMap":{"drake25122000":28}},{"path":"src/test/java/TaskTest/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"drake25122000"},"content":"package TaskTest;"},{"lineNumber":2,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":3,"author":{"gitId":"drake25122000"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"drake25122000"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":5,"author":{"gitId":"drake25122000"},"content":"import exceptions.DukeException;"},{"lineNumber":6,"author":{"gitId":"drake25122000"},"content":"import parserstorageui.Storage;"},{"lineNumber":7,"author":{"gitId":"drake25122000"},"content":"import task.Deadline;"},{"lineNumber":8,"author":{"gitId":"drake25122000"},"content":"import task.TaskList;"},{"lineNumber":9,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":10,"author":{"gitId":"drake25122000"},"content":"public class TaskListTest {"},{"lineNumber":11,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":12,"author":{"gitId":"drake25122000"},"content":"    @Test"},{"lineNumber":13,"author":{"gitId":"drake25122000"},"content":"    public void taskListAddTest() throws DukeException {"},{"lineNumber":14,"author":{"gitId":"drake25122000"},"content":"        assertEquals("},{"lineNumber":15,"author":{"gitId":"drake25122000"},"content":"            new TaskList(new Storage(\"data\").load()).add(\"deadline cs2103 /by 2020-06-26 2359\").getAddedOrDeletedTask(),"},{"lineNumber":16,"author":{"gitId":"drake25122000"},"content":"            new Deadline(\"cs2103\", false, \"2020-06-26 2359\"));"},{"lineNumber":17,"author":{"gitId":"drake25122000"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":19,"author":{"gitId":"drake25122000"},"content":"    @Test"},{"lineNumber":20,"author":{"gitId":"drake25122000"},"content":"    public void taskListDeleteTest() throws DukeException {"},{"lineNumber":21,"author":{"gitId":"drake25122000"},"content":"        assertEquals(new TaskList(new Storage(\"data\").load()).delete(\"delete 1\").getAddedOrDeletedTask(),"},{"lineNumber":22,"author":{"gitId":"drake25122000"},"content":"            new Deadline(\"cs2103 project\", false, \"2020-06-26 2359\"));"},{"lineNumber":23,"author":{"gitId":"drake25122000"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":25,"author":{"gitId":"drake25122000"},"content":"    @Test"},{"lineNumber":26,"author":{"gitId":"drake25122000"},"content":"    public void taskListDoneTest() throws DukeException {"},{"lineNumber":27,"author":{"gitId":"drake25122000"},"content":"        assertEquals(new TaskList(new Storage(\"data\").load()).done(\"done 1\").getAddedOrDeletedTask(),"},{"lineNumber":28,"author":{"gitId":"drake25122000"},"content":"            new Deadline(\"cs2103 project\", true, \"2020-06-26 2359\"));"},{"lineNumber":29,"author":{"gitId":"drake25122000"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"drake25122000"},"content":""},{"lineNumber":31,"author":{"gitId":"drake25122000"},"content":"}"}],"authorContributionMap":{"drake25122000":31}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"drake25122000"},"content":"list"},{"lineNumber":2,"author":{"gitId":"drake25122000"},"content":"todo sleep"},{"lineNumber":3,"author":{"gitId":"drake25122000"},"content":"done 4"},{"lineNumber":4,"author":{"gitId":"drake25122000"},"content":"done 2"},{"lineNumber":5,"author":{"gitId":"drake25122000"},"content":"list"},{"lineNumber":6,"author":{"gitId":"drake25122000"},"content":"delete 3"},{"lineNumber":7,"author":{"gitId":"drake25122000"},"content":"list"},{"lineNumber":8,"author":{"gitId":"drake25122000"},"content":"bye"}],"authorContributionMap":{"drake25122000":8}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"drake25122000"},"content":"javac  -source 1.8 -target 1.8 -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"drake25122000"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT 2\u003e\u00261"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"drake25122000":2,"-":19}}]
