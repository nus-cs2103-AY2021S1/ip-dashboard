[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":14,"author":{"gitId":"raymondge"},"content":"    implementation \u0027junit:junit:4.12\u0027"},{"lineNumber":15,"author":{"gitId":"raymondge"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":16,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":17,"author":{"gitId":"raymondge"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":18,"author":{"gitId":"raymondge"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":19,"author":{"gitId":"raymondge"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":20,"author":{"gitId":"raymondge"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":21,"author":{"gitId":"raymondge"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":22,"author":{"gitId":"raymondge"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":23,"author":{"gitId":"raymondge"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":24,"author":{"gitId":"raymondge"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":25,"author":{"gitId":"raymondge"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":26,"author":{"gitId":"raymondge"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":27,"author":{"gitId":"raymondge"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":28,"author":{"gitId":"raymondge"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":29,"author":{"gitId":"raymondge"},"content":"}"},{"lineNumber":30,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":31,"author":{"gitId":"raymondge"},"content":"run {"},{"lineNumber":32,"author":{"gitId":"raymondge"},"content":"    enableAssertions \u003d true"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":40,"author":{"gitId":"-"},"content":""},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}"},{"lineNumber":48,"author":{"gitId":"-"},"content":""},{"lineNumber":49,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":50,"author":{"gitId":"raymondge"},"content":"    mainClassName \u003d \"Launcher\""},{"lineNumber":51,"author":{"gitId":"-"},"content":"}"},{"lineNumber":52,"author":{"gitId":"-"},"content":""},{"lineNumber":53,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":54,"author":{"gitId":"raymondge"},"content":"    archiveBaseName \u003d \"Launcher\""},{"lineNumber":55,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}"},{"lineNumber":57,"author":{"gitId":"-"},"content":""},{"lineNumber":58,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.23\u0027"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}"},{"lineNumber":61,"author":{"gitId":"-"},"content":""},{"lineNumber":62,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":42,"raymondge":22}},{"path":"data/duke.txt.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"raymondge"},"content":"T | 1 | read book"},{"lineNumber":2,"author":{"gitId":"raymondge"},"content":"D | 0 | return book | June 6th"},{"lineNumber":3,"author":{"gitId":"raymondge"},"content":"E | 0 | project meeting | Aug 6th 2-4pm"},{"lineNumber":4,"author":{"gitId":"raymondge"},"content":"T | 1 | join sports club"}],"authorContributionMap":{"raymondge":4}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"raymondge"},"content":"# User Guide for duke bot"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features "},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"raymondge"},"content":"### Say bye to duke `bye` "},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"raymondge"},"content":"Exit the program."},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"raymondge"},"content":"Input instruction: "},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"raymondge"},"content":"`bye`"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"raymondge"},"content":"### Find a task `find` "},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"raymondge"},"content":"Find the expected task with given index in the task list."},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"raymondge"},"content":"Input instruction: "},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"raymondge"},"content":"`find` + `index`"},{"lineNumber":20,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":21,"author":{"gitId":"raymondge"},"content":"Example of usage: find 1 "},{"lineNumber":22,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":23,"author":{"gitId":"raymondge"},"content":"### Delete a task `delete` "},{"lineNumber":24,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":25,"author":{"gitId":"raymondge"},"content":"Delete the expected task with given index in the task list."},{"lineNumber":26,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":27,"author":{"gitId":"raymondge"},"content":"Input instruction: "},{"lineNumber":28,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":29,"author":{"gitId":"raymondge"},"content":"`delete` + `index`"},{"lineNumber":30,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":31,"author":{"gitId":"raymondge"},"content":"Example of usage: delete 1 "},{"lineNumber":32,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":33,"author":{"gitId":"raymondge"},"content":"### Create a todo task `todo` "},{"lineNumber":34,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":35,"author":{"gitId":"raymondge"},"content":"Create a task that you are going to do and store in the tasklist."},{"lineNumber":36,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":37,"author":{"gitId":"raymondge"},"content":"Input instruction: "},{"lineNumber":38,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":39,"author":{"gitId":"raymondge"},"content":"`todo` + `task content`"},{"lineNumber":40,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":41,"author":{"gitId":"raymondge"},"content":"Example of usage: todo play games"},{"lineNumber":42,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":43,"author":{"gitId":"raymondge"},"content":"### Create a deadline task `deadline` "},{"lineNumber":44,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":45,"author":{"gitId":"raymondge"},"content":"Create a task with a deadline"},{"lineNumber":46,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":47,"author":{"gitId":"raymondge"},"content":"Input instruction: "},{"lineNumber":48,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":49,"author":{"gitId":"raymondge"},"content":"`deadline` + `task content` + `/by` + `YYYY-MM-DD`"},{"lineNumber":50,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":51,"author":{"gitId":"raymondge"},"content":"Example of usage: deadline finish homework /by 2020-05-12"},{"lineNumber":52,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":53,"author":{"gitId":"raymondge"},"content":"### Create a event task `event` "},{"lineNumber":54,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":55,"author":{"gitId":"raymondge"},"content":"Create an event"},{"lineNumber":56,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":57,"author":{"gitId":"raymondge"},"content":"Input instruction: "},{"lineNumber":58,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":59,"author":{"gitId":"raymondge"},"content":"`event` + `task content` + `/at` + `YYYY-MM-DD`"},{"lineNumber":60,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":61,"author":{"gitId":"raymondge"},"content":"Example of usage: event celebrate holiday /at 2020-05-12"},{"lineNumber":62,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":63,"author":{"gitId":"raymondge"},"content":"### List your tasks `list` "},{"lineNumber":64,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":65,"author":{"gitId":"raymondge"},"content":"Show the list of tasks"},{"lineNumber":66,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":67,"author":{"gitId":"raymondge"},"content":"Input instruction: "},{"lineNumber":68,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":69,"author":{"gitId":"raymondge"},"content":"`list`"},{"lineNumber":70,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":71,"author":{"gitId":"raymondge"},"content":"Example of usage: list"},{"lineNumber":72,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":73,"author":{"gitId":"raymondge"},"content":"### Find out statistics `stats` "},{"lineNumber":74,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":75,"author":{"gitId":"raymondge"},"content":"Show the number of task completed"},{"lineNumber":76,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":77,"author":{"gitId":"raymondge"},"content":"Input instruction: "},{"lineNumber":78,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":79,"author":{"gitId":"raymondge"},"content":"`stats`"},{"lineNumber":80,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":81,"author":{"gitId":"raymondge"},"content":"Example of usage: stats"},{"lineNumber":82,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":83,"author":{"gitId":"raymondge"},"content":"### Says hi to duke `hi` "},{"lineNumber":84,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":85,"author":{"gitId":"raymondge"},"content":"Greet the bot and it will greet you back"},{"lineNumber":86,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":87,"author":{"gitId":"raymondge"},"content":"Input instruction: "},{"lineNumber":88,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":89,"author":{"gitId":"raymondge"},"content":"`hi`"},{"lineNumber":90,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":91,"author":{"gitId":"raymondge"},"content":"Example of usage: hi"},{"lineNumber":92,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":93,"author":{"gitId":"raymondge"},"content":"### Mark your task done `done` "},{"lineNumber":94,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":95,"author":{"gitId":"raymondge"},"content":"Mark your task done "},{"lineNumber":96,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":97,"author":{"gitId":"raymondge"},"content":"Input instruction: "},{"lineNumber":98,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":99,"author":{"gitId":"raymondge"},"content":"`done` + `index`"},{"lineNumber":100,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":101,"author":{"gitId":"raymondge"},"content":"Example of usage: done 1"},{"lineNumber":102,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":103,"author":{"gitId":"-"},"content":"//@@author dcchan98-reused"},{"lineNumber":104,"author":{"gitId":"-"},"content":"//Reused from https://github.com/dcchan98/ip/blob/master/src/main/java/Storage.java with minor modification"},{"lineNumber":105,"author":{"gitId":"-"},"content":""},{"lineNumber":106,"author":{"gitId":"-"},"content":"public void writeToFile(Task myTask, int todoNum) {"},{"lineNumber":107,"author":{"gitId":"-"},"content":" "},{"lineNumber":108,"author":{"gitId":"-"},"content":"         createToDo(\"ToDo/item\" + todoNum + \".txt\");"},{"lineNumber":109,"author":{"gitId":"-"},"content":" "},{"lineNumber":110,"author":{"gitId":"-"},"content":"         try {"},{"lineNumber":111,"author":{"gitId":"-"},"content":"             ObjectOutputStream out \u003d new ObjectOutputStream(new FileOutputStream(\"ToDo/item\" + todoNum + \".txt\"));"},{"lineNumber":112,"author":{"gitId":"-"},"content":"             out.writeObject(myTask);"},{"lineNumber":113,"author":{"gitId":"-"},"content":"         } catch (IOException e) {"},{"lineNumber":114,"author":{"gitId":"-"},"content":"             e.printStackTrace();"},{"lineNumber":115,"author":{"gitId":"-"},"content":"         }"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     }"},{"lineNumber":117,"author":{"gitId":"-"},"content":"public Task readFromFile(String fileDir) {"},{"lineNumber":118,"author":{"gitId":"-"},"content":"          Task myTask \u003d null;"},{"lineNumber":119,"author":{"gitId":"-"},"content":"          try {"},{"lineNumber":120,"author":{"gitId":"-"},"content":"              ObjectInputStream in \u003d new ObjectInputStream(new FileInputStream(fileDir));"},{"lineNumber":121,"author":{"gitId":"-"},"content":"              myTask \u003d (Task) in.readObject();"},{"lineNumber":122,"author":{"gitId":"-"},"content":"          } catch (IOException | ClassNotFoundException e) {"},{"lineNumber":123,"author":{"gitId":"-"},"content":"              e.printStackTrace();"},{"lineNumber":124,"author":{"gitId":"-"},"content":"          }"},{"lineNumber":125,"author":{"gitId":"-"},"content":"          return myTask;"},{"lineNumber":126,"author":{"gitId":"-"},"content":"  "},{"lineNumber":127,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":128,"author":{"gitId":"-"},"content":"public void updateDirectory(TaskList myTaskList) {"},{"lineNumber":129,"author":{"gitId":"-"},"content":"  "},{"lineNumber":130,"author":{"gitId":"-"},"content":"          // deleting all files in directory"},{"lineNumber":131,"author":{"gitId":"-"},"content":"          File dir \u003d new File(\"ToDo\");"},{"lineNumber":132,"author":{"gitId":"-"},"content":"          File[] myItems \u003d dir.listFiles();"},{"lineNumber":133,"author":{"gitId":"-"},"content":"          for (File child : myItems) {"},{"lineNumber":134,"author":{"gitId":"-"},"content":"              if (child.toString().substring(0, 9).equals(\"ToDo/item\")) {"},{"lineNumber":135,"author":{"gitId":"-"},"content":"                  Path path \u003d FileSystems.getDefault().getPath(child.toString());"},{"lineNumber":136,"author":{"gitId":"-"},"content":"                  try {"},{"lineNumber":137,"author":{"gitId":"-"},"content":"                      Files.delete(path);"},{"lineNumber":138,"author":{"gitId":"-"},"content":"                  } catch (NoSuchFileException x) {"},{"lineNumber":139,"author":{"gitId":"-"},"content":"                      System.err.format(\"%s: no such\" + \" file or directory%n\", path);"},{"lineNumber":140,"author":{"gitId":"-"},"content":"                  } catch (IOException x) {"},{"lineNumber":141,"author":{"gitId":"-"},"content":"                      System.err.println(x);"},{"lineNumber":142,"author":{"gitId":"-"},"content":"                  }"},{"lineNumber":143,"author":{"gitId":"-"},"content":"              }"},{"lineNumber":144,"author":{"gitId":"-"},"content":"          }"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  "},{"lineNumber":146,"author":{"gitId":"-"},"content":"          // repopulating directory with that in arraylist taks"},{"lineNumber":147,"author":{"gitId":"-"},"content":"          for (int i \u003d 0; i \u003c myTaskList.getTasks().size(); i++) {"},{"lineNumber":148,"author":{"gitId":"-"},"content":"              writeToFile(myTaskList.getTasks().get(i), i);"},{"lineNumber":149,"author":{"gitId":"-"},"content":"          }"},{"lineNumber":150,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":151,"author":{"gitId":"-"},"content":"//@@author dcchan98-reused"}],"authorContributionMap":{"raymondge":92,"-":59}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"raymondge"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"raymondge"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":3,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":4,"author":{"gitId":"raymondge"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"raymondge"},"content":" * A deadline task that comprises a deadline task description, date and whether it is done."},{"lineNumber":6,"author":{"gitId":"raymondge"},"content":" */"},{"lineNumber":7,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":8,"author":{"gitId":"raymondge"},"content":"public class Deadline extends Task {"},{"lineNumber":9,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":10,"author":{"gitId":"raymondge"},"content":"    protected LocalDate time;"},{"lineNumber":11,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":12,"author":{"gitId":"raymondge"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"raymondge"},"content":"     * Create a deadline task."},{"lineNumber":14,"author":{"gitId":"raymondge"},"content":"     * @param description of task."},{"lineNumber":15,"author":{"gitId":"raymondge"},"content":"     * @param isDone done status of task."},{"lineNumber":16,"author":{"gitId":"raymondge"},"content":"     * @param time of task."},{"lineNumber":17,"author":{"gitId":"raymondge"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"raymondge"},"content":"    public Deadline(String description, boolean isDone, LocalDate time) {"},{"lineNumber":19,"author":{"gitId":"raymondge"},"content":"        super(description, isDone);"},{"lineNumber":20,"author":{"gitId":"raymondge"},"content":"        this.time \u003d time;"},{"lineNumber":21,"author":{"gitId":"raymondge"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":23,"author":{"gitId":"raymondge"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"raymondge"},"content":"     * Returns the deadline date."},{"lineNumber":25,"author":{"gitId":"raymondge"},"content":"     * @return deadline date."},{"lineNumber":26,"author":{"gitId":"raymondge"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"raymondge"},"content":"    public String getDate() {"},{"lineNumber":28,"author":{"gitId":"raymondge"},"content":"        return time.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"},{"lineNumber":29,"author":{"gitId":"raymondge"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":31,"author":{"gitId":"raymondge"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"raymondge"},"content":"     * Returns the String description for deadline."},{"lineNumber":33,"author":{"gitId":"raymondge"},"content":"     * @return String description."},{"lineNumber":34,"author":{"gitId":"raymondge"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"raymondge"},"content":"    @Override"},{"lineNumber":36,"author":{"gitId":"raymondge"},"content":"    public String toString() {"},{"lineNumber":37,"author":{"gitId":"raymondge"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + getDate() + \")\";"},{"lineNumber":38,"author":{"gitId":"raymondge"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"raymondge"},"content":"}"}],"authorContributionMap":{"raymondge":39}},{"path":"src/main/java/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"raymondge"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":2,"author":{"gitId":"raymondge"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":3,"author":{"gitId":"raymondge"},"content":"import javafx.fxml.FXML;"},{"lineNumber":4,"author":{"gitId":"raymondge"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":5,"author":{"gitId":"raymondge"},"content":"import javafx.geometry.Pos;"},{"lineNumber":6,"author":{"gitId":"raymondge"},"content":"import javafx.scene.Node;"},{"lineNumber":7,"author":{"gitId":"raymondge"},"content":"import javafx.scene.control.Label;"},{"lineNumber":8,"author":{"gitId":"raymondge"},"content":"import javafx.scene.image.Image;"},{"lineNumber":9,"author":{"gitId":"raymondge"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":10,"author":{"gitId":"raymondge"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":11,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":12,"author":{"gitId":"raymondge"},"content":"import java.io.IOException;"},{"lineNumber":13,"author":{"gitId":"raymondge"},"content":"import java.util.Collections;"},{"lineNumber":14,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":15,"author":{"gitId":"raymondge"},"content":"/**"},{"lineNumber":16,"author":{"gitId":"raymondge"},"content":" * An example of a custom control using FXML."},{"lineNumber":17,"author":{"gitId":"raymondge"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"},{"lineNumber":18,"author":{"gitId":"raymondge"},"content":" * containing text from the speaker."},{"lineNumber":19,"author":{"gitId":"raymondge"},"content":" */"},{"lineNumber":20,"author":{"gitId":"raymondge"},"content":"public class DialogBox extends HBox {"},{"lineNumber":21,"author":{"gitId":"raymondge"},"content":"    @FXML"},{"lineNumber":22,"author":{"gitId":"raymondge"},"content":"    private Label dialog;"},{"lineNumber":23,"author":{"gitId":"raymondge"},"content":"    @FXML"},{"lineNumber":24,"author":{"gitId":"raymondge"},"content":"    private ImageView displayPicture;"},{"lineNumber":25,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":26,"author":{"gitId":"raymondge"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"raymondge"},"content":"     * Create a DialogBox."},{"lineNumber":28,"author":{"gitId":"raymondge"},"content":"     * @param text of Dialog."},{"lineNumber":29,"author":{"gitId":"raymondge"},"content":"     * @param img image of Dialog."},{"lineNumber":30,"author":{"gitId":"raymondge"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"raymondge"},"content":"    private DialogBox(String text, Image img) {"},{"lineNumber":32,"author":{"gitId":"raymondge"},"content":"        try {"},{"lineNumber":33,"author":{"gitId":"raymondge"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"},{"lineNumber":34,"author":{"gitId":"raymondge"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":35,"author":{"gitId":"raymondge"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":36,"author":{"gitId":"raymondge"},"content":"            fxmlLoader.load();"},{"lineNumber":37,"author":{"gitId":"raymondge"},"content":"        } catch (IOException e) {"},{"lineNumber":38,"author":{"gitId":"raymondge"},"content":"            e.printStackTrace();"},{"lineNumber":39,"author":{"gitId":"raymondge"},"content":"        }"},{"lineNumber":40,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":41,"author":{"gitId":"raymondge"},"content":"        dialog.setText(text);"},{"lineNumber":42,"author":{"gitId":"raymondge"},"content":"        displayPicture.setImage(img);"},{"lineNumber":43,"author":{"gitId":"raymondge"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":45,"author":{"gitId":"raymondge"},"content":"    /**"},{"lineNumber":46,"author":{"gitId":"raymondge"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":47,"author":{"gitId":"raymondge"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"raymondge"},"content":"    private void flip() {"},{"lineNumber":49,"author":{"gitId":"raymondge"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":50,"author":{"gitId":"raymondge"},"content":"        Collections.reverse(tmp);"},{"lineNumber":51,"author":{"gitId":"raymondge"},"content":"        getChildren().setAll(tmp);"},{"lineNumber":52,"author":{"gitId":"raymondge"},"content":"        setAlignment(Pos.TOP_LEFT);"},{"lineNumber":53,"author":{"gitId":"raymondge"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":55,"author":{"gitId":"raymondge"},"content":"    /**"},{"lineNumber":56,"author":{"gitId":"raymondge"},"content":"     * Static method to get User Dialog with text and image."},{"lineNumber":57,"author":{"gitId":"raymondge"},"content":"     */"},{"lineNumber":58,"author":{"gitId":"raymondge"},"content":"    public static DialogBox getUserDialog(String text, Image img) {"},{"lineNumber":59,"author":{"gitId":"raymondge"},"content":"        return new DialogBox(text, img);"},{"lineNumber":60,"author":{"gitId":"raymondge"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":62,"author":{"gitId":"raymondge"},"content":"    /**"},{"lineNumber":63,"author":{"gitId":"raymondge"},"content":"     * Static method to get Duke Dialog with text and image with flipped position."},{"lineNumber":64,"author":{"gitId":"raymondge"},"content":"     */"},{"lineNumber":65,"author":{"gitId":"raymondge"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {"},{"lineNumber":66,"author":{"gitId":"raymondge"},"content":"        var db \u003d new DialogBox(text, img);"},{"lineNumber":67,"author":{"gitId":"raymondge"},"content":"        db.flip();"},{"lineNumber":68,"author":{"gitId":"raymondge"},"content":"        return db;"},{"lineNumber":69,"author":{"gitId":"raymondge"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"raymondge"},"content":"}"}],"authorContributionMap":{"raymondge":70}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":2,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":3,"author":{"gitId":"raymondge"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"raymondge"},"content":" * A chat bot reacting on tasks."},{"lineNumber":5,"author":{"gitId":"raymondge"},"content":" */"},{"lineNumber":6,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":8,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":9,"author":{"gitId":"raymondge"},"content":"    Storage storage \u003d new Storage();"},{"lineNumber":10,"author":{"gitId":"raymondge"},"content":"    TaskList tasks \u003d new TaskList();"},{"lineNumber":11,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":12,"author":{"gitId":"raymondge"},"content":"    String getResponse(String input) {"},{"lineNumber":13,"author":{"gitId":"raymondge"},"content":"        return \"Duke heard: \" + input;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"raymondge":13,"-":3}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"raymondge"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"raymondge"},"content":" * A type of Exception thrown by Duke."},{"lineNumber":3,"author":{"gitId":"raymondge"},"content":" */"},{"lineNumber":4,"author":{"gitId":"raymondge"},"content":"public class DukeException extends Exception {"},{"lineNumber":5,"author":{"gitId":"raymondge"},"content":"    public DukeException(String errorMessage) {"},{"lineNumber":6,"author":{"gitId":"raymondge"},"content":"        super(errorMessage);"},{"lineNumber":7,"author":{"gitId":"raymondge"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"raymondge"},"content":"}"}],"authorContributionMap":{"raymondge":8}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"raymondge"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"raymondge"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":3,"author":{"gitId":"raymondge"},"content":"import java.time.format.FormatStyle;"},{"lineNumber":4,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":5,"author":{"gitId":"raymondge"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"raymondge"},"content":" * A Event task that comprises a task description, date and whether it is done."},{"lineNumber":7,"author":{"gitId":"raymondge"},"content":" */"},{"lineNumber":8,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":9,"author":{"gitId":"raymondge"},"content":"public class Event extends Task {"},{"lineNumber":10,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":11,"author":{"gitId":"raymondge"},"content":"    protected LocalDate time;"},{"lineNumber":12,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":13,"author":{"gitId":"raymondge"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"raymondge"},"content":"     * Create a Event task."},{"lineNumber":15,"author":{"gitId":"raymondge"},"content":"     * @param description of task."},{"lineNumber":16,"author":{"gitId":"raymondge"},"content":"     * @param isDone done status of task."},{"lineNumber":17,"author":{"gitId":"raymondge"},"content":"     * @param time of task."},{"lineNumber":18,"author":{"gitId":"raymondge"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"raymondge"},"content":"    public Event(String description, boolean isDone, LocalDate time) {"},{"lineNumber":20,"author":{"gitId":"raymondge"},"content":"        super(description, isDone);"},{"lineNumber":21,"author":{"gitId":"raymondge"},"content":"        this.time \u003d time;"},{"lineNumber":22,"author":{"gitId":"raymondge"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":24,"author":{"gitId":"raymondge"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"raymondge"},"content":"     * Returns the Event date."},{"lineNumber":26,"author":{"gitId":"raymondge"},"content":"     * @return Event date."},{"lineNumber":27,"author":{"gitId":"raymondge"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"raymondge"},"content":"    public String getTime(){"},{"lineNumber":29,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":30,"author":{"gitId":"raymondge"},"content":"        return time.format(DateTimeFormatter.ofLocalizedDate(FormatStyle.MEDIUM));"},{"lineNumber":31,"author":{"gitId":"raymondge"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":33,"author":{"gitId":"raymondge"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"raymondge"},"content":"     * Returns the String description for an event."},{"lineNumber":35,"author":{"gitId":"raymondge"},"content":"     * @return String description."},{"lineNumber":36,"author":{"gitId":"raymondge"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"raymondge"},"content":"    @Override"},{"lineNumber":38,"author":{"gitId":"raymondge"},"content":"    public String toString() {"},{"lineNumber":39,"author":{"gitId":"raymondge"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + getTime() + \")\";"},{"lineNumber":40,"author":{"gitId":"raymondge"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"raymondge"},"content":"}"}],"authorContributionMap":{"raymondge":41}},{"path":"src/main/java/InvalidDeadlineException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"raymondge"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"raymondge"},"content":" * The program runs into a invalid Deadline exception."},{"lineNumber":3,"author":{"gitId":"raymondge"},"content":" */"},{"lineNumber":4,"author":{"gitId":"raymondge"},"content":"public class InvalidDeadlineException extends DukeException {"},{"lineNumber":5,"author":{"gitId":"raymondge"},"content":"    public InvalidDeadlineException() {"},{"lineNumber":6,"author":{"gitId":"raymondge"},"content":"        super(\" OOPS!!! The description of a Deadline cannot be empty.\");"},{"lineNumber":7,"author":{"gitId":"raymondge"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"raymondge"},"content":"}"}],"authorContributionMap":{"raymondge":8}},{"path":"src/main/java/InvalidEventException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"raymondge"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"raymondge"},"content":" * The program runs into a invalid Event exception."},{"lineNumber":3,"author":{"gitId":"raymondge"},"content":" */"},{"lineNumber":4,"author":{"gitId":"raymondge"},"content":"public class InvalidEventException extends DukeException {"},{"lineNumber":5,"author":{"gitId":"raymondge"},"content":"    public InvalidEventException() {"},{"lineNumber":6,"author":{"gitId":"raymondge"},"content":"        super(\" OOPS!!! The description of a Event cannot be empty.\");"},{"lineNumber":7,"author":{"gitId":"raymondge"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"raymondge"},"content":"}"}],"authorContributionMap":{"raymondge":8}},{"path":"src/main/java/InvalidFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"raymondge"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"raymondge"},"content":" * The program runs into a invalid Event exception."},{"lineNumber":3,"author":{"gitId":"raymondge"},"content":" */"},{"lineNumber":4,"author":{"gitId":"raymondge"},"content":"public class InvalidFormatException extends DukeException {"},{"lineNumber":5,"author":{"gitId":"raymondge"},"content":"    public InvalidFormatException() {"},{"lineNumber":6,"author":{"gitId":"raymondge"},"content":"        super(\" OOPS!!! You have entered a wrong format.\");"},{"lineNumber":7,"author":{"gitId":"raymondge"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"raymondge"},"content":"}"}],"authorContributionMap":{"raymondge":8}},{"path":"src/main/java/InvalidInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"raymondge"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"raymondge"},"content":" * The program runs into a invalid Input exception."},{"lineNumber":3,"author":{"gitId":"raymondge"},"content":" */"},{"lineNumber":4,"author":{"gitId":"raymondge"},"content":"public class InvalidInputException extends DukeException {"},{"lineNumber":5,"author":{"gitId":"raymondge"},"content":"    public InvalidInputException() {"},{"lineNumber":6,"author":{"gitId":"raymondge"},"content":"        super(\" OOPS!!! Sorry I do not understand this command!\");"},{"lineNumber":7,"author":{"gitId":"raymondge"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"raymondge"},"content":"}"}],"authorContributionMap":{"raymondge":8}},{"path":"src/main/java/InvalidTodoException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"raymondge"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"raymondge"},"content":" * The program runs into a invalid Todo input exception."},{"lineNumber":3,"author":{"gitId":"raymondge"},"content":" */"},{"lineNumber":4,"author":{"gitId":"raymondge"},"content":"public class InvalidTodoException extends DukeException {"},{"lineNumber":5,"author":{"gitId":"raymondge"},"content":"    public InvalidTodoException() {"},{"lineNumber":6,"author":{"gitId":"raymondge"},"content":"        super(\" OOPS!!! The description of a todo cannot be empty.\");"},{"lineNumber":7,"author":{"gitId":"raymondge"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"raymondge"},"content":"}"}],"authorContributionMap":{"raymondge":8}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":2,"author":{"gitId":"raymondge"},"content":"/**"},{"lineNumber":3,"author":{"gitId":"raymondge"},"content":" * A launcher class to workaround classpath issues."},{"lineNumber":4,"author":{"gitId":"raymondge"},"content":" */"},{"lineNumber":5,"author":{"gitId":"raymondge"},"content":"public class Launcher {"},{"lineNumber":6,"author":{"gitId":"raymondge"},"content":"    public static void main(String[] args) {"},{"lineNumber":7,"author":{"gitId":"raymondge"},"content":"        //Application.launch(Duke.class, args);"},{"lineNumber":8,"author":{"gitId":"raymondge"},"content":"        Main.main(args);"},{"lineNumber":9,"author":{"gitId":"raymondge"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"raymondge"},"content":"}"}],"authorContributionMap":{"raymondge":10}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"raymondge"},"content":"import javafx.application.Application;"},{"lineNumber":2,"author":{"gitId":"raymondge"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":3,"author":{"gitId":"raymondge"},"content":"import javafx.scene.Scene;"},{"lineNumber":4,"author":{"gitId":"raymondge"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":5,"author":{"gitId":"raymondge"},"content":"import javafx.stage.Stage;"},{"lineNumber":6,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":7,"author":{"gitId":"raymondge"},"content":"import java.io.IOException;"},{"lineNumber":8,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":9,"author":{"gitId":"raymondge"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"raymondge"},"content":" * A GUI for Duke using FXML."},{"lineNumber":11,"author":{"gitId":"raymondge"},"content":" */"},{"lineNumber":12,"author":{"gitId":"raymondge"},"content":"public class Main extends Application {"},{"lineNumber":13,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":14,"author":{"gitId":"raymondge"},"content":"    private Duke duke \u003d new Duke();"},{"lineNumber":15,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":16,"author":{"gitId":"raymondge"},"content":"    public static void main(String[] args) {"},{"lineNumber":17,"author":{"gitId":"raymondge"},"content":"        launch(args);"},{"lineNumber":18,"author":{"gitId":"raymondge"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":20,"author":{"gitId":"raymondge"},"content":"    @Override"},{"lineNumber":21,"author":{"gitId":"raymondge"},"content":"    public void start(Stage stage) {"},{"lineNumber":22,"author":{"gitId":"raymondge"},"content":"        try {"},{"lineNumber":23,"author":{"gitId":"raymondge"},"content":"            duke.storage.createDirectory(\"TaskList\");"},{"lineNumber":24,"author":{"gitId":"raymondge"},"content":"            duke.storage.updateList(duke.tasks);"},{"lineNumber":25,"author":{"gitId":"raymondge"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":26,"author":{"gitId":"raymondge"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":27,"author":{"gitId":"raymondge"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":28,"author":{"gitId":"raymondge"},"content":"            stage.setScene(scene);"},{"lineNumber":29,"author":{"gitId":"raymondge"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"},{"lineNumber":30,"author":{"gitId":"raymondge"},"content":"            stage.show();"},{"lineNumber":31,"author":{"gitId":"raymondge"},"content":"        } catch (IOException e) {"},{"lineNumber":32,"author":{"gitId":"raymondge"},"content":"            e.printStackTrace();"},{"lineNumber":33,"author":{"gitId":"raymondge"},"content":"        }"},{"lineNumber":34,"author":{"gitId":"raymondge"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"raymondge"},"content":"}"}],"authorContributionMap":{"raymondge":35}},{"path":"src/main/java/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"raymondge"},"content":"import javafx.fxml.FXML;"},{"lineNumber":2,"author":{"gitId":"raymondge"},"content":"import javafx.scene.control.Button;"},{"lineNumber":3,"author":{"gitId":"raymondge"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":4,"author":{"gitId":"raymondge"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":5,"author":{"gitId":"raymondge"},"content":"import javafx.scene.image.Image;"},{"lineNumber":6,"author":{"gitId":"raymondge"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":7,"author":{"gitId":"raymondge"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":8,"author":{"gitId":"raymondge"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"raymondge"},"content":" * Controller for MainWindow. Provides the layout for the other controls."},{"lineNumber":10,"author":{"gitId":"raymondge"},"content":" */"},{"lineNumber":11,"author":{"gitId":"raymondge"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":12,"author":{"gitId":"raymondge"},"content":"    @FXML"},{"lineNumber":13,"author":{"gitId":"raymondge"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":14,"author":{"gitId":"raymondge"},"content":"    @FXML"},{"lineNumber":15,"author":{"gitId":"raymondge"},"content":"    private VBox dialogContainer;"},{"lineNumber":16,"author":{"gitId":"raymondge"},"content":"    @FXML"},{"lineNumber":17,"author":{"gitId":"raymondge"},"content":"    private TextField userInput;"},{"lineNumber":18,"author":{"gitId":"raymondge"},"content":"    @FXML"},{"lineNumber":19,"author":{"gitId":"raymondge"},"content":"    private Button sendButton;"},{"lineNumber":20,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":21,"author":{"gitId":"raymondge"},"content":"    private Duke duke;"},{"lineNumber":22,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":23,"author":{"gitId":"raymondge"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"},{"lineNumber":24,"author":{"gitId":"raymondge"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"},{"lineNumber":25,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":26,"author":{"gitId":"raymondge"},"content":"    private Storage storage \u003d new Storage();"},{"lineNumber":27,"author":{"gitId":"raymondge"},"content":"    private Parser newParser \u003d new Parser();"},{"lineNumber":28,"author":{"gitId":"raymondge"},"content":"    private TaskList tasks \u003d new TaskList();"},{"lineNumber":29,"author":{"gitId":"raymondge"},"content":"    private UI ui \u003d new UI();"},{"lineNumber":30,"author":{"gitId":"raymondge"},"content":"    @FXML"},{"lineNumber":31,"author":{"gitId":"raymondge"},"content":"    public void initialize() {"},{"lineNumber":32,"author":{"gitId":"raymondge"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":33,"author":{"gitId":"raymondge"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":35,"author":{"gitId":"raymondge"},"content":"    public void setDuke(Duke d) {"},{"lineNumber":36,"author":{"gitId":"raymondge"},"content":"        duke \u003d d;"},{"lineNumber":37,"author":{"gitId":"raymondge"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":39,"author":{"gitId":"raymondge"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"raymondge"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"},{"lineNumber":41,"author":{"gitId":"raymondge"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":42,"author":{"gitId":"raymondge"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"raymondge"},"content":"    @FXML"},{"lineNumber":44,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":45,"author":{"gitId":"raymondge"},"content":"    private void handleUserInput() {"},{"lineNumber":46,"author":{"gitId":"raymondge"},"content":"        String userText \u003d userInput.getText();"},{"lineNumber":47,"author":{"gitId":"raymondge"},"content":"        String userInputText \u003d userInput.getText();"},{"lineNumber":48,"author":{"gitId":"raymondge"},"content":"        System.out.println(\"user input:\" + userInputText);"},{"lineNumber":49,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":50,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":51,"author":{"gitId":"raymondge"},"content":"        String response \u003d newParser.uiResponse(tasks, ui,userInputText);"},{"lineNumber":52,"author":{"gitId":"raymondge"},"content":"        System.out.println(\"response:\" + response);"},{"lineNumber":53,"author":{"gitId":"raymondge"},"content":"        String dukeText \u003d duke.getResponse(response);"},{"lineNumber":54,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":55,"author":{"gitId":"raymondge"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":56,"author":{"gitId":"raymondge"},"content":"                DialogBox.getUserDialog(userText, userImage),"},{"lineNumber":57,"author":{"gitId":"raymondge"},"content":"                DialogBox.getDukeDialog(dukeText, dukeImage)"},{"lineNumber":58,"author":{"gitId":"raymondge"},"content":"        );"},{"lineNumber":59,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":60,"author":{"gitId":"raymondge"},"content":"        storage.updateDirectory(tasks);"},{"lineNumber":61,"author":{"gitId":"raymondge"},"content":"        userInput.clear();"},{"lineNumber":62,"author":{"gitId":"raymondge"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"raymondge"},"content":"}"}],"authorContributionMap":{"raymondge":63}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"raymondge"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"raymondge"},"content":"/**"},{"lineNumber":3,"author":{"gitId":"raymondge"},"content":" * A Parser class that handles user input."},{"lineNumber":4,"author":{"gitId":"raymondge"},"content":" */"},{"lineNumber":5,"author":{"gitId":"raymondge"},"content":"public class Parser {"},{"lineNumber":6,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":7,"author":{"gitId":"raymondge"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"raymondge"},"content":"     * Returns the String message from ui."},{"lineNumber":9,"author":{"gitId":"raymondge"},"content":"     * @param tasks The task list."},{"lineNumber":10,"author":{"gitId":"raymondge"},"content":"     * @param ui The UI handler."},{"lineNumber":11,"author":{"gitId":"raymondge"},"content":"     * @param uiInput The user input message."},{"lineNumber":12,"author":{"gitId":"raymondge"},"content":"     * @return the String from ui."},{"lineNumber":13,"author":{"gitId":"raymondge"},"content":"     * @throws DukeException different by case."},{"lineNumber":14,"author":{"gitId":"raymondge"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"raymondge"},"content":"    public String uiResponse(TaskList tasks, UI ui,String uiInput) {"},{"lineNumber":16,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":17,"author":{"gitId":"raymondge"},"content":"        String response \u003d \"\";"},{"lineNumber":18,"author":{"gitId":"raymondge"},"content":"        String textMessage \u003d uiInput;"},{"lineNumber":19,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":20,"author":{"gitId":"raymondge"},"content":"        try {"},{"lineNumber":21,"author":{"gitId":"raymondge"},"content":"            String[] keyword \u003d textMessage.split(\" \");"},{"lineNumber":22,"author":{"gitId":"raymondge"},"content":"            switch (keyword[0]) {"},{"lineNumber":23,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":24,"author":{"gitId":"raymondge"},"content":"                case \"bye\": {"},{"lineNumber":25,"author":{"gitId":"raymondge"},"content":"                    response +\u003d \"Bye. Hope to see you again soon!\";"},{"lineNumber":26,"author":{"gitId":"raymondge"},"content":"                    break;"},{"lineNumber":27,"author":{"gitId":"raymondge"},"content":"                }"},{"lineNumber":28,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":29,"author":{"gitId":"raymondge"},"content":"                case \"find\": {"},{"lineNumber":30,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":31,"author":{"gitId":"raymondge"},"content":"                    response +\u003d tasks.findTask(keyword[1]);"},{"lineNumber":32,"author":{"gitId":"raymondge"},"content":"                    break;"},{"lineNumber":33,"author":{"gitId":"raymondge"},"content":"                }"},{"lineNumber":34,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":35,"author":{"gitId":"raymondge"},"content":"                case \"delete\": {"},{"lineNumber":36,"author":{"gitId":"raymondge"},"content":"                    int index \u003d Integer.parseInt(keyword[1]) - 1;"},{"lineNumber":37,"author":{"gitId":"raymondge"},"content":"                    response +\u003d tasks.deleteTask(index);"},{"lineNumber":38,"author":{"gitId":"raymondge"},"content":"                    break;"},{"lineNumber":39,"author":{"gitId":"raymondge"},"content":"                }"},{"lineNumber":40,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":41,"author":{"gitId":"raymondge"},"content":"                case \"todo\": {"},{"lineNumber":42,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":43,"author":{"gitId":"raymondge"},"content":"                    if (keyword.length \u003d\u003d 1) {"},{"lineNumber":44,"author":{"gitId":"raymondge"},"content":"                        throw new InvalidTodoException();"},{"lineNumber":45,"author":{"gitId":"raymondge"},"content":"                    }"},{"lineNumber":46,"author":{"gitId":"raymondge"},"content":"                    Todo newTodo \u003d new Todo(textMessage.substring(5), false);"},{"lineNumber":47,"author":{"gitId":"raymondge"},"content":"                    response +\u003d tasks.addTask(newTodo);"},{"lineNumber":48,"author":{"gitId":"raymondge"},"content":"                    break;"},{"lineNumber":49,"author":{"gitId":"raymondge"},"content":"                }"},{"lineNumber":50,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":51,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":52,"author":{"gitId":"raymondge"},"content":"                case \"deadline\": {"},{"lineNumber":53,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":54,"author":{"gitId":"raymondge"},"content":"                    if (keyword.length \u003d\u003d 1) {"},{"lineNumber":55,"author":{"gitId":"raymondge"},"content":"                        throw new InvalidDeadlineException();"},{"lineNumber":56,"author":{"gitId":"raymondge"},"content":"                    }"},{"lineNumber":57,"author":{"gitId":"raymondge"},"content":"                    try {"},{"lineNumber":58,"author":{"gitId":"raymondge"},"content":"                        String[] tempString \u003d textMessage.substring(9).split(\" /by \");"},{"lineNumber":59,"author":{"gitId":"raymondge"},"content":"                        Deadline newDeadline \u003d new Deadline(tempString[0], false, LocalDate.parse(tempString[1]));"},{"lineNumber":60,"author":{"gitId":"raymondge"},"content":"                        response +\u003d tasks.addTask(newDeadline);"},{"lineNumber":61,"author":{"gitId":"raymondge"},"content":"                    } catch (Exception e) {"},{"lineNumber":62,"author":{"gitId":"raymondge"},"content":"                        throw new InvalidFormatException();"},{"lineNumber":63,"author":{"gitId":"raymondge"},"content":"                    }"},{"lineNumber":64,"author":{"gitId":"raymondge"},"content":"                    break;"},{"lineNumber":65,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":66,"author":{"gitId":"raymondge"},"content":"                }"},{"lineNumber":67,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":68,"author":{"gitId":"raymondge"},"content":"                case \"event\": {"},{"lineNumber":69,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":70,"author":{"gitId":"raymondge"},"content":"                    if (keyword.length \u003d\u003d 1) {"},{"lineNumber":71,"author":{"gitId":"raymondge"},"content":"                        throw new InvalidEventException();"},{"lineNumber":72,"author":{"gitId":"raymondge"},"content":"                    }"},{"lineNumber":73,"author":{"gitId":"raymondge"},"content":"                    try {"},{"lineNumber":74,"author":{"gitId":"raymondge"},"content":"                        String[] tempString \u003d textMessage.substring(7).split(\" /at \");"},{"lineNumber":75,"author":{"gitId":"raymondge"},"content":"                        Event newEvent \u003d new Event(tempString[0], false, LocalDate.parse(tempString[1]));"},{"lineNumber":76,"author":{"gitId":"raymondge"},"content":"                        response +\u003d tasks.addTask(newEvent);"},{"lineNumber":77,"author":{"gitId":"raymondge"},"content":"                    } catch (Exception e) {"},{"lineNumber":78,"author":{"gitId":"raymondge"},"content":"                        throw new InvalidFormatException();"},{"lineNumber":79,"author":{"gitId":"raymondge"},"content":"                    }"},{"lineNumber":80,"author":{"gitId":"raymondge"},"content":"                    break;"},{"lineNumber":81,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":82,"author":{"gitId":"raymondge"},"content":"                }"},{"lineNumber":83,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":84,"author":{"gitId":"raymondge"},"content":"                case \"list\": {"},{"lineNumber":85,"author":{"gitId":"raymondge"},"content":"                    response +\u003d tasks.showList();"},{"lineNumber":86,"author":{"gitId":"raymondge"},"content":"                    break;"},{"lineNumber":87,"author":{"gitId":"raymondge"},"content":"                }"},{"lineNumber":88,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":89,"author":{"gitId":"raymondge"},"content":"                case \"stats\": {"},{"lineNumber":90,"author":{"gitId":"raymondge"},"content":"                    response +\u003d tasks.numberOfTaskCompleted();"},{"lineNumber":91,"author":{"gitId":"raymondge"},"content":"                    break;"},{"lineNumber":92,"author":{"gitId":"raymondge"},"content":"                }"},{"lineNumber":93,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":94,"author":{"gitId":"raymondge"},"content":"                case \"done\": {"},{"lineNumber":95,"author":{"gitId":"raymondge"},"content":"                    int index \u003d Integer.parseInt(keyword[1]) - 1;"},{"lineNumber":96,"author":{"gitId":"raymondge"},"content":"                    tasks.getTasks().get(index).markDone();"},{"lineNumber":97,"author":{"gitId":"raymondge"},"content":"                    response +\u003d \"Nice I\u0027ve marked this tasks as done\";"},{"lineNumber":98,"author":{"gitId":"raymondge"},"content":"                    response +\u003d tasks.getTasks().get(index);"},{"lineNumber":99,"author":{"gitId":"raymondge"},"content":"                    break;"},{"lineNumber":100,"author":{"gitId":"raymondge"},"content":"                }"},{"lineNumber":101,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":102,"author":{"gitId":"raymondge"},"content":"                case \"hi\": {"},{"lineNumber":103,"author":{"gitId":"raymondge"},"content":"                    response +\u003d ui.greeting();"},{"lineNumber":104,"author":{"gitId":"raymondge"},"content":"                    break;"},{"lineNumber":105,"author":{"gitId":"raymondge"},"content":"                }"},{"lineNumber":106,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":107,"author":{"gitId":"raymondge"},"content":"                default:"},{"lineNumber":108,"author":{"gitId":"raymondge"},"content":"                    response +\u003d ui.inputInstruction();"},{"lineNumber":109,"author":{"gitId":"raymondge"},"content":"                    throw new InvalidInputException();"},{"lineNumber":110,"author":{"gitId":"raymondge"},"content":"            }"},{"lineNumber":111,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":112,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":113,"author":{"gitId":"raymondge"},"content":"        } catch (DukeException e) {"},{"lineNumber":114,"author":{"gitId":"raymondge"},"content":"            response +\u003d e.getMessage();"},{"lineNumber":115,"author":{"gitId":"raymondge"},"content":"            ui.print(e.getMessage());"},{"lineNumber":116,"author":{"gitId":"raymondge"},"content":"        }"},{"lineNumber":117,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":118,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":119,"author":{"gitId":"raymondge"},"content":"        return response;"},{"lineNumber":120,"author":{"gitId":"raymondge"},"content":"    }"},{"lineNumber":121,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":122,"author":{"gitId":"raymondge"},"content":"}"}],"authorContributionMap":{"raymondge":122}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"raymondge"},"content":"import java.io.*;"},{"lineNumber":2,"author":{"gitId":"raymondge"},"content":"import java.nio.file.FileSystems;"},{"lineNumber":3,"author":{"gitId":"raymondge"},"content":"import java.nio.file.Files;"},{"lineNumber":4,"author":{"gitId":"raymondge"},"content":"import java.nio.file.Path;"},{"lineNumber":5,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":6,"author":{"gitId":"raymondge"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"raymondge"},"content":" * A Storage class that handles reading and writing files."},{"lineNumber":8,"author":{"gitId":"raymondge"},"content":" */"},{"lineNumber":9,"author":{"gitId":"raymondge"},"content":"public class Storage {"},{"lineNumber":10,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":11,"author":{"gitId":"raymondge"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"raymondge"},"content":"     * Create a directory for file storage."},{"lineNumber":13,"author":{"gitId":"raymondge"},"content":"     * @param dirName the directory name."},{"lineNumber":14,"author":{"gitId":"raymondge"},"content":"     * throw exception if directory exists."},{"lineNumber":15,"author":{"gitId":"raymondge"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"raymondge"},"content":"    public void createDirectory(String dirName) {"},{"lineNumber":17,"author":{"gitId":"raymondge"},"content":"        File file \u003d new File(dirName);"},{"lineNumber":18,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":19,"author":{"gitId":"raymondge"},"content":"        if (!file.exists()) {"},{"lineNumber":20,"author":{"gitId":"raymondge"},"content":"            try {"},{"lineNumber":21,"author":{"gitId":"raymondge"},"content":"                file.mkdir();"},{"lineNumber":22,"author":{"gitId":"raymondge"},"content":"            } catch (Exception e) {"},{"lineNumber":23,"author":{"gitId":"raymondge"},"content":"                e.printStackTrace();"},{"lineNumber":24,"author":{"gitId":"raymondge"},"content":"            }"},{"lineNumber":25,"author":{"gitId":"raymondge"},"content":"        }"},{"lineNumber":26,"author":{"gitId":"raymondge"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":28,"author":{"gitId":"raymondge"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"raymondge"},"content":"     * Update the directory for file storage."},{"lineNumber":30,"author":{"gitId":"raymondge"},"content":"     * @param tasks the list of task pending to be updated into directory."},{"lineNumber":31,"author":{"gitId":"raymondge"},"content":"     * throw IOException if directory has be deleted."},{"lineNumber":32,"author":{"gitId":"raymondge"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"raymondge"},"content":"    public void updateDirectory(TaskList tasks) {"},{"lineNumber":34,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":35,"author":{"gitId":"raymondge"},"content":"        File fileDir \u003d new File(\"TaskList\");"},{"lineNumber":36,"author":{"gitId":"raymondge"},"content":"        File[] fileList \u003d fileDir.listFiles();"},{"lineNumber":37,"author":{"gitId":"raymondge"},"content":"        for (File f : fileList) {"},{"lineNumber":38,"author":{"gitId":"raymondge"},"content":"            if (f.toString().startsWith(\"TaskList/Task\")) {"},{"lineNumber":39,"author":{"gitId":"raymondge"},"content":"                Path path \u003d FileSystems.getDefault().getPath(f.toString());"},{"lineNumber":40,"author":{"gitId":"raymondge"},"content":"                try {"},{"lineNumber":41,"author":{"gitId":"raymondge"},"content":"                    Files.delete(path);"},{"lineNumber":42,"author":{"gitId":"raymondge"},"content":"                } catch (IOException e) {"},{"lineNumber":43,"author":{"gitId":"raymondge"},"content":"                    e.printStackTrace();"},{"lineNumber":44,"author":{"gitId":"raymondge"},"content":"                }"},{"lineNumber":45,"author":{"gitId":"raymondge"},"content":"            }"},{"lineNumber":46,"author":{"gitId":"raymondge"},"content":"        }"},{"lineNumber":47,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":48,"author":{"gitId":"raymondge"},"content":"        for (int i \u003d 0; i \u003c tasks.getTasks().size(); i++) {"},{"lineNumber":49,"author":{"gitId":"raymondge"},"content":"            writeToFile(tasks.getTasks().get(i), i);"},{"lineNumber":50,"author":{"gitId":"raymondge"},"content":"        }"},{"lineNumber":51,"author":{"gitId":"raymondge"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":53,"author":{"gitId":"raymondge"},"content":"    /**"},{"lineNumber":54,"author":{"gitId":"raymondge"},"content":"     * Create a new file."},{"lineNumber":55,"author":{"gitId":"raymondge"},"content":"     * @param fileName the file name."},{"lineNumber":56,"author":{"gitId":"raymondge"},"content":"     * throw IOException if file name exists."},{"lineNumber":57,"author":{"gitId":"raymondge"},"content":"     */"},{"lineNumber":58,"author":{"gitId":"raymondge"},"content":"    public void createFile(String fileName) {"},{"lineNumber":59,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":60,"author":{"gitId":"raymondge"},"content":"        File file \u003d new File(fileName);"},{"lineNumber":61,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":62,"author":{"gitId":"raymondge"},"content":"        if (!file.exists()) {"},{"lineNumber":63,"author":{"gitId":"raymondge"},"content":"            try {"},{"lineNumber":64,"author":{"gitId":"raymondge"},"content":"                file.createNewFile();"},{"lineNumber":65,"author":{"gitId":"raymondge"},"content":"            } catch (IOException e) {"},{"lineNumber":66,"author":{"gitId":"raymondge"},"content":"                e.printStackTrace();"},{"lineNumber":67,"author":{"gitId":"raymondge"},"content":"            }"},{"lineNumber":68,"author":{"gitId":"raymondge"},"content":"        }"},{"lineNumber":69,"author":{"gitId":"raymondge"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":71,"author":{"gitId":"raymondge"},"content":"    /**"},{"lineNumber":72,"author":{"gitId":"raymondge"},"content":"     * Write to a file."},{"lineNumber":73,"author":{"gitId":"raymondge"},"content":"     * @param task the task pending to be writen."},{"lineNumber":74,"author":{"gitId":"raymondge"},"content":"     * @param index the index of the file."},{"lineNumber":75,"author":{"gitId":"raymondge"},"content":"     */"},{"lineNumber":76,"author":{"gitId":"raymondge"},"content":"    public void writeToFile(Task task, int index) {"},{"lineNumber":77,"author":{"gitId":"raymondge"},"content":"        createFile(\"TaskList/Task\" + index + \".txt\");"},{"lineNumber":78,"author":{"gitId":"raymondge"},"content":"        try {"},{"lineNumber":79,"author":{"gitId":"raymondge"},"content":"            ObjectOutputStream out \u003d new ObjectOutputStream(new FileOutputStream(\"TaskList/Task\" + index + \".txt\"));"},{"lineNumber":80,"author":{"gitId":"raymondge"},"content":"            out.writeObject(task);"},{"lineNumber":81,"author":{"gitId":"raymondge"},"content":"        } catch (IOException e) {"},{"lineNumber":82,"author":{"gitId":"raymondge"},"content":"            System.out.println(\"Writing to File\");"},{"lineNumber":83,"author":{"gitId":"raymondge"},"content":"        }"},{"lineNumber":84,"author":{"gitId":"raymondge"},"content":"    }"},{"lineNumber":85,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":86,"author":{"gitId":"raymondge"},"content":"    /**"},{"lineNumber":87,"author":{"gitId":"raymondge"},"content":"     * Read from a file."},{"lineNumber":88,"author":{"gitId":"raymondge"},"content":"     * @param fileDir the file directory."},{"lineNumber":89,"author":{"gitId":"raymondge"},"content":"     * return the task extracted from the file."},{"lineNumber":90,"author":{"gitId":"raymondge"},"content":"     * throw IOException if no such file exist."},{"lineNumber":91,"author":{"gitId":"raymondge"},"content":"     */"},{"lineNumber":92,"author":{"gitId":"raymondge"},"content":"    public Task readFromFile(String fileDir) {"},{"lineNumber":93,"author":{"gitId":"raymondge"},"content":"        Task task \u003d null;"},{"lineNumber":94,"author":{"gitId":"raymondge"},"content":"        try {"},{"lineNumber":95,"author":{"gitId":"raymondge"},"content":"            ObjectInputStream in \u003d new ObjectInputStream(new FileInputStream(fileDir));"},{"lineNumber":96,"author":{"gitId":"raymondge"},"content":"            task \u003d (Task) in.readObject();"},{"lineNumber":97,"author":{"gitId":"raymondge"},"content":"        } catch (IOException | ClassNotFoundException e) {"},{"lineNumber":98,"author":{"gitId":"raymondge"},"content":"            e.printStackTrace();"},{"lineNumber":99,"author":{"gitId":"raymondge"},"content":"        }"},{"lineNumber":100,"author":{"gitId":"raymondge"},"content":"        return task;"},{"lineNumber":101,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":102,"author":{"gitId":"raymondge"},"content":"    }"},{"lineNumber":103,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":104,"author":{"gitId":"raymondge"},"content":"    /**"},{"lineNumber":105,"author":{"gitId":"raymondge"},"content":"     * Update the task list from files."},{"lineNumber":106,"author":{"gitId":"raymondge"},"content":"     * @param tasks Task list."},{"lineNumber":107,"author":{"gitId":"raymondge"},"content":"     */"},{"lineNumber":108,"author":{"gitId":"raymondge"},"content":"    public void updateList(TaskList tasks) {"},{"lineNumber":109,"author":{"gitId":"raymondge"},"content":"        File fileDir \u003d new File(\"TaskList\");"},{"lineNumber":110,"author":{"gitId":"raymondge"},"content":"        File[] fileList \u003d fileDir.listFiles();"},{"lineNumber":111,"author":{"gitId":"raymondge"},"content":"        for (File f : fileList) {"},{"lineNumber":112,"author":{"gitId":"raymondge"},"content":"            if (f.toString().startsWith(\"TaskList/Task\")) {"},{"lineNumber":113,"author":{"gitId":"raymondge"},"content":"                tasks.getTasks().add(readFromFile(f.toString()));"},{"lineNumber":114,"author":{"gitId":"raymondge"},"content":"            }"},{"lineNumber":115,"author":{"gitId":"raymondge"},"content":"        }"},{"lineNumber":116,"author":{"gitId":"raymondge"},"content":"    }"},{"lineNumber":117,"author":{"gitId":"raymondge"},"content":"}"},{"lineNumber":118,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":119,"author":{"gitId":"raymondge"},"content":""}],"authorContributionMap":{"raymondge":119}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"raymondge"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"raymondge"},"content":" * A task that comprises a task description and whether it is done."},{"lineNumber":3,"author":{"gitId":"raymondge"},"content":" */"},{"lineNumber":4,"author":{"gitId":"raymondge"},"content":"public class Task {"},{"lineNumber":5,"author":{"gitId":"raymondge"},"content":"    /** The task\u0027s messages */"},{"lineNumber":6,"author":{"gitId":"raymondge"},"content":"    protected String description;"},{"lineNumber":7,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":8,"author":{"gitId":"raymondge"},"content":"    /** Whether the task is Done*/"},{"lineNumber":9,"author":{"gitId":"raymondge"},"content":"    protected boolean isDone;"},{"lineNumber":10,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":11,"author":{"gitId":"raymondge"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"raymondge"},"content":"     * Create a task."},{"lineNumber":13,"author":{"gitId":"raymondge"},"content":"     * @param description of task."},{"lineNumber":14,"author":{"gitId":"raymondge"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"raymondge"},"content":"    public Task(String description) {"},{"lineNumber":16,"author":{"gitId":"raymondge"},"content":"        this.description \u003d description;"},{"lineNumber":17,"author":{"gitId":"raymondge"},"content":"        this.isDone \u003d false;"},{"lineNumber":18,"author":{"gitId":"raymondge"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":20,"author":{"gitId":"raymondge"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"raymondge"},"content":"     * Create a task."},{"lineNumber":22,"author":{"gitId":"raymondge"},"content":"     * @param description of task."},{"lineNumber":23,"author":{"gitId":"raymondge"},"content":"     * @param isDone done status of task."},{"lineNumber":24,"author":{"gitId":"raymondge"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"raymondge"},"content":"    public Task(String description, boolean isDone) {"},{"lineNumber":26,"author":{"gitId":"raymondge"},"content":"        this.description \u003d description;"},{"lineNumber":27,"author":{"gitId":"raymondge"},"content":"        this.isDone \u003d isDone;"},{"lineNumber":28,"author":{"gitId":"raymondge"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":30,"author":{"gitId":"raymondge"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"raymondge"},"content":"     * Returns the status Icon."},{"lineNumber":32,"author":{"gitId":"raymondge"},"content":"     * @return tick if the task is done, and else a X."},{"lineNumber":33,"author":{"gitId":"raymondge"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"raymondge"},"content":"    public String getStatusIcon() {"},{"lineNumber":35,"author":{"gitId":"raymondge"},"content":"        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"},{"lineNumber":36,"author":{"gitId":"raymondge"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":38,"author":{"gitId":"raymondge"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"raymondge"},"content":"     * Returns the task message."},{"lineNumber":40,"author":{"gitId":"raymondge"},"content":"     * @return description."},{"lineNumber":41,"author":{"gitId":"raymondge"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"raymondge"},"content":"    public String getDescription(){"},{"lineNumber":43,"author":{"gitId":"raymondge"},"content":"        return this.description;"},{"lineNumber":44,"author":{"gitId":"raymondge"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":46,"author":{"gitId":"raymondge"},"content":"    /**"},{"lineNumber":47,"author":{"gitId":"raymondge"},"content":"     * Returns the done status of the task."},{"lineNumber":48,"author":{"gitId":"raymondge"},"content":"     * @return true if the task is done, else false."},{"lineNumber":49,"author":{"gitId":"raymondge"},"content":"     */"},{"lineNumber":50,"author":{"gitId":"raymondge"},"content":"    public boolean checkDone(){"},{"lineNumber":51,"author":{"gitId":"raymondge"},"content":"        return this.isDone;"},{"lineNumber":52,"author":{"gitId":"raymondge"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":54,"author":{"gitId":"raymondge"},"content":"    /**"},{"lineNumber":55,"author":{"gitId":"raymondge"},"content":"     * Make the task done."},{"lineNumber":56,"author":{"gitId":"raymondge"},"content":"     */"},{"lineNumber":57,"author":{"gitId":"raymondge"},"content":"    public void markDone(){"},{"lineNumber":58,"author":{"gitId":"raymondge"},"content":"        this.isDone \u003d true;"},{"lineNumber":59,"author":{"gitId":"raymondge"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":61,"author":{"gitId":"raymondge"},"content":"    /**"},{"lineNumber":62,"author":{"gitId":"raymondge"},"content":"     * Returns the String description for task."},{"lineNumber":63,"author":{"gitId":"raymondge"},"content":"     * @return String description."},{"lineNumber":64,"author":{"gitId":"raymondge"},"content":"     */"},{"lineNumber":65,"author":{"gitId":"raymondge"},"content":"    public String toString() {"},{"lineNumber":66,"author":{"gitId":"raymondge"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;"},{"lineNumber":67,"author":{"gitId":"raymondge"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"raymondge"},"content":"}"}],"authorContributionMap":{"raymondge":68}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"raymondge"},"content":"import java.util.ArrayList;"},{"lineNumber":2,"author":{"gitId":"raymondge"},"content":"/**"},{"lineNumber":3,"author":{"gitId":"raymondge"},"content":" * A tasklist that handles corresponding task-related jobs."},{"lineNumber":4,"author":{"gitId":"raymondge"},"content":" */"},{"lineNumber":5,"author":{"gitId":"raymondge"},"content":"public class TaskList {"},{"lineNumber":6,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":7,"author":{"gitId":"raymondge"},"content":"    private ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();"},{"lineNumber":8,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":9,"author":{"gitId":"raymondge"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"raymondge"},"content":"     * Returns the task with corresponding keyword."},{"lineNumber":11,"author":{"gitId":"raymondge"},"content":"     * @param keyword The keyword to find corresponding task."},{"lineNumber":12,"author":{"gitId":"raymondge"},"content":"     * @return the String description with corresponding keyword."},{"lineNumber":13,"author":{"gitId":"raymondge"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"raymondge"},"content":"    public String findTask(String keyword) {"},{"lineNumber":15,"author":{"gitId":"raymondge"},"content":"        ArrayList\u003cTask\u003e listOfFoundItems \u003d new ArrayList\u003cTask\u003e();"},{"lineNumber":16,"author":{"gitId":"raymondge"},"content":"        String output \u003d \"\";"},{"lineNumber":17,"author":{"gitId":"raymondge"},"content":"        for (Task s : tasks) {"},{"lineNumber":18,"author":{"gitId":"raymondge"},"content":"            String[] items \u003d s.description.split(\" \");"},{"lineNumber":19,"author":{"gitId":"raymondge"},"content":"            for (int i \u003d 0; i \u003c items.length; i++) {"},{"lineNumber":20,"author":{"gitId":"raymondge"},"content":"                if (keyword.equals(items[i])) {"},{"lineNumber":21,"author":{"gitId":"raymondge"},"content":"                    listOfFoundItems.add(s);"},{"lineNumber":22,"author":{"gitId":"raymondge"},"content":"                    break;"},{"lineNumber":23,"author":{"gitId":"raymondge"},"content":"                }"},{"lineNumber":24,"author":{"gitId":"raymondge"},"content":"            }"},{"lineNumber":25,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":26,"author":{"gitId":"raymondge"},"content":"        }"},{"lineNumber":27,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":28,"author":{"gitId":"raymondge"},"content":"        int iterator \u003d 1;"},{"lineNumber":29,"author":{"gitId":"raymondge"},"content":"        output +\u003d \"Here are the matching tasks in your list:\\n\";"},{"lineNumber":30,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":31,"author":{"gitId":"raymondge"},"content":"        assert listOfFoundItems.size()\u003e0;"},{"lineNumber":32,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":33,"author":{"gitId":"raymondge"},"content":"        for (Task s : listOfFoundItems) {"},{"lineNumber":34,"author":{"gitId":"raymondge"},"content":"            output +\u003d iterator + \".\" + s.toString();"},{"lineNumber":35,"author":{"gitId":"raymondge"},"content":"            iterator++;"},{"lineNumber":36,"author":{"gitId":"raymondge"},"content":"        }"},{"lineNumber":37,"author":{"gitId":"raymondge"},"content":"        return output;"},{"lineNumber":38,"author":{"gitId":"raymondge"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":40,"author":{"gitId":"raymondge"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"raymondge"},"content":"     * Returns the String with added task."},{"lineNumber":42,"author":{"gitId":"raymondge"},"content":"     * @param myTask The task being added."},{"lineNumber":43,"author":{"gitId":"raymondge"},"content":"     * @return the String for task added."},{"lineNumber":44,"author":{"gitId":"raymondge"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"raymondge"},"content":"    public String addTask(Task myTask) {"},{"lineNumber":46,"author":{"gitId":"raymondge"},"content":"        this.tasks.add(myTask);"},{"lineNumber":47,"author":{"gitId":"raymondge"},"content":"        return \"added: \" + myTask;"},{"lineNumber":48,"author":{"gitId":"raymondge"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":50,"author":{"gitId":"raymondge"},"content":"    /**"},{"lineNumber":51,"author":{"gitId":"raymondge"},"content":"     * Returns the String with deleted task."},{"lineNumber":52,"author":{"gitId":"raymondge"},"content":"     * @param index The task index."},{"lineNumber":53,"author":{"gitId":"raymondge"},"content":"     * @return the String for task deleted."},{"lineNumber":54,"author":{"gitId":"raymondge"},"content":"     */"},{"lineNumber":55,"author":{"gitId":"raymondge"},"content":"    public String deleteTask(int index) {"},{"lineNumber":56,"author":{"gitId":"raymondge"},"content":"        assert this.tasks.size() \u003e index;"},{"lineNumber":57,"author":{"gitId":"raymondge"},"content":"        Task myTask \u003d this.tasks.get(index);"},{"lineNumber":58,"author":{"gitId":"raymondge"},"content":"        this.tasks.remove(index);"},{"lineNumber":59,"author":{"gitId":"raymondge"},"content":"        return \"removed: \" + myTask;"},{"lineNumber":60,"author":{"gitId":"raymondge"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":62,"author":{"gitId":"raymondge"},"content":"    /**"},{"lineNumber":63,"author":{"gitId":"raymondge"},"content":"     * Returns the list of tasks in TaskList."},{"lineNumber":64,"author":{"gitId":"raymondge"},"content":"     * @return a list of tasks."},{"lineNumber":65,"author":{"gitId":"raymondge"},"content":"     */"},{"lineNumber":66,"author":{"gitId":"raymondge"},"content":"    public ArrayList\u003cTask\u003e getTasks() {"},{"lineNumber":67,"author":{"gitId":"raymondge"},"content":"        return this.tasks;"},{"lineNumber":68,"author":{"gitId":"raymondge"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":70,"author":{"gitId":"raymondge"},"content":"    /**"},{"lineNumber":71,"author":{"gitId":"raymondge"},"content":"     * Returns a String showing tasks in the tasklist."},{"lineNumber":72,"author":{"gitId":"raymondge"},"content":"     * @return a String description for a list of tasks."},{"lineNumber":73,"author":{"gitId":"raymondge"},"content":"     */"},{"lineNumber":74,"author":{"gitId":"raymondge"},"content":"    public String showList() {"},{"lineNumber":75,"author":{"gitId":"raymondge"},"content":"        int iterator \u003d 1;"},{"lineNumber":76,"author":{"gitId":"raymondge"},"content":"        String output \u003d \"Here are the tasks in your list:\\n\";"},{"lineNumber":77,"author":{"gitId":"raymondge"},"content":"        for (Task s : tasks) {"},{"lineNumber":78,"author":{"gitId":"raymondge"},"content":"            output +\u003d iterator + \".\" + s.toString() + \"\\n\";"},{"lineNumber":79,"author":{"gitId":"raymondge"},"content":"            iterator++;"},{"lineNumber":80,"author":{"gitId":"raymondge"},"content":"        }"},{"lineNumber":81,"author":{"gitId":"raymondge"},"content":"        return output;"},{"lineNumber":82,"author":{"gitId":"raymondge"},"content":"    }"},{"lineNumber":83,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":84,"author":{"gitId":"raymondge"},"content":"    /**"},{"lineNumber":85,"author":{"gitId":"raymondge"},"content":"     * Returns the number of task completed."},{"lineNumber":86,"author":{"gitId":"raymondge"},"content":"     * @return an integer of number of task completed."},{"lineNumber":87,"author":{"gitId":"raymondge"},"content":"     */"},{"lineNumber":88,"author":{"gitId":"raymondge"},"content":"    public String numberOfTaskCompleted() {"},{"lineNumber":89,"author":{"gitId":"raymondge"},"content":"        int number \u003d 0;"},{"lineNumber":90,"author":{"gitId":"raymondge"},"content":"        String output \u003d \"Number of task completed: \";"},{"lineNumber":91,"author":{"gitId":"raymondge"},"content":"        for (Task s : tasks) {"},{"lineNumber":92,"author":{"gitId":"raymondge"},"content":"            if (s.checkDone()){"},{"lineNumber":93,"author":{"gitId":"raymondge"},"content":"                number ++;"},{"lineNumber":94,"author":{"gitId":"raymondge"},"content":"            }"},{"lineNumber":95,"author":{"gitId":"raymondge"},"content":"        }"},{"lineNumber":96,"author":{"gitId":"raymondge"},"content":"        output +\u003d number;"},{"lineNumber":97,"author":{"gitId":"raymondge"},"content":"        return output;"},{"lineNumber":98,"author":{"gitId":"raymondge"},"content":"    }"},{"lineNumber":99,"author":{"gitId":"raymondge"},"content":"}"}],"authorContributionMap":{"raymondge":99}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"raymondge"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"raymondge"},"content":" * A Todo task that comprises a task description and whether it is done."},{"lineNumber":3,"author":{"gitId":"raymondge"},"content":" */"},{"lineNumber":4,"author":{"gitId":"raymondge"},"content":"public class Todo extends Task {"},{"lineNumber":5,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":6,"author":{"gitId":"raymondge"},"content":"    /**"},{"lineNumber":7,"author":{"gitId":"raymondge"},"content":"     * Create a Todo task."},{"lineNumber":8,"author":{"gitId":"raymondge"},"content":"     * @param description of task."},{"lineNumber":9,"author":{"gitId":"raymondge"},"content":"     * @param isDone done status of task."},{"lineNumber":10,"author":{"gitId":"raymondge"},"content":"     */"},{"lineNumber":11,"author":{"gitId":"raymondge"},"content":"    public Todo(String description, boolean isDone) {"},{"lineNumber":12,"author":{"gitId":"raymondge"},"content":"        super(description, isDone);"},{"lineNumber":13,"author":{"gitId":"raymondge"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":15,"author":{"gitId":"raymondge"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"raymondge"},"content":"     * Returns the String description for Todo task."},{"lineNumber":17,"author":{"gitId":"raymondge"},"content":"     * @return String description."},{"lineNumber":18,"author":{"gitId":"raymondge"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"raymondge"},"content":"    @Override"},{"lineNumber":20,"author":{"gitId":"raymondge"},"content":"    public String toString() {"},{"lineNumber":21,"author":{"gitId":"raymondge"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":22,"author":{"gitId":"raymondge"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"raymondge"},"content":"}"}],"authorContributionMap":{"raymondge":23}},{"path":"src/main/java/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":2,"author":{"gitId":"raymondge"},"content":"/**"},{"lineNumber":3,"author":{"gitId":"raymondge"},"content":" * manages user interfacce interactions"},{"lineNumber":4,"author":{"gitId":"raymondge"},"content":" */"},{"lineNumber":5,"author":{"gitId":"raymondge"},"content":"public class UI {"},{"lineNumber":6,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":7,"author":{"gitId":"raymondge"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"raymondge"},"content":"     * Returns the String description."},{"lineNumber":9,"author":{"gitId":"raymondge"},"content":"     * @return String description."},{"lineNumber":10,"author":{"gitId":"raymondge"},"content":"     */"},{"lineNumber":11,"author":{"gitId":"raymondge"},"content":"    public void print(String s) {"},{"lineNumber":12,"author":{"gitId":"raymondge"},"content":"        System.out.println(s);"},{"lineNumber":13,"author":{"gitId":"raymondge"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":15,"author":{"gitId":"raymondge"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"raymondge"},"content":"     * Returns the String description for greeting."},{"lineNumber":17,"author":{"gitId":"raymondge"},"content":"     * @return String greeting."},{"lineNumber":18,"author":{"gitId":"raymondge"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"raymondge"},"content":"    public String greeting() {"},{"lineNumber":20,"author":{"gitId":"raymondge"},"content":"        return \"Welcome to use dukebot!\\n\";"},{"lineNumber":21,"author":{"gitId":"raymondge"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":23,"author":{"gitId":"raymondge"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"raymondge"},"content":"     * Returns the input instruction."},{"lineNumber":25,"author":{"gitId":"raymondge"},"content":"     * @return String describing possible instructions."},{"lineNumber":26,"author":{"gitId":"raymondge"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"raymondge"},"content":"    public String inputInstruction() {"},{"lineNumber":28,"author":{"gitId":"raymondge"},"content":"        return \"Please enter your instructions as follows: \\n\""},{"lineNumber":29,"author":{"gitId":"raymondge"},"content":"                + \"enter find/delete/todo/deadline/event/list/stats/done\\n\";"},{"lineNumber":30,"author":{"gitId":"raymondge"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"raymondge"},"content":"}"}],"authorContributionMap":{"raymondge":31}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"raymondge"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":3,"author":{"gitId":"raymondge"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"raymondge"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"raymondge"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":6,"author":{"gitId":"raymondge"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":7,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":8,"author":{"gitId":"raymondge"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":9,"author":{"gitId":"raymondge"},"content":"    \u003cchildren\u003e"},{"lineNumber":10,"author":{"gitId":"raymondge"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"},{"lineNumber":11,"author":{"gitId":"raymondge"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"},{"lineNumber":12,"author":{"gitId":"raymondge"},"content":"    \u003c/children\u003e"},{"lineNumber":13,"author":{"gitId":"raymondge"},"content":"    \u003cpadding\u003e"},{"lineNumber":14,"author":{"gitId":"raymondge"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":15,"author":{"gitId":"raymondge"},"content":"    \u003c/padding\u003e"},{"lineNumber":16,"author":{"gitId":"raymondge"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"raymondge":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"raymondge"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":3,"author":{"gitId":"raymondge"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":4,"author":{"gitId":"raymondge"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":5,"author":{"gitId":"raymondge"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":6,"author":{"gitId":"raymondge"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":7,"author":{"gitId":"raymondge"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":8,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":9,"author":{"gitId":"raymondge"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"},{"lineNumber":10,"author":{"gitId":"raymondge"},"content":"    \u003cchildren\u003e"},{"lineNumber":11,"author":{"gitId":"raymondge"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"},{"lineNumber":12,"author":{"gitId":"raymondge"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"},{"lineNumber":13,"author":{"gitId":"raymondge"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"},{"lineNumber":14,"author":{"gitId":"raymondge"},"content":"            \u003ccontent\u003e"},{"lineNumber":15,"author":{"gitId":"raymondge"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"},{"lineNumber":16,"author":{"gitId":"raymondge"},"content":"            \u003c/content\u003e"},{"lineNumber":17,"author":{"gitId":"raymondge"},"content":"        \u003c/ScrollPane\u003e"},{"lineNumber":18,"author":{"gitId":"raymondge"},"content":"    \u003c/children\u003e"},{"lineNumber":19,"author":{"gitId":"raymondge"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"raymondge":19}},{"path":"src/test/java/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"raymondge"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":2,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":3,"author":{"gitId":"raymondge"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":5,"author":{"gitId":"raymondge"},"content":"public class DukeTest {"},{"lineNumber":6,"author":{"gitId":"raymondge"},"content":"    @Test"},{"lineNumber":7,"author":{"gitId":"raymondge"},"content":"    public void dummyTest(){"},{"lineNumber":8,"author":{"gitId":"raymondge"},"content":"        assertEquals(2, 2);"},{"lineNumber":9,"author":{"gitId":"raymondge"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"raymondge"},"content":"}"}],"authorContributionMap":{"raymondge":10}},{"path":"src/test/java/UITest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"raymondge"},"content":"import org.junit.Test;"},{"lineNumber":2,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":3,"author":{"gitId":"raymondge"},"content":""},{"lineNumber":4,"author":{"gitId":"raymondge"},"content":"public class UITest {"},{"lineNumber":5,"author":{"gitId":"raymondge"},"content":"    @Test"},{"lineNumber":6,"author":{"gitId":"raymondge"},"content":"    public void MessagePrintTest(){"},{"lineNumber":7,"author":{"gitId":"raymondge"},"content":"            String testString \u003d \"☹ OOPS!!! The description of a Deadline cannot be empty.\";"},{"lineNumber":8,"author":{"gitId":"raymondge"},"content":"            UI ui \u003d new UI();"},{"lineNumber":9,"author":{"gitId":"raymondge"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"raymondge"},"content":"}"}],"authorContributionMap":{"raymondge":10}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"raymondge"},"content":"todo read book"},{"lineNumber":2,"author":{"gitId":"raymondge"},"content":"todo return book"},{"lineNumber":3,"author":{"gitId":"raymondge"},"content":"deadline return book /by Sunday"},{"lineNumber":4,"author":{"gitId":"raymondge"},"content":"event project meeting /at Mon 2-4pm"},{"lineNumber":5,"author":{"gitId":"raymondge"},"content":"list"},{"lineNumber":6,"author":{"gitId":"raymondge"},"content":"delete 3"}],"authorContributionMap":{"raymondge":6}}]
