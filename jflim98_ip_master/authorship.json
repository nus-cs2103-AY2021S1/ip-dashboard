[
  {
    "path": "src/main/java/Duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jflim98"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jflim98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jflim98"
        },
        "content": "import duke.exception.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jflim98"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jflim98"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jflim98"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jflim98"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jflim98"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        this.storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jflim98"
        },
        "content": "            this.tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jflim98"
        },
        "content": "            this.ui.sendFailedInitialiseMessage();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jflim98"
        },
        "content": "            this.tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jflim98"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        this.ui.sendInitialiseMessage();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        this.ui.sendBar();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        this.ui.greet();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        this.ui.sendBar();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        String userInput \u003d this.ui.getUserInput();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        while (!userInput.equals(\"bye\")) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jflim98"
        },
        "content": "            this.ui.sendBar();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jflim98"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                if("
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                Parser.parseAndExecute(userInput, this.tasks, this.ui)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                ) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                    this.storage.save(tasks);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jflim98"
        },
        "content": "            } catch (MissingDoneArgumentException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                this.ui.sendExceptionMessage(e);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jflim98"
        },
        "content": "            } catch (DoneOutOfRangeException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                this.ui.sendExceptionMessage(e);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jflim98"
        },
        "content": "            } catch (MissingDeleteArgumentException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                this.ui.sendExceptionMessage(e);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jflim98"
        },
        "content": "            } catch (DeleteOutOfRangeException e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                this.ui.sendExceptionMessage(e);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jflim98"
        },
        "content": "            } catch (EmptyTodoException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                this.ui.sendExceptionMessage(e);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jflim98"
        },
        "content": "            } catch (MissingDeadlineDateException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                this.ui.sendExceptionMessage(e);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jflim98"
        },
        "content": "            } catch (EmptyDeadlineException e) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                this.ui.sendExceptionMessage(e);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jflim98"
        },
        "content": "            } catch (MissingEventDateException e) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                this.ui.sendExceptionMessage(e);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jflim98"
        },
        "content": "            } catch (EmptyEventException e) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                this.ui.sendExceptionMessage(e);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jflim98"
        },
        "content": "            } catch (UnknownCommandException e) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                this.ui.sendExceptionMessage(e);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jflim98"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                this.ui.sendExceptionMessage(e);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jflim98"
        },
        "content": "            } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                this.ui.sendExceptionMessage(\"\\uD83D\\uDE41 OOPS! Date should be in the format: YYYY-MM-DD\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jflim98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jflim98"
        },
        "content": "            this.ui.sendBar();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jflim98"
        },
        "content": "            userInput \u003d this.ui.getUserInput();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        this.ui.sendBar();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        this.ui.bidFarewell();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        this.ui.sendBar();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jflim98"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        new Duke(System.getProperty(\"user.dir\") + \"/data/Duke.txt\").run();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jflim98": 71,
      "-": 3
    }
  },
  {
    "path": "src/main/java/Duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jflim98"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jflim98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jflim98"
        },
        "content": "import duke.exception.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jflim98"
        },
        "content": "import duke.task.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jflim98"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jflim98"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jflim98"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    public static boolean parseAndExecute(String input, TaskList tasks, Ui ui) throws MissingDoneArgumentException, DoneOutOfRangeException,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jflim98"
        },
        "content": "            MissingDeleteArgumentException, DeleteOutOfRangeException, EmptyTodoException, MissingDeadlineDateException,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jflim98"
        },
        "content": "            EmptyDeadlineException, MissingEventDateException, EmptyEventException, UnknownCommandException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        //DONE PORTION HERE----------------------------------------------------------"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        if (input.length() \u003e\u003d 4 \u0026\u0026 input.substring(0, 4).equals(\"done\")) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jflim98"
        },
        "content": "            if (input.length() \u003c\u003d 5) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                throw new MissingDoneArgumentException();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jflim98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jflim98"
        },
        "content": "            int index \u003d Integer.parseInt(input.substring(5)) - 1;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jflim98"
        },
        "content": "            if (index \u003e\u003d tasks.getCount() || index \u003c 0) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                throw new DoneOutOfRangeException();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jflim98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jflim98"
        },
        "content": "            ui.sendMarkedAsDoneMessage("
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                    tasks.markTaskAsDone(index) //checkthis"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jflim98"
        },
        "content": "            );"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jflim98"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jflim98"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jflim98"
        },
        "content": "            //DELETE PORTION HERE---------------------------------------------------------"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        } else if (input.length() \u003e\u003d 6 \u0026\u0026 input.substring(0, 6).equals(\"delete\")) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jflim98"
        },
        "content": "            if (input.length() \u003c\u003d 7) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                throw new MissingDeleteArgumentException();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jflim98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jflim98"
        },
        "content": "            int index \u003d Integer.parseInt(input.substring(7)) - 1;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jflim98"
        },
        "content": "            if (index \u003e\u003d tasks.getCount() || index \u003c 0) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                throw new DeleteOutOfRangeException();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jflim98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jflim98"
        },
        "content": "            ui.sendDeleteTaskMessage("
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                    tasks.deleteTask(index) //checkthis"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jflim98"
        },
        "content": "            );"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jflim98"
        },
        "content": "            ui.sendCount(tasks);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jflim98"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jflim98"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jflim98"
        },
        "content": "            //TOD0 PORTION HERE-----------------------------------------------------------"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        } else if (input.length() \u003e\u003d 4 \u0026\u0026 input.substring(0, 4).equals(\"todo\")) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jflim98"
        },
        "content": "            if (input.length() \u003d\u003d 4) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                throw new EmptyTodoException();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jflim98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jflim98"
        },
        "content": "            String description \u003d input.substring(5);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jflim98"
        },
        "content": "            if (description.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                throw new EmptyTodoException();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jflim98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jflim98"
        },
        "content": "            ToDo taskToAdd \u003d new ToDo(description);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jflim98"
        },
        "content": "            ui.sendAddTaskMessage("
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                    tasks.addTask(taskToAdd)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jflim98"
        },
        "content": "            );"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jflim98"
        },
        "content": "            ui.sendCount(tasks);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jflim98"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jflim98"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jflim98"
        },
        "content": "            //DEADLINE PORTION HERE--------------------------------------------------------"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        } else if (input.length() \u003e\u003d 8 \u0026\u0026 input.substring(0, 8).equals(\"deadline\")) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jflim98"
        },
        "content": "            int index \u003d input.indexOf(\"/\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jflim98"
        },
        "content": "            if (index \u003d\u003d -1) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                throw new MissingDeadlineDateException();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jflim98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jflim98"
        },
        "content": "            if (input.length() \u003d\u003d 8) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                throw new EmptyDeadlineException();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jflim98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jflim98"
        },
        "content": "            String description \u003d input.substring(9,index-1);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jflim98"
        },
        "content": "            if (description.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                throw new EmptyDeadlineException();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jflim98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jflim98"
        },
        "content": "            String date \u003d input.substring(index+4);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jflim98"
        },
        "content": "            if (date.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                throw new MissingDeadlineDateException();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jflim98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jflim98"
        },
        "content": "            Deadline taskToAdd \u003d new Deadline(description, date);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jflim98"
        },
        "content": "            ui.sendAddTaskMessage("
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                    tasks.addTask(taskToAdd)"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jflim98"
        },
        "content": "            );"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jflim98"
        },
        "content": "            ui.sendCount(tasks);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jflim98"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jflim98"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jflim98"
        },
        "content": "            //EVENT PORTION HERE-----------------------------------------------------------"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        } else if (input.length() \u003e\u003d 5 \u0026\u0026 input.substring(0, 5).equals(\"event\")) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jflim98"
        },
        "content": "            int index \u003d input.indexOf(\"/\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jflim98"
        },
        "content": "            if (index \u003d\u003d -1) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                throw new MissingEventDateException();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jflim98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jflim98"
        },
        "content": "            if (input.length() \u003d\u003d 5) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                throw new EmptyEventException();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jflim98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jflim98"
        },
        "content": "            String description \u003d input.substring(6,index-1);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jflim98"
        },
        "content": "            if (description.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                throw new EmptyEventException();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jflim98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jflim98"
        },
        "content": "            String date \u003d input.substring(index+4);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jflim98"
        },
        "content": "            if (date.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                throw new MissingEventDateException();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jflim98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jflim98"
        },
        "content": "            Event taskToAdd \u003d new Event(description, date);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jflim98"
        },
        "content": "            ui.sendAddTaskMessage("
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                    tasks.addTask(taskToAdd)"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jflim98"
        },
        "content": "            );"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jflim98"
        },
        "content": "            ui.sendCount(tasks);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jflim98"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jflim98"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jflim98"
        },
        "content": "            //LIST PORTION HERE------------------------------------------------------------"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        } else if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jflim98"
        },
        "content": "            ui.listTasks(tasks);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jflim98"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jflim98"
        },
        "content": "            throw new UnknownCommandException();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jflim98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jflim98": 112
    }
  },
  {
    "path": "src/main/java/Duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jflim98"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jflim98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jflim98"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jflim98"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jflim98"
        },
        "content": "import java.util.stream.Stream;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jflim98"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jflim98"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jflim98"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    File outputFile;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    File dir;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jflim98"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    public Storage(String filepath) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        this.outputFile \u003d new File(filepath);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        this.dir \u003d this.outputFile.getParentFile();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jflim98"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    public Optional\u003cStream\u003cString\u003e\u003e load() throws FileNotFoundException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        if (outputFile.exists()) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jflim98"
        },
        "content": "            BufferedReader reader \u003d new BufferedReader(new FileReader(outputFile));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jflim98"
        },
        "content": "            return Optional.of(reader.lines());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        return Optional.empty();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    public void save(TaskList taskList) throws IOException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jflim98"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        if (!this.dir.exists()) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jflim98"
        },
        "content": "            dir.mkdirs();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        outputFile.createNewFile();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jflim98"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        FileWriter writer \u003d new FileWriter(outputFile);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        writer.write(taskList.fileText());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        writer.close();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jflim98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jflim98": 35
    }
  },
  {
    "path": "src/main/java/Duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jflim98"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jflim98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jflim98"
        },
        "content": "import duke.task.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jflim98"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jflim98"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jflim98"
        },
        "content": "import java.util.stream.Stream;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jflim98"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jflim98"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jflim98"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    public ArrayList\u003cTask\u003e list;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    public int count;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jflim98"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        this.list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        this.count \u003d 0;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    public TaskList(Optional\u003cStream\u003cString\u003e\u003e content) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        this.list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        this.count \u003d 0;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        if (content.isEmpty()) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jflim98"
        },
        "content": "            //do nothing"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jflim98"
        },
        "content": "            content.get().forEach((line) -\u003e {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                System.out.println(\"the thingy\" + line);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                char startChar \u003d line.charAt(0);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                boolean isDone \u003d line.charAt(4) \u003d\u003d \u00271\u0027;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                switch (startChar) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                    case \u0027T\u0027: {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                        String description \u003d line.substring(8);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                        ToDo taskToAdd \u003d new ToDo(description, isDone);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                        this.list.add(taskToAdd);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                        this.count++;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                    case \u0027D\u0027: {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                        String descriptionAndDeadline \u003d line.substring(8);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                        int stringBreak \u003d descriptionAndDeadline.indexOf(\u0027|\u0027);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                        String deadline \u003d descriptionAndDeadline.substring(stringBreak + 2);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                        String description \u003d descriptionAndDeadline.substring(0, stringBreak - 1);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                        Deadline taskToAdd \u003d new Deadline(description, deadline, isDone);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                        this.list.add(taskToAdd);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                        this.count++;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                    case \u0027E\u0027: {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                        String descriptionAndDate \u003d line.substring(8);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                        int stringBreak \u003d descriptionAndDate.indexOf(\u0027|\u0027);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                        String date \u003d descriptionAndDate.substring(stringBreak + 2);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                        String description \u003d descriptionAndDate.substring(0, stringBreak - 1);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                        Event taskToAdd \u003d new Event(description, date, isDone);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                        this.list.add(taskToAdd);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                        this.count++;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jflim98"
        },
        "content": "            });"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jflim98"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jflim98"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    public String addTask(Task task) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        this.list.add(task);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        this.count++;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        return task.toString();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    public String markTaskAsDone(int index) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        this.list.get(index).markAsDone();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        return this.list.get(index).toString();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    public String deleteTask(int index) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        String representation \u003d this.list.get(index).toString();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        this.list.remove(index);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        this.count--;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        return representation;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    public int getCount() {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        return this.count;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jflim98"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        String representation \u003d \"\";"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        if (this.count \u003e 0) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jflim98"
        },
        "content": "            for (int i \u003d 0; i \u003c this.count - 1; i++) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                representation +\u003d (i + 1 + \". \" + list.get(i) + \"\\n\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jflim98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jflim98"
        },
        "content": "            representation +\u003d this.count + \". \" + list.get(this.count - 1);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        return representation;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    public String fileText() {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        String representation \u003d \"\";"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        if (this.count \u003e 0) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jflim98"
        },
        "content": "            for (int i \u003d 0; i \u003c this.count - 1; i++) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                representation +\u003d (list.get(i).fileText() + \"\\n\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jflim98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jflim98"
        },
        "content": "            representation +\u003d list.get(this.count - 1).fileText();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        return representation;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jflim98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jflim98": 101
    }
  },
  {
    "path": "src/main/java/Duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jflim98"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jflim98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jflim98"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jflim98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jflim98"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jflim98"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    private Scanner sc;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    private final String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jflim98"
        },
        "content": "            + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jflim98"
        },
        "content": "            + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jflim98"
        },
        "content": "            + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jflim98"
        },
        "content": "            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    private final String bar \u003d \"____________________________________________________________\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    private final String greeting \u003d \"Hello! I\u0027m Duke\\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jflim98"
        },
        "content": "            + \"What can I do for you?\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    private final String goodbye \u003d \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    private final String done \u003d \"Nice! I\u0027ve marked this task as done:\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    private final String add \u003d \"Got it. I\u0027ve added this task:\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    private final String delete \u003d \"Noted. I\u0027ve removed this task:\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    private final String failedInitialise \u003d \"Failed to read existing TODO list. Duke will initialise blankly.\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jflim98"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        this.sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jflim98"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    public String getUserInput() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        String input \u003d this.sc.nextLine();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jflim98"
        },
        "content": "            this.sc.close();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        return input;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    public void sendInitialiseMessage() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        System.out.println(\"Hello from\\n\" + this.logo);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    public void greet() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        System.out.println(greeting);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    public void sendBar() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        System.out.println(bar);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    public void bidFarewell() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        System.out.println(goodbye);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    public void sendAddTaskMessage(String taskString) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        System.out.println(add);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        System.out.println(\"  \" + taskString);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    public void sendMarkedAsDoneMessage(String taskString) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        System.out.println(done);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        System.out.println(\"  \" + taskString);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    public void sendDeleteTaskMessage(String taskString) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        System.out.println(delete);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        System.out.println(\"  \" + taskString);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    public void sendFailedInitialiseMessage() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        System.out.println(failedInitialise);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    public void sendExceptionMessage(Exception e) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        System.out.println(e);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    public void sendExceptionMessage(String message) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    public void listTasks(TaskList tasks) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        System.out.println(tasks);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    public void sendCount(TaskList tasks) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        int count \u003d tasks.getCount();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        System.out.println(\"Now you have \" + count + (count\u003d\u003d1?\" task \":\" tasks \") + \"in the list.\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jflim98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jflim98": 73
    }
  },
  {
    "path": "src/main/java/Duke/exception/DeleteOutOfRangeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jflim98"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jflim98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jflim98"
        },
        "content": "public class DeleteOutOfRangeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    public DeleteOutOfRangeException() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        super(\"\\uD83D\\uDE41 OOPS! Such a task does not exist.\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        return super.getMessage();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jflim98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jflim98": 11
    }
  },
  {
    "path": "src/main/java/Duke/exception/DoneOutOfRangeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jflim98"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jflim98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jflim98"
        },
        "content": "public class DoneOutOfRangeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    public DoneOutOfRangeException() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        super(\"\\uD83D\\uDE41 OOPS! Such a task does not exist.\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        return super.getMessage();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jflim98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jflim98": 11
    }
  },
  {
    "path": "src/main/java/Duke/exception/EmptyDeadlineException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jflim98"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jflim98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jflim98"
        },
        "content": "public class EmptyDeadlineException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    public EmptyDeadlineException() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        super(\"\\uD83D\\uDE41 OOPS! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        return super.getMessage();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jflim98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jflim98": 11
    }
  },
  {
    "path": "src/main/java/Duke/exception/EmptyEventException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jflim98"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jflim98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jflim98"
        },
        "content": "public class EmptyEventException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    public EmptyEventException() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        super(\"\\uD83D\\uDE41 OOPS! The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        return super.getMessage();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jflim98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jflim98": 11
    }
  },
  {
    "path": "src/main/java/Duke/exception/EmptyTodoException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jflim98"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jflim98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jflim98"
        },
        "content": "public class EmptyTodoException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    public EmptyTodoException() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        super(\"\\uD83D\\uDE41 OOPS! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        return super.getMessage();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jflim98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jflim98": 11
    }
  },
  {
    "path": "src/main/java/Duke/exception/MissingDeadlineDateException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jflim98"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jflim98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jflim98"
        },
        "content": "public class MissingDeadlineDateException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    public MissingDeadlineDateException() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        super(\"\\uD83D\\uDE41 OOPS! The date of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        return super.getMessage();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jflim98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jflim98": 11
    }
  },
  {
    "path": "src/main/java/Duke/exception/MissingDeleteArgumentException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jflim98"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jflim98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jflim98"
        },
        "content": "public class MissingDeleteArgumentException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    public MissingDeleteArgumentException() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        super(\"\\uD83D\\uDE41 OOPS! You have to specify which task you want to delete.\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        return super.getMessage();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jflim98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jflim98": 11
    }
  },
  {
    "path": "src/main/java/Duke/exception/MissingDoneArgumentException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jflim98"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jflim98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jflim98"
        },
        "content": "public class MissingDoneArgumentException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    public MissingDoneArgumentException() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        super(\"\\uD83D\\uDE41 OOPS! You have to specify which task you want to mark as done.\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        return super.getMessage();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jflim98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jflim98": 11
    }
  },
  {
    "path": "src/main/java/Duke/exception/MissingEventDateException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jflim98"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jflim98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jflim98"
        },
        "content": "public class MissingEventDateException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    public MissingEventDateException() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        super(\"\\uD83D\\uDE41 OOPS! The date of an event cannot be empty.\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        return super.getMessage();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jflim98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jflim98": 11
    }
  },
  {
    "path": "src/main/java/Duke/exception/UnknownCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jflim98"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jflim98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jflim98"
        },
        "content": "public class UnknownCommandException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    public UnknownCommandException() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        super(\"\\uD83D\\uDE41 OOPS! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        return super.getMessage();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jflim98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jflim98": 11
    }
  },
  {
    "path": "src/main/java/Duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jflim98"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jflim98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jflim98"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jflim98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jflim98"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jflim98"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    private LocalDate date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jflim98"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    public Deadline(String description, String date) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        this.date \u003d LocalDate.parse(date, Task.INPUT_DATE_TIME_FORMAT);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jflim98"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    public Deadline(String description, String date, boolean isDone) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        this.date \u003d LocalDate.parse(date, Task.INPUT_DATE_TIME_FORMAT);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jflim98"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + this.date.format(PRINT_DATE_TIME_FORMAT) + \")\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jflim98"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    public String fileText() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        return \"D \" + super.fileText() + \" | \" + this.date.format(INPUT_DATE_TIME_FORMAT);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jflim98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jflim98": 28
    }
  },
  {
    "path": "src/main/java/Duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jflim98"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jflim98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jflim98"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jflim98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jflim98"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jflim98"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    private LocalDate date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jflim98"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    public Event(String description, String date) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        this.date \u003d LocalDate.parse(date, Task.INPUT_DATE_TIME_FORMAT);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jflim98"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    public Event(String description, String date, boolean isDone) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        this.date \u003d LocalDate.parse(date, Task.INPUT_DATE_TIME_FORMAT);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jflim98"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + this.date.format(PRINT_DATE_TIME_FORMAT) + \")\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jflim98"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    public String fileText() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        return \"E \" + super.fileText() + \" | \" + this.date.format(INPUT_DATE_TIME_FORMAT);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jflim98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jflim98": 28
    }
  },
  {
    "path": "src/main/java/Duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jflim98"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jflim98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jflim98"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jflim98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jflim98"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    public static DateTimeFormatter INPUT_DATE_TIME_FORMAT \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    public static DateTimeFormatter PRINT_DATE_TIME_FORMAT \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jflim98"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jflim98"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    public Task(String description, boolean isDone) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jflim98"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jflim98"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        return \"[\" + (isDone ? \"\\u2713\" : \"\\u2718\") + \"] \" + this.description;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jflim98"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    public String fileText() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        return \"| \" + (isDone ? \"1\" : \"0\") + \" | \" + this.description;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jflim98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jflim98": 32
    }
  },
  {
    "path": "src/main/java/Duke/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jflim98"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jflim98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jflim98"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jflim98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jflim98"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    public ToDo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jflim98"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jflim98"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    public String fileText() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        return \"T \" + super.fileText();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jflim98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jflim98": 22
    }
  }
]
