[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    String javaFxVersion \u003d \u002711.0.1\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    mainClassName \u003d \"duke.Launcher\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    toolVersion \u003d \u00278.29\u0027"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hanweic53": 17,
      "-": 44
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "T | 1 | read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "D | 1 | return book | 03/10/2020, 1900"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "E | 1 | graduation ceremony | 10/10/2020, 1830"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "E | 1 | final exams | 19/11/2020, 1500"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "T | 0 | homework"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "D | 0 | finish assignment | 20/01/2020, 1900"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "T | 0 | homework"
      }
    ],
    "authorContributionMap": {
      "hanweic53": 7
    }
  },
  {
    "path": "data/dukeTest.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "T | 1 | read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "D | 1 | return book | 03/10/2020, 1900"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "E | 1 | graduation ceremony | 10/10/2020, 1830"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "E | 0 | final exams | 19/11/2020, 1500"
      }
    ],
    "authorContributionMap": {
      "hanweic53": 4
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hanweic53"
        },
        "content": " * Represents a chat-bot named Duke."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hanweic53"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "public class Duke  {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * Constructs a Duke Chat-bot."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        this.storage \u003d new Storage(\"data\", \"data/duke.txt\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            this.taskList \u003d new TaskList(storage.readFromFile());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            this.taskList \u003d new TaskList(new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "//    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "//     * Runs the main logic of the Chat-bot."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "//     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "//    public void run() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "//        ui.showWelcome();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "//        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "//        while (!isExit) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "//            try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "//                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "//                ui.showLine(); // show the divider line (\"_______\")"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "//                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "//                c.execute(taskList, ui, storage);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "//                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "//            } catch (DukeException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "//                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "//            } catch (IOException e) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "//                e.printStackTrace();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "//            } finally {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "//                ui.showLine();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "//            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "//        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     *"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @param input user\u0027s input"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @return reply by Duke"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            Command c \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            return c.execute(taskList, ui, storage);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            return e.getMessage();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hanweic53": 74,
      "-": 1
    }
  },
  {
    "path": "src/main/java/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hanweic53"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hanweic53"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hanweic53": 12
    }
  },
  {
    "path": "src/main/java/duke/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.ui.MainWindow;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hanweic53"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hanweic53"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            stage.getIcons().add(new Image(this.getClass().getResourceAsStream(\"/images/UserAvatar.png\")));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            stage.setTitle(\"Pico\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hanweic53": 35
    }
  },
  {
    "path": "src/main/java/duke/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import java.time.DateTimeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hanweic53"
        },
        "content": " * Represents the AddCommand when users add items to TaskList."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hanweic53"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    private final String commandWord;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    private final String taskName;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * Creates an AddCommand."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @param commandWord the type of command"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @param taskName the name of the task"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public AddCommand(String commandWord, String taskName) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        this.commandWord \u003d commandWord;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        this.taskName \u003d taskName;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * Adds To-Do, Deadline and Event tasks into TaskList."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @param taskList taskList that stores Task objects"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @param ui Ui that handles input and output to User"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @param storage storage that handles data storage"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @throws IOException Ioexception"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @throws DukeException DukeException"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public String execute(TaskList taskList, Ui ui, Storage storage) throws IOException, DukeException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            switch (commandWord) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                return taskList.addTodo(taskName, storage);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                return taskList.addDeadline(taskName, storage);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                return taskList.addEvent(taskName, storage);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                return \"\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        } catch (DateTimeException e) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            throw new DukeException(\"Please enter dates in this format: dd/MM/yyyy timeIn24Hr\""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                    + \"\\nE.g. 01/12/2020 2359\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            throw new DukeException(\"Invalid description!\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * Returns true if and only if it is a command to exit the program."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     *"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @return false"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hanweic53": 70
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hanweic53"
        },
        "content": " * Represents the different Commands."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hanweic53"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * Returns true if and only if it is a command to exit the program."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @return true or false"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public abstract boolean isExit();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * Executes the command and performs operations accordingly."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @param taskList taskList that stores Task objects"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @param ui Ui that handles input and output to User"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @param storage storage that handles data storage"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @throws IOException Ioexception"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @throws DukeException DukeException"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public abstract String execute(TaskList taskList, Ui ui, Storage storage) throws IOException, DukeException;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hanweic53": 31
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hanweic53"
        },
        "content": " * Represents the AddCommand when users add items to TaskList."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hanweic53"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    private final int index;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * Creates a DeleteCommand."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @param index index of task"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public DeleteCommand(int index) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * Removes a task from the TaskList."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @param taskList taskList that stores Task objects"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @param ui Ui that handles input and output to User"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @param storage storage that handles data storage"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @throws DukeException DukeException"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        return taskList.deleteTask(index, storage);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * Returns true if and only if it is a command to exit the program."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @return false"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hanweic53": 45
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hanweic53"
        },
        "content": " * Represents the DoneCommand when users mark items as done in TaskList."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hanweic53"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    private final int index;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * Creates a DoneCommand."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @param index index of task"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public DoneCommand(int index) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * Marks a task in the TaskList as done."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @param taskList taskList that stores Task objects"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @param ui Ui that handles input and output to User"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @param storage storage that handles data storage"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public String execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        return taskList.setDoneTask(index, storage);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * Returns true if and only if it is a command to exit the program."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @return false"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hanweic53": 43
    }
  },
  {
    "path": "src/main/java/duke/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hanweic53"
        },
        "content": " * Represents the ExitCommand when users wants to exit the Program."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hanweic53"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * Creates an ExitCommand."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public ExitCommand() { }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * Exits the program."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @param tasks taskList that stores Task objects"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @param ui Ui that handles input and output to User"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @param storage storage that handles data storage"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        return \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * Returns true if and only if it is a command to exit the program."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @return true"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hanweic53": 39
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    private final String keyWord;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public FindCommand(String keyWord) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        this.keyWord \u003d keyWord;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public String execute(TaskList taskList, Ui ui, Storage storage) throws IOException, DukeException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        return taskList.findTasks(this.keyWord);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hanweic53": 27
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hanweic53"
        },
        "content": " * Represents the ListCommand when users wants to list out the TaskList."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hanweic53"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * Creates a ListCommand."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public ListCommand() { }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * Lists out the items on the TaskList."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @param tasks taskList that stores Task objects"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @param ui Ui that handles input and output to User"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @param storage storage storage that handles data storage"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        return tasks.listTasks();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * Returns true if and only if it is a command to exit the program."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @return false"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hanweic53": 38
    }
  },
  {
    "path": "src/main/java/duke/command/UnknownCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hanweic53"
        },
        "content": " * Represents the UnknownCommand when users enter unknown input."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hanweic53"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "public class UnknownCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * Creates an UnknownCommand."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public UnknownCommand() { }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * Replies user that the input is not being understood."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @param tasks taskList that stores Task objects"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @param ui Ui that handles input and output to User"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @param storage storage storage that handles data storage"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        return \"I\u0027m sorry, but I don\u0027t know that that means!\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * Returns true if and only if it is a command to exit the program."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @return false"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hanweic53": 39
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hanweic53": 9
    }
  },
  {
    "path": "src/main/java/duke/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.command.AddCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.command.DoneCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.command.ExitCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.command.FindCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.command.UnknownCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * Parses the input and turn it into a Command."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @param input input to be parsed"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @return the Command that the input belongs to"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @throws DukeException DukeException"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public static Command parse(String input) throws DukeException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        String[] inputArr \u003d input.split(\" \");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        Command command;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        switch (inputArr[0]) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            command \u003d new ListCommand();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            command \u003d new DoneCommand(Integer.parseInt(inputArr[1]));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                command \u003d new FindCommand(input.substring(5));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                throw new DukeException(\"Please include description!\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                command \u003d new DeleteCommand(Integer.parseInt(inputArr[1]));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                throw new DukeException(\"Invalid format!\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                throw new DukeException(\"Please include item number!\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                command \u003d new AddCommand(\"todo\", input.substring(5));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                throw new DukeException(\"Please include description!\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                command \u003d new AddCommand(\"deadline\", input.substring(9));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                throw new DukeException(\"Please include description!\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                command \u003d new AddCommand(\"event\", input.substring(6));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                throw new DukeException(\"Please include description!\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            command \u003d new UnknownCommand();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        return command;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "}"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "hanweic53": 80
    }
  },
  {
    "path": "src/main/java/duke/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hanweic53"
        },
        "content": " * Deals with loading tasks from the file and saving tasks in the file"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hanweic53"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    private final File folder;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    private final File file;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * Creates a Storage."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @param folderPath for Duke to load saved TaskList if there exists"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @param filePath for Duke to load saved TaskList if there exists"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public Storage(String folderPath, String filePath) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        this.folder \u003d new File(folderPath);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        this.file \u003d new File(filePath);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * Reads from a .txt file and change the Strings into tasks."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @return ArrayList that contains tasks"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @throws DukeException DukeException"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public ArrayList\u003cTask\u003e readFromFile() throws DukeException {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            if (!this.folder.exists()) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                boolean isFolderCreated \u003d this.folder.mkdir();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                if (isFolderCreated) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                    System.out.println(\"Folder did not exist. New folder was created!\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                    System.out.println(\"Folder did not exist but new folder was not created.\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            if (!this.file.exists()) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                boolean isFileCreated \u003d this.file.createNewFile();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                if (isFileCreated) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                    System.out.println(\"File did not exist. New file was created!\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                    System.out.println(\"Folder did not exist but new file was not created.\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            Scanner sc \u003d new Scanner(this.file);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            while (sc.hasNext()) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                String[] taskArray;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                taskArray \u003d sc.nextLine().split(\" \\\\| \");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                String taskType \u003d taskArray[0];"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                String isDone \u003d taskArray[1];"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                String taskName \u003d taskArray[2];"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                Task task \u003d null;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                switch (taskType) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                case \"T\":"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                    task \u003d new Todo(taskName);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                case \"D\":"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                    task \u003d new Deadline(taskName,"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                            LocalDateTime.parse(taskArray[3].replace(\", \" , \"T\"),"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                                    DateTimeFormatter.ofPattern(\"dd/MM/yyyy\u0027T\u0027HHmm\")));"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                case \"E\":"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                    task \u003d new Event(taskName,"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                            LocalDateTime.parse(taskArray[3].replace(\", \", \"T\"),"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                                    DateTimeFormatter.ofPattern(\"dd/MM/yyyy\u0027T\u0027HHmm\")));"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                if (isDone.equals(\"1\")) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                    assert task !\u003d null;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                    task.markDone();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                tasks.add(task);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            throw new DukeException(\"File is empty when loading\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * Appends a String to a .txt file."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     *"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @param textToAppend text to append to the .txt file"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @throws IOException IOException"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     */"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public void appendToFile(String textToAppend) throws IOException {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        FileWriter fw \u003d new FileWriter(this.file, true); // create a FileWriter in append mode"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        fw.write(textToAppend + \"\\n\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * Overwrites a .txt file."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     *"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @param tasks ArrayList of tasks"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @throws IOException IOException"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     */"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public void rewriteFile(ArrayList\u003cTask\u003e tasks) throws IOException {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        FileWriter fw \u003d new FileWriter(this.file);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            Task task \u003d tasks.get(i);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            if (i \u003d\u003d 0) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                fw.write(task.toText() + \"\\n\");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                fw.close();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                appendToFile(task.toText());"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    private void printFileContents() {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        Scanner s \u003d null; // create a Scanner using the File as the source"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            s \u003d new Scanner(this.file);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        while (s.hasNext()) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            System.out.println(s.nextLine());"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hanweic53": 145
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    protected LocalDateTime by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * Creates a Deadline."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @param description description of deadline"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @param by date and time of deadline"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public Deadline(String description, LocalDateTime by) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public String toText() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        String completionStatus \u003d \"0\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        if (this.isDone) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            completionStatus \u003d \"1\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        return \"D\" + \" | \" + completionStatus + \" | \" + this.description + \" | \""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                + by.format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy, HHmm\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        return \"[D]\" + this.getStatusIcon() + \" \" + super.toString() + \" (by: \""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                + by.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy, HHmm\")) + \")\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hanweic53": 35
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    protected LocalDateTime at;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * Creates an Event."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @param description description of the Event"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @param at date and time of the Event"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public Event(String description, LocalDateTime at) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public String toText() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        String completionStatus \u003d \"0\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        if (this.isDone) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            completionStatus \u003d \"1\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        return \"E\" + \" | \" + completionStatus + \" | \" + this.description + \" | \""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                + at.format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy, HHmm\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        return \"[E]\" + this.getStatusIcon() + \" \" + super.toString() + \" (at: \""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                + at.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy, HHmm\")) + \")\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hanweic53": 36
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * Creates a Task."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @param description description of task"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        return (isDone ? \"[\\u2713]\" : \"[\\u2718]\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public void markDone() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public String toText() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hanweic53": 31
    }
  },
  {
    "path": "src/main/java/duke/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hanweic53"
        },
        "content": " * contains the task list e.g., it has operations to add/delete tasks in the list"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hanweic53"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    private final ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e(tasks);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * Lists out all the tasks in the TaskList."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public String listTasks() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        StringBuilder reply \u003d new StringBuilder(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            Task task \u003d tasks.get(i);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            reply.append(\"\\n\").append(i + 1).append(\". \").append(task);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        return reply.toString();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    private String printTotalNumberOfTasks() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        if (tasks.size() \u003c 2) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            return \"\\nNow you have \" + tasks.size() + \" task in the list.\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            return \"\\nNow you have \" + tasks.size() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public String setDoneTask(int index, Storage storage) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        String reply;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        Task task \u003d tasks.get(index - 1); // index - 1 to match the index in ArrayList"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        task.markDone();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        reply \u003d \"Nice! I\u0027ve marked this task as done:\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                + \"\\n\\t\" + task;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            storage.rewriteFile(tasks);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        return reply;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * Deletes a Task from the TaskList and storage."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     *"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @param index index of Task to be deleted from ArrayList"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @param storage storage to save and load the Tasks when the program runs"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public String deleteTask(int index, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        String reply;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            Task task \u003d tasks.get(index - 1); // index -1 to match the index in ArrayList"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            tasks.remove(index - 1); // index - 1 to match the index in ArrayList"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            reply \u003d \"Noted. I\u0027ve deleted this task:\""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                    + \"\\n\\t\" + task + printTotalNumberOfTasks();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            throw new DukeException(\"Missing or invalid item number!\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            storage.rewriteFile(tasks);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        return reply;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     *"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @param taskName  name of the Task"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @param storage storage to save and load the Tasks when the program runs"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @throws DukeException DukeException"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @throws IOException IOException"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public String addTodo(String taskName, Storage storage) throws DukeException, IOException {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        if (taskName.isBlank()) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            throw new DukeException(\"Description cannot be only empty spaces!\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        Task task \u003d new Todo(taskName);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        storage.appendToFile(task.toText());"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        return \"Got it. I\u0027ve added this task:\""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                + \"\\n\\t\" + task"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                + printTotalNumberOfTasks();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        //Ui.printAddSuccess(task);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        //printTotalNumberOfTasks();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * Adds a Deadline into the TaskList."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     *"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @param taskName name of the Deadline to be added"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @param storage storage to save and load the Tasks when the program runs"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @throws DukeException DukeException"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @throws IOException IOException"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     */"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public String addDeadline(String taskName, Storage storage) throws DukeException, IOException {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        if (taskName.isBlank()) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            throw new DukeException(\"Description cannot be only empty spaces!\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        String[] taskArray \u003d taskName.split(\" /by \");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        taskName \u003d taskArray[0];"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        String timeBy \u003d taskArray[1].replace(\u0027 \u0027, \u0027T\u0027);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\u0027T\u0027HHmm\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        Task task \u003d new Deadline(taskName, LocalDateTime.parse(timeBy, formatter));"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        storage.appendToFile(task.toText());"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        //Ui.printAddSuccess(task);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        //printTotalNumberOfTasks();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        return \"Got it. I\u0027ve added this task:\""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                + \"\\n\\t\" + task"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                + printTotalNumberOfTasks();"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * Adds an Event into the TaskList."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     *"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @param taskName name of the Event to be added"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @param storage storage to save and load the Tasks when the program runs"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @throws DukeException DukeException"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @throws IOException IOException"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     */"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public String addEvent(String taskName, Storage storage) throws DukeException, IOException {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        if (taskName.isBlank()) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            throw new DukeException(\"Description cannot be only empty spaces!\");"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        String[] taskArray \u003d taskName.split(\" /at \");"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        taskName \u003d taskArray[0];"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        String timeAt \u003d taskArray[1].replace(\u0027 \u0027, \u0027T\u0027);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\u0027T\u0027HHmm\");"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        Task task \u003d new Event(taskName, LocalDateTime.parse(timeAt, formatter));"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        //Ui.printAddSuccess(task);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        //printTotalNumberOfTasks();"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        storage.appendToFile(task.toText());"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        return \"Got it. I\u0027ve added this task:\""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                + \"\\n\\t\" + task"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                + printTotalNumberOfTasks();"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * Finds tasks that match the keyword."
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     *"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @param keyWord keyword to search for task"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     */"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public String findTasks(String keyWord) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        ArrayList\u003cString\u003e matchedTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        for (Task task: tasks) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            if (task.toString().contains(keyWord)) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                matchedTasks.add(task.toString());"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        StringBuilder reply \u003d new StringBuilder(\"Here are the tasks that matched your search:\");"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        for (int i \u003d 0; i \u003c matchedTasks.size(); i++) {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            String string \u003d matchedTasks.get(i);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            reply.append(\"\\n\").append(i + 1).append(\". \").append(string);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        return reply.toString();"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hanweic53": 179
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public String toText() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        String completionStatus \u003d \"0\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        if (this.isDone) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            completionStatus \u003d \"1\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        return \"T\" + \" | \" + completionStatus + \" | \" + this.description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        return \"[T]\" + this.getStatusIcon() + \" \" + super.toString();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hanweic53": 22
    }
  },
  {
    "path": "src/main/java/duke/ui/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import javafx.geometry.Insets;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import javafx.scene.layout.Background;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import javafx.scene.layout.BackgroundFill;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import javafx.scene.layout.CornerRadii;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import javafx.scene.paint.Color;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import javafx.scene.paint.ImagePattern;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import javafx.scene.shape.Circle;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "/**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hanweic53"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hanweic53"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hanweic53"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hanweic53"
        },
        "content": " */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "//    @FXML"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "//    private Circle displayPicture;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "//        displayPicture.setFill(new ImagePattern(img));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        DialogBox dialogBox \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        // Spacing between Image and Text"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        dialogBox.setSpacing(10.0);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        return dialogBox;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        // Spacing between Image and Text"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        db.setSpacing(10.0);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        // Border for Duke Dialog"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "//        db.setStyle(\"-fx-padding: 10;\" + \"-fx-border-style: solid inside;\""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "//                + \"-fx-border-width: 2;\" + \"-fx-border-insets: 0;\""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "//                + \"-fx-border-radius: 10;\" + \"-fx-border-color: darkseagreen;\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hanweic53": 85
    }
  },
  {
    "path": "src/main/java/duke/ui/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import javafx.scene.layout.Background;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import javafx.scene.layout.BackgroundFill;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import javafx.scene.paint.Color;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hanweic53"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hanweic53"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/UserAvatar.png\"));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DukeAvatar.png\"));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        dialogContainer.setBackground(new Background(new BackgroundFill(Color.BLANCHEDALMOND, null, null)));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        dialogContainer.getChildren().add("
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                DialogBox.getDukeDialog(Ui.showWelcome(), dukeImage)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        );"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            Platform.exit();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                    DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                    DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            );"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hanweic53": 67
    }
  },
  {
    "path": "src/main/java/duke/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public Ui() { }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * Prints a welcome message."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public static String showWelcome() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        return \"Hello, I\u0027m Pico, no time to waste. \""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                + \"\\nLet\u0027s start started!\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                + \"\\nWhat shall we do now?\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * Prints a goodbye message."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public void showGoodbye() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * Prints a success message after task is added successfully."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @param taskAdded task added to TaskList"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public static void printAddSuccess(Task taskAdded) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                + \"\\n\\t\" + taskAdded);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * Reads commands input from user."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @return command as a input string"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        return sc.nextLine();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public void showError(String message) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        System.out.println(\"___________________________________________________\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hanweic53": 55
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "\u003c?import javafx.scene.layout.StackPane?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    \u003c!-- --\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" minHeight\u003d\"-Infinity\" style\u003d\"-fx-background-color: #dbfffe; -fx-border-color: #4280c2; -fx-border-width: 2 2; -fx-border-radius: 10; -fx-label-padding: 10; -fx-background-radius: 10;\" text\u003d\"Label\" textOverrun\u003d\"CLIP\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        \u003cStackPane id\u003d\"StackPane\" maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"-1.0\" prefWidth\u003d\"-1.0\" style\u003d\"-fx-background-color: blanchedalmond;\" xmlns\u003d\"http://javafx.com/javafx/2.2\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            \u003cchildren\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            \u003c/children\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            \u003cpadding\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                \u003cInsets left\u003d\"10.0\" right\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            \u003c/padding\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        \u003c!--"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        \u003cCircle fx:id\u003d\"displayPicture\" fill\u003d\"WHITE\" radius\u003d\"49.5\" stroke\u003d\"BLACK\" strokeType\u003d\"INSIDE\" strokeWidth\u003d\"0.0\"\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        \u003c/Circle\u003e --\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        \u003cInsets bottom\u003d\"7.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"7.0\" /\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "hanweic53": 32
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.ui.MainWindow\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" promptText\u003d\"Enter your message \" AnchorPane.bottomAnchor\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "         \u003cfont\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            \u003cFont size\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "         \u003c/font\u003e\u003c/TextField\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" style\u003d\"-fx-font-size: 15; -fx-font-weight: 700;\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" style\u003d\"-fx-border-color: #9adfe6;\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "hanweic53": 23
    }
  },
  {
    "path": "src/test/java/duke/command/AddCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "public class AddCommandTest {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    private final Storage storage \u003d new Storage(\"data\", \"data/dukeTest.txt\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    private final Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            taskList \u003d new TaskList(storage.readFromFile());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public void executeTest() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        AddCommand addCommand \u003d new AddCommand(\"todo\", \" \");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            addCommand.execute(taskList, ui, storage);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            assertEquals(\"Description cannot be only empty spaces!\", e.getMessage());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        addCommand \u003d new AddCommand(\"deadline\", \" \");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            addCommand.execute(taskList, ui, storage);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            assertEquals(\"Description cannot be only empty spaces!\", e.getMessage());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        addCommand \u003d new AddCommand(\"deadline\", \"homework /by 01/40/2020 1900\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            addCommand.execute(taskList, ui, storage);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            assertEquals(\"Please enter dates in this format: dd/MM/yyyy timeIn24Hr\""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                    + \"\\nE.g. 01/12/2020 2359\", e.getMessage());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        addCommand \u003d new AddCommand(\"deadline\", \"NotMakingSense\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            addCommand.execute(taskList, ui, storage);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            assertEquals(\"Invalid description!\", e.getMessage());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        addCommand \u003d new AddCommand(\"event\", \" \");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            addCommand.execute(taskList, ui, storage);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            assertEquals(\"Description cannot be only empty spaces!\", e.getMessage());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        addCommand \u003d new AddCommand(\"event\", \"eat /at 01/40/2020 1900\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            addCommand.execute(taskList, ui, storage);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            assertEquals(\"Please enter dates in this format: dd/MM/yyyy timeIn24Hr\""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                    + \"\\nE.g. 01/12/2020 2359\", e.getMessage());"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        addCommand \u003d new AddCommand(\"event\", \"NotMakingSense\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            addCommand.execute(taskList, ui, storage);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            assertEquals(\"Invalid description!\", e.getMessage());"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public void isExitTest() {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        assertFalse(new AddCommand(\"todo\", \"sample\").isExit());"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        assertFalse(new AddCommand(\"deadline\", \"sample \""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                + \"/by 20/10/2020 1900\").isExit());"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        assertFalse(new AddCommand(\"event\", \"sample \""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                + \"/at 20/10/2020 1900\").isExit());"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "}"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "hanweic53": 107
    }
  },
  {
    "path": "src/test/java/duke/command/DeleteCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "public class DeleteCommandTest {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    private final Storage storage \u003d new Storage(\"data\", \"data/dukeTest.txt\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    private final Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            taskList \u003d new TaskList(storage.readFromFile());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public void executeTest() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        DeleteCommand deleteCommand \u003d new DeleteCommand(7);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            deleteCommand.execute(taskList, ui, storage);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            assertEquals(\"Missing or invalid item number!\", e.getMessage());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public void isExitTest() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        assertFalse(new DeleteCommand(10).isExit());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hanweic53": 40
    }
  },
  {
    "path": "src/test/java/duke/command/ExitCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "public class ExitCommandTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public void isExitTest() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        assertTrue(new ExitCommand().isExit());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hanweic53": 13
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "Hello World"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "todo"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "todo CS2103T post-lecture quiz"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "deadline CS2103T ip /by Thursday 2359"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "event"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "event CS2103T Week 2 /at Friday 12am"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "done"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "done 6"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "list"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "delete 8"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "list"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "hanweic53": 16
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "set JAVA_TOOL_OPTIONS\u003d-Dfile.encoding\u003dUTF-8"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "dir /s /B ..\\src\\main\\java\\*.java \u003e sources.txt"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin @sources.txt"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "hanweic53": 4,
      "-": 20
    }
  },
  {
    "path": "text-ui-test/sources.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "D:\\CS2103T\\ip\\src\\main\\java\\duke.task.Deadline.java"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "D:\\CS2103T\\ip\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "D:\\CS2103T\\ip\\src\\main\\java\\duke.exception.DukeException.java"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "D:\\CS2103T\\ip\\src\\main\\java\\duke.task.Event.java"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "D:\\CS2103T\\ip\\src\\main\\java\\duke.task.Task.java"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "D:\\CS2103T\\ip\\src\\main\\java\\duke.task.Todo.java"
      }
    ],
    "authorContributionMap": {
      "hanweic53": 6
    }
  }
]
