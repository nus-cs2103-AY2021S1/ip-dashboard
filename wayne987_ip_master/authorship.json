[
  {
    "path": "data/test.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wayne987"
        },
        "content": "D | 0 | return book | 2019-12-20 18:00 "
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wayne987"
        },
        "content": "T | 0 | read book  "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wayne987"
        },
        "content": "T | 0 | sleep "
      }
    ],
    "authorContributionMap": {
      "wayne987": 3
    }
  },
  {
    "path": "src/main/java/Commands.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wayne987"
        },
        "content": "public enum Commands{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    LIST,BYE,TODO,DEADLINE,EVENT,DELETE,DONE,UNKNOWN"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wayne987"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wayne987": 3
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wayne987"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    protected LocalDate byDate;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    protected LocalTime byTime;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    private Deadline(String taskName, String taskDateTime) throws DukeException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        super(taskName);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        this.tag \u003d \"D\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        parseTime(taskDateTime.trim().replace(\"/\", \"-\"));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public static Deadline create(String taskDescription) throws DukeException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            if(!taskDescription.contains(\"/by\")){"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                throw new DukeException(\"Please include \u0027/by\u0027 in front of the deadline\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            String[] NameTimePair \u003d taskDescription.split(\" /by\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            String taskName \u003d NameTimePair[0];"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            String taskDateTime \u003d NameTimePair[1];"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            return new Deadline(taskName,taskDateTime);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    private void parseTime(String taskDateTime) throws DukeException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wayne987"
        },
        "content": "         String[] dateTime \u003d taskDateTime.replace(\"/\",\"-\").split(\" \",2);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wayne987"
        },
        "content": "         try{"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wayne987"
        },
        "content": "             this.byDate \u003d LocalDate.parse(dateTime[0]);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wayne987"
        },
        "content": "         }catch(DateTimeParseException e){"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wayne987"
        },
        "content": "             throw new DukeException(\"please enter a valid yyyy-mm-dd format\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wayne987"
        },
        "content": "         }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wayne987"
        },
        "content": "         try{"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wayne987"
        },
        "content": "             if(dateTime.length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                 this.byTime \u003d LocalTime.parse(dateTime[1]);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wayne987"
        },
        "content": "             }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wayne987"
        },
        "content": "         }catch(DateTimeParseException e){"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wayne987"
        },
        "content": "             throw new DukeException(\"please enter a valid HH:MM format\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wayne987"
        },
        "content": "         }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public static Deadline create(String taskName, String taskTime) throws DukeException {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        return new Deadline(taskName,taskTime);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        String symbol \u003d isDone ? \"\\u2713\" : \"\\u2718\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        if(byTime !\u003d null) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            return String.format(\"[%s][%s] %s (by: %s %s)\", tag, symbol, taskName"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                                , byDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")), byTime.toString());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }else{"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            return String.format(\"[%s][%s] %s (by: %s)\", tag, symbol, taskName"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                                , byDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public String safeFileFormat(){"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        int done \u003d isDone ? 1 : 0;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        if(byTime \u003d\u003d null) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            return String.format(\"%s | %d | %s | %s \\n\", tag, done, taskName, byDate.toString());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }else{"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            return String.format(\"%s | %d | %s | %s %s \\n\", tag, done, taskName, byDate.toString(), byTime.toString());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wayne987"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wayne987": 70
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        this.taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        this.parser \u003d new Parser(taskList);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            this.storage \u003d new Storage(taskList,parser);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        ui.printStarting();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        while(taskList.isUpdating()) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            String[] fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            parser.ParseCommand(fullCommand);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            ui.printLine();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public void stop() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            storage.saveFile();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }catch(DukeException e){"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            ui.showSavingError();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        duke.run();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        duke.stop();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wayne987"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 2,
      "wayne987": 39
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wayne987"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public DukeException(String message){"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wayne987"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wayne987": 6
    }
  },
  {
    "path": "src/main/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import org.junit.jupiter.api.Assertions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wayne987"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public void Deadline_Wrong_Format1_exceptionThrown() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        Exception e \u003d Assertions.assertThrows(DukeException.class, () -\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            Deadline.create(\"deadline read book 2019/12/02 18:00\"));"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        String expected \u003d \"Please include \u0027/by\u0027 in front of the deadline\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        Assertions.assertEquals(expected,e.getMessage());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public void Deadline_Wrong_Format2_exceptionThrown() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        Exception e \u003d Assertions.assertThrows(DukeException.class, () -\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            Deadline.create(\"deadline read book /by 02/12/2019 18:00\"));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        String expected \u003d \"please enter a valid yyyy-mm-dd format\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        Assertions.assertEquals(expected,e.getMessage());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public void Deadline_Wrong_Format3_exceptionThrown() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        Exception e \u003d Assertions.assertThrows(DukeException.class, () -\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            Deadline.create(\"deadline read book /by 2019/12/02 1800\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        String expected \u003d \"please enter a valid HH:MM format\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        Assertions.assertEquals(expected,e.getMessage());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public void Deadline_Wrong_Format4_exceptionThrown() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        Exception e \u003d Assertions.assertThrows(DukeException.class, () -\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            Deadline.create(\"deadline read book /at 2019/12/02 18:00\"));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        String expected \u003d \"Please include \u0027/by\u0027 in front of the deadline\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        Assertions.assertEquals(expected,e.getMessage());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public void Event_Wrong_Format1_exceptionThrown() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        Exception e \u003d Assertions.assertThrows(DukeException.class, () -\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            Event.create(\"event read book 2019/12/02 18:00\"));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        String expected \u003d \"Please include \u0027/at\u0027 in front of the event time period\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        Assertions.assertEquals(expected,e.getMessage());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public void Event_Wrong_Format2_exceptionThrown() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        Exception e \u003d Assertions.assertThrows(DukeException.class, () -\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            Event.create(\"event read book /at 02/12/2019 18:00\"));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        String expected \u003d \"please enter a valid yyyy-mm-dd format\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        Assertions.assertEquals(expected,e.getMessage());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public void Event_Wrong_Format3_exceptionThrown() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        Exception e \u003d Assertions.assertThrows(DukeException.class, () -\u003e"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            Event.create(\"event read book /at 2019/12/02 1800\"));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        String expected \u003d \"please enter a valid HH:MM format\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        Assertions.assertEquals(expected,e.getMessage());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public void Event_Wrong_Format4_exceptionThrown() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        Exception e \u003d Assertions.assertThrows(DukeException.class, () -\u003e"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            Event.create(\"event read book /by 2019/12/02 1800\"));"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        String expected \u003d \"Please include \u0027/at\u0027 in front of the event time period\";"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        Assertions.assertEquals(expected,e.getMessage());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wayne987"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wayne987": 78
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wayne987"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    protected LocalDate atDate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    protected LocalTime atTime;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    private Event(String taskName, String taskDateTime) throws DukeException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        super(taskName);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        this.tag \u003d \"E\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        parseTime(taskDateTime.trim().replace(\"/\", \"-\"));"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public static Event create(String taskDescription) throws DukeException{"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        if(!taskDescription.contains(\"/at\")){"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            throw new DukeException(\"Please include \u0027/at\u0027 in front of the event time period\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        String[] NameTimePair \u003d taskDescription.split(\" /at\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        String taskName \u003d NameTimePair[0];"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        String taskTime \u003d NameTimePair[1];"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        return new Event(taskName,taskTime);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public static Event create(String taskName, String taskTime) throws DukeException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        return new Event(taskName, taskTime);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    private void parseTime(String taskDateTime) throws DukeException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        String[] dateTime \u003d taskDateTime.replace(\"/\",\"-\").split(\" \",2);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            this.atDate \u003d LocalDate.parse(dateTime[0]);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }catch(DateTimeParseException e){"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            throw new DukeException(\"please enter a valid yyyy-mm-dd format\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            if(dateTime.length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                this.atTime \u003d LocalTime.parse(dateTime[1]);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }catch(DateTimeParseException e){"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            throw new DukeException(\"please enter a valid HH:MM format\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        String symbol \u003d isDone ? \"\\u2713\" : \"\\u2718\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        if(atTime !\u003d null) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            return String.format(\"[%s][%s] %s (at: %s %s)\", tag, symbol, taskName"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                    , atDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")), atTime.toString());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }else{"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            return String.format(\"[%s][%s] %s (at: %s)\", tag, symbol, taskName"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                    , atDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public String safeFileFormat(){"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        int done \u003d isDone ? 1 : 0;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        if(atTime \u003d\u003d null) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            return String.format(\"%s | %d | %s | %s \\n\", tag, done, taskName, atDate.toString());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }else{"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            return String.format(\"%s | %d | %s | %s %s \\n\", tag, done, taskName, atDate.toString(), atTime.toString());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wayne987"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wayne987": 71
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wayne987"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public Parser(TaskList taskList){"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public void ParseCommand(String[] inputs) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            Commands command \u003d GetCommand(inputs[0]);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            String taskDescription \u003d \"\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            if (inputs.length \u003e 1) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                taskDescription \u003d inputs[1];"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            } else if (inputs[0].equals(\"todo\") || inputs[0].equals(\"deadline\") || inputs[0].equals(\"event\")) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                throw new DukeException(String.format(\"The description of %s cannot be empty\", command.toString()));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            switch (command) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                case DONE: {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                    int index \u003d Integer.parseInt(taskDescription) - 1;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                    taskList.DoneTask(index);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                case LIST: {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                    taskList.ListTask();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                case BYE: {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                    System.out.println(\"Bye, Have a Great Time!\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                    taskList.setTaskListNotUpdating();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                case TODO: {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                    Task newTask \u003d new Todo(taskDescription);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                    taskList.AddTask(newTask,true);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                case DEADLINE: {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                    Task newTask \u003d Deadline.create(taskDescription);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                    taskList.AddTask(newTask,true);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                case EVENT: {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                    Task newTask \u003d Event.create(taskDescription);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                    taskList.AddTask(newTask,true);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                case DELETE: {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                    int index \u003d Integer.parseInt(taskDescription) - 1;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                    taskList.DeleteTask(index);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                default: {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                    throw new DukeException(\"smlj??????\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }catch(DukeException e){"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public Commands GetCommand(String commandInput){"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        Commands command;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            command \u003d Commands.valueOf(commandInput.toUpperCase());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }catch(IllegalArgumentException e){"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            command \u003d Commands.UNKNOWN;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        return command;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wayne987"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wayne987": 72
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wayne987"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    private Path storageFilePath;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public Storage(TaskList taskList, Parser parser) throws DukeException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        this.parser \u003d parser;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        storageFilePath \u003d Paths.get(\".\", \"data\", \"test.txt\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            // Create directory if needed"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            Path parentPath \u003d storageFilePath.getParent();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            Files.createDirectories(parentPath);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            if (!Files.exists(storageFilePath)) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                Files.createFile(storageFilePath);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            System.out.println(\"unable to read file \" + e.getMessage());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        LoadFile();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public void LoadFile() throws DukeException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            BufferedReader bf \u003d new BufferedReader(new FileReader(storageFilePath.toString()));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            String task \u003d bf.readLine();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            String[] inputs;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            while (task !\u003d null) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                inputs \u003d task.split(\" \\\\| \", 4);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                String taskType \u003d inputs[0];"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                Task newTask;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                    switch (taskType) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                        case \"T\": {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                            newTask \u003d new Todo(inputs[2]);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                        case \"D\": {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                            newTask \u003d Deadline.create(inputs[2], inputs[3]);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                        case \"E\": {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                            newTask \u003d Event.create(inputs[2], inputs[3]);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                        default: {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                            throw new DukeException(\"smlj??????\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                    if (inputs[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                        newTask.complete();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                    taskList.AddTask(newTask, false);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                    task \u003d bf.readLine();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                    System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }catch(IOException e){"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            throw new DukeException(\"unable to load file\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public void saveFile() throws DukeException{"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            FileWriter fw \u003d new FileWriter(storageFilePath.toString());"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            for (int i \u003d 0; i \u003c taskList.getTaskListSize(); i++) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                fw.write(taskList.getTask(i).safeFileFormat());"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }catch(IOException e){"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            throw new DukeException(\"unable to save file\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wayne987"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wayne987": 90
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wayne987"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    protected String tag;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    protected boolean isDone \u003d false;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    protected String taskName;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public Task(String taskName){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        this.taskName \u003d taskName;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public Task(String taskName, Boolean isDone){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        this.taskName \u003d taskName;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public void complete(){"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public void printAddTask(){"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        System.out.println("
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                String.format(\"Got it. I\u0027ve added this task:\\n  %s\",this.toString())"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        );"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public void printDeleteTask(){"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        System.out.println("
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                String.format(\"Noted. I\u0027ve removed this task:\\n %s\",this.toString())"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        );"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public String safeFileFormat(){"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wayne987"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wayne987": 35
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wayne987"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    private ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    private boolean isUpdating \u003d true;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public TaskList(){"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        this.taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public void DoneTask(int index) throws DukeException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        if(index \u003c 0 || index \u003e taskList.size() - 1){"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            throw new DukeException(\"please give a correct task index\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        Task doneTask \u003d taskList.get(index);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        doneTask.complete();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        System.out.println(String.format(\"  %s\", doneTask.toString()));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public void ListTask(){"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            System.out.println(String.format(\"%d. %s\", i + 1, taskList.get(i).toString()));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public void AddTask(Task newTask, Boolean print){"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        taskList.add(newTask);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        if(print) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            newTask.printAddTask();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            printNumberOfTask(taskList.size());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public int getTaskListSize(){"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        return taskList.size();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public void setTaskListNotUpdating(){"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        this.isUpdating \u003d false;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public Task getTask(int index){"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        return taskList.get(index);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public boolean isUpdating(){"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        return isUpdating;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public void DeleteTask(int index) throws DukeException {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        if(index \u003c 0 || index \u003e taskList.size() - 1){"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            throw new DukeException(\"please give a correct task index\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        taskList.get(index).printDeleteTask();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        taskList.remove(index);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        printNumberOfTask(taskList.size());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    static void printNumberOfTask(int i){"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        System.out.println(String.format(\"Now you have %d tasks in the list.\",i));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wayne987"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wayne987": 63
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wayne987"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public Todo(String taskName) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        super(taskName);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        this.tag \u003d \"T\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        String symbol \u003d isDone ? \"\\u2713\" : \"\\u2718\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        return String.format(\"[%s][%s] %s\",tag,symbol,taskName);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public String safeFileFormat(){"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        int done \u003d isDone ? 1 : 0;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        return String.format(\"%s | %d | %s \\n\",tag,done,taskName);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wayne987"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wayne987": 19
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wayne987"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    private Scanner sc;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    private String line \u003d \"____________________________\\n\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                         +\"____________________________\\n\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    private String logo \u003d \"****** ****** ****** ******\\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                         +\"   *   *      *      *\\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                         +\"   *   ****** ****** ******\\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                         +\"*  *   *      *      *\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                         +\"***    ****** *      *\\n\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public Ui(){"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public void showLoadingError(){"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        System.out.println(\"******LOADING ERROR******\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public void showSavingError(){"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        System.out.println(\"******SAVING ERROR******\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public void printLine(){"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public void printLogo(){"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        System.out.println(logo);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public void printStarting(){"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        System.out.println(\"My name is\\n\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        printLogo();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        System.out.println(\"What do you want?\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public String[] readCommand(){"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        return sc.nextLine().trim().split(\" \", 2);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wayne987"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wayne987": 45
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wayne987"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wayne987"
        },
        "content": "todo"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wayne987"
        },
        "content": "deadline cook book /by Sunday"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wayne987"
        },
        "content": "deadline cook book Sunday"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wayne987"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wayne987"
        },
        "content": "event cook book /at Monday"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wayne987"
        },
        "content": "event cook book Monday"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wayne987"
        },
        "content": "event"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wayne987"
        },
        "content": "list"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wayne987"
        },
        "content": "done 0"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wayne987"
        },
        "content": "done 100"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wayne987"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wayne987"
        },
        "content": "delete 0"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wayne987"
        },
        "content": "delete 100"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wayne987"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wayne987"
        },
        "content": "list"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wayne987"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "wayne987": 17
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wayne987"
        },
        "content": "if ! javac -cp /Users/chanwawai\\ 1/ip/src -Xlint:none -d ../bin /Users/chanwawai\\ 1/ip/src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wayne987"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "-": 32,
      "wayne987": 2
    }
  }
]
