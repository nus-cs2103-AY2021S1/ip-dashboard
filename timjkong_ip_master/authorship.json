[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    mainClassName \u003d \"duke.Launcher\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "timjkong": 16,
      "-": 45
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "timjkong"
        },
        "content": "T ~/~ 1 ~/~ clean room"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "timjkong"
        },
        "content": "D ~/~ 0 ~/~ CS2103 iP ~/~ 2020-08-26 ~/~ 23:59"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "timjkong"
        },
        "content": "E ~/~ 0 ~/~ birthday party ~/~ 2020-12-30 ~/~ 19:00 ~/~ 23:00"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "timjkong"
        },
        "content": "E ~/~ 1 ~/~ christmas ~/~ 2020-12-25"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "timjkong"
        },
        "content": "T ~/~ 1 ~/~ hello"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "timjkong"
        },
        "content": "T ~/~ 0 ~/~ hihi"
      }
    ],
    "authorContributionMap": {
      "timjkong": 6
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "timjkong"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "timjkong"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "timjkong"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "timjkong"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "timjkong"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "timjkong"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "timjkong"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "timjkong"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "timjkong"
        },
        "content": "/** The main class of the app. */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    private static final String path \u003d \"./data/duke.txt\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     * Constructs a Duke object associated with a file path."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     * @param path The location of the storage file."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "timjkong"
        },
        "content": "            this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "timjkong"
        },
        "content": "            this.storage \u003d new Storage(path);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "timjkong"
        },
        "content": "            this.taskList \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "timjkong"
        },
        "content": "            ui.saveErrorMessage(\"Error\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "timjkong"
        },
        "content": "            this.taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "timjkong"
        },
        "content": "            ui.saveErrorMessage(\"Error loading disk\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     * Parses user input and executes the command returned by the parser."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     * @param input The input from the user as a String."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    public void handleUserInput(String input) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "timjkong"
        },
        "content": "            Command command \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "timjkong"
        },
        "content": "            command.execute(taskList, ui, storage);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "timjkong"
        },
        "content": "            ui.saveErrorMessage(\"Sorry, I don\u0027t understand that!\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    public String getResponse() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        return ui.getMessage();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "timjkong": 51,
      "-": 3
    }
  },
  {
    "path": "src/main/java/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "timjkong"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "timjkong"
        },
        "content": "import duke.gui.Main;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "timjkong"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "timjkong"
        },
        "content": "/** A launcher class to workaround classpath issues. */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "timjkong"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "timjkong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "timjkong": 12
    }
  },
  {
    "path": "src/main/java/duke/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "timjkong"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "timjkong"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "timjkong"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "timjkong"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "timjkong"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "timjkong"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "timjkong"
        },
        "content": "/** This class represents the command of adding a task. */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "timjkong"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    private Task task;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     * Constructs a AddCommand object with a task."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     * @param task The Task the user wants to add."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    public AddCommand(Task task) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     * Adds the task to taskList."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     * Prints the task that has just been added."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     * Adds the ask to storage."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     * @param taskList The TaskList to add the task to."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     * @param ui The Ui that saves messages to be sent to the user."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     * @param storage The Storage to add the task to."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "timjkong"
        },
        "content": "            taskList.add(this.task);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "timjkong"
        },
        "content": "            ui.saveAddMessage(this.task, taskList.size());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "timjkong"
        },
        "content": "            storage.add(this.task);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "timjkong"
        },
        "content": "            System.out.println(\"Something went wrong!\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "timjkong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "timjkong": 42
    }
  },
  {
    "path": "src/main/java/duke/command/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "timjkong"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "timjkong"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "timjkong"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "timjkong"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "timjkong"
        },
        "content": "/** This class represents the command to terminate the program. */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "timjkong"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    /** Exits the program. */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        System.exit(0);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "timjkong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "timjkong": 15
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "timjkong"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "timjkong"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "timjkong"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "timjkong"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "timjkong"
        },
        "content": "/** This abstract class is a generic class which all other command classes inherit from. */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "timjkong"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     * Performs the necessary actions associated with the command."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     * @param taskList The TaskList object to make changes to or to get tasks from."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     * @param ui The Ui that saves messages to be sent to the user."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     * @param storage The Storage object to make changes to or to get tasks from."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    public abstract void execute(TaskList taskList, Ui ui, Storage storage);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "timjkong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "timjkong": 18
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "timjkong"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "timjkong"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "timjkong"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "timjkong"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "timjkong"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "timjkong"
        },
        "content": "/** This class represents the command of deleting a task. */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "timjkong"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    private int i;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     * Constructs a DeleteCommand object."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     * @param i The index of the Task to be deleted in the TaskList."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    public DeleteCommand(int i) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        this.i \u003d i;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     * Deletes the task at index i from the TaskList."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     * Prints the deleted task."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     * Refreshes the storage to reflect the changes."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     * @param taskList The TaskList to delete the task from."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     * @param ui The Ui that saves messages to be sent to the user."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     * @param storage The Storage to delete the task from."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "timjkong"
        },
        "content": "            ui.saveDeleteMessage(taskList.delete(i));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "timjkong"
        },
        "content": "            storage.refresh(taskList);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "timjkong"
        },
        "content": "            System.out.println(\"Sorry something went wrong!\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "timjkong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "timjkong": 40
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "timjkong"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "timjkong"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "timjkong"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "timjkong"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "timjkong"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "timjkong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "timjkong"
        },
        "content": " * This class represents the command of marking a task as done"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "timjkong"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "timjkong"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    private int i;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     * Constructs a DoneCommand object associated with an int i"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     * @param i The index of the Task to be marked as done in the TaskList"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    public DoneCommand(int i) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        this.i \u003d i;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     * Marks the task as done."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     * Prints the mark as done message to the user."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     * Refreshes the storage to reflect the changes."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     * @param taskList The TaskList to get the task to be marked as done from."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     * @param ui The Ui that saves messages to be sent to the user.."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     * @param storage The Storage to save the changes."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "timjkong"
        },
        "content": "            ui.saveDoneMessage(taskList.setDone(i));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "timjkong"
        },
        "content": "            storage.refresh(taskList);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "timjkong"
        },
        "content": "            System.out.println(\"Sorry something went wrong!\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "timjkong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "timjkong": 41
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "timjkong"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "timjkong"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "timjkong"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "timjkong"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "timjkong"
        },
        "content": "/** This class represents the find command. */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "timjkong"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    /** The keyword used to filter the TaskList. */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    private String keyword;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    public FindCommand(String keyword) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     * Saves the find message to the Ui."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     * @param taskList The TaskList from which tasks will be filtered from."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     * @param ui The Ui that saves messages to be sent to the user."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     * @param storage The Storage object to make changes to."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        ui.saveFindMessage(taskList, this.keyword);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "timjkong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "timjkong": 28
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "timjkong"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "timjkong"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "timjkong"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "timjkong"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "timjkong"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "timjkong"
        },
        "content": "/** This class represents the command of listing the users\u0027 tasks. */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "timjkong"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    private LocalDate date;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     * Constructs a ListCommand object without a date."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    public ListCommand() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        this.date \u003d null;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     * Constructs a ListCommand object associated with a date."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     * @param date The date filter of the ListCommand."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    public ListCommand(LocalDate date) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     * Saves the list message to the Ui."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     * @param taskList The TaskList to get the tasks."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     * @param ui The Ui that prints the list to the user."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     * @param storage The Storage associated with the Command."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        ui.saveListMessage(taskList, date);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "timjkong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "timjkong": 39
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "timjkong"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "timjkong"
        },
        "content": "/** This class represents all exceptions that the user may encounter while using the app. */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "timjkong"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "timjkong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "timjkong": 8
    }
  },
  {
    "path": "src/main/java/duke/gui/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "timjkong"
        },
        "content": "package duke.gui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "timjkong"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "timjkong"
        },
        "content": "import duke.gui.controllers.MainWindow;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "timjkong"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "timjkong"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "timjkong"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "timjkong"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "timjkong"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "timjkong"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "timjkong"
        },
        "content": "/** A GUI for Duke using FXML. */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "timjkong"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "timjkong"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "timjkong"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "timjkong"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "timjkong"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "timjkong"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "timjkong"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "timjkong"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "timjkong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "timjkong": 32
    }
  },
  {
    "path": "src/main/java/duke/gui/controllers/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "timjkong"
        },
        "content": "package duke.gui.controllers;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "timjkong"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "timjkong"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "timjkong"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "timjkong"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "timjkong"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "timjkong"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "timjkong"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "timjkong"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "timjkong"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "timjkong"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "timjkong"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "timjkong"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "timjkong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "timjkong"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "timjkong"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "timjkong"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "timjkong"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "timjkong"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "timjkong"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "timjkong"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "timjkong"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "timjkong"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "timjkong"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "timjkong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "timjkong": 61
    }
  },
  {
    "path": "src/main/java/duke/gui/controllers/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "timjkong"
        },
        "content": "package duke.gui.controllers;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "timjkong"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "timjkong"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "timjkong"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "timjkong"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "timjkong"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "timjkong"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "timjkong"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "timjkong"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "timjkong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "timjkong"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "timjkong"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "timjkong"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        duke.handleUserInput(input);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        String response \u003d duke.getResponse();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "timjkong"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "timjkong"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        );"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "timjkong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "timjkong": 55
    }
  },
  {
    "path": "src/main/java/duke/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "timjkong"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "timjkong"
        },
        "content": "import duke.command.AddCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "timjkong"
        },
        "content": "import duke.command.ByeCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "timjkong"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "timjkong"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "timjkong"
        },
        "content": "import duke.command.DoneCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "timjkong"
        },
        "content": "import duke.command.FindCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "timjkong"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "timjkong"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "timjkong"
        },
        "content": "import duke.tasks.Deadline;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "timjkong"
        },
        "content": "import duke.tasks.Event;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "timjkong"
        },
        "content": "import duke.tasks.ToDo;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "timjkong"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "timjkong"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "timjkong"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "timjkong"
        },
        "content": "/** This class deals with making sense of user commands. */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "timjkong"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     * @param command The command input from the user."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     * @return The Command to be executed."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     * @throws DukeException when the user input command cannot be parsed."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    public static Command parse(String command) throws DukeException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        if (command.equals(\"bye\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "timjkong"
        },
        "content": "            return new ByeCommand();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        } else if (command.startsWith(\"list\")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "timjkong"
        },
        "content": "            return parseListCommand(command);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        } else if (command.startsWith(\"find\")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "timjkong"
        },
        "content": "            String keyword \u003d command.substring(5);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "timjkong"
        },
        "content": "            return new FindCommand(keyword);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        } else if (command.startsWith(\"done \")) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "timjkong"
        },
        "content": "            int i \u003d Integer.valueOf(command.substring(5));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "timjkong"
        },
        "content": "            return new DoneCommand(i);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        } else if (command.startsWith(\"delete \")) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "timjkong"
        },
        "content": "            int i \u003d Integer.valueOf(command.substring(7));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "timjkong"
        },
        "content": "            return new DeleteCommand(i);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        } else if (command.startsWith(\"todo \")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "timjkong"
        },
        "content": "            ToDo todo \u003d new ToDo(command.substring(5));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "timjkong"
        },
        "content": "            return new AddCommand(todo);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        } else if (command.startsWith(\"deadline \")) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "timjkong"
        },
        "content": "            return parseDeadlineCommand(command);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        } else if (command.startsWith(\"event \")) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "timjkong"
        },
        "content": "            return parseEventCommand(command);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "timjkong"
        },
        "content": "            throw new DukeException(\"Sorry I don\u0027t understand!\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     * @param command User command that starts with list."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     * @return The ListCommand to be executed."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     * @throws DukeException The user input command cannot be parsed."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    public static ListCommand parseListCommand(String command) throws DukeException {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        String[] splits \u003d command.split(\" \");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        if (command.equals(\"list\")) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "timjkong"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        } else if (splits[0].equals(\"list\") \u0026\u0026 splits.length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "timjkong"
        },
        "content": "            LocalDate date \u003d LocalDate.parse(splits[1]);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "timjkong"
        },
        "content": "            return new ListCommand(date);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "timjkong"
        },
        "content": "            throw new DukeException(\"Sorry I don\u0027t understand\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     * @param command User input command that starts with deadline."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     * @return The AddCommand to be executed."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     * @throws DukeException The user input command cannot be parsed."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    public static AddCommand parseDeadlineCommand(String command) throws DukeException {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        int cut \u003d command.indexOf(\" /by \");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        if (cut \u003e\u003d 9) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "timjkong"
        },
        "content": "            String desc \u003d command.substring(9, cut);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "timjkong"
        },
        "content": "            String by \u003d command.substring(cut + 5);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "timjkong"
        },
        "content": "            String[] dateAndTime \u003d by.split(\" \");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "timjkong"
        },
        "content": "            LocalDate date \u003d LocalDate.parse(dateAndTime[0]);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "timjkong"
        },
        "content": "            Deadline deadline \u003d null;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "timjkong"
        },
        "content": "            if (dateAndTime.length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "timjkong"
        },
        "content": "                deadline \u003d new Deadline(desc, date, LocalTime.parse(dateAndTime[1]));"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "timjkong"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "timjkong"
        },
        "content": "                deadline \u003d new Deadline(desc, date);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "timjkong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "timjkong"
        },
        "content": "            return new AddCommand(deadline);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "timjkong"
        },
        "content": "            throw new DukeException(\"Invalid deadline input\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     * @param command User input command that starts with event."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     * @return The AddCommand to be executed."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     * @throws DukeException The user input command cannot be parsed."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    public static AddCommand parseEventCommand(String command) throws DukeException {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        int cut \u003d command.indexOf(\" /at \");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "timjkong"
        },
        "content": "            if (cut \u003e\u003d 9) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "timjkong"
        },
        "content": "                String desc \u003d command.substring(6, cut);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "timjkong"
        },
        "content": "                String at \u003d command.substring(cut + 5);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "timjkong"
        },
        "content": "                String[] dateAndTime \u003d at.split(\" \");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "timjkong"
        },
        "content": "                LocalDate date \u003d LocalDate.parse(dateAndTime[0]);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "timjkong"
        },
        "content": "                Event event \u003d null;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "timjkong"
        },
        "content": "                if (dateAndTime.length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "timjkong"
        },
        "content": "                    String[] startAndEndTime \u003d dateAndTime[1].split(\"-\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "timjkong"
        },
        "content": "                    LocalTime startTime \u003d LocalTime.parse(startAndEndTime[0]);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "timjkong"
        },
        "content": "                    if (startAndEndTime.length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "timjkong"
        },
        "content": "                        event \u003d new Event(desc, date, startTime, LocalTime.parse(startAndEndTime[1]));"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "timjkong"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "timjkong"
        },
        "content": "                        event \u003d new Event(desc, date, startTime);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "timjkong"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "timjkong"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "timjkong"
        },
        "content": "                    event \u003d new Event(desc, date);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "timjkong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "timjkong"
        },
        "content": "                return new AddCommand(event);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "timjkong"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "timjkong"
        },
        "content": "                throw new DukeException(\"Invalid event input\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "timjkong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "timjkong"
        },
        "content": "            throw new DukeException(\"Invalid event input\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "timjkong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "timjkong": 126
    }
  },
  {
    "path": "src/main/java/duke/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "timjkong"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "timjkong"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "timjkong"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "timjkong"
        },
        "content": "import duke.tasks.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "timjkong"
        },
        "content": "import duke.tasks.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "timjkong"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "timjkong"
        },
        "content": "import duke.tasks.ToDo;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "timjkong"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "timjkong"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "timjkong"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "timjkong"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "timjkong"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "timjkong"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "timjkong"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "timjkong"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "timjkong"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "timjkong"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "timjkong"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "timjkong"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "timjkong"
        },
        "content": "/** This class deals with loading tasks from the file and saving tasks in the file */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "timjkong"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    private String path;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    private BufferedWriter writer;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     * Constructs a Storage object with a path as the given path and a BufferedWriter object"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     * that writes to the file located at the given path."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     * @param path The path of the storage file."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    public Storage(String path) throws IOException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        this.path \u003d path;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        File file \u003d new File(path);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        if (!Files.exists(Paths.get(\"./data\"))) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "timjkong"
        },
        "content": "            new File(\"./data\").mkdir();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        file.createNewFile();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        this.writer \u003d new BufferedWriter(new FileWriter(path, true));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     * Loads the tasks from the file."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     * @return A List containing the saved tasks."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     * @throws DukeException An exception while loading tasks from the file."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    public List\u003cTask\u003e load() throws IOException, DukeException {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        List\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        BufferedReader br \u003d new BufferedReader(new FileReader(path));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        String task \u003d br.readLine();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        while(task !\u003d null) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "timjkong"
        },
        "content": "            if (!task.equals(\"\")) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "timjkong"
        },
        "content": "                String[] splits \u003d task.split(\" ~/~ \");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "timjkong"
        },
        "content": "                Task t \u003d null;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "timjkong"
        },
        "content": "                switch (splits[0]) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "timjkong"
        },
        "content": "                case \"T\":"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "timjkong"
        },
        "content": "                    t \u003d new ToDo(splits[2]);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "timjkong"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "timjkong"
        },
        "content": "                case \"D\":"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "timjkong"
        },
        "content": "                    if (splits.length \u003d\u003d 4) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "timjkong"
        },
        "content": "                        t \u003d new Deadline(splits[2], LocalDate.parse(splits[3]));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "timjkong"
        },
        "content": "                    } else if (splits.length \u003d\u003d 5) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "timjkong"
        },
        "content": "                        t \u003d new Deadline(splits[2], LocalDate.parse(splits[3]), LocalTime.parse(splits[4]));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "timjkong"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "timjkong"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "timjkong"
        },
        "content": "                case \"E\":"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "timjkong"
        },
        "content": "                    if (splits.length \u003d\u003d 4) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "timjkong"
        },
        "content": "                        t \u003d new Event(splits[2], LocalDate.parse(splits[3]));"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "timjkong"
        },
        "content": "                    } else if (splits.length \u003d\u003d 5) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "timjkong"
        },
        "content": "                        t \u003d new Event(splits[2], LocalDate.parse(splits[3]), LocalTime.parse(splits[4]));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "timjkong"
        },
        "content": "                    } else if (splits.length \u003d\u003d 6) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "timjkong"
        },
        "content": "                        t \u003d new Event(splits[2], LocalDate.parse(splits[3]), LocalTime.parse(splits[4]),"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "timjkong"
        },
        "content": "                                LocalTime.parse(splits[5]));"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "timjkong"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "timjkong"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "timjkong"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "timjkong"
        },
        "content": "                    throw new DukeException(\"Please check the hard disk for any errors\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "timjkong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "timjkong"
        },
        "content": "                if (splits[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "timjkong"
        },
        "content": "                    t.markAsDone();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "timjkong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "timjkong"
        },
        "content": "                list.add(t);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "timjkong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "timjkong"
        },
        "content": "            task \u003d br.readLine();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     * Saves task to the file."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     * @param task The task to be saved."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    public void add(Task task) throws IOException {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        writer.write(task.txtFileFormat());"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        writer.newLine();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        writer.flush();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     * Refreshes the storage to reflect all tasks in the TaskList."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     * @param taskList The TaskList that the storage will save tasks from."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    public void refresh(TaskList taskList) throws IOException {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        this.writer \u003d new BufferedWriter(new FileWriter(this.path));"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        for (Task t : taskList.getList()) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "timjkong"
        },
        "content": "            writer.write(t.txtFileFormat());"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "timjkong"
        },
        "content": "            writer.newLine();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        this.writer.flush();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        this.writer \u003d new BufferedWriter(new FileWriter(this.path, true));"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "timjkong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "timjkong": 116
    }
  },
  {
    "path": "src/main/java/duke/tasklist/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "timjkong"
        },
        "content": "package duke.tasklist;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "timjkong"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "timjkong"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "timjkong"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "timjkong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "timjkong"
        },
        "content": " * This class represents the list of tasks."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "timjkong"
        },
        "content": " * It has operations to add/delete tasks in the list."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "timjkong"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "timjkong"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    private List\u003cTask\u003e list;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     * Constructs an empty TaskList."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        this.list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     * Constructs a TaskList from the given list."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     * @param list The List to be associated with the TaskList."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    public TaskList(List\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        this.list \u003d list;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    public Task get(int i) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        return this.list.get(i);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    public List\u003cTask\u003e getList() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        return this.list;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     * Marks the i-th task (index i - 1) as done."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     * @param i The index (starting from 1) of the task to be marked as done in the TaskList."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     * @return The task marked as done."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    public Task setDone(int i) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        this.list.get(i - 1).markAsDone();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        return this.list.get(i - 1);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     * Adds a task to the TaskList."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     * @param task The task to be added."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    public void add(Task task) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        this.list.add(task);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     * Deletes the i-th task (index i - 1) from the TaskList."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     * @param i The index (starting from 1) of the task to be deleted."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     * @return The deleted task."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    public Task delete(int i) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        return this.list.remove(i - 1);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     * @return The number of tasks in the TaskList."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        return this.list.size();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "timjkong"
        },
        "content": " }"
      }
    ],
    "authorContributionMap": {
      "timjkong": 71
    }
  },
  {
    "path": "src/main/java/duke/tasks/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "timjkong"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "timjkong"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "timjkong"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "timjkong"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "timjkong"
        },
        "content": "/** This class represents a Deadline. */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "timjkong"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    protected LocalTime time;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     * Constructs a Deadline object associated with a description and a date."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     * @param description The description of the task."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     * @param date The date of the deadline."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    public Deadline(String description, LocalDate date) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     * Constructs a Deadline object associated with a description, a date and a time."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     * @param description The description of the task."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     * @param date The date of the deadline."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     * @param time The time of the deadline."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    public Deadline(String description, LocalDate date, LocalTime time) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    public LocalDate getDate() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        return this.date;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     * @return A String representing the Deadline object, to be used when saving deadlines to the storage file."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    public String txtFileFormat() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        return \"D ~/~ \" + super.txtFileFormat() + \" ~/~ \" + this.date.toString()"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "timjkong"
        },
        "content": "                + (this.time !\u003d null ? \" ~/~ \" + this.time.toString() : \"\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     * @return A String representing the Deadline object, to be used when printing the Deadline."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "timjkong"
        },
        "content": "                + (time !\u003d null ? \" \" + time.format(DateTimeFormatter.ofPattern(\"hh:mm a\")) : \"\") + \")\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "timjkong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "timjkong": 55
    }
  },
  {
    "path": "src/main/java/duke/tasks/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "timjkong"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "timjkong"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "timjkong"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "timjkong"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "timjkong"
        },
        "content": "/** This class represents an event. */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "timjkong"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    protected LocalTime startTime;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    protected LocalTime endTime;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     * Constructs an Event object associated with a description and a date."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     * @param description The description of the task."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     * @param date The date of the event."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    public Event(String description, LocalDate date) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     * Constructs an Event object associated with a description, a date and a start time."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     * @param description The description of the task."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     * @param date The date of the event."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     * @param startTime The time that the event starts."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    public Event(String description, LocalDate date, LocalTime startTime) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        this.startTime \u003d startTime;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     * Constructs an Event object associated with a description, a date, a start time and a end time."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     * @param description The description of the task."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     * @param date The date of the event."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     * @param startTime The time that the event starts."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     * @param endTime The time that the event ends."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    public Event(String description, LocalDate date, LocalTime startTime, LocalTime endTime) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        this.startTime \u003d startTime;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        this.endTime \u003d endTime;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    public LocalDate getDate() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        return this.date;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     * @return A String representing the Event object, to be used when saving events to the storage file."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    public String txtFileFormat() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        return \"E ~/~ \" + super.txtFileFormat() + \" ~/~ \" + this.date.toString()"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "timjkong"
        },
        "content": "                + (startTime !\u003d null ? \" ~/~ \" + startTime.toString() : \"\")"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "timjkong"
        },
        "content": "                + (endTime !\u003d null ? \" ~/~ \" + endTime.toString() : \"\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     * @return A String representing the Event object, to be used when printing the Event."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "timjkong"
        },
        "content": "                + (startTime !\u003d null ? \" \" + startTime.format(DateTimeFormatter.ofPattern(\"hh:mm a\")) : \"\")"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "timjkong"
        },
        "content": "                + (endTime !\u003d null ? \"-\" + endTime.format(DateTimeFormatter.ofPattern(\"hh:mm a\")) : \"\") + \")\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "timjkong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "timjkong": 72
    }
  },
  {
    "path": "src/main/java/duke/tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "timjkong"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "timjkong"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "timjkong"
        },
        "content": "/** A generic class from which all task-related classes will inherit from. */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "timjkong"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     * Constructs a task associated with a description."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     * @param description The description of the task."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     * @return A tick if the task has been marked as done and a cross otherwise."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     * Marks a task as done."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    public LocalDate getDate() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     * @return A String representing the Task object, to be used when saving tasks to the storage file."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    public String txtFileFormat() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        return (this.isDone ? 1 : 0) + \" ~/~ \" + this.description;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     * @return A String representing the Task object, to be used when printing the Task."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "timjkong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "timjkong": 54
    }
  },
  {
    "path": "src/main/java/duke/tasks/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "timjkong"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "timjkong"
        },
        "content": "/** This class represents a todo. */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "timjkong"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     * @return A String representing the ToDo object, to be used when saving todos to the storage file."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    public String txtFileFormat() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        return \"T ~/~ \" + super.txtFileFormat();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     * @return A String representing the ToDo object, to be used when printing the ToDo."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "timjkong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "timjkong": 24
    }
  },
  {
    "path": "src/main/java/duke/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "timjkong"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "timjkong"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "timjkong"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "timjkong"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "timjkong"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "timjkong"
        },
        "content": "/** This class deals with messages sent to the user. */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "timjkong"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    private Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    /** The message to be sent to the user through the GUI. */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    private String message;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        return this.message;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     * Saves all tasks on the specified date to the message."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     * If no date is specified, saves all tasks to the message."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     * @param taskList The TaskList containing all tasks."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     * @param date The date used to filter tasks."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    public void saveListMessage(TaskList taskList, LocalDate date) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        int i \u003d 1;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        if (date \u003d\u003d null) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "timjkong"
        },
        "content": "            for (Task t : taskList.getList()) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "timjkong"
        },
        "content": "                sb.append(i + \".\" + t + \"\\n\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "timjkong"
        },
        "content": "                i++;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "timjkong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "timjkong"
        },
        "content": "            for (Task t : taskList.getList()) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "timjkong"
        },
        "content": "                if (t.getDate() !\u003d null \u0026\u0026 t.getDate().equals(date)) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "timjkong"
        },
        "content": "                    sb.append(i + \".\" + t + \"\\n\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "timjkong"
        },
        "content": "                    i++;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "timjkong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "timjkong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        this.message \u003d sb.toString();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     * Saves all tasks containing the keyword to the message."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     * @param taskList The TaskList containing all tasks."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     * @param keyword The keyword filter."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    public void saveFindMessage(TaskList taskList, String keyword) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        int i \u003d 1;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        for (Task t : taskList.getList()) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "timjkong"
        },
        "content": "            if (t.getDescription().indexOf(keyword) !\u003d -1) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "timjkong"
        },
        "content": "                sb.append(i++ + \".\" + t + \"\\n\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "timjkong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        this.message \u003d sb.toString();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     * Saves the done message with the task that has just been marked as done."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     * @param task The task marked as done."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    public void saveDoneMessage(Task task) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        this.message \u003d \"Nice! I\u0027ve marked this task as done:\\n\\t\" + task;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     * Saves the delete message with the task that has just been deleted."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     * @param task The deleted task."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    public void saveDeleteMessage(Task task) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        this.message \u003d \"Noted. I\u0027ve removed this task:\\n\\t\" + task;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     * Saves the add message with the task that has just been added."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     * @param task The added task."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     * @param size The size of the TaskList."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    public void saveAddMessage(Task task, int size) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        this.message \u003d \"Got it. I\u0027ve added this task:\\n\\t\" + task + \"\\n\""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "timjkong"
        },
        "content": "                + \"Now you have \" + size + \" tasks in the list\";"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     * Saves error messages."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     * @param error The error message."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    public void saveErrorMessage(String error) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        this.message \u003d error;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "timjkong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "timjkong": 101
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "timjkong"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "timjkong"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "timjkong"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "timjkong"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "timjkong"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "timjkong"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "timjkong"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "timjkong": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "timjkong"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "timjkong"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "timjkong"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "timjkong"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "timjkong"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "timjkong"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "timjkong"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.gui.controllers.MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "timjkong"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "timjkong"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "timjkong"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "timjkong"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "timjkong": 19
    }
  },
  {
    "path": "src/test/java/duke/tasklist/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "timjkong"
        },
        "content": "package duke.tasklist;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "timjkong"
        },
        "content": "import duke.tasks.ToDo;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "timjkong"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "timjkong"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "timjkong"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    public void setDoneTest() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        taskList.add(new ToDo(\"todo1\"));"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        taskList.add(new ToDo(\"todo2\"));"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        taskList.add(new ToDo(\"todo3\"));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        assertEquals(\"[T][\\u2713] todo3\", taskList.setDone(3).toString());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "timjkong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "timjkong": 17
    }
  },
  {
    "path": "src/test/java/duke/tasks/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "timjkong"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "timjkong"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "timjkong"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "timjkong"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "timjkong"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "timjkong"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    public void txtFileFormatTest() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        Deadline deadline \u003d new Deadline(\"deadlinetest\", LocalDate.parse(\"2020-08-26\"), LocalTime.parse(\"18:00\"));"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        assertEquals(\"D ~/~ 0 ~/~ deadlinetest ~/~ 2020-08-26 ~/~ 18:00\", deadline.txtFileFormat());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "timjkong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "timjkong": 15
    }
  },
  {
    "path": "src/test/java/duke/tasks/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "timjkong"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "timjkong"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "timjkong"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "timjkong"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "timjkong"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "timjkong"
        },
        "content": "public class EventTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    public void txtFileFormatTest() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        Event event \u003d new Event(\"eventtest\", LocalDate.parse(\"2020-12-25\"),"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "timjkong"
        },
        "content": "                LocalTime.parse(\"18:00\"), LocalTime.parse(\"22:00\"));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        assertEquals(\"E ~/~ 0 ~/~ eventtest ~/~ 2020-12-25 ~/~ 18:00 ~/~ 22:00\", event.txtFileFormat());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "timjkong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "timjkong": 17
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "timjkong"
        },
        "content": "todo study for CS2105"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "timjkong"
        },
        "content": "deadline submit homework /by 17 August 5pm"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "timjkong"
        },
        "content": "event watch movie /at 17 August 8pm-10pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "timjkong"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "timjkong"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "timjkong"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "timjkong"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "timjkong"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "timjkong"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "timjkong"
        },
        "content": "list"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "timjkong"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "timjkong": 11
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "timjkong"
        },
        "content": "export LC_ALL\u003den_GB.UTF-8"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "timjkong"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "timjkong": 3,
      "-": 37
    }
  }
]
