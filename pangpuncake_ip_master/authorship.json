[
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "import duke.command.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "import duke.command.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    private TaskList list;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        this.storage \u003d new Storage();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        this.list \u003d storage.getList();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        this.parser \u003d new Parser(this.list);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                ui.showOutput(parser.processCommand(fullCommand));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                isExit \u003d parser.isExit();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        storage.updateFile(list);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        new Duke().run();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "pangpuncake": 44,
      "-": 1
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        return scanner.nextLine();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    public void showOutput(String output) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        System.out.println(output);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        String logo \u003d \" ____        _\\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____\\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo + \"\\nWhat can I do for you?\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        System.out.println(\"\\n____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    public void showError(String errorMessage) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        System.out.println(errorMessage);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pangpuncake": 32
    }
  },
  {
    "path": "src/main/java/duke/command/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    DukeException(String message) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pangpuncake": 6
    }
  },
  {
    "path": "src/main/java/duke/command/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "import java.util.regex.Matcher;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    private TaskList list;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    private boolean isExit;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    public Parser(TaskList list) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        this.list \u003d list;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        this.isExit \u003d false;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        return isExit;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    public String processCommand(String command) throws DukeException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        Pattern pattern \u003d Pattern.compile(\"^(.*?)\\\\s(.*?)(?:\\\\s/..\\\\s(.*))?$\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        Matcher matcher \u003d pattern.matcher(command);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        if (command.equals(\"list\")) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "            return this.list.toString();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        if (command.equals(\"hello\")) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "            return \"Hi! I\u0027m Duke! Pleasure to meet you :)\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        if (command.equals(\"bye\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "            this.isExit \u003d true;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "            return \"Bye! Hope to see you again soon!\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        if (matcher.find()) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "            String com \u003d matcher.group(1);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "            String task \u003d matcher.group(2);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "            String date \u003d matcher.group(3);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "            String index \u003d matcher.group(2);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "            switch (com) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                case (\"undo\"):"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                case (\"done\"):"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                case (\"delete\"):"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                        return this.processList(com, index);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                    } catch (Exception e) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                        return e.getMessage();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                case (\"todo\"):"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                case (\"deadline\"):"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                case (\"event\"):"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                        return this.processTask(com, task, date);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                    } catch (Exception e) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                        return e.getMessage();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        throw new DukeException(\"Sorry, I did not understand: \" + command);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    private String processTask(String com, String task, String date) throws DukeException {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        switch(com) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "            case(\"todo\"):"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                if (!task.equals(\"\")) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                    return list.addItem(new Todo(task));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                    throw new DukeException(\"Please write a task to be done, with \\\"todo \u003ctask\u003e\\\"\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "            case(\"deadline\"):"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                if (!task.equals(\"\")) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                        return list.addItem(new Deadline(task, Parser.convertDate(date)));"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                    } catch (DateTimeParseException e){"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                        return \"Please write your date in the format \\\"dd/MM/yyyy\\\"\";"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                    throw new DukeException(\"Please write a deadline, with \\\"deadline \u003ctask\u003e /by \u003cdate\u003e\\\"\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "            case(\"event\"):"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                if (!task.equals(\"\")) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                        return list.addItem(new Event(task, Parser.convertDate(date)));"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                    } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                        return \"Please write your date in the format \\\"dd/MM/yyyy\\\"\";"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                    throw new DukeException(\"Please write an event, with \\\"event \u003ctask\u003e /at \u003cdate\u003e\\\"\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                return null;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    private String processList(String com, String index) throws DukeException {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        switch(com) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "            case(\"done\"):"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                if (!index.equals(\"\")) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                    return list.markDone(Integer.parseInt(index) - 1);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                    throw new DukeException(\"Please choose a task to mark as done, with \\\"done \u003ctask number\u003e\\\"\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "            case(\"undo\"):"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                if (!index.equals(\"\")) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                    return list.revertDone(Integer.parseInt(index) - 1);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                    throw new DukeException(\"Please choose a task to undo, with \\\"undo \u003ctask number\u003e\\\"\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "            case(\"delete\"):"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                if (!index.equals(\"\")) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                    return list.deleteItem(Integer.parseInt(index) - 1);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                    throw new DukeException(\"Please choose a task to delete, with \\\"delete \u003ctask number\u003e\\\"\");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                return null;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    private static LocalDate convertDate(String date) throws DateTimeParseException {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        if (date \u003d\u003d null) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        return LocalDate.parse(date, formatter);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pangpuncake": 136
    }
  },
  {
    "path": "src/main/java/duke/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "import duke.task.*;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "import java.util.regex.Matcher;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    private String currentDir \u003d System.getProperty(\"user.dir\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    private Path dataDir \u003d Paths.get(currentDir, \"src\", \"main\", \"data\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    private Path fileDir \u003d Paths.get(currentDir, \"src\", \"main\", \"data\", \"list.txt\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    private static final Pattern pattern \u003d Pattern.compile(\"^\\\\[(.)]\\\\s\\\\[(.)]\\\\s(.*?)(?:\\\\s/..\\\\s(.*))?$\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    private boolean dirExists() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        return Files.exists(dataDir);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    private boolean fileExists() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        return Files.exists(fileDir);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    private File createFile() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        File newFile \u003d new File(dataDir.toString(), \"list.txt\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        System.out.println(\"Creating File...\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "            newFile.createNewFile();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "            return newFile;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    private File getFile() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        if (fileExists()) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "            return fileDir.toFile();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        } else if (dirExists()) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "            return createFile();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "            dataDir.toFile().mkdirs();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "            return createFile();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    public boolean updateFile(TaskList list) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "            System.out.println(\"Saving changes...\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "            File file \u003d getFile();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "            FileWriter writer \u003d new FileWriter(file);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "            for (Task t : list.getList()) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                writer.write(t.getSaveString());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                writer.write(\"\\n\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "            writer.close();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "            System.out.println(\"Changes saved.\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    public TaskList getList() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "            TaskList list \u003d new TaskList();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "            Scanner scanner \u003d new Scanner(this.getFile());"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "            while (scanner.hasNextLine()) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                Matcher matcher \u003d pattern.matcher(scanner.nextLine());"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                if (matcher.find()) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                    boolean done \u003d matcher.group(2).equals(\"1\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                    String task \u003d matcher.group(3);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                    String date \u003d matcher.group(4);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                    LocalDate localDate \u003d null;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                    if (date !\u003d null \u0026\u0026 !date.equals(\"null\")) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                        localDate \u003d LocalDate.parse(date);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                    switch (matcher.group(1)) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                        case (\"T\"):"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                            list.addItem(new Todo(task, done));"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                        case (\"D\"):"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                            list.addItem(new Deadline(task, done, localDate));"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                        case (\"E\"):"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                            list.addItem(new Event(task, done, localDate));"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "            }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "            return list;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "            return new TaskList();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pangpuncake": 105
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "import java.time.format.FormatStyle;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    LocalDate date;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    public Deadline(String task, LocalDate date) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        super(task);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    public Deadline(String task, boolean done, LocalDate date) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        super(task, done);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    public String getSaveString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        return \"[D] \" + super.getSaveString() + \" /by \" + this.date;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        String dateString \u003d \"No date set\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        if (this.date !\u003d null) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "            DateTimeFormatter formatters \u003d DateTimeFormatter.ofLocalizedDate(FormatStyle.MEDIUM);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "            dateString \u003d this.date.format(formatters);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        return \"[Deadline] \" + super.toString() + \" (by: \" + dateString + \")\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pangpuncake": 35
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "import java.time.format.FormatStyle;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    LocalDate date;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    public Event(String task, LocalDate date) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        super(task);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    public Event(String task, boolean done, LocalDate date) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        super(task, done);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    public String getSaveString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        return \"[D] \" + super.getSaveString() + \" /at \" + this.date;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        String dateString \u003d \"No date set\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        if (this.date !\u003d null) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "            DateTimeFormatter formatters \u003d DateTimeFormatter.ofLocalizedDate(FormatStyle.MEDIUM);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "            dateString \u003d this.date.format(formatters);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        return \"[Event] \" + super.toString() + \" (at: \" + dateString + \")\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pangpuncake": 34
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    boolean done;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    String task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    Task(String task) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        this.done \u003d false;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    Task(String task, boolean done) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        this.done \u003d done;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    String markDone() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        this.done \u003d true;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        return \"Great job, keep it up!\\n\" + this.toString();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    String revertDone() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        this.done \u003d false;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        return \"Guess you made a mistake huh?\\n\" + this.toString();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    public String getSaveString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        String result \u003d \"\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        if (this.done) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "            result +\u003d \"[1] \";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "            result +\u003d \"[0] \";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        result +\u003d this.task;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        String result \u003d \"\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        if (this.done) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "            result +\u003d \"[\\u2713] \";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "            result +\u003d \"[\\u2718] \";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        result +\u003d this.task;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pangpuncake": 49
    }
  },
  {
    "path": "src/main/java/duke/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    List\u003cTask\u003e list;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    int activeTasks;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    int completedTasks;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        this.list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        this.activeTasks \u003d 0;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        this.completedTasks \u003d 0;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    public List\u003cTask\u003e getList() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        return this.list;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    public String addItem(Task item) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        this.list.add(item);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        if (item.done) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "            this.completedTasks +\u003d 1;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "            this.activeTasks +\u003d 1;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        return \"added: \" + item + \"\\nActive Tasks: \" +"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                this.activeTasks + \"\\nCompleted Tasks: \" + this.completedTasks;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    public String deleteItem(int index) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        if (index \u003e\u003d this.list.size() || index \u003c 0) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "            return \"Please choose a valid task to delete\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        Task deletedTask \u003d this.list.remove(index);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        if (deletedTask.done) this.completedTasks -\u003d 1; else this.activeTasks -\u003d 1;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        return \"Noted. I have deleted the following task: \\n\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                + deletedTask + \"\\nActive Tasks: \" +"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                this.activeTasks + \"\\nCompleted Tasks: \" + this.completedTasks;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    public String markDone(int index) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        if (index \u003e\u003d this.list.size() || index \u003c 0) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "            return \"Please choose a valid task to mark as done\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        if (!this.list.get(index).done) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "            this.activeTasks -\u003d 1;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "            this.completedTasks +\u003d 1;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "            return this.list.get(index).markDone() + \"\\nActive Tasks: \" +"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                    this.activeTasks + \"\\nCompleted Tasks: \" + this.completedTasks;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        return \"The task is already done!\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    public String revertDone(int index) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        if (index \u003e\u003d this.list.size() || index \u003c 0) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "            return \"Please choose a valid task to mark as not done\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        if (this.list.get(index).done) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "            this.activeTasks +\u003d 1;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "            this.completedTasks -\u003d 1;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "            return this.list.get(index).revertDone() + \"\\nActive Tasks: \" +"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                    this.activeTasks + \"\\nCompleted Tasks: \" + this.completedTasks;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        return \"The task is not yet done!\";"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        if (this.list.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "            return \"There are currently no tasks.\";"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        String result \u003d \"Current tasks:\\n\";"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d this.list.size(); i++) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "            result +\u003d i + \". \" + this.list.get(i - 1) + \"\\n\";"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        result +\u003d \"\\nActive Tasks: \" +"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                this.activeTasks + \"\\nCompleted Tasks: \" + this.completedTasks;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pangpuncake": 82
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    public Todo(String task) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        super(task);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    public Todo(String task, boolean done) { super(task, done);}"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    public String getSaveString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        return \"[T] \" + super.getSaveString();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        return \"[Todo] \" + super.toString();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pangpuncake": 19
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "hello"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "todo hello"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "todo"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "event hello /at world"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "event hello"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "event"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "deadline hello /by world"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "deadline hello"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "list"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "done 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "list"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "pangpuncake": 17
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "if"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "  ! ("
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    find ../src/main/java -name \"*.java\" \u003esources.txt"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    javac -cp ../src -Xlint:none -d ../bin @sources.txt"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "  )"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "pangpuncake": 5,
      "-": 37
    }
  },
  {
    "path": "text-ui-test/sources.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "../src/main/java/Parser.java"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "../src/main/java/Event.java"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "../src/main/java/Task.java"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "../src/main/java/Duke.java"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "../src/main/java/Deadline.java"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "../src/main/java/Todo.java"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "../src/main/java/TaskList.java"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "../src/main/java/DukeException.java"
      }
    ],
    "authorContributionMap": {
      "pangpuncake": 8
    }
  }
]
