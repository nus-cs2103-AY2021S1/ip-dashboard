[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Royxuzeng": 13
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "import static java.lang.Integer.parseInt;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "        String message \u003d \"____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                \"  Hello! I\u0027m Duke\\n\" +"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                \"  What can I do for you?\\n\" +"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                \"____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "        Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "        String string1 \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "        String message1;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "        List\u003cTask\u003e lists \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "        while (!string1.equals(\"bye\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                if (string1.equals(\"list\")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                    System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                    System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                    for (int i \u003d 0; i \u003c lists.size(); i++) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                        Task task \u003d lists.get(i);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                        System.out.println((i + 1) + \".\" + task.toString());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                    System.out.println(\"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                } else if (string1.contains(\"done \")) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                    int order \u003d parseInt(string1.substring(string1.length() - 1));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                    Task task \u003d lists.get(order - 1);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                    task.markAsDone();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                    System.out.println(\"____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                            \"  Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                    System.out.println(\"    [\" + task.getStatusIcon() + \"] \" + task.getDescription());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                    System.out.println(\"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                } else if (string1.contains(\"delete\")) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                    int order \u003d parseInt(string1.substring(string1.length() - 1));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                    Task task \u003d lists.get(order - 1);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                    lists.remove(order - 1);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                    System.out.println(\"____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                            \"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                    System.out.println(\"  \" + task.toString());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                    System.out.println(\"Now you have \" + lists.size() + \" tasks in the list.\\n\" +"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                            \"____________________________________________________________\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                    String type;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                    if (string1.contains(\" \")) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                        type \u003d string1.substring(0, string1.indexOf(\u0027 \u0027));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                        String str \u003d \"\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                        switch (string1) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                            case \"todo\":"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                                str \u003d \"☹ OOPS!!! The description of a todo cannot be empty.\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                                break;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                            case \"deadline\":"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                                str \u003d \"☹ OOPS!!! The description of a deadline cannot be empty.\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                                break;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                            case \"event\":"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                                str \u003d \"☹ OOPS!!! The description of an event cannot be empty.\";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                                break;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                            default:"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                                str \u003d \"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                        throw new DukeException(str);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                    if (type.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                        String description \u003d string1.substring(string1.indexOf(\u0027 \u0027) + 1, string1.indexOf(\u0027/\u0027) - 1);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                        String by \u003d string1.substring(string1.indexOf(\"/by\") + 4);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                        lists.add(new Deadline(description, by));"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                    } else if (type.equals(\"event\")) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                        String time \u003d string1.substring(string1.indexOf(\"/at\") + 4);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                        String description \u003d string1.substring(string1.indexOf(\u0027 \u0027) + 1, string1.indexOf(\u0027/\u0027) - 1);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                        lists.add(new Event(description, time));"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                    } else if (type.equals(\"todo\")) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                        String description \u003d string1.substring(string1.indexOf(\u0027 \u0027) + 1);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                        lists.add(new ToDo(description));"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                        throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                    message1 \u003d \"____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                            \"Got it. I\u0027ve added this task:\\n  \""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                            + lists.get(lists.size() - 1).toString() + \"\\n\" +"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                            \"Now you have \" + lists.size() + \" tasks in the list.\\n\" +"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                            \"____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                    System.out.println(message1);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                System.out.println(\"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                System.out.println(\"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "            string1 \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "        message1 \u003d \"____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                \"  Bye. Hope to see you again soon!\\n\" +"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                \"____________________________________________________________\";"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "        System.out.println(message1);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Royxuzeng": 102,
      "-": 10
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Royxuzeng": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "    protected String time;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "    public Event(String description, String time) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + time + \")\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Royxuzeng": 13
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + getDescription();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Royxuzeng": 25
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Royxuzeng": 10
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "list"
      }
    ],
    "authorContributionMap": {
      "Royxuzeng": 5
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "set JAVA_TOOL_OPTIONS\u003d-Dfile.encoding\u003dUTF-8"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "PAUSE"
      }
    ],
    "authorContributionMap": {
      "Royxuzeng": 5,
      "-": 20
    }
  }
]
