[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shadowezz"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "    public Deadline(String name, String by) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shadowezz"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "        return String.format(\"[D] %s (by: %s)\", super.toString(), this.by);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shadowezz": 13
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shadowezz"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "    public static ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "            String line \u003d sc.nextLine();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "            String[] commandArr \u003d line.split(\" \", 2);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "            String command \u003d commandArr[0];"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "                if (command.equals(\"bye\")) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "                    printMessage(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "                    return;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "                } else if (command.equals(\"list\")) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "                    listTasks();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "                } else if (command.equals(\"done\") || command.equals(\"delete\")) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "                    handleCompleteStatus(command, commandArr);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "                } else if (command.equals(\"todo\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "                    handleTask(TaskType.TODO, commandArr);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "                } else if (command.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "                    handleTask(TaskType.DEADLINE, commandArr);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "                } else if (command.equals(\"event\")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "                    handleTask(TaskType.EVENT, commandArr);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "                    throw new DukeException(\"I am sorry, I don\u0027t know what that means :(\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "                }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "                printMessage(e.getMessage());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shadowezz"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "    public static void handleTask(TaskType taskType, String[] commandArr) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "            if (commandArr.length \u003c 2 || commandArr[1].isBlank()) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "                throw new MissingInformationException(String.format(\"The description of a %s cannot be empty.\", taskType.name().toLowerCase()));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "            if (taskType \u003d\u003d TaskType.TODO) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "                String name \u003d commandArr[1];"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "                addTodo(name);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "            } else if (taskType \u003d\u003d TaskType.DEADLINE) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "                String details \u003d commandArr[1];"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "                String[] detailArr \u003d details.split(\" /by \", 2);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "                if (detailArr.length \u003c 2 || detailArr[1].isBlank()) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "                    throw new MissingInformationException(\"Deadline is missing a date.\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "                }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "                addDeadline(detailArr[0], detailArr[1]);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "                String details \u003d commandArr[1];"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "                String[] detailArr \u003d details.split(\" /at \", 2);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "                if (detailArr.length \u003c 2 || detailArr[1].isBlank()) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "                    throw new MissingInformationException(\"Event is missing a date.\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "                }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "                addEvent(detailArr[0], detailArr[1]);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "        } catch (MissingInformationException e) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "            printMessage(e.getMessage());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "shadowezz"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "    public static void handleCompleteStatus(String status, String[] commandArr) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "            if (commandArr.length \u003c 2 || commandArr[1].isBlank()) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "                throw new MissingInformationException(\"Task number is missing!\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "            }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "            int index \u003d Integer.valueOf(commandArr[1]);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "            if (status.equals(\"done\")) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "                completeTask(index);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "                deleteTask(index);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "            }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "        } catch (MissingInformationException e) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "            printMessage(e.getMessage());"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "            printMessage(\"Invalid task number!\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "shadowezz"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "    public static void printMessage(String message) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "        System.out.println(\"    ______________________________________________________\\n\" +"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "                \"     \" + message + \"\\n    ______________________________________________________\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "shadowezz"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "    public static void addTodo(String name) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "        Todo todo \u003d new Todo(name);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "        addTask(todo);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "shadowezz"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "    public static void addDeadline(String name, String by) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "        Deadline deadline \u003d new Deadline(name, by);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "        addTask(deadline);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "shadowezz"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "    public static void addEvent(String name, String at) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "        Event event \u003d new Event(name, at);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "        addTask(event);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "shadowezz"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "    public static void addTask(Task task) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "        taskList.add(task);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "        int taskLen \u003d taskList.size();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "        String message \u003d String.format(\"Got it. I have added this task:\\n       %s\\n     Now you have %d %s in the list.\","
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "                task, taskLen, taskLen \u003e 1 ? \"tasks\" : \"task\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "        printMessage(message);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "shadowezz"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "    public static void listTasks() {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "        String output \u003d \"Here are the tasks in your list:\\n\";"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "        int taskLen \u003d taskList.size();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "        for (int i \u003d 0; i \u003c taskLen; i++) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "            output +\u003d String.format(\"     %d. %s\", i + 1, taskList.get(i));"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "            if (i !\u003d taskLen - 1) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "                output +\u003d \"\\n\";"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "            }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "        printMessage(output);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "shadowezz"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "    public static void completeTask(int index) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "            taskList.get(index - 1).markAsDone();"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "            String message \u003d String.format(\"Nice! I\u0027ve marked this task as done:\\n       %s\","
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "                    taskList.get(index - 1));"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "            printMessage(message);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "            printMessage(String.format(\"Task number %d is invalid!\", index));"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "shadowezz"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "    public static void deleteTask(int index) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "            Task deletedTask \u003d taskList.remove(index - 1);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "            int taskLen \u003d taskList.size();"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "            String message \u003d String.format(\"Noted. I\u0027ve removed this task:\\n       %s\\n     Now you have %d %s in the list.\","
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "                    deletedTask, taskLen, taskLen \u003e 1 ? \"tasks\" : \"task\");"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "            printMessage(message);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "            printMessage(String.format(\"Task number %d is invalid!\", index));"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shadowezz": 139,
      "-": 11
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shadowezz": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shadowezz"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "    public Event(String name, String at) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shadowezz"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "        return String.format(\"[E] %s (at: %s)\", super.toString(), this.at);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shadowezz": 13
    }
  },
  {
    "path": "src/main/java/MissingInformationException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "public class MissingInformationException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "    public MissingInformationException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shadowezz": 5
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "    protected String name;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shadowezz"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "    public Task(String name) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shadowezz"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "        return isDone ? \"\\u2713\" : \"\\u2718\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shadowezz"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shadowezz"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "        return this.name;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shadowezz"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "        return String.format(\"[%s] %s\", getStatusIcon(), this.name);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shadowezz": 26
    }
  },
  {
    "path": "src/main/java/TaskType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "public enum TaskType {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "    TODO,"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "    DEADLINE,"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "    EVENT;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shadowezz": 5
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "    public Todo(String name) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shadowezz"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "        return String.format(\"[T] %s\", super.toString());"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shadowezz": 10
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "list"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "done"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "done haha"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "list"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "delete"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "delete haha"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "delete 4"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "list"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "todo"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "deadline jog"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "deadline jog /by"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "event"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "event test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "event test /at"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "blah blah"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "shadowezz": 26
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "if"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "  ! ("
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "    find ../src/main/java -name \"*.java\" \u003esources.txt"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "    javac -cp ../src -Xlint:none -d ../bin @sources.txt"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "  )"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "shadowezz": 5,
      "-": 37
    }
  },
  {
    "path": "text-ui-test/sources.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "../src/main/java/TaskType.java"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "../src/main/java/Event.java"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "../src/main/java/Task.java"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "../src/main/java/MissingInformationException.java"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "../src/main/java/Duke.java"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "../src/main/java/Deadline.java"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "../src/main/java/Todo.java"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shadowezz"
        },
        "content": "../src/main/java/DukeException.java"
      }
    ],
    "authorContributionMap": {
      "shadowezz": 8
    }
  }
]
