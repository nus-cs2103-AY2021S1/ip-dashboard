[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "# duke project template"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "1. Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Open or Import`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "1. After the importing is complete, locate the `src/main/java/duke.java` file, right-click it, and choose `Run duke.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    ____        _        "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      }
    ],
    "authorContributionMap": {
      "xnoobftw": 2,
      "-": 24
    }
  },
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    id \"com.github.johnrengelman.shadow\" version \"6.0.0\""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    compile group: \u0027com.joestelmach\u0027, name: \u0027natty\u0027, version: \u00270.6\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    mainClassName \u003d \"duke.Launcher\""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    toolVersion \u003d \"8.35\""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xnoobftw": 19,
      "-": 43
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    private final Storage storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    private final TaskList tasks;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    private final Ui ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * Constructs a Duke object with filePath of data\\tasks.csv"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        this.storage \u003d new Storage(\"data/tasks.csv\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        this.tasks \u003d new TaskList(this.storage.read());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * Constructs a Duke object with the filePath specified"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * @param filePath specifies the directory of the csv file to read from/write to"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        this.storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        this.tasks \u003d new TaskList(this.storage.read());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    public Ui getUi() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        return ui;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * Runs Duke"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "                String input \u003d ui.readCommand();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "                assert !input.isEmpty() || !input.equals(\"\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "                Command c \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * Returns a String that represents Duke\u0027s response to user\u0027s input"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * @param input user\u0027s input"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * @return String that represents Duke\u0027s response"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        String response \u003d \"\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            Command c \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            assert !ui.getMessage().equals(\"\") || !ui.getMessage().isEmpty();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            response +\u003d ui.getLine();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            response +\u003d ui.getMessage();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            response +\u003d ui.getLine();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            ui.clearMessage();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            assert !response.equals(\"\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            assert !e.getMessage().equals(\"\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            return e.getMessage();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        return response;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        new Duke(\"data/tasks.csv\").run();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xnoobftw": 84,
      "-": 2
    }
  },
  {
    "path": "src/main/java/duke/Gui/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "package duke.Gui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "import javafx.geometry.Insets;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "import javafx.scene.layout.Background;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "import javafx.scene.layout.BackgroundFill;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "import javafx.scene.layout.CornerRadii;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "import javafx.scene.paint.Color;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "import javafx.scene.shape.Circle;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "/**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": " */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        dialog.setBackground(new Background(new BackgroundFill(Color.LIGHTBLUE,"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "                new CornerRadii(5), new Insets(0, -5, 0, -5))));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        displayPicture.setClip(new Circle(50, 50, 45));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        db.setBackground(new Background(new BackgroundFill(Color.WHITESMOKE, null, null)));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        db.setBackground(new Background(new BackgroundFill(Color.WHITESMOKE, null, null)));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xnoobftw": 74
    }
  },
  {
    "path": "src/main/java/duke/Gui/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "package duke.Gui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": " * Controller for duke.GUI.MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    private final Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        );"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            Platform.exit();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xnoobftw": 57
    }
  },
  {
    "path": "src/main/java/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xnoobftw": 9
    }
  },
  {
    "path": "src/main/java/duke/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "import duke.Gui.MainWindow;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    private final Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            fxmlLoader.setRoot(new MainWindow());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            stage.setTitle(\"Duke\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xnoobftw": 34
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "import duke.command.DeadlineCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "import duke.command.DoneCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "import duke.command.EventCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "import duke.command.ExitCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "import duke.command.FindCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "import duke.command.InvalidCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "import duke.command.ToDoCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "import duke.exception.DeadlineException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "import duke.exception.DeletionException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "import duke.exception.DoneException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "import duke.exception.EventException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "import duke.exception.FindException;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "import duke.exception.ToDoException;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * Returns a Command object depending on user\u0027s input"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * @param input User\u0027s input via standard input"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * @return Command object"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * @throws DukeException If input is wrong/not recognised"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    @SuppressWarnings(\"checkstyle:AbbreviationAsWordInName\")"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    public static Command parse(String input) throws DukeException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            // when user inputs bye"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            return new ExitCommand(input);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        } else if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            // when user wants to print list of task"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            return new ListCommand(input);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        } else if (input.startsWith(\"done\")) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            // when user completes task"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            String[] temp \u003d input.split(\" \");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            if (temp.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "                throw new DoneException(\"Please input number after done!\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "                        + \" Example of input would be \u0027done 2\u0027 which checks item number 2 from list\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            if (temp.length \u003e 2) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "                throw new DoneException(\"Too many arguements!\""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "                        + \" Example of input would be \u0027done 2\u0027 which checks item number 2 from list\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            int listNumber \u003d Integer.parseInt(temp[1]);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            return new DoneCommand(input, listNumber);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        } else if (input.startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            // when user inputs a deadline"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            String[] temp \u003d input.split(\"/\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            String[] commandTemp \u003d temp[0].split(\" \");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            String command \u003d commandTemp[0];"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            if (temp.length !\u003d 2) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "                if (temp.length \u003e 2) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "                    // if user ended up using a dd/mm/yyyy HHHH format"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "                    throw new DeadlineException(\"Please input date time format in DD-MM-YYYY HHHH format!\\n\""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "                            + \"Eg: 2-12-2019 1800 OR 02-12-2019 1800\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "                    throw new DeadlineException(\"Both time description and description of a deadline must be filled!\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "                }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            String description \u003d \"\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            for (int i \u003d 1; i \u003c commandTemp.length; i++) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "                description +\u003d commandTemp[i] + \" \";"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            String[] timeTemp \u003d temp[1].split(\" \");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            if (timeTemp.length !\u003d 3) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "                // timeTemp[0] \u003d timeCommand which is a by or at"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "                // timeTemp[1] \u003d DDMMYYYY"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "                // timeTemp[2] \u003d HHHH"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "                throw new DeadlineException(\"Please input date time format in DD-MM-YYYY HHHH format!\\n\""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "                        + \"Eg: 2-12-2019 1800 OR 02-12-2019 1800\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            String timeCommand \u003d timeTemp[0];"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            String dayMonthYear \u003d timeTemp[1];"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            String[] dayMonthYearArr \u003d dayMonthYear.split(\"-\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            String twentyFourHourFormat \u003d timeTemp[2];"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            if (dayMonthYearArr.length !\u003d 3 || twentyFourHourFormat.length() !\u003d 4) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "                throw new DeadlineException(\"Please input date time format in DD-MM-YYYY HHHH format!\\n\""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "                        + \"Eg: 2-12-2019 1800 OR 02-12-2019 1800\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            int day \u003d Integer.parseInt(dayMonthYearArr[0]);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            int month \u003d Integer.parseInt(dayMonthYearArr[1]);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            int year \u003d Integer.parseInt(dayMonthYearArr[2]);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            int hour \u003d Integer.parseInt(twentyFourHourFormat.substring(0, 2));"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            int min \u003d Integer.parseInt(twentyFourHourFormat.substring(2, 4));"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            return new DeadlineCommand(description, day, month, year, hour, min);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        } else if (input.startsWith(\"event\")) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            // when user inputs an event"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            String[] temp \u003d input.split(\"/\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            String[] commandTemp \u003d temp[0].split(\" \");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            String command \u003d commandTemp[0];"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            if (temp.length !\u003d 2) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "                if (temp.length \u003e 2) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "                    // if user ended up using a dd/mm/yyyy HHHH format"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "                    throw new EventException(\"Please input date time format in DD-MM-YYYY HHHH format!\\n\""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "                            + \"Eg: 2-12-2019 1800 OR 02-12-2019 1800\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "                    throw new EventException(\"Both time description and description of a event must be filled!\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "                }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            String description \u003d \"\";"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            for (int i \u003d 1; i \u003c commandTemp.length; i++) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "                description +\u003d commandTemp[i] + \" \";"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            String[] timeTemp \u003d temp[1].split(\" \");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            if (timeTemp.length !\u003d 3) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "                // timeTemp[0] \u003d timeCommand which is a by or at"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "                // timeTemp[1] \u003d DDMMYYYY"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "                // timeTemp[2] \u003d HHHH"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "                throw new EventException(\"Please input date time format in DD-MM-YYYY HHHH format!\\n\""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "                        + \"Eg: 2-12-2019 1800 OR 02-12-2019 1800\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            String timeCommand \u003d timeTemp[0];"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            String dayMonthYear \u003d timeTemp[1];"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            String[] dayMonthYearArr \u003d dayMonthYear.split(\"-\");"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            String twentyFourHourFormat \u003d timeTemp[2];"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            if (dayMonthYearArr.length !\u003d 3 || twentyFourHourFormat.length() !\u003d 4) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "                throw new EventException(\"Please input date time format in DD-MM-YYYY HHHH format!\\n\""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "                        + \"Eg: 2-12-2019 1800 OR 02-12-2019 1800\");"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            int day \u003d Integer.parseInt(dayMonthYearArr[0]);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            int month \u003d Integer.parseInt(dayMonthYearArr[1]);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            int year \u003d Integer.parseInt(dayMonthYearArr[2]);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            int hour \u003d Integer.parseInt(twentyFourHourFormat.substring(0, 2));"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            int min \u003d Integer.parseInt(twentyFourHourFormat.substring(2, 4));"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            return new EventCommand(description, day, month, year, hour, min);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        } else if (input.startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            // when user inputs a todo"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            String[] temp \u003d input.split(\" \");"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            String command \u003d temp[0];"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            String description \u003d \"\";"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            for (int i \u003d 1; i \u003c temp.length; i++) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "                description +\u003d temp[i] + \" \";"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            if (description.equals(\"\")) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "                throw new ToDoException(\"The description of a todo cannot be empty!\");"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            return new ToDoCommand(description);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        } else if (input.startsWith(\"delete\")) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            // if input starts with delete"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            String[] temp \u003d input.split(\" \");"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            if (temp.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "                throw new DeletionException(\"Please input index after delete!\""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "                        + \" Example of input would be \u0027delete 1\u0027 which deletes 1st item from list\");"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            if (temp.length \u003e 2) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "                throw new DeletionException(\"Too many arguments!\""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "                        + \" Example of input would be \u0027delete 1\u0027 which deletes 1st item from list\");"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            String command \u003d temp[0];"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            int index \u003d Integer.parseInt(temp[1]) - 1;"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            return new DeleteCommand(input, index);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        } else if (input.startsWith(\"find\")) {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            // when user inputs find"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            String[] temp \u003d input.split(\" \");"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            if (temp.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "                throw new FindException(\"Please input keyword after done! \""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "                        + \"Example of input would be \u0027find book\u0027 which returns tasks with book in it\");"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            // command \u003d\u003d find"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            String command \u003d temp[0];"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            String keyword \u003d \"\";"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            for (int i \u003d 1; i \u003c temp.length; i++) {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "                if (i \u003d\u003d temp.length - 1) {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "                    keyword +\u003d temp[i];"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "                    keyword +\u003d temp[i] + \" \";"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "                }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            return new FindCommand(keyword);"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            // invalid input"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            return new InvalidCommand(input);"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xnoobftw": 202
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    private final String filePath;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * Constructs a Storage object with the filePath specified"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * @param filePath specifies the directory of the csv file to read from/write to"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        initialize();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * Returns an ArrayList of Task from file located in filePath"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * @return ArrayList of Task"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    public ArrayList\u003cTask\u003e read() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        if (isEmpty()) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            // if file is totally new"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "                FileWriter csvWriter \u003d insertColumnHeadersToCsv();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "                csvWriter.flush();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "                csvWriter.close();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            return new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            // if csv file has existing data"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "                BufferedReader csvReader \u003d new BufferedReader(new FileReader(filePath));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "                // does once to remove column headers"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "                String row \u003d csvReader.readLine();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "                while ((row \u003d csvReader.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "                    String[] data \u003d row.split(\",\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "                    // data[0] \u003d type_of_task"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "                    // data[1] \u003d is_completed"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "                    // data[2] \u003d task_description"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "                    // data[3] \u003d time_description (only applicable to deadline and event)"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "                    String typeOfTask \u003d data[0];"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "                    String isCompleted \u003d data[1];"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "                    String taskDescription \u003d data[2];"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "                    String timeDescription \u003d \"\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "                    if (data.length \u003e 3) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "                        timeDescription \u003d data[3];"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "                    if (typeOfTask.equals(\"Event\")) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "                        String[] temp \u003d timeDescription.split(\" \");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "                        int day \u003d Integer.parseInt(temp[0]);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "                        int month \u003d Integer.parseInt(temp[1]);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "                        int year \u003d Integer.parseInt(temp[2]);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "                        int hour \u003d Integer.parseInt(temp[3]);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "                        int min \u003d Integer.parseInt(temp[4]);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "                        Event event \u003d new Event(taskDescription, LocalDateTime.of(year, month, day, hour, min));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "                        if (isCompleted.equals(\"true\")) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "                            event.completeTask();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "                        taskList.add(event);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "                    } else if (typeOfTask.equals(\"Deadline\")) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "                        String[] temp \u003d timeDescription.split(\" \");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "                        int day \u003d Integer.parseInt(temp[0]);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "                        int month \u003d Integer.parseInt(temp[1]);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "                        int year \u003d Integer.parseInt(temp[2]);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "                        int hour \u003d Integer.parseInt(temp[3]);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "                        int min \u003d Integer.parseInt(temp[4]);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "                        Deadline dl \u003d new Deadline(taskDescription, LocalDateTime.of(year, month, day, hour, min));"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "                        if (isCompleted.equals(\"true\")) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "                            dl.completeTask();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "                        taskList.add(dl);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "                    } else if (typeOfTask.equals(\"ToDo\")) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "                        ToDo toDo \u003d new ToDo(taskDescription);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "                        if (isCompleted.equals(\"true\")) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "                            toDo.completeTask();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "                        taskList.add(toDo);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "                }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            return taskList;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * Saves all the tasks inside taskList into the csv located in filePath"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * @param taskList TaskList object"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * @throws IOException If filePath does not exist"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    public void saveToCsv(TaskList taskList) throws IOException {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        FileWriter csvWriter \u003d insertColumnHeadersToCsv();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        for (Task task : taskList.getList()) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            String typeOfTask \u003d task.getClass().getSimpleName();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            String isCompleted \u003d Boolean.toString(task.isCompleted());"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            String taskDescription \u003d task.getTaskDescription();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            String timeDescription \u003d \"\";"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            if (typeOfTask.equals(\"Deadline\")) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "                Deadline dl \u003d (Deadline) task;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "                timeDescription \u003d dl.getDateTimeToString();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            } else if (typeOfTask.equals(\"Event\")) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "                Event event \u003d (Event) task;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "                timeDescription \u003d event.getDateTimeToString();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            csvWriter.append(typeOfTask);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            csvWriter.append(\",\");"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            csvWriter.append(isCompleted);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            csvWriter.append(\",\");"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            csvWriter.append(taskDescription);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            csvWriter.append(\",\");"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            csvWriter.append(timeDescription);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            csvWriter.append(\"\\n\");"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        csvWriter.flush();"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        csvWriter.close();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    private FileWriter insertColumnHeadersToCsv() throws IOException {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        // writes column headers in"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        FileWriter csvWriter \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        csvWriter.append(\"typeOfTask\");"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        csvWriter.append(\",\");"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        csvWriter.append(\"isCompleted\");"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        csvWriter.append(\",\");"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        csvWriter.append(\"taskDescription\");"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        csvWriter.append(\",\");"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        csvWriter.append(\"timeDescriptionInDDMMYYYYHHMM\");"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        csvWriter.append(\"\\n\");"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        return csvWriter;"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * Checks if csv file in filePath is empty"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * @return true if empty, false if not empty"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    public boolean isEmpty() {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        return new File(filePath).length() \u003d\u003d 0;"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    private void initialize() {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        BufferedReader csvReader \u003d null;"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        File dataFolder \u003d new File(\"data\");"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        if (dataFolder.exists()) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            // if data folder exists"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "                // try to read duke.txt in filePath"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "                new BufferedReader(new FileReader(filePath));"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "                // if csv file has not been created yet"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "                    // creates the csv file"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "                    FileWriter csvWriter \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "                    csvWriter.flush();"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "                    csvWriter.close();"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "                } catch (IOException IoError) {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "                    IoError.printStackTrace();"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "                }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            // if data folder does not exist"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            dataFolder.mkdir(); // makes the data folder"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "                // creates the csv file"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "                FileWriter csvWriter \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "                csvWriter.flush();"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "                csvWriter.close();"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            } catch (IOException IoError) {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "                IoError.printStackTrace();"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xnoobftw": 194
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "import duke.comparators.DeadlineAndEventComparator;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "import duke.comparators.TaskComparator;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    private final List\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * Constructs a TaskList object with an ArrayList of Task"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * @param taskList ArrayList of Task"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * Sorts tasklist by shoving toDo tasks towards the back and sorting them lexicographically."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * Deadlines and Events at the front are then sorted by dates in ascending order followed by lexicographic order"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    public void sort() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        this.taskList.sort(new TaskComparator()"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "                .thenComparing(new DeadlineAndEventComparator()));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * Returns ArrayList of Task found in TaskList"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * @return ArrayList of Task"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    public List\u003cTask\u003e getList() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * Appends the specified Task at the end of the ArrayList of Task found in TaskList"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * @param task Task object to be added"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * @return true when successful, false when unsuccessful"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    public boolean add(Task task) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        return this.taskList.add(task);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * Removes the Task at the specific position from the ArrayList of Task found in TaskList"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * @param index index of the task to remove"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    public void remove(int index) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        this.taskList.remove(index);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * Returns the Task at the specified position from the ArrayList of Task found in TaskList"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * @param index index of the task to return"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    public Task get(int index) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        return this.taskList.get(index);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * Returns the number of elements from the ArrayList of Task found in TaskList"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * @return the number of elements from the ArrayList of Task found in TaskList"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        return this.taskList.size();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * Returns a String that represents a TaskList object"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * @return String that represents a TaskList object"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        return this.taskList.toString();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xnoobftw": 79
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "import duke.exception.UiMessageException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    private static final Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    private String message;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * Prints welcome message"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        System.out.println(\"What can i do for you?\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * Set\u0027s message in UI to input message"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * @param message To over write UI\u0027s message"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    public void setMessage(String message) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        this.message \u003d message;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * Returns the String message embedded in UI"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * @return String representation of message"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * @throws UiMessageException Thrown when message is empty"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    public String getMessage() throws UiMessageException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        if (message \u003d\u003d null || message.equals(\"\")) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            throw new UiMessageException(\"Message is empty for UI! Please setMessage\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            return message;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * Clears message found in UI"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    public void clearMessage() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        this.setMessage(\"\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * Reads User\u0027s input via stdin"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * @return User\u0027s input"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        return sc.nextLine();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * Prints error message provided by exception"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * @param errorMessage Error Message provided by exception"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    public void showError(String errorMessage) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        System.out.println(errorMessage);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * Prints a line that is 30 characters long"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        System.out.println(\"______________________________\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * Returns a String of 30 underscores which represents a line"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * @return String of 30 underscores which represents a line"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    public String getLine() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        return \"______________________________\\n\";"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xnoobftw": 78
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    public final String input;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * Constructs a Command object with the input specified"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * @param input User\u0027s input that is processed by the Command Object"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    public Command(String input) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * Invokes the Command object to process the User\u0027s request based on User\u0027s input"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * @param tasks TaskList that contains an ArrayList of Task"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * @param ui Ui object that interacts with User"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * @param storage Storage object that reads from/write to specified filePath"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * @throws DukeException if User\u0027s input is invalid"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * Returns true if User\u0027s request is to exit, false otherwise"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * @return true if User\u0027s request is to exit, false otherwise"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    public abstract boolean isExit();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xnoobftw": 34
    }
  },
  {
    "path": "src/main/java/duke/command/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "import java.time.DateTimeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "import duke.exception.DeadlineException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "public class DeadlineCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    private final int day;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    private final int month;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    private final int year;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    private final int hour;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    private final int min;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * Constructs a Deadline object with it\u0027s input, date and time specified"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * @param input User\u0027s input that is processed by the Deadline Object"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * @param day the day-of-month to represent, from 1 to 31"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * @param month the month-of-year to represent, from 1 (January) to 12 (December)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * @param year the year to represent, from -999999999 to +999999999"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * @param hour the hour-of-day to represent, from 0 to 23"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * @param min the minute-of-hour to represent, from 0 to 59"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    public DeadlineCommand(String input, int day, int month, int year, int hour, int min) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        super(input);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        this.day \u003d day;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        this.month \u003d month;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        this.year \u003d year;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        this.hour \u003d hour;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        this.min \u003d min;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * Invokes the DeadlineCommand object to process the User\u0027s request based on User\u0027s input"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * @param tasks TaskList that contains an ArrayList of Task"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * @param ui Ui object that interacts with User"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * @param storage Storage object that reads from/write to specified filePath"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * @throws DeadlineException if User\u0027s input is invalid"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DeadlineException {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        String message \u003d \"\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        LocalDateTime dateTime;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            dateTime \u003d LocalDateTime.of(year, month, day, hour, min);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        } catch (DateTimeException e) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            throw new DeadlineException(\"Please input date time format in DD-MM-YYYY HHHH format!\\n\""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "                    + \"Eg: 2-12-2019 1800 OR 02-12-2019 1800\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        Task task \u003d new Deadline(input, dateTime);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        System.out.println(task);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        message +\u003d \"Got it. I\u0027ve added this task:\\n\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        message +\u003d task.toString() + \"\\n\";"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        message +\u003d \"Now you have \" + tasks.size() + \" tasks in the list.\\n\";"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        ui.setMessage(message);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        tasks.sort();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * Returns false as DeadlineCommand is not for termination"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * @return false"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xnoobftw": 80
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "import duke.exception.DeletionException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    private final int index;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * Constructs a DeleteCommand object with the input specified"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * @param input User\u0027s input that is processed by the DeleteCommand Object"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * @param index index of the task to remove"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    public DeleteCommand(String input, int index) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        super(input);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * Invokes the DeleteCommand object to process the User\u0027s request based on User\u0027s input"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * @param tasks TaskList that contains an ArrayList of Task"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * @param ui Ui object that interacts with User"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * @param storage Storage object that reads from/write to specified filePath"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * @throws DeletionException if index does not exist in tasks"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DeletionException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        String message \u003d \"\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        if (index \u003e\u003d tasks.size() || index \u003c 0) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            throw new DeletionException(\"Item does not exist in list!\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        Task task \u003d tasks.get(index);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        tasks.remove(index);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        System.out.println(task);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        message +\u003d \"Noted. I\u0027ve removed this task:\\n\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        message +\u003d task.toString() + \"\\n\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        message +\u003d \"Now you have \" + tasks.size() + \" tasks in the list.\\n\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        ui.setMessage(message);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * Returns false as DeleteCommand is not for termination"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * @return false"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xnoobftw": 58
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "import duke.exception.DoneException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    private final int listNumber;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * Constructs a DoneCommand object with the input and listNumber specified"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * @param input User\u0027s input that is processed by the DoneCommand Object"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * @param listNumber listNumber of the task to mark as complete"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    public DoneCommand(String input, int listNumber) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        super(input);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        this.listNumber \u003d listNumber;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * Invokes the DoneCommand object to process the User\u0027s request based on User\u0027s input"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * @param tasks TaskList that contains an ArrayList of Task"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * @param ui Ui object that interacts with User"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * @param storage Storage object that reads from/write to specified filePath"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * @throws DoneException if task does not exist in tasks"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DoneException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        String message \u003d \"\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        if (listNumber \u003e tasks.size() || listNumber \u003c\u003d 0) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            throw new DoneException(\"Item number \" + listNumber + \" does not exist in list!\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        tasks.get(listNumber - 1).completeTask();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        System.out.println(tasks.get(listNumber - 1).toString());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        message +\u003d \"Nice! I\u0027ve marked this task as done:\\n\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        message +\u003d tasks.get(listNumber - 1).toString() + \"\\n\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        ui.setMessage(message);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        tasks.sort();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * Returns false as DoneCommand is not for termination"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * @return false"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xnoobftw": 53
    }
  },
  {
    "path": "src/main/java/duke/command/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "import java.time.DateTimeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "import duke.exception.EventException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "public class EventCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    private final int day;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    private final int month;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    private final int year;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    private final int hour;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    private final int min;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * Constructs a Event object with it\u0027s input, date and time specified"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * @param input User\u0027s input that is processed by the Deadline Object"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * @param day the day-of-month to represent, from 1 to 31"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * @param month the month-of-year to represent, from 1 (January) to 12 (December)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * @param year the year to represent, from -999999999 to +999999999"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * @param hour the hour-of-day to represent, from 0 to 23"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * @param min the minute-of-hour to represent, from 0 to 59"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    public EventCommand(String input, int day, int month, int year, int hour, int min) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        super(input);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        this.day \u003d day;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        this.month \u003d month;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        this.year \u003d year;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        this.hour \u003d hour;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        this.min \u003d min;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * Invokes the EventCommand object to process the User\u0027s request based on User\u0027s input"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * @param tasks TaskList that contains an ArrayList of Task"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * @param ui Ui object that interacts with User"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * @param storage Storage object that reads from/write to specified filePath"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * @throws EventException"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws EventException {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        String message \u003d \"\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        LocalDateTime dateTime \u003d null;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            dateTime \u003d LocalDateTime.of(year, month, day, hour, min);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        } catch (DateTimeException e) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            throw new EventException(\"Please input date time format in DD-MM-YYYY HHHH format!\\n\""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "                    + \"Eg: 2-12-2019 1800 OR 02-12-2019 1800\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        Task task \u003d new Event(input, dateTime);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        System.out.println(task);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        message +\u003d \"Got it. I\u0027ve added this task:\\n\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        message +\u003d task.toString() + \"\\n\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        message +\u003d \"Now you have \" + tasks.size() + \" tasks in the list.\\n\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        ui.setMessage(message);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        tasks.sort();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * Returns false as EventCommand is not for termination"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * @return false"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xnoobftw": 78
    }
  },
  {
    "path": "src/main/java/duke/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * Constructs a ExitCommand object with the input specified"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * @param input User\u0027s input that is processed by the ExitCommand Object"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    public ExitCommand(String input) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        super(input);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * Invokes the ExitCommand object which terminates Duke"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * @param tasks TaskList that contains an ArrayList of Task"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * @param ui Ui object that interacts with User"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * @param storage Storage object that reads from/write to specified filePath"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        ui.setMessage(\"Bye. Hope to see you again soon!\\n\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        tasks.sort();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        // saves tasks to filePath"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            storage.saveToCsv(tasks);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * Returns true as ExitCommand is a terminating Command"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * @return true"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xnoobftw": 47
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "import duke.exception.FindException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * Constructs a FindCommand object with the input specified"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * @param input User\u0027s input that is processed by the FindCommand Object"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    public FindCommand(String input) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        super(input);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * Invokes the FindCommand object to process the User\u0027s request based on User\u0027s input"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * @param tasks TaskList that contains an ArrayList of Task"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * @param ui Ui object that interacts with User"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * @param storage Storage object that reads from/write to specified filePath"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws FindException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        String message \u003d \"\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        String listOfTask \u003d \"\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        int index \u003d 1;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        for (Task task : tasks.getList()) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            if (task.toString().contains(input)) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "                listOfTask +\u003d index + \". \" + task.toString() + \"\\n\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "                message +\u003d listOfTask;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "                index++;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        if (listOfTask.equals(\"\")) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            throw new FindException(\"Keyword is not found in any tasks!\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            System.out.println(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            System.out.println(listOfTask);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            message \u003d \"Here are the matching tasks in your list:\" + message;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            ui.setMessage(message);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * Returns false as FindCommand is not for termination"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * @return false"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xnoobftw": 56
    }
  },
  {
    "path": "src/main/java/duke/command/InvalidCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "public class InvalidCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * Constructs a InvalidCommand object with the input specified"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * @param input User\u0027s input that is processed by the InvalidCommand Object"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    public InvalidCommand(String input) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        super(input);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * Invokes the InvalidCommand object to feedback to the User that Duke does not recognise User\u0027s input"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * @param tasks TaskList that contains an ArrayList of Task"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * @param ui Ui object that interacts with User"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * @param storage Storage object that reads from/write to specified filePath"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        ui.setMessage(\"I\u0027m sorry, but I don\u0027t know what that means! :-(\\n\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        System.out.println(\"I\u0027m sorry, but I don\u0027t know what that means! :-(\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * Returns false as InvalidCommand is not for termination"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * @return false"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xnoobftw": 37
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * Constructs a ListCommand object with the input specified"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * @param input User\u0027s input that is processed by the ListCommand Object"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    public ListCommand(String input) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        super(input);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * Invokes the ListCommand object to process the User\u0027s request based on User\u0027s input"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * @param tasks TaskList that contains an ArrayList of Task"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * @param ui Ui object that interacts with User"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * @param storage Storage object that reads from/write to specified filePath"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        tasks.sort();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        String message \u003d \"\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        message +\u003d \"Here are the tasks in your list:\\n\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        int index \u003d 1;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        for (Task task : tasks.getList()) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            System.out.println(index + \". \" + task.toString());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            message +\u003d index + \". \" + task.toString() + \"\\n\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            index++;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        ui.setMessage(message);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * Returns false as ListCommand is not for termination"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * @return false"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xnoobftw": 47
    }
  },
  {
    "path": "src/main/java/duke/command/ToDoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "public class ToDoCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * Constructs a ToDoCommand object with the input specified"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * @param input User\u0027s input that is processed by the ToDoCommand Object"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    public ToDoCommand(String input) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        super(input);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * Invokes the ToDoCommand object to process the User\u0027s request based on User\u0027s input"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * @param tasks TaskList that contains an ArrayList of Task"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * @param ui Ui object that interacts with User"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * @param storage Storage object that reads from/write to specified filePath"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        Task task \u003d new ToDo(input);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        System.out.println(task);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        String message \u003d \"\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        message +\u003d \"Got it. I\u0027ve added this task:\\n\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        message +\u003d task.toString() + \"\\n\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        message +\u003d \"Now you have \" + tasks.size() + \" tasks in the list.\\n\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        ui.setMessage(message);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        tasks.sort();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * Returns false as ToDoCommand is not for termination"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * @return false"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xnoobftw": 50
    }
  },
  {
    "path": "src/main/java/duke/comparators/DeadlineAndEventComparator.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "package duke.comparators;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "import java.util.Comparator;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "public class DeadlineAndEventComparator implements Comparator\u003cTask\u003e {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    public int compare(Task o1, Task o2) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        if (o1 instanceof Deadline \u0026\u0026 o2 instanceof Deadline) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            Deadline d1 \u003d (Deadline) o1;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            Deadline d2 \u003d (Deadline) o2;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            return d1.getDateTime().compareTo(d2.getDateTime());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        } else if (o1 instanceof Deadline \u0026\u0026 o2 instanceof Event) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            Deadline d1 \u003d (Deadline) o1;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            Event e2 \u003d (Event) o2;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            return d1.getDateTime().compareTo(e2.getDateTime());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        } else if (o1 instanceof Event \u0026\u0026 o2 instanceof Deadline) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            Event e1 \u003d (Event) o1;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            Deadline d2 \u003d (Deadline) o2;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            return e1.getDateTime().compareTo(d2.getDateTime());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        } else if (o1 instanceof Event \u0026\u0026 o2 instanceof Event) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            Event e1 \u003d (Event) o1;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            Event e2 \u003d (Event) o2;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            return e1.getDateTime().compareTo(e2.getDateTime());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            return 0;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xnoobftw": 32
    }
  },
  {
    "path": "src/main/java/duke/comparators/TaskComparator.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "package duke.comparators;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "import java.util.Comparator;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "public class TaskComparator implements Comparator\u003cTask\u003e {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    public int compare(Task o1, Task o2) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        int taskOneIndex \u003d getOrderIndex(o1);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        int taskTwoIndex \u003d getOrderIndex(o2);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        if (taskOneIndex \u003c taskTwoIndex) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            return -1;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        } else if (taskOneIndex \u003e taskTwoIndex) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            return 1;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            return 0;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    private int getOrderIndex(Task task) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        if (task \u003d\u003d null) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            return 0;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        } else if (task instanceof Event || task instanceof Deadline) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            // so events and deadlines comes before todo"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            return 1;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            // task is a task"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            return 2;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xnoobftw": 34
    }
  },
  {
    "path": "src/main/java/duke/exception/DeadlineException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "public class DeadlineException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    public DeadlineException(String msg) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xnoobftw": 7
    }
  },
  {
    "path": "src/main/java/duke/exception/DeletionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "public class DeletionException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    public DeletionException(String msg) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xnoobftw": 7
    }
  },
  {
    "path": "src/main/java/duke/exception/DoneException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "public class DoneException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    public DoneException(String msg) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xnoobftw": 7
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    public DukeException(String msg) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xnoobftw": 7
    }
  },
  {
    "path": "src/main/java/duke/exception/EventException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "public class EventException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    public EventException(String msg) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xnoobftw": 7
    }
  },
  {
    "path": "src/main/java/duke/exception/FindException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "public class FindException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    public FindException(String msg) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xnoobftw": 7
    }
  },
  {
    "path": "src/main/java/duke/exception/ToDoException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "public class ToDoException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    public ToDoException(String msg) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xnoobftw": 7
    }
  },
  {
    "path": "src/main/java/duke/exception/UiMessageException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "public class UiMessageException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    public UiMessageException(String msg) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xnoobftw": 7
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    private final LocalDateTime dateTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * Constructs a Deadline object to represent a Deadline Task"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * @param task description of task"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * @param dateTime LocalDateTime object that represents the deadline"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    public Deadline(String task, LocalDateTime dateTime) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        super(task);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        this.dateTime \u003d dateTime;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * Returns a String in the format of \"dd MM yyyy hh mm\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * @return String that represents the date and time of the Deadline Task"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    public String getDateTimeToString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        int dd \u003d this.dateTime.getDayOfMonth();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        int mm \u003d this.dateTime.getMonthValue();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        int yyyy \u003d this.dateTime.getYear();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        int hour \u003d this.dateTime.getHour();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        int min \u003d this.dateTime.getMinute();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        return dd + \" \" + mm + \" \" + yyyy + \" \" + hour + \" \" + min;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    public LocalDateTime getDateTime() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        return dateTime;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * Returns a String that represents a deadline object"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * @return String that represents a deadline object"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        String mmm \u003d this.dateTime.getMonth().toString().substring(0, 3);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        String ddd \u003d this.dateTime.getDayOfWeek().toString().substring(0, 3);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        int dd \u003d this.dateTime.getDayOfMonth();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        int yyyy \u003d this.dateTime.getYear();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        String hhhh \u003d this.dateTime.toLocalTime().toString();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        return \"[D]\" + super.toString() + \"(at: \" + dd + \" \" + mmm + \" \" + yyyy + \", \" + ddd + \" @ \" + hhhh + \")\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xnoobftw": 48
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    private final LocalDateTime dateTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * Constructs a Event object to represent an Event task"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * @param task description of task"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * @param dateTime LocalDateTime object that represents the event\u0027s date and time"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    public Event(String task, LocalDateTime dateTime) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        super(task);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        this.dateTime \u003d dateTime;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * Returns a String in the format of \"dd MM yyyy hh mm\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * @return String that represents the date and time of the Deadline Task"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    public String getDateTimeToString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        int dd \u003d this.dateTime.getDayOfMonth();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        int mm \u003d this.dateTime.getMonthValue();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        int yyyy \u003d this.dateTime.getYear();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        int hour \u003d this.dateTime.getHour();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        int min \u003d this.dateTime.getMinute();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        return dd + \" \" + mm + \" \" + yyyy + \" \" + hour + \" \" + min;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    public LocalDateTime getDateTime() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        return dateTime;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * Returns a String that represents a event object"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * @return String that represents a deadline object"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        String mmm \u003d this.dateTime.getMonth().toString().substring(0, 3);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        String ddd \u003d this.dateTime.getDayOfWeek().toString().substring(0, 3);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        int dd \u003d this.dateTime.getDayOfMonth();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        int yyyy \u003d this.dateTime.getYear();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        String hhhh \u003d this.dateTime.toLocalTime().toString();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        return \"[E]\" + super.toString() + \"(at: \" + dd + \" \" + mmm + \" \" + yyyy + \", \" + ddd + \" @ \" + hhhh + \")\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xnoobftw": 48
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    private final String taskDescription;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    protected Task(String task) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        this.taskDescription \u003d task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * Returns the description of task"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * @return string representation of the description of task"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    public String getTaskDescription() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        return this.taskDescription;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * Returns true if object is completed, false otherwise"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * @return true if object is completed, false otherwise"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    public boolean isCompleted() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        return this.isDone;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * Marks task as completed"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    public void completeTask() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        return \"[\" + (this.isDone ? \"\\u2713\" : \"\\u2717\") + \"] \" + this.taskDescription;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xnoobftw": 38
    }
  },
  {
    "path": "src/main/java/duke/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * Constructs a ToDo object to represent a ToDo task"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     * @param taskDescription description of task"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    public ToDo(String taskDescription) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        super(taskDescription);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xnoobftw": 17
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "xnoobftw": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "\u003cfx:root maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" type\u003d\"AnchorPane\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.Gui.MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "xnoobftw": 19
    }
  },
  {
    "path": "src/test/java/duke/task/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    public void testConstructor() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        assertEquals(\"[D][\\u2717] Individual Project(at: 23 AUG 2020, SUN @ 18:00)\","
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "                new Deadline(\"Individual Project\","
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "                        LocalDateTime.of(2020, 8, 23, 18, 0)).toString());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    public void testCompletedTask() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        Deadline dl \u003d new Deadline(\"Individual Project\","
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "                LocalDateTime.of(2020, 8, 23, 18, 0));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        dl.completeTask();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        assertEquals(\"[D][\\u2713] Individual Project(at: 23 AUG 2020, SUN @ 18:00)\", dl.toString());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xnoobftw": 26
    }
  },
  {
    "path": "src/test/java/duke/task/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "public class EventTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    public void testConstructor() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        assertEquals(\"[E][\\u2717] Individual Project(at: 23 AUG 2020, SUN @ 18:00)\","
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "                new Event(\"Individual Project\","
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "                        LocalDateTime.of(2020, 8, 23, 18, 0)).toString());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    public void testCompletedTask() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        Event dl \u003d new Event(\"Individual Project\","
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "                LocalDateTime.of(2020, 8, 23, 18, 0));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        dl.completeTask();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        assertEquals(\"[E][\\u2713] Individual Project(at: 23 AUG 2020, SUN @ 18:00)\", dl.toString());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xnoobftw": 26
    }
  },
  {
    "path": "src/test/java/duke/task/TaskInheritanceTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "public class TaskInheritanceTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    public void testEventInheritance() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        Task task \u003d new Event(\"Individual Project\","
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "                LocalDateTime.of(2020, 8, 23, 18, 0));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        assertEquals(\"[E][\\u2717] Individual Project(at: 23 AUG 2020, SUN @ 18:00)\","
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "                task.toString());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    public void testDeadlineInheritance() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        Task task \u003d new Deadline(\"Individual Project\","
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "                LocalDateTime.of(2020, 8, 23, 18, 0));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        assertEquals(\"[D][\\u2717] Individual Project(at: 23 AUG 2020, SUN @ 18:00)\","
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "                task.toString());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xnoobftw": 26
    }
  },
  {
    "path": "src/test/java/duke/task/ToDoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "public class ToDoTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    public void testConstructor() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        assertEquals(\"[T][\\u2717] Test1\", new ToDo(\"Test1\").toString());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    public void testCompletedTask() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        ToDo testee \u003d new ToDo(\"Test2\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        testee.completeTask();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "        assertEquals(\"[T][\\u2713] Test2\", testee.toString());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xnoobftw": 20
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "todo"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "event"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "deadline return book"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "deadline return book /by 22 1600"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "deadline return book /by 22-08 1700"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "deadline return book /by 22-08-2020"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "deadline return book /by 22-2020 1900"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "event project meeting"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "event project meeting /at 22 1600"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "event project meeting /at 22-08 1700"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "event project meeting /at 22-08-2020"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "event project meeting /at 22-2020 1900"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "deadline return book /by 22-08-2020 1700"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "event project meeting /at 22-08-2020 1900"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "todo join sports club"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "find book"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "find"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "find book food toot"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "done"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "done 1 2 3"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "done 213123"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "list"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "delete 312312"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "delete -1"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "list"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "list"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "delete 5"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "list"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "xnoobftw": 41
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\Command\\*.java ..\\src\\main\\java\\duke\\Exception\\*.java ..\\src\\main\\java\\duke\\Task\\*.java ..\\src\\main\\java\\duke\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "    PAUSE"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xnoobftw"
        },
        "content": "java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "xnoobftw": 4,
      "-": 19
    }
  }
]
