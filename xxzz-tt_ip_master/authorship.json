[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    toolVersion \u003d \u00278.29\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    implementation \u0027org.testng:testng:6.14.3\u0027"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    mainClassName \u003d \"seedu.duke.Duke\""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 46,
      "xxzz-tt": 20
    }
  },
  {
    "path": "src/main/java/Chat.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "enum Chat {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    TODO,"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    DEADLINE,"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    EVENT,"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    DONE,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    BYE,"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    DELETE,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    LIST"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xxzz-tt": 9
    }
  },
  {
    "path": "src/main/java/Chatbot.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "import java.time.format.FormatStyle;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "import java.time.temporal.ChronoUnit;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "public class Chatbot {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    public String line \u003d \"____________________________________________________________\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    public List\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    public void greeting() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\\n\" +"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                \"What can I do for you?\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    public void addTask(Task t) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        System.out.println(t.printTask());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        System.out.println(\"Now you have \" + list.size() + (list.size() \u003e 1 ? \" tasks\" : \" task\") + \" on the list\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    public void generateList() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        for (int i \u003d 0; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "            Task t \u003d list.get(i);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "            System.out.println((i + 1) + \". \" + t.printTask());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    public void delete(int i) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        System.out.println(list.get(i - 1).printTask());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        list.remove(i - 1);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        System.out.println(\"Now you have \" + list.size() + (list.size() \u003e 1 ? \" tasks\" : \" task\") + \" on the list\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    public boolean chat(String s) throws IncorrectInputException, IOException {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        int j \u003d s.indexOf(\u0027 \u0027);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        String firstWord \u003d \"\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        if (j \u003e -1) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "            firstWord \u003d s.substring(0, j);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "            firstWord \u003d s;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "            BufferedWriter file \u003d new BufferedWriter(new FileWriter("
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                    \"src/main/java/tasklist.txt\", true));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "            switch (firstWord) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                case \"bye\":"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                    exit();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                    return false;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "//            break;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                case \"list\":"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                    generateList();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                    return true;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                case \"done\":"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                    char x \u003d s.charAt(s.length() - 1);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                    int i \u003d Character.getNumericValue(x);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                    Task t \u003d list.get(i - 1);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                    t.markAsDone();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                    list.set(i - 1, t);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                    System.out.println(line);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                    System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                    System.out.println(t.printTask());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                    System.out.println(line);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                    return true;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                case \"delete\":"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                    char y \u003d s.charAt(s.length() - 1);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                    int k \u003d Character.getNumericValue(y);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                    delete(k);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                if (s.length() !\u003d \"deadline\".length()) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                    String[] value \u003d s.split(\" /by \");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                    String date \u003d value[1];"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                    DateTimeFormatter inputFormat \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                    DateTimeFormatter outputFormat \u003d DateTimeFormatter.ofPattern(\"MM-dd-yyyy HH:mm\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                    LocalDateTime dateTime \u003d LocalDateTime.parse(date, inputFormat);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                    dateTime.format(outputFormat);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                    Deadline deadline \u003d new Deadline(value[0].replace(\"deadline \", \"\"), dateTime);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                    list.add(deadline);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                    addTask(deadline);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                    file.newLine();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                    file.write(deadline.toSave());"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                    file.close();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                    return true;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                    throw new IncorrectInputException(\"☹ OOPS!!! The description of an deadline cannot be empty.\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                case \"todo\":"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                    if (s.length() !\u003d \"todo\".length()) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                        ToDo toDo \u003d new ToDo(s.replace(\"todo \", \"\"));"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                        list.add(toDo);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                        addTask(toDo);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                        file.newLine();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                        file.write(toDo.toSave());"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                        file.close();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                        return true;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                        throw new IncorrectInputException(\"☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                case \"event\":"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                    if (s.length() !\u003d \"event\".length()) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                        String[] value \u003d s.split(\" /at \");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                        Event event \u003d new Event(value[0].replace(\"event \", \"\"), value[1]);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                        list.add(event);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                        addTask(event);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                        file.newLine();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                        file.write(event.toSave());"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                        file.close();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                        return true;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                        throw new IncorrectInputException(\"☹ OOPS!!! The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                    throw new IncorrectInputException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "            }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    public void exit() {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xxzz-tt": 145
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "import java.time.temporal.ChronoUnit;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    private LocalDateTime deadline;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    public Deadline(String name, LocalDateTime deadline) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    public String printTask() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        return \"[D]\" + super.printTask() + \" (by: \" +"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                deadline.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\")) + \")\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    public String toSave() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        return \"D \" + super.toSave() + \" | \" + deadline.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xxzz-tt": 24
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xxzz-tt": 59
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    Storage storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    Ui ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    TaskList taskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    FriendList friendList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "     * Constructor for Duke."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "     * @param filePath"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        friendList \u003d new FriendList();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "            taskList \u003d new TaskList(storage.loadData());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "            taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        storage \u003d new Storage(\"src/main/java/tasklist.txt\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        friendList \u003d new FriendList();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "            taskList \u003d new TaskList(storage.loadData());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "            taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "     * Run the program to interact with users."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "     * @throws IncorrectInputException"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    public void run() throws IOException, IncorrectInputException {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        ui.greeting();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        ui.interact();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    public String command(String s) throws IOException, IncorrectInputException {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "            int j \u003d s.indexOf(\u0027 \u0027);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "            String firstWord \u003d \"\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "            if (j \u003e -1) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                firstWord \u003d s.substring(0, j);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                firstWord \u003d s;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "            switch (firstWord) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "            case \"bye\":"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                return \"bye\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                char x \u003d s.charAt(s.length() - 1);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                int i \u003d Character.getNumericValue(x);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                Task t \u003d taskList.getList().get(i - 1);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                t.markAsDone();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                taskList.getList().set(i - 1, t);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                return \"Nice! I\u0027ve marked this task as done:\\n\" + t.printTask();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                char y \u003d s.charAt(s.length() - 1);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                int k \u003d Character.getNumericValue(y);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                taskList.delete(k);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                return \"Now you have \" + taskList.getList().size() +"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                    (taskList.getList().size() \u003e 1 ? \" tasks\" : \" task\") + \" on the list\";"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "            case \"friend\":"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                String[] v \u003d s.split(\" /name \");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                String name \u003d v[1];"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                this.friendList.addFriend(new Friend(name));"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                return \"Add a new friend: \" + name;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                if (s.length() !\u003d \"deadline\".length()) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                    String[] value \u003d s.split(\" /by \");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                    String date \u003d value[1];"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                    DateTimeFormatter inputFormat \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                    DateTimeFormatter outputFormat \u003d DateTimeFormatter.ofPattern(\"MM-dd-yyyy HH:mm\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                    LocalDateTime dateTime \u003d LocalDateTime.parse(date, inputFormat);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                    dateTime.format(outputFormat);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                    Deadline deadline \u003d new Deadline(value[0].replace(\"deadline \", \"\"), dateTime);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                    taskList.addTask(deadline);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                    storage.saveTask(deadline);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                    return \"Got it. I\u0027ve added this task:\\n\" + deadline.printTask() + \"\\n\" +"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                            \"Now you have \" + taskList.getList().size() +"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                                (taskList.getList().size() \u003e 1 ? \" tasks\" : \" task\") + \" on the list\";"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                    throw new IncorrectInputException(\"☹ OOPS!!! The description of an deadline cannot be empty.\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                if (s.length() !\u003d \"todo\".length()) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                    ToDo toDo \u003d new ToDo(s.replace(\"todo \", \"\"));"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                    taskList.addTask(toDo);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                    storage.saveTask(toDo);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                    return \"Got it. I\u0027ve added this task:\\n\" + toDo.printTask() + \"\\n\" +"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                        \"Now you have \" + taskList.getList().size() +"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                            (taskList.getList().size() \u003e 1 ? \" tasks\" : \" task\") + \" on the list\";"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                    throw new IncorrectInputException(\"☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                if (s.length() !\u003d \"event\".length()) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                    String[] value \u003d s.split(\" /at \");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                    Event event \u003d new Event(value[0].replace(\"event \", \"\"), value[1]);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                    taskList.addTask(event);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                    storage.saveTask(event);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                    return \"Got it. I\u0027ve added this task:\\n\" + event.printTask() + \"\\n\" +"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                        \"Now you have \" + taskList.getList().size() +"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                            (taskList.getList().size() \u003e 1 ? \" tasks\" : \" task\") + \" on the list\";"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                    throw new IncorrectInputException(\"☹ OOPS!!! The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                throw new IncorrectInputException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "            }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        return \"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "     * You should have your own function to generate a response to user input."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "     * Replace this stub with your completed method."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "     */"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    public String getResponse(String input) throws IOException, IncorrectInputException {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        return command(input);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    public static void main(String[] args) throws IOException, IncorrectInputException {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        new Duke(\"src/main/java/tasklist.txt\").run();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xxzz-tt": 134,
      "-": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    private String duration;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    public Event(String name, String duration) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        this.duration \u003d duration;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    public String printTask() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        return \"[E]\" + super.printTask() + \" (at: \" + duration + \")\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    public String toSave() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        return \"E \" + super.toSave() + \" | \" + this.duration;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xxzz-tt": 18
    }
  },
  {
    "path": "src/main/java/Friend.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "public class Friend {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    private String name;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    private String birthday;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    private int phoneNumber;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    private boolean isClose;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    public Friend(String name) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        this.birthday \u003d \"01/01/2000\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        this.phoneNumber \u003d 91234567;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        this.isClose \u003d false;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    public Friend(String name, String birthday, int phoneNumber, boolean isClose) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        this.birthday \u003d birthday;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        this.phoneNumber \u003d phoneNumber;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        this.isClose \u003d isClose;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    public void updateName(String newName) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        this.name \u003d newName;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    public void updateNumber(int newNumber) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        this.phoneNumber \u003d newNumber;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    public void updateRelation(boolean isClose) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        this.isClose \u003d isClose;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        return this.name;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xxzz-tt": 37
    }
  },
  {
    "path": "src/main/java/FriendList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "public class FriendList {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    public List\u003cFriend\u003e friends;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    public FriendList() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        this.friends \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    public FriendList(ArrayList\u003cFriend\u003e friends) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        this.friends \u003d friends;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    public void deleteFriend(int pos) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        friends.remove(pos);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    public void addFriend(Friend friend) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        friends.add(friend);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xxzz-tt": 23
    }
  },
  {
    "path": "src/main/java/IncorrectInputException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "public class IncorrectInputException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    public IncorrectInputException(String e) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        super(e);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xxzz-tt": 6
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xxzz-tt": 8
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "//            assert fxmlLoader !\u003d null;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xxzz-tt": 38
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    private void handleUserInput() throws IOException, IncorrectInputException {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        );"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xxzz-tt": 53
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    public String line \u003d \"____________________________________________________________\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "     * Constructor for Parser."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    public Parser() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        storage \u003d new Storage(\"src/main/java/tasklist.txt\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "     * Greetings to welcome the user."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    public void greeting() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\\n\" +"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                \"What can I do for you?\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "     * Generate the list of tasks."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    public void generateList() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.getList().size(); i++) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "            Task t \u003d taskList.getList().get(i);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "            System.out.println((i + 1) + \". \" + t.printTask());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    public void generateSearch(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        System.out.println(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "            Task t \u003d tasks.get(i);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "            System.out.println((i + 1) + \". \" + t.printTask());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "     * Parse users\u0027 commands and respond to them."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "     * @param s"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "     * @throws IncorrectInputException"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    public void parse(String s) throws IOException, IncorrectInputException {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "            int j \u003d s.indexOf(\u0027 \u0027);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "            String firstWord \u003d \"\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "            if (j \u003e -1) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                firstWord \u003d s.substring(0, j);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                firstWord \u003d s;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "            switch (firstWord) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "            case \"bye\":"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                exit();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                generateList();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "            case \"find\":"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                ArrayList\u003cTask\u003e hold \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                String d \u003d s.substring(j + 1);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                for (Task t : taskList.getList()) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                    if (t.name.contains(d)) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                        hold.add(t);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                generateSearch(hold);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                char x \u003d s.charAt(s.length() - 1);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                int i \u003d Character.getNumericValue(x);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                Task t \u003d taskList.getList().get(i - 1);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                t.markAsDone();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                taskList.getList().set(i - 1, t);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                System.out.println(line);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                System.out.println(t.printTask());"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                System.out.println(line);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                char y \u003d s.charAt(s.length() - 1);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                int k \u003d Character.getNumericValue(y);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                System.out.println(line);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                System.out.println(taskList.getList().get(k - 1).printTask());"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                taskList.delete(k);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                System.out.println(\"Now you have \" + taskList.getList().size() +"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                        (taskList.getList().size() \u003e 1 ? \" tasks\" : \" task\") + \" on the list\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                System.out.println(line);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                if (s.length() !\u003d \"deadline\".length()) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                    String[] value \u003d s.split(\" /by \");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                    String date \u003d value[1];"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                    DateTimeFormatter inputFormat \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                    DateTimeFormatter outputFormat \u003d DateTimeFormatter.ofPattern(\"MM-dd-yyyy HH:mm\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                    LocalDateTime dateTime \u003d LocalDateTime.parse(date, inputFormat);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                    dateTime.format(outputFormat);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                    Deadline deadline \u003d new Deadline(value[0].replace(\"deadline \", \"\"), dateTime);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "//                list.add(deadline);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                    taskList.addTask(deadline);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                    storage.saveTask(deadline);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                    System.out.println(line);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                    System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                    System.out.println(deadline.printTask());"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                    System.out.println(\"Now you have \" + taskList.getList().size() +"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                            (taskList.getList().size() \u003e 1 ? \" tasks\" : \" task\") + \" on the list\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                    System.out.println(line);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                    throw new IncorrectInputException(\"☹ OOPS!!! The description of an deadline cannot be empty.\");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                if (s.length() !\u003d \"todo\".length()) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                    ToDo toDo \u003d new ToDo(s.replace(\"todo \", \"\"));"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "//                list.add(toDo);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                    taskList.addTask(toDo);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                    storage.saveTask(toDo);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                    System.out.println(line);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                    System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                    System.out.println(toDo.printTask());"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                    System.out.println(\"Now you have \" + taskList.getList().size() +"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                            (taskList.getList().size() \u003e 1 ? \" tasks\" : \" task\") + \" on the list\");"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                    System.out.println(line);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                    throw new IncorrectInputException(\"☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                if (s.length() !\u003d \"event\".length()) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                    String[] value \u003d s.split(\" /at \");"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                    Event event \u003d new Event(value[0].replace(\"event \", \"\"), value[1]);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "//                list.add(event);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                    taskList.addTask(event);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                    storage.saveTask(event);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                    System.out.println(line);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                    System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                    System.out.println(event.printTask());"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                    System.out.println(\"Now you have \" + taskList.getList().size() +"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                            (taskList.getList().size() \u003e 1 ? \" tasks\" : \" task\") + \" on the list\");"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                    System.out.println(line);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                    throw new IncorrectInputException(\"☹ OOPS!!! The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                throw new IncorrectInputException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "            }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "     * Leave a goodbye message."
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "     */"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    public void exit() {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xxzz-tt": 178
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    File file;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    String filepath;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "     * Constructor for Storage."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "     * @param filepath"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    public Storage(String filepath) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        this.filepath \u003d filepath;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "            this.file \u003d new File(filepath);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "            this.file.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "            if (!file.exists()) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                file.createNewFile();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "            }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "     * Load all the tasks from the files."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "     * @return an arraylist of all the tasks"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "     * @throws FileNotFoundException"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    public ArrayList\u003cTask\u003e loadData() throws FileNotFoundException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        Scanner reader \u003d new Scanner(file);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        while (reader.hasNextLine()) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "            String data \u003d reader.nextLine();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "            boolean isDone \u003d data.contains(\"| 1 |\") ? true : false;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "            String description \u003d data.split(\" | \")[1];"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "            if (data.startsWith(\"T\")) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                ToDo toDo \u003d new ToDo(description);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                if (isDone) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                    toDo.markAsDone();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                list.add(toDo);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "            } else if (data.startsWith(\"D\")) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                String[] arr \u003d description.split(\" | \");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                DateTimeFormatter inputFormat \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                DateTimeFormatter outputFormat \u003d DateTimeFormatter.ofPattern(\"MM-dd-yyyy HH:mm\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                LocalDateTime dateTime \u003d LocalDateTime.parse(arr[1], inputFormat);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                dateTime.format(outputFormat);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                Deadline deadline \u003d new Deadline(arr[0], dateTime);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                if (isDone) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                    deadline.markAsDone();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                list.add(deadline);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "            } else if (data.startsWith(\"E\")) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                String[] arr \u003d description.split(\" | \");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                Event event \u003d new Event(arr[0], arr[1]);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                if (isDone) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                    event.markAsDone();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                list.add(event);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        reader.close();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "     * Save new task to the file."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "     * @param task"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    public void saveTask(Task task) throws IOException {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        BufferedWriter file \u003d new BufferedWriter(new FileWriter("
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                filepath, true));"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        file.newLine();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        file.write(task.toSave());"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        file.close();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xxzz-tt": 84
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    private boolean isCompleted;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    public String name;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "     * Constructor for Task."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "     * @param name"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    public Task(String name) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        this.isCompleted \u003d false;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "     * Get symbol represent the state of completion of the task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "     * @return boolean"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        return (isCompleted ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "     * Mark the task as completed"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        this.isCompleted \u003d true;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "     * Get task information"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "     * @return a string"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    public String printTask() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.name;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    public int completedAsNumber() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        return this.isCompleted ? 1 : 0;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "     * Get task information to save"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "     * @return a string"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    public String toSave() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        return \"| \" + completedAsNumber() + \" | \" + this.name;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xxzz-tt": 49
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    public List\u003cTask\u003e list;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "     * Constructor for TaskList."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    public TaskList(){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        this.list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "     * Constructor for TaskList."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "     * @param tasks"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        this.list \u003d tasks;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    public List\u003cTask\u003e getList() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "     * add a new task."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "     * @param t"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    public void addTask(Task t) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        list.add(t);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "     * delete the specified task."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "     * @param i"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    public void delete(int i) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        list.remove(i - 1);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xxzz-tt": 41
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    public ToDo(String name) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    public String printTask() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        return \"[T]\" + super.printTask();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    public String toSave() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        return \"T \" + super.toSave();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xxzz-tt": 16
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    public String line \u003d \"____________________________________________________________\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    private Scanner scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        parser \u003d new Parser();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    public void interact() throws IOException, IncorrectInputException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        while (scanner.hasNext()) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "            parser.parse(scanner.nextLine());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        scanner.close();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    public void greeting() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\\n\" +"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                \"What can I do for you?\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "//    public void exit() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "//        System.out.println(line);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "//        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "//        System.out.println(line);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xxzz-tt": 33
    }
  },
  {
    "path": "src/main/java/tasklist.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "T | 0 | eat dinner"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "D | 0 | hw | Dec 12 2021 12:34"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "E | 0 | sa | idk when"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "T | 0 | eat lunch"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "T | 0 | testing"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "T | 0 | testing"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "D | 0 | trying test 1 | Dec 12 2020 19:00"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "D | 0 | trying test 1 | Dec 12 2020 19:12"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "T | 0 | testing"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "T | 0 | testing"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "E | 0 | hello | 3pm"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "D | 0 | for screenshot | Dec 12 2020 19:12"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "T | 0 | hi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "T | 0 | what is happening"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "T | 0 | 1"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "T | 0 | 2"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "T | 0 | 3"
      }
    ],
    "authorContributionMap": {
      "xxzz-tt": 17
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "xxzz-tt": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "xxzz-tt": 19
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "import org.testng.annotations.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "//import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    void validFilePath(String filepath) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        File file \u003d new File(filepath);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        boolean isCreated \u003d file.exists();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        assertEquals(true, isCreated);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xxzz-tt": 15
    }
  },
  {
    "path": "src/test/java/StorageTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "import org.testng.annotations.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "public class StorageTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    public void invalidFilePath() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        Storage storage \u003d new Storage(\"hello\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "        assertEquals(true, storage !\u003d null);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xxzz-tt": 11
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d /Users/xuanzhi/Desktop/ip/src/main/java/Main.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xxzz-tt"
        },
        "content": "java -classpath /Users/xuanzhi/Desktop/ip/src/main/java/Main.java \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "-": 36,
      "xxzz-tt": 2
    }
  }
]
