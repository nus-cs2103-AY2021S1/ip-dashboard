[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# Duke project template"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "1. Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Open or Import`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "1. After the importing is complete, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    ____        _        "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "   |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "   Hello! This is Duke."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "   What can I do for you?"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      }
    ],
    "authorContributionMap": {
      "zhaohuanqdcn": 3,
      "-": 24
    }
  },
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    systemProperty \"file.encoding\", \"utf-8\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "compileJava.options.encoding \u003d \"UTF-8\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "compileTestJava.options.encoding \u003d \"UTF-8\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "javadoc.options.encoding \u003d \"UTF-8\""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    mainClassName \u003d \"seedu.duke.Duke\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhaohuanqdcn": 21,
      "-": 44
    }
  },
  {
    "path": "src/main/java/duke/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "import task.TaskType;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "import java.security.InvalidParameterException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "public class Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    private final String line;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    Command(String command) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        this.line \u003d command;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * @return a string representing the result of command"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    public String execute() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        if (line.isBlank() || line.isEmpty()) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            return \"\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        } else if (Parser.isExit(line)) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            return Ui.exit();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        } else if (Parser.isList(line)) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                return TaskList.printList();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                return Ui.fileError();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        } else if (Parser.isDone(line)) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                int index \u003d Integer.parseInt(line.substring(5));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                return TaskList.setDone(index);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                return Ui.fileError();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                return Ui.commandError();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        } else if (Parser.isFind(line)) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                String word \u003d line.substring(5);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                return TaskList.findTask(word);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                return Ui.fileError();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                return Ui.commandError();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        } else if (Parser.isDelete(line)) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                int index \u003d Integer.parseInt(line.substring(7));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                return TaskList.delete(index);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                return Ui.fileError();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                return Ui.commandError();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                TaskType type \u003d Parser.taskType(line);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                if (type \u003d\u003d TaskType.TODO) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                    return TaskList.add(type, Parser.getName(line));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                    return TaskList.add(type, Parser.getName(line), Parser.getTime(line));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            } catch (NullPointerException"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                    | ArrayIndexOutOfBoundsException"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                    | InvalidParameterException e) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                return Ui.commandError();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                return Ui.fileError();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        return this.line;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhaohuanqdcn": 80
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * Responds to the input command."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * @param input input command line"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * @return response from duke"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        Command command \u003d new Command(input);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        return command.execute();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhaohuanqdcn": 14,
      "-": 2
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "import task.TaskType;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "import java.security.InvalidParameterException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * Checks if a command line is a \"list\" command"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * @param line string of a command"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * @return list or not"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    public static boolean isList(String line) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        return line.equals(\"list\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * Checks if a command line is an \"exit\" command"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * @param line string of a command"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * @return exit or not"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    public static boolean isExit(String line) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        return line.toLowerCase().contains(\"bye\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * Checks if a command line is a \"done\" command"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * @param line string of a command"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * @return done or not"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    public static boolean isDone(String line) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        return line.length() \u003e\u003d 4 \u0026\u0026 line.substring(0, 4).equals(\"done\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * Checks if a command line is a \"delete\" command"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * @param line string of a command"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * @return delete or not"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    public static boolean isDelete(String line) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        return line.length() \u003e\u003d 6 \u0026\u0026 line.substring(0, 6).equals(\"delete\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    public static boolean isFind(String line) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        return line.length() \u003e\u003d 4 \u0026\u0026 line.substring(0, 4).equals(\"find\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * Extracts task type from a given \"add\" command line"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * @param line string of a command"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * @return task type"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * @throws InvalidParameterException if line is invalid"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    public static TaskType taskType(String line) throws InvalidParameterException {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        if (line.length() \u003e 8"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                \u0026\u0026 line.substring(0, 8).equals(\"deadline\")"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                \u0026\u0026 line.contains(\" /by \")) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            return TaskType.DEADLINE;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        } else if (line.length() \u003e 5"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                \u0026\u0026 line.substring(0, 5).equals(\"event\")"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                \u0026\u0026 line.contains(\" /at \")) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            return TaskType.EVENT;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        } else if (line.length() \u003e 4 \u0026\u0026 line.substring(0, 4).equals(\"todo\")) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            return TaskType.TODO;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        } else throw new InvalidParameterException(\"Invalid input\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * Extracts task name from a given \"add\" command line"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * @param line string of a command"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * @return task name"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * @throws InvalidParameterException if line is invalid"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * @throws NullPointerException      if task name is empty"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    public static String getName(String line) throws NullPointerException, InvalidParameterException {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        String name;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            if (taskType(line) \u003d\u003d TaskType.TODO) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                name \u003d line.substring(5);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            } else if (taskType(line) \u003d\u003d TaskType.DEADLINE) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                name \u003d line.split(\" /by \")[0].substring(9);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                name \u003d line.split(\" /at \")[0].substring(6);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        } catch (InvalidParameterException e) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            throw new InvalidParameterException(\"Invalid parameters\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        if (name.isEmpty()) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            throw new NullPointerException(\"Null Object\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        } else return name;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * Extracts task time from an \"add\" command line of type \"deadline\" or \"event\""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * @param line string of a command"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * @return time of the task"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * @throws ArrayIndexOutOfBoundsException if the time does not exist"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    public static String getTime(String line) throws ArrayIndexOutOfBoundsException {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            if (taskType(line) \u003d\u003d TaskType.DEADLINE) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                return line.split(\" /by \")[1];"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                return line.split(\" /at \")[1];"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            throw e;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhaohuanqdcn": 119
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "import task.TaskType;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "import task.Todo;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "import task.Deadline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "import task.Event;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    private final static String filePath \u003d \"list.txt\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * Converts parameters of a task into a string representation used in storage"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * @param type task type"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * @param done whether the task is done (0 for undone, 1 for done)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * @param name task name"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * @param time task time (empty string if not applicable)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * @return a string representation"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    private static String convertToText(TaskType type, int done, String name, String time) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        String t \u003d type \u003d\u003d TaskType.DEADLINE ? \"D\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                : type \u003d\u003d TaskType.EVENT ? \"E\" : \"T\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        return t + \",\" + done + \",\" + name"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                + (time.isEmpty() ? \"\" : \",\" + time) + \"\\n\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * Converts from a string representation to a task"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * @param text string representation"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * @return represented task"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * @throws Exception if text is invalid"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    private static Task convertFromText(String text) throws Exception {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            String[] ans \u003d text.split(\",\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            if (ans[0].equals(\"T\")) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                Todo todo \u003d new Todo(ans[2]);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                if (ans[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                    todo.setDone();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                return todo;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            } else if (ans[0].equals(\"D\")) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                Deadline deadline \u003d new Deadline(ans[2], ans[3]);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                if (ans[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                    deadline.setDone();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                return deadline;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                Event event \u003d new Event(ans[2], ans[3]);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                if (ans[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                    event.setDone();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                return event;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            throw e;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * Creates a storage file"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * @throws IOException if error occurs in file accessing"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    public static void createListFile() throws IOException {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        Files.createFile(Paths.get(filePath));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * Adds parameters of a task to the storage file"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * @param type task type"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * @param done whether the task is done (0 for undone, 1 for done)"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * @param name task name"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * @param time task time (empty string if not applicable)"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * @throws IOException if error occurs in file accessing"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    public static void addToList(TaskType type, int done, String name, String time) throws IOException {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            if (!file.exists()) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                createListFile();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            FileWriter fw \u003d new FileWriter(filePath, true);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            fw.write(convertToText(type, done, name, time));"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            throw new IOException(\"File access failed\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * Reloads the stored task list"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * @return stored list of task"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * @throws IOException if error occurs in file accessing"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    public static List\u003cTask\u003e readList() throws IOException {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            List\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            if (!file.exists()) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                createListFile();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                return list;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                Scanner s \u003d new Scanner(file);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                while (s.hasNext()) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                    Task task \u003d convertFromText(s.nextLine());"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                    list.add(task);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                s.close();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                return list;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            throw new IOException(\"File access failed\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * Updates the task of a given index to \"done\" in the storage file"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * @param index index of task to be updated"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * @throws IOException if error occurs in file accessing"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    public static void setDone(int index) throws IOException {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            Scanner s \u003d new Scanner(file);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            StringBuilder content \u003d new StringBuilder();"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            int count \u003d 0;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            while (s.hasNext()) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                String text \u003d s.nextLine();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                if (count \u003d\u003d index) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                    text \u003d text.replaceFirst(\"0\", \"1\");"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                content.append(text).append(System.lineSeparator());"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                count++;"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            fw.write(content.toString());"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            throw new IOException(\"File access failed\");"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * Deletes the task of a given index in the storage file"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * @param index index of task to be updated"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * @throws IOException if error occurs in file accessing"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    public static void delete(int index) throws IOException {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            Scanner s \u003d new Scanner(file);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            StringBuilder content \u003d new StringBuilder();"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            int count \u003d 0;"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            while (s.hasNext()) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                String text \u003d s.nextLine();"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                if (count !\u003d index) {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                    content.append(text).append(System.lineSeparator());"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                count++;"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            fw.write(content.toString());"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            throw new IOException(\"File access failed\");"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhaohuanqdcn": 183
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "import task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "import task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "import task.Todo;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "import task.TaskType;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "import java.security.InvalidParameterException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    private static List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * Creates a task and adds it to the task list: todo"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * @param type     task type"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * @param taskName task name"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * @return messages of the added task or errors occurred"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * @throws IOException if error occurs in file accessing"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    public static String add(TaskType type, String taskName) throws IOException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            if (taskList.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                reloadList();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            Todo todo \u003d new Todo(taskName);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            taskList.add(todo);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            Storage.addToList(TaskType.TODO, 0, taskName, \"\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            String result \u003d \"Got it. I\u0027ve added the task:\\n\" + todo.toString() + \"\\n\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            result +\u003d \"Now you have \" + taskList.size() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            return Ui.userMessage(result);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            throw new IOException(\"File access failed\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * Creates a task and adds it to the task list: deadline or event"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * @param type     task type"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * @param taskName task name"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * @param time     time of the task"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * @return messages of the added task or errors occurred"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * @throws IOException if error occurs in file accessing"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    public static String add(TaskType type, String taskName, String time) throws IOException {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            if (taskList.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                reloadList();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            String result \u003d \"Got it. I\u0027ve added the task:\\n\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            if (type \u003d\u003d TaskType.DEADLINE) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                Deadline deadline \u003d new Deadline(taskName, time);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                taskList.add(deadline);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                Storage.addToList(TaskType.DEADLINE, 0, taskName, time);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                result +\u003d deadline.toString();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                Event event \u003d new Event(taskName, time);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                taskList.add(event);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                Storage.addToList(TaskType.EVENT, 0, taskName, time);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                result +\u003d event.toString();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            result +\u003d \"\\nNow you have \" + taskList.size() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            return Ui.userMessage(result);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            throw new IOException(\"File access failed\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    private static void reloadList() throws IOException {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        taskList \u003d Storage.readList();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * Finds tasks that contain a given keyword"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * @param word keyword of the task"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * @return a string representation of the tasks found"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * @throws IOException               if error occurs in file accessing"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * @throws InvalidParameterException if word is blank"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    public static String findTask(String word) throws IOException, InvalidParameterException {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        if (word.isBlank()) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            throw new InvalidParameterException(\"Invalid input\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        int n \u003d taskList.size();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        if (n \u003d\u003d 0) { // empty or uninitialized"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            reloadList();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            n \u003d taskList.size();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            if (n \u003d\u003d 0) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                return Ui.listError();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        sb.append(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        int count \u003d 1;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        boolean found \u003d false;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d n; i++) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            String task \u003d taskList.get(i - 1).toString();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            if (task.contains(word)) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                sb.append(\"\\n\").append(count).append(\". \").append(task);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                found \u003d true;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                count++;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        if (!found) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            return Ui.userMessage(\"There is no match in the list :(\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            return Ui.userMessage(sb.toString());"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * Updates the task of a given index to \"done\""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * @param index index of task to be updated"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * @return messages of the done task or errors occurred"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * @throws InvalidParameterException if index is out of bound for task list"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * @throws IOException               if error occurs in file accessing"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    public static String setDone(int index) throws InvalidParameterException, IOException {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        if (taskList.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            reloadList();"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        if (index \u003e taskList.size() || index \u003c\u003d 0) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            throw new InvalidParameterException(\"Out of bound\");"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        Storage.setDone(index - 1);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        taskList.get(index - 1).setDone();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        return Ui.userMessage(\"Well done! I\u0027ve marked this as done:\\n\""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                + taskList.get(index - 1).toString());"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * Deletes the task of a given index"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * @param index index of task to be updated"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * @return messages of the deleted task or errors occurred"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * @throws InvalidParameterException if index is out of bound for task list"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * @throws IOException               if error occurs in file accessing"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    public static String delete(int index) throws InvalidParameterException, IOException {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        if (taskList.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            reloadList();"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        if (index \u003e taskList.size() || index \u003c\u003d 0) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            throw new InvalidParameterException(\"Out of bound\");"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        Storage.delete(index - 1);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        String result \u003d \"Noted! I\u0027ve removed this task:\\n\";"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        result +\u003d taskList.get(index - 1).toString();"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        taskList.remove(index - 1);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        result +\u003d \"\\nNow you have \" + taskList.size() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        return Ui.userMessage(result);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * Prints out the task list"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * @return a string representation of all tasks listed"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * @throws IOException if error occurs in file accessing"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    public static String printList() throws IOException {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            int n \u003d taskList.size();"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            if (n \u003d\u003d 0) { // empty or uninitialized"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                reloadList();"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                n \u003d taskList.size();"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                if (n \u003d\u003d 0) {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                    return Ui.listError();"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            for (int i \u003d 1; i \u003c\u003d n; i++) {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                sb.append(i).append(\". \").append(taskList.get(i - 1).toString());"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                if (i !\u003d n) {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                    sb.append(\"\\n\");"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            return Ui.userMessage(sb.toString());"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            return Ui.fileError();"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhaohuanqdcn": 192
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    private static final String logo \u003d"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            \" ____        _        \\n\""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                    + \"|  _ \\\\ _   _| | _____\\n\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                    + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                    + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                    + \"|____/ \\\\__,_|_|\\\\_\\\\___|\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * Returns a greeting message"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * @return a greeting message"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    public static String greet() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        return \"Hello! This is Duke.\\nWhat can I do for you?\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * Returns an exiting message"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * @return an exiting message"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    public static String exit() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        return \"Bye. Duke is always there for you!\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * Returns an error message of command"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * @return an error message"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    public static String commandError() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        return \"Sorry, I do not know what that means :(\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * Returns an error message of file"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * @return an error message"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    public static String fileError() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        return \"Oops! Something went wrong :(\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * Returns an error message of list"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * @return an error message"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    public static String listError() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        return \"There is no task in the list :)\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * Returns a given message"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * @param msg the message given"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * @return the message given"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    public static String userMessage(String msg) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        return msg;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhaohuanqdcn": 66
    }
  },
  {
    "path": "src/main/java/gui/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "package gui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": " * An FXML control representing a dialog box consisting of"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": " * an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader("
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                    MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhaohuanqdcn": 63
    }
  },
  {
    "path": "src/main/java/gui/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "package gui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "import gui.Main;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhaohuanqdcn": 10
    }
  },
  {
    "path": "src/main/java/gui/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "package gui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    private final Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader("
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                    Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhaohuanqdcn": 33
    }
  },
  {
    "path": "src/main/java/gui/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "package gui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    private final Image dukeImage \u003d new Image("
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            this.getClass().getResourceAsStream(\"/images/DaDuke.jpg\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    private final Image userImage \u003d new Image("
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                DialogBox.getDukeDialog(Ui.greet(), dukeImage));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * and then appends them to the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        if (!input.isEmpty()) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                    DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                    DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            );"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhaohuanqdcn": 60
    }
  },
  {
    "path": "src/main/java/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "import utility.DateParser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    private final String ddl;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    private LocalDate date \u003d null;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    public Deadline(String name, String ddl) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        this.ddl \u003d ddl;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            date \u003d LocalDate.parse(ddl);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            date \u003d null;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        String status \u003d String.format(\"[D][%s] \", (super.done ? \"✓\" : \"✗\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        String time \u003d date \u003d\u003d null"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                ? String.format(\" (by: %s)\", ddl)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                : \" (by: \" + DateParser.format(date) + \")\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        return status + this.getName() + time;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhaohuanqdcn": 30
    }
  },
  {
    "path": "src/main/java/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "import utility.DateParser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    private final String eventTime;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    private LocalDate date \u003d null;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    public Event(String name, String eventTime) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        this.eventTime \u003d eventTime;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            date \u003d LocalDate.parse(eventTime);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            date \u003d null;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        String status \u003d String.format(\"[E][%s] \", (super.done ? \"✓\" : \"✗\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        String time \u003d date \u003d\u003d null"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                ? String.format(\" (at: %s)\", eventTime)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                : \" (at: \" + DateParser.format(date) + \")\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        return status + this.getName() + time;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhaohuanqdcn": 29
    }
  },
  {
    "path": "src/main/java/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    protected String name;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    protected boolean done;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    public Task(String name) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        this.done \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * Gets name of the task"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * @return task name"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        return this.name;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * Sets the task to be done"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    public void setDone() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        this.done \u003d true;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * Gets whether the task is done"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * @return whether done or not"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    public boolean getDone() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        return this.done;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        return this.getName();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhaohuanqdcn": 41
    }
  },
  {
    "path": "src/main/java/task/TaskType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "public enum TaskType {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    TODO,"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    DEADLINE,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    EVENT"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhaohuanqdcn": 7
    }
  },
  {
    "path": "src/main/java/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    public Todo(String name) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        String status \u003d String.format(\"[T][%s] \", (super.done ? \"✓\" : \"✗\"));"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        return status + this.getName();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhaohuanqdcn": 16
    }
  },
  {
    "path": "src/main/java/utility/DateParser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "package utility;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "public class DateParser {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * Converts a date from \"yyyy-MM-dd\" to \"Month dd yyyy\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * @param date original date representation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * @return new date representation"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    public static String format(LocalDate date) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        return date.getMonth().toString() + \" \""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                + date.getDayOfMonth() + \" \" + date.getYear();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhaohuanqdcn": 16
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "\u003cfx:root"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        alignment\u003d\"TOP_RIGHT\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        maxHeight\u003d\"Infinity\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        maxWidth\u003d\"400.0\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        prefWidth\u003d\"400.0\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        spacing\u003d\"20.0\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        type\u003d\"javafx.scene.layout.HBox\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        xmlns\u003d\"http://javafx.com/javafx/8.0.171\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        \u003cLabel"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                fx:id\u003d\"dialog\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                text\u003d\"Label\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                wrapText\u003d\"true\"/\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        \u003cImageView"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                fx:id\u003d\"displayPicture\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                fitHeight\u003d\"75.0\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                fitWidth\u003d\"75.0\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                pickOnBounds\u003d\"true\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "zhaohuanqdcn": 32
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "\u003cAnchorPane"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        maxHeight\u003d\"600.0\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        maxWidth\u003d\"400.0\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        minHeight\u003d\"600.0\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        minWidth\u003d\"400.0\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        prefHeight\u003d\"600.0\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        prefWidth\u003d\"400.0\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        xmlns\u003d\"http://javafx.com/javafx/8.0.171\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        xmlns:fx\u003d\"http://javafx.com/fxml/1\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        fx:controller\u003d\"gui.MainWindow\"\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        \u003cTextField"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                fx:id\u003d\"userInput\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                layoutY\u003d\"538.0\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                onAction\u003d\"#handleUserInput\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                prefHeight\u003d\"60.0\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                prefWidth\u003d\"320.0\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                AnchorPane.bottomAnchor\u003d\"1.0\"/\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        \u003cButton"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                fx:id\u003d\"sendButton\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                layoutX\u003d\"320.0\" layoutY\u003d\"538.0\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                mnemonicParsing\u003d\"false\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                onAction\u003d\"#handleUserInput\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                prefHeight\u003d\"60.0\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                prefWidth\u003d\"80.0\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                text\u003d\"Send\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                AnchorPane.bottomAnchor\u003d\"1.0\"/\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        \u003cScrollPane"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                fx:id\u003d\"scrollPane\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                hbarPolicy\u003d\"NEVER\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                hvalue\u003d\"1.0\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                prefHeight\u003d\"537.0\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                prefWidth\u003d\"400.0\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                \u003cVBox"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                        fx:id\u003d\"dialogContainer\""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                        prefHeight\u003d\"537.0\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                        prefWidth\u003d\"388.0\"/\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "zhaohuanqdcn": 51
    }
  },
  {
    "path": "src/test/java/duke/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "import task.TaskType;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "import java.security.InvalidParameterException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    private final String ddl \u003d \"deadline d /by Monday\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    private final String event \u003d \"event e /at 5pm\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    private final String todo \u003d \"todo t\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    public void taskType_validCommand_success() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        assertEquals(TaskType.DEADLINE, Parser.taskType(ddl));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        assertEquals(TaskType.EVENT, Parser.taskType(event));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        assertEquals(TaskType.TODO, Parser.taskType(todo));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    public void taskType_missingKeyword_exceptionThrown() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            assertEquals(TaskType.DEADLINE, Parser.taskType(\"deadline b Monday\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        } catch (InvalidParameterException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            assertEquals(\"Invalid input\", e.getMessage());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    public void getName_validCommand_success() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        assertEquals(\"d\", Parser.getName(ddl));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        assertEquals(\"e\", Parser.getName(event));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        assertEquals(\"t\", Parser.getName(todo));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    public void getTime_validCommand_success() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        assertEquals(\"Monday\", Parser.getTime(ddl));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        assertEquals(\"5pm\", Parser.getTime(event));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhaohuanqdcn": 47
    }
  },
  {
    "path": "src/test/java/task/TaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "import duke.Parser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "import java.security.InvalidParameterException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "public class TaskTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    Event event \u003d new Event(\"e\", \"time\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    Deadline ddl \u003d new Deadline(\"d\", \"time\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    Todo todo \u003d new Todo(\"t\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    public void toString_undoneTask_success() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        assertEquals(\"[E][✗] e (at: time)\", event.toString());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        assertEquals(\"[D][✗] d (by: time)\", ddl.toString());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        assertEquals(\"[T][✗] t\", todo.toString());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    public void setDone_undoneTask_success() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        event.setDone();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        ddl.setDone();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        todo.setDone();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        assertTrue(event.getDone());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        assertTrue(ddl.getDone());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        assertTrue(todo.getDone());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    public void toString_doneTask_success() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        event.setDone();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        ddl.setDone();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        todo.setDone();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        assertEquals(\"[E][✓] e (at: time)\", event.toString());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        assertEquals(\"[D][✓] d (by: time)\", ddl.toString());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        assertEquals(\"[T][✓] t\", todo.toString());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhaohuanqdcn": 42
    }
  }
]
