[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    mainClassName \u003d \"duke.Launcher\""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    toolVersion \u003d \u00278.29\u0027"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tnsyn": 15,
      "-": 44
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "Welcome to Duke, your loyal personal assistant chatbot! "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "Duke provides a fast and convenient way to keep track of all your tasks, events and deadlines."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "[Features](#features)  "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "[Usage](#usage)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "### [Viewing help](#help): `assist` "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "### [Adding a ToDo](#todo): `todo` "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "### [Adding a Deadline](#deadline): `deadline` "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "### [Adding an Event](#event): `event` "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "### [Marking tasks as done](#done): `conquer` "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "### [Deleting a task](#delete): `delete` "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "### [Finding tasks with a search term](#find): `find` "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "### [Viewing the schedule for a day](#schedule): `schedule` "
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "### [Exiting](#exit): `dismiss` "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "### \u003ca name\u003d\"help\"\u003e Viewing help:\u003c/a\u003e `assist`"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "Shows a list of available commands. "
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "Format: `assist`"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "Example of usage: `assist`"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "\u003eGreetings, Your Majesty."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "\u003eUse any of these commands to access my quality services:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "\u003e1. todo [TASK]: Adds a todo to your scroll"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "\u003e2. deadline [TASK] /by [DATE AND/OR TIME]: Adds a deadline to your scroll"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "\u003e3. event [TASK] /on [DATE AND/OR TIME]: Adds an event to your scroll"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "\u003e4. scroll: Displays your scroll - your list of tasks"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "\u003e5. conquer [NUMBER]: Marks the particular item on your scroll as DONE"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "\u003e6. delete [NUMBER]: Deletes the particular item from your scroll"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "\u003e7. find [KEYWORD]: Returns a list of relevant items on your scroll"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "\u003e8. schedule [DATE]: Returns a list of items on this date"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "\u003e9. dismiss: This will be my cue to leave.  "
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "\u003eNow, how may I serve you?"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "### \u003ca name\u003d\"todo\"\u003eAdding a ToDo\u003c/a\u003e: `todo`"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "Adds a todo task to your list."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "Format: `todo TASK`"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "Example usage: `todo read book`"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "\u003eYour Majesty, I\u0027ve added the writing:  "
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "\u003e[T] [✘] read book  "
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "\u003eYou have 1 writing(s) on your scroll as of now."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "### \u003ca name\u003d\"deadline\"\u003eAdding a Deadline\u003c/a\u003e: `deadline`"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "Adds a deadline task to your list.  "
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "Format:`deadline TASK /by DATE [TIME]`  "
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "* `DATE` specified must be in YYYY-MM-DD format."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "* `TIME` input field is optional, but if specified must be done in HH:MM format.  "
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "Example usage: `deadline project /by 2020-09-18 23:59`  "
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "\u003eYour Majesty, I\u0027ve added the writing:  "
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "\u003e[D] [✘] project (by: Sep 18 2020, 11.59pm)  "
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "\u003eYou have 2 writing(s) on your scroll as of now.  "
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "### \u003ca name\u003d\"event\"\u003eAdding an Event\u003c/a\u003e: `event`  "
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "Adds an event task to your list.  "
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "Format:`event TASK /on DATE [TIME]`  "
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "* `DATE` specified must be in YYYY-MM-DD format."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "* `TIME` input field is optional, but if specified must be done in HH:MM format.  "
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "Example usage: `event workshop /on 2020-09-23 19:30`  "
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "\u003eYour Majesty, I\u0027ve added the writing:  "
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "\u003e[E] [✘] workshop (on: Sep 23 2020, 7.30pm)  "
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "\u003eYou have 3 writing(s) on your scroll as of now.   "
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "### \u003ca name\u003d\"done\"\u003eMarking tasks as done\u003c/a\u003e: `conquer`"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "Marks a desired task as done.  "
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "Format: `conquer INDEX`  "
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "* `INDEX` refers to the index of the task on the task list. The index must be a positive integer 1, 2, 3... "
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "Example usage: `conquer 1` "
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "\u003eAs you wish, Your Majesty. I have marked this as conquered.  "
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "\u003e[T] [✓] read book "
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "### \u003ca name\u003d\"delete\"\u003eDeleting tasks\u003c/a\u003e: `delete`"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "Deletes a desired task from your list.    "
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "Format: `delete INDEX`  "
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "* `INDEX` refers to the index of the task on the task list. The index must be a positive integer 1, 2, 3... "
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "Example usage: `delete 1`"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "\u003eAs you wish, Your Majesty. I have removed this writing.  "
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "\u003e[T] [✓] read book   "
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "\u003eYou have 2 writing(s) on your scroll as of now.  "
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "### \u003ca name\u003d\"find\"\u003eFinding tasks with a search term\u003c/a\u003e: `find`  "
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "Returns a list of tasks related to the desired search term.   "
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "Format: `find SEARCH_TERM`  "
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "* If `SEARCH_TERM` given is empty, the full list of tasks will be returned."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "Example usage: `find food`"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "Expected outcome: "
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "\u003eThese are the relevant writings, Your Majesty:  "
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "\u003e1. [T] [✘] buy cat food  "
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "\u003e2. [E] [✘] foodie gathering (on: Sep 30 2020, 6.00pm)  "
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "### \u003ca name\u003d\"schedule\"\u003eViewing the schedule for a day\u003c/a\u003e: `schedule`  "
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "Returns an unordered list of tasks on the desired day.   "
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "Format: `schedule DATE`  "
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "* `DATE` specified must be in YYYY-MM-DD format."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "Example usage: `schedule 2020-09-18`"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "Expected outcome: "
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "\u003eHere are the writings you requested, Your Majesty:  "
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "\u003e1. [D] [✘] iP (by: Sept 18 2020, 11:59pm)  "
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "\u003e2. [D] [✘] assignment 1 (by: Sep 18 2020, 11:59pm)  "
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "### \u003ca name\u003d\"exit\"\u003eExiting\u003c/a\u003e: `dismiss`"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "Exits the application.  "
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "Format: `dismiss`"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "Example usage: `dismiss`"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "Expected outcome: "
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "\u003e Your wish is my command, Your Majesty. Till I see you again."
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "tnsyn": 139,
      "-": 16
    }
  },
  {
    "path": "src/main/java/duke/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tnsyn"
        },
        "content": " * Represents a deadline task."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tnsyn"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    private Date time \u003d null;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    private SimpleDateFormat timeFormatter \u003d new SimpleDateFormat(\"h:mm a\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    private DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * Creates an instance of a deadline task."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * @param description  Contents of the deadline task in the format \"deadline XXX /by yyyy-mm-dd HH:mm\"."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * @throws DukeException  If format of date and/or time given is not yyyy-mm-dd HH:mm."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public Deadline(String description) throws DukeException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        super(description.split(\"/by \")[0]);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            String[] dateAndTime \u003d description.split(\"/by \")[1].split(\" \");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            this.date \u003d LocalDate.parse(dateAndTime[0]);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            if (dateAndTime.length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                SimpleDateFormat parseFormat \u003d new SimpleDateFormat(\"hh:mm\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                this.time \u003d parseFormat.parse(dateAndTime[1]);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            throw new DukeException(\"Please input a valid date and time in the format yyyy-mm-dd HH:MM\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        "
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * Returns formatted date and time string of a deadline task."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * @return Formatted date and time string of the deadline task."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public String getDateAndTimeBracket() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        if (this.time \u003d\u003d null) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            return String.format(\"(by: %s)\", this.date.format(dateFormatter));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            return String.format(\"(by: %s, %s)\", this.date.format(dateFormatter), timeFormatter.format(this.time));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    "
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    "
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * Returns String representation of a deadline task."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * @return String representation of a deadline task."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        return String.format(\"[D][%s] %s %s\","
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                this.getStatusIcon(), this.description, this.getDateAndTimeBracket());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tnsyn": 60
    }
  },
  {
    "path": "src/main/java/duke/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "import javafx.geometry.Insets;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "import javafx.scene.shape.Circle;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "import javafx.scene.layout.BackgroundFill;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "import javafx.scene.layout.Background;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "import javafx.scene.paint.Color;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "import javafx.scene.layout.CornerRadii;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "/**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tnsyn"
        },
        "content": " * Creates user and Duke dialog boxes in GUI."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tnsyn"
        },
        "content": " */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * Constructor for the DialogBox class."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * "
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * @param text Text to be displayed."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * @param img Image to be displayed."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        dialog.setPadding(new Insets(20,0,0,0));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        final Circle circle \u003d new Circle(50, 50, 45);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        displayPicture.setClip(circle);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * Returns user\u0027s DialogBox."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * "
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * @param text Text to be displayed."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * @param img Image to be displayed."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * @return User\u0027s DialogBox with specified text and image."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        BackgroundFill backgroundFill \u003d new BackgroundFill(Color.TRANSPARENT,"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                new CornerRadii(30), new Insets(6, 2, 5, 6));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        Background background \u003d new Background(backgroundFill);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        db.setBackground(background);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * Returns Duke\u0027s DialogBox."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * "
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * @param text Text to be displayed."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * @param img Image to be displayed."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * @return Duke\u0027s DialogBox with specified text and image."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        BackgroundFill backgroundFill \u003d new BackgroundFill(Color.TRANSPARENT,"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                new CornerRadii(30), new Insets(6, 2, 5, 6));"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        Background background \u003d new Background(backgroundFill);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        db.setBackground(background);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "}"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "tnsyn": 99
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "import java.util.Timer;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "import java.util.TimerTask;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tnsyn"
        },
        "content": " * Represents a Duke app."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tnsyn"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * Returns Duke\u0027s response to the user as a String."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * @param input User\u0027s input."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * @return Duke\u0027s response as a String."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        parser.parse(input);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        switch(parser.getSplitUserInput()[0].toLowerCase()) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        case \"assist\":"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            return Ui.assist();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        case \"dismiss\":"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            new Timer().schedule(new TimerTask() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                public void run () { System.exit(0); }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            }, 1000);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            return Ui.dismiss();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        case \"scroll\":"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            return tasks.printAllTasks();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            return tasks.returnSearchedTask(parser.getSplitUserInput());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            String deletedMessage \u003d tasks.deleteTaskAndGetMessage(parser.getSplitUserInput());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            storage.removeFromFile(tasks.getDeletedTaskIndex());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            return deletedMessage;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        case \"conquer\":"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            String conqueredMessage \u003d tasks.conquerTaskAndGetMessage(parser.getSplitUserInput());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            storage.overwriteInFile(tasks.getConqueredTaskIndex());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            return conqueredMessage;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            String todoMessage \u003d tasks.addTodoAndGetMessage(parser.getSplitUserInput());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            storage.writeToFile(tasks.getAddedTask(), parser.getSplitUserInput());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            return todoMessage;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            String deadlineMessage \u003d tasks.addDeadlineAndGetMessage(parser.getSplitUserInput());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            storage.writeToFile(tasks.getAddedTask(), parser.getSplitUserInput());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            return deadlineMessage;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            String eventMessage \u003d tasks.addEventAndGetMessage(parser.getSplitUserInput());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            storage.writeToFile(tasks.getAddedTask(), parser.getSplitUserInput());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            return eventMessage;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        case \"schedule\":"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            return tasks.getTasksForADate(parser.getSplitUserInput());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            return Ui.printWrongInputErrorMessage();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * Constructor for Duke that initialises a Storage at a given directory, Parser and TaskList."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * "
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * @param filePath Specified directory for Storage."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public Duke(Path filePath) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        this.storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        this.tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        this.parser \u003d new Parser();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * Constructor for Duke that calls overloaded constructor with a fixed path."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        this(java.nio.file.Paths.get(System.getProperty(\"user.dir\"), \"storage\", \"data.txt\"));"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tnsyn": 84
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tnsyn"
        },
        "content": " * Represents a DukeException."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tnsyn"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    "
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * Creates an instance of a DukeException."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * @param err Error message."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public DukeException(String err) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        super(err);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tnsyn": 15
    }
  },
  {
    "path": "src/main/java/duke/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tnsyn"
        },
        "content": " * Represents an event."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tnsyn"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    private Date time \u003d null;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    private SimpleDateFormat timeFormatter \u003d new SimpleDateFormat(\"h:mm a\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    private DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * Creates an instance of a deadline task."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * @param description  Contents of the event task in the format \"deadline XXX /by yyyy-mm-dd HH:mm\"."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * @throws DukeException  If format of date and/or time given is not yyyy-mm-dd HH:mm."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public Event(String description) throws DukeException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        super(description.split(\"/on \")[0]);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            String[] dateAndTime \u003d description.split(\"/on \")[1].split(\" \");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            this.date \u003d LocalDate.parse(dateAndTime[0]);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            if (dateAndTime.length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                SimpleDateFormat parseFormat \u003d new SimpleDateFormat(\"hh:mm\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                this.time \u003d parseFormat.parse(dateAndTime[1]);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            throw new DukeException(\"Please input a valid date and time in the format yyyy-mm-dd HH:MM\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    "
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * Returns formatted date and time string of an event task."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * @return Formatted date and time string of the event task."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public String getDateAndTimeBracket() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        if (this.time \u003d\u003d null) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            return String.format(\"(on: %s)\", this.date.format(dateFormatter));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            return String.format(\"(on: %s, %s)\", this.date.format(dateFormatter), timeFormatter.format(this.time));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * Returns String representation of an event task."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * @return String representation of an event task."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        return String.format(\"[E][%s] %s %s\","
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                this.getStatusIcon(), this.description, this.getDateAndTimeBracket());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tnsyn": 57
    }
  },
  {
    "path": "src/main/java/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tnsyn"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tnsyn"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tnsyn": 12
    }
  },
  {
    "path": "src/main/java/duke/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tnsyn"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tnsyn"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            scene.getStylesheets().add(getClass().getResource(\"/view/styles.css\").toExternalForm());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            scene.getStylesheets().add(\"https://fonts.googleapis.com/css2?family\u003dRye\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            stage.setTitle(\"Duke\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tnsyn": 35
    }
  },
  {
    "path": "src/main/java/duke/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tnsyn"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tnsyn"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    @FXML "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    private Label welcomeMessage;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    "
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaCat.jpg\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        welcomeMessage.setText(Ui.welcome());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        "
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * Sets Duke app."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * "
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * @param d"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        );"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tnsyn": 60
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tnsyn"
        },
        "content": " * Represents a Parser that parses user input."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tnsyn"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    private String[] splitUserInput \u003d new String[0];"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * Creates an instance of a parser."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public Parser() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * Processes user input. "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * @param userInput String to be processed."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public void parse(String userInput) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        this.splitUserInput \u003d userInput.split(\" \", 2);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * Returns user input String array that has been split."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * @return String array."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public String[] getSplitUserInput() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        return this.splitUserInput;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tnsyn": 31
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "import java.nio.file.StandardCopyOption;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tnsyn"
        },
        "content": " * Represents a Storage that stores tasks."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tnsyn"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    private static int globalIndex \u003d 1;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    private int DONE_SYMBOL \u003d 1;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * Creates an instance of a Storage."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * @param filePath Location where the Storage is initialised."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public Storage(Path filePath) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            if (!java.nio.file.Files.exists(filePath)) { "
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                File newDir \u003d new File(\"storage\" + File.separator + \"data.txt\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                newDir.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                newDir.createNewFile();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * Copies stored tasks into a list of tasks."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * "
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * @return ArrayList of stored tasks."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public ArrayList\u003cTask\u003e load() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        ArrayList\u003cTask\u003e storedTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            String filePath \u003d \"storage\" + File.separator + \"data.txt\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            FileReader fr \u003d new FileReader(filePath);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            BufferedReader br \u003d new BufferedReader(fr);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            String currentLine;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            while ((currentLine \u003d br.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                String task[] \u003d currentLine.split(\"\\\\|\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                if (task.length !\u003d 0 \u0026\u0026 !task[0].equals(\"\")) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                    switch(task[1]) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                    case \"T\":"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                        ToDo todo \u003d new ToDo(task[3]);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                        if (Integer.parseInt(task[2]) \u003d\u003d 1) todo.markAsDone();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                        storedTasks.add(todo);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                        globalIndex++;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                    case \"D\":"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                        Deadline deadline \u003d new Deadline(task[3]);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                        if (Integer.parseInt(task[2]) \u003d\u003d 1) deadline.markAsDone();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                        storedTasks.add(deadline);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                        globalIndex++;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                    case \"E\":"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                        Event event \u003d new Event(task[3]);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                        if (Integer.parseInt(task[2]) \u003d\u003d 1) event.markAsDone();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                        storedTasks.add(event);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                        globalIndex++;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                    default:"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                        throw new DukeException(\"Invalid item found\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        } "
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        return storedTasks;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * Writes a new task to file containing stored tasks."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public static void writeToFile(Task t, String[] input) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        assert (t !\u003d null) : \"Task is null\";"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        String type \u003d \"\";"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        int done \u003d 0;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            if (t !\u003d null) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                if (t instanceof ToDo) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                    type \u003d \"T\";"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                } else if (t instanceof Deadline) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                    type \u003d \"D\";"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                } else if (t instanceof Event) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                    type \u003d \"E\";"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                if (t.isDone()) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                    done \u003d 1;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                FileWriter fw \u003d new FileWriter(\"storage\" + File.separator + \"data.txt\", true);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                fw.write(globalIndex + \"|\" + type + \"|\" + done + \"|\" + input[1] + \"\\n\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                globalIndex++;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                fw.close();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * Removes a specific task from file containing stored tasks."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * "
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * @param taskIndex Number corresponding to the specific task to be removed."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public void removeFromFile(int taskIndex) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        assert !(taskIndex \u003c\u003d 0) : \"Task index is invalid\";"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            int index \u003d 1;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            String tempFilePath \u003d \"storage\" + File.separator + \"temp.txt\";"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            String oldFilePath \u003d \"storage\" + File.separator + \"data.txt\";"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            File tempFile \u003d new File(tempFilePath);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            FileReader fr \u003d new FileReader(oldFilePath);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            BufferedReader br \u003d new BufferedReader(fr);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            String currentLine;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            String[] task;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            FileWriter fw \u003d new FileWriter(tempFile, true);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            while ((currentLine \u003d br.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                task \u003d currentLine.split(\"\\\\|\");"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                if (Integer.parseInt(task[0]) !\u003d taskIndex) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                    fw.write(index + \"|\" + task[1] + \"|\" + task[2] + \"|\" + task[3] + \"\\n\");"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                    index++;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            globalIndex \u003d index;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            fr.close();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            br.close();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            Files.copy(Paths.get(tempFilePath), Paths.get(oldFilePath), StandardCopyOption.REPLACE_EXISTING);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            Files.delete(Paths.get(tempFilePath));"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            "
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        } catch (IOException err) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            System.out.println(err.getMessage());"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * Modifies a specific task in file containing stored tasks."
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * "
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * @param taskIndex Number corresponding to the specific task to be modified."
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public void overwriteInFile(int taskIndex) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        assert !(taskIndex \u003c\u003d 0) : \"Task index is invalid\";"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            String tempFilePath \u003d \"storage\" + File.separator + \"temp.txt\";"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            String oldFilePath \u003d \"storage\" + File.separator + \"data.txt\";"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            File tempFile \u003d new File(tempFilePath);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            FileReader fr \u003d new FileReader(oldFilePath);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            BufferedReader br \u003d new BufferedReader(fr);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            String currentLine;"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            String[] task;"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            FileWriter fw \u003d new FileWriter(tempFile, true);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            while ((currentLine \u003d br.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                task \u003d currentLine.split(\"\\\\|\");"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                if (Integer.parseInt(task[0]) !\u003d taskIndex) {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                    fw.write(currentLine + \"\\n\");"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                    fw.write(taskIndex + \"|\" + task[1] + \"|\" + DONE_SYMBOL + \"|\" + task[3] + \"\\n\");"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            fr.close();"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            br.close();"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            Files.copy(Paths.get(tempFilePath), Paths.get(oldFilePath), StandardCopyOption.REPLACE_EXISTING);"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            Files.delete(Paths.get(tempFilePath));"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            "
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        } catch (IOException err) {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            System.out.println(err.getMessage());"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tnsyn": 185
    }
  },
  {
    "path": "src/main/java/duke/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tnsyn"
        },
        "content": " * Represents a Parser that parses user input."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tnsyn"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * Creates an instance of a Task."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * @param description Contents of the task."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * Marks task as done."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * Returns a tick or a cross when the task is done or undone respectively."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * @return A tick or a cross."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        return this.isDone ? \"\\u2713\" : \"\\u2718\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * Returns a tick or a cross when the task is done or undone respectively."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * @return A tick or a cross."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        return this.isDone;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * Returns contents of a task as a String."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * @return Contents of a task as a String."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public LocalDate getDate() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        return this.date;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * Returns String representation of a task."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * @return String representation of a task."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        return String.format(\"[%s] %s\", this.getStatusIcon(), this.description);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tnsyn": 65
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tnsyn"
        },
        "content": " * Represents a list of stored tasks."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tnsyn"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    private ArrayList\u003cTask\u003e storedTasks;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    private Task addedTask;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    private int conqueredTaskIndex;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    private int deletedTaskIndex;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    private final int UNINITIALISED_INDEX \u003d -1;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * Creates an instance of a TaskList."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * @param storedTasks ArrayList of stored tasks loaded from file."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e storedTasks) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        this.storedTasks \u003d storedTasks;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        this.conqueredTaskIndex \u003d UNINITIALISED_INDEX;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        this.deletedTaskIndex \u003d UNINITIALISED_INDEX;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * Checks whether an empty task description is given and throws a DukeException."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * @param task String array of user input."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * @throws DukeException If task description is empty."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public void validateAdd(String[] task) throws DukeException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        boolean isMissingDetails \u003d task.length \u003d\u003d 1;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        boolean hasEmptySpaceAsDetails \u003d task.length \u003e 1 \u0026\u0026 task[1].trim().length() \u003d\u003d 0;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        "
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        if (isMissingDetails || hasEmptySpaceAsDetails) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            throw new DukeException(\"Do give me more details about this \" + task[0] + \", Your Majesty.\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * Checks whether correct slash command /by is given for a deadline task and /on for an event task."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * DukeException is thrown if slash commands are incorrect."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * @param task String array of user input."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * @throws DukeException If slash commands are incorrect."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public void validateSlashCommands(String[] task) throws DukeException {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        boolean isDeadline \u003d task[0].equalsIgnoreCase(\"deadline\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        boolean isEvent \u003d task[0].equalsIgnoreCase(\"event\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        boolean containsKeywordBy \u003d task[1].split(\"/by \", 2).length \u003e 1;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        boolean containsKeywordOn \u003d  task[1].split(\"/on \", 2).length \u003e 1;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        "
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        if (isDeadline \u0026\u0026 !containsKeywordBy) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            throw new DukeException(\"Use /by for deadlines, Your Majesty.\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        } else if (isEvent \u0026\u0026 !containsKeywordOn) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            throw new DukeException(\"Use /on for events, Your Majesty.\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * Checks whether a given index corresponds to an existing task and throws a DukeException."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * @param taskNumber String array of user input."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * @throws DukeException If index given does not correspond to an existing task."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public void validateIndex(int taskNumber) throws DukeException {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        boolean isExceedingTotalNumber \u003d taskNumber \u003e storedTasks.size();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        boolean isNegativeNumber \u003d taskNumber \u003c\u003d 0;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        if (isExceedingTotalNumber || isNegativeNumber) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            throw new DukeException(\"Your Majesty, there\u0027s no such agenda in my detailed records.\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * Checks whether a valid number is given in user input."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * @param command String array of user input."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * @throws DukeException If no valid number is given in the user input."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public void validateConquerDelete(String[] command) throws DukeException {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            Integer.parseInt(sanitiseInput(command[1]));"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        } catch (Exception err) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            throw new DukeException(\"Please enter valid numbers after your command, Your Majesty.\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * Removes leading white spaces in String input."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * @param input String user input."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * @return String that has been trimmed of leading white spaces."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public String sanitiseInput(String input) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        return input.stripLeading();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * Prints all stored tasks."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public String printAllTasks() {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        return Ui.printAllTasksUi(storedTasks);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * Deletes a specified task and returns Duke\u0027s response as a String."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * "
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * @param input User\u0027s input."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * @return Duke\u0027s response as a String."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public String deleteTaskAndGetMessage(String[] input) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        Task deletedTask;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            validateConquerDelete(input);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            int taskNumber \u003d Integer.parseInt(sanitiseInput(input[1]));"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            validateIndex(taskNumber);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            this.deletedTaskIndex \u003d taskNumber;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            deletedTask \u003d storedTasks.remove(taskNumber - 1);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        } catch (DukeException err) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            this.deletedTaskIndex \u003d UNINITIALISED_INDEX;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            return Ui.dukeErrorMessage(err);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        return Ui.deletedMessage(deletedTask, storedTasks.size());"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    "
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * Returns the index of the most recently deleted task."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * "
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * @return Index of the most recently deleted task."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public int getDeletedTaskIndex() {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        return this.deletedTaskIndex;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * Marks a specified task as done and returns Duke\u0027s response as a String."
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * "
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * @param input User\u0027s input."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * @return Duke\u0027s response as a String."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public String conquerTaskAndGetMessage(String[] input) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        Task conqueredTask;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            validateConquerDelete(input);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            int taskNumber \u003d Integer.parseInt(sanitiseInput(input[1]));"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            validateIndex(taskNumber);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            this.conqueredTaskIndex \u003d taskNumber;"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            storedTasks.get(taskNumber - 1).markAsDone();"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            conqueredTask \u003d storedTasks.get(taskNumber - 1);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        } catch (DukeException err) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            this.conqueredTaskIndex \u003d UNINITIALISED_INDEX;"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            return Ui.dukeErrorMessage(err);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        "
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        return Ui.conqueredMessage(conqueredTask);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * Returns index of the most recently conquered task."
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * "
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * @return Index of the most recently conquered task."
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public int getConqueredTaskIndex() {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        return this.conqueredTaskIndex;"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * Returns current list of stored tasks."
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * @return Current list of stored tasks."
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public ArrayList\u003cTask\u003e getStoredTasks() {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        return this.storedTasks;"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * Prints list of relevant tasks based on inputted key word."
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * @param input String array of user input."
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public String returnSearchedTask(String[] input) {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        ArrayList\u003cTask\u003e relevantTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            String searchWord \u003d input[1];"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            for (Task t : storedTasks) {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                boolean containsSearchWord \u003d t.getDescription().contains(searchWord);"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                if (containsSearchWord) {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                    relevantTasks.add(t);"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        } catch (Exception err) {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            return Ui.dukeErrorMessage(new DukeException(\"Please enter a search term, Your Majesty.\"));"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        "
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        return Ui.printRelevantTasksUi(relevantTasks);"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * Adds a specified ToDo to the list and returns Duke\u0027s response as a String."
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * "
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * @param input User\u0027s input."
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * @return Duke\u0027s response as a String."
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public String addTodoAndGetMessage(String[] input) {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "       try {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "           validateAdd(input);"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "           handleAddTask(new ToDo(input[1]));"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "       } catch (DukeException err) {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "           return Ui.dukeErrorMessage(err);"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "       }"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "       return Ui.addedMessage(this.addedTask, this.storedTasks.size());"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * Adds a specified task to the list."
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * "
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * @param t Specified task to be added."
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public void handleAddTask(Task t) {"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        storedTasks.add(t);"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        this.addedTask \u003d t;"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * Adds a specified Deadline to the list and returns Duke\u0027s response as a String."
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * "
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * @param input User\u0027s input."
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * @return Duke\u0027s response as a String."
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public String addDeadlineAndGetMessage(String[] input) {"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            validateAdd(input);"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            validateSlashCommands(input);"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            handleAddTask(new Deadline(input[1]));"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        } catch (DukeException err) {"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            return Ui.dukeErrorMessage(err);"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        return Ui.addedMessage(this.addedTask, this.storedTasks.size());"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * Adds a specified Event to the list and returns Duke\u0027s response as a String."
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * "
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * @param input User\u0027s input."
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * @return Duke\u0027s response as a String."
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public String addEventAndGetMessage(String[] input) {"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            validateAdd(input);"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            validateSlashCommands(input);"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            handleAddTask(new Event(input[1]));"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        } catch (DukeException err) {"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            return Ui.dukeErrorMessage(err);"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        return Ui.addedMessage(this.addedTask, this.storedTasks.size());"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * Returns the most recently added task."
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * "
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * @return Most recently added task."
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public Task getAddedTask() {"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        return this.addedTask;"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    "
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public String getTasksForADate(String[] input) {"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        ArrayList\u003cTask\u003e relevantTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            LocalDate date \u003d LocalDate.parse(input[1]);"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            for (Task t : storedTasks) {"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                if (t.getDate() !\u003d null \u0026\u0026 t.getDate().equals(date)) {"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                    relevantTasks.add(t);"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                }"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        } catch (Exception err) {"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            return Ui.dukeErrorMessage(new DukeException(\"Please input a valid date, Your Majesty.\"));"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        return Ui.printScheduleForDate(relevantTasks);"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tnsyn": 283
    }
  },
  {
    "path": "src/main/java/duke/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tnsyn"
        },
        "content": " * Represents an event."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tnsyn"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * Creates an instance of a ToDo task."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * @param description  Contents of the todo task."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * Returns String representation of a ToDo task."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * @return String representation of a ToDo task."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        return String.format(\"[T][%s] %s\", this.getStatusIcon(), this.description);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tnsyn": 26
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tnsyn"
        },
        "content": " * Represents a Ui object."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tnsyn"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * Displays welcome message."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public static String welcome() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        String footer\u003d \"Your Majesty, I am your loyal Duke.\\n \" +"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                \"I offer a range of administrative services. Do type \u0027assist\u0027 to see the comprehensive list.\\n\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "//        return footer + printDashedLineBreak();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        return footer;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * Displays a dashed line break that is 32 dashes long."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public static String printDashedLineBreak() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        String dashedLine \u003d \"- \";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        return dashedLine.repeat(33);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * Displays list of possible user commands."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public static String assist() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        String greeting \u003d \"Greetings, Your Majesty.\\n \" +"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                \"Use any of these commands to access my quality services:\\n\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        String commandList \u003d \"1. todo [TASK]: Adds a todo to your scroll\\n\" +"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                    \"2. deadline [TASK] /by [DATE AND/OR TIME]: Adds a deadline to your scroll\\n\" + "
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                        \"3. event [TASK] /on [DATE AND/OR TIME]: Adds an event to your scroll\\n\" +"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                            \"4. scroll: Displays your scroll - your list of tasks\\n\" +"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                                \"5. conquer [NUMBER]: Marks the particular item on your scroll as DONE\\n\" +"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                                    \"6. delete [NUMBER]: Deletes the particular item from your scroll\\n\" +"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                                        \"7. find [KEYWORD]: Returns a list of relevant items on your scroll\\n\" +"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                                            \"8. schedule [DATE]: Returns a list of items on this date\\n\" +"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                                                \"9. dismiss: This will be my cue to leave.\\n\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        String ending \u003d \"Now, how may I serve you?\\n\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        return greeting + commandList + ending;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * Displays goodbye message."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public static String dismiss() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        return \"Your wish is my command, Your Majesty. Till I see you again. \\n\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * Displays error message."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * @param e DukeException."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public static String dukeErrorMessage(DukeException e) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        return e.getMessage() + \"\\n\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * Displays marked task as done message."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * @param t Task that has been marked as done."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public static String conqueredMessage(Task t) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        assert (t !\u003d null);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        String response \u003d \"As you wish, Your Majesty. I have marked this as conquered.\\n\";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        String conqueredTask \u003d t.toString() + \"\\n\";"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        return response + conqueredTask;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * Displays deleted task message."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * @param t Task that has been deleted."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * @param size Size of current list of stored tasks."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public static String deletedMessage(Task t, int size) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        assert (t !\u003d null);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        String response \u003d \"As you wish, Your Majesty. I have removed this writing.\\n\";"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        String deletedTask \u003d t.toString() + \"\\n\";"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        String information \u003d String.format(\"You have %s writing(s) on your scroll as of now. \\n\", size);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        return response + deletedTask + information;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * Displays added task message."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * @param t Task that has been added."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     * @param size Size of current list of stored tasks."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public static String addedMessage(Task t, int size) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        assert (t !\u003d null);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        String response \u003d \"Your Majesty, I\u0027ve added the writing:\\n\";"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        String addedTask \u003d t.toString() + \"\\n\";"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        String information \u003d String.format(\"You have %s writing(s) on your scroll as of now. \\n\", size);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        return response + addedTask + information;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    "
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public static String printAllTasksUi(ArrayList\u003cTask\u003e storedTasks) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        assert (storedTasks !\u003d null);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        if (storedTasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            return \"Your scroll is currently empty, Your Majesty.\";"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        } "
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        StringBuilder response \u003d new StringBuilder();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        response.append(\"Your scroll as requested, Your Majesty:\\n\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        for (Task task : storedTasks) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            response.append(String.format(\"%s.%s\\n\", storedTasks.indexOf(task) + 1, task));"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        return response.toString();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    "
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public static String printRelevantTasksUi(ArrayList\u003cTask\u003e relevantTasks) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        assert (relevantTasks !\u003d null);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        if (relevantTasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            return \"There doesn\u0027t seem to be any relevant writings, Your Majesty.\";"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        StringBuilder response \u003d new StringBuilder();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        response.append(\"These are the relevant writings, Your Majesty:\\n\");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        for (Task task : relevantTasks) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            response.append(String.format(\"%s.%s\\n\", relevantTasks.indexOf(task) + 1, task));"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        return response.toString();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    "
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public static String printWrongInputErrorMessage() {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        return \"I\u0027m afraid I don\u0027t understand that command, Your Majesty.\";"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    "
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public static String printScheduleForDate(ArrayList\u003cTask\u003e scheduledTasks) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        assert (scheduledTasks !\u003d null);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        if (scheduledTasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            return \"You have no writings for this date, Your Majesty.\";"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        StringBuilder response \u003d new StringBuilder();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        response.append(\"Here are the writings you requested, Your Majesty:\\n\");"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        for (Task task : scheduledTasks) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            response.append(String.format(\"%s.%s\\n\", scheduledTasks.indexOf(task) + 1, task));"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        return response.toString();"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tnsyn": 144
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        \u003cLabel id\u003d\"dialog\" fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "tnsyn": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "\u003c?import javafx.scene.image.Image?\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "\u003cAnchorPane id\u003d\"anchor\" maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        \u003cScrollPane id\u003d\"scroll\" fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefWidth\u003d\"388.0\"\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                    \u003cVBox prefHeight\u003d\"100.0\" prefWidth\u003d\"30.0\"\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                        \u003cpadding\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                            \u003cInsets bottom\u003d\"0\" left\u003d\"63\" right\u003d\"50\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                        \u003c/padding\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                        \u003cLabel id\u003d\"welcomeMessage\" fx:id\u003d\"welcomeMessage\" wrapText\u003d\"true\"/\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                    \u003c/VBox\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                \u003c/VBox\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "\u003c/AnchorPane\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "tnsyn": 33
    }
  },
  {
    "path": "src/test/java/duke/StorageTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "import org.junit.jupiter.api.AfterAll;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "public class StorageTest {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public void testStorageCreation() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        String workingDir \u003d System.getProperty(\"user.dir\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        java.nio.file.Path path \u003d java.nio.file.Paths.get(workingDir, \"storage\", \"data.txt\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        Storage s \u003d new Storage(path);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        assertEquals(true, Files.exists(path));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public void testWriteToFile() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            String workingDir \u003d System.getProperty(\"user.dir\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            java.nio.file.Path path \u003d java.nio.file.Paths.get(workingDir, \"storage\", \"data.txt\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            Storage s \u003d new Storage(path);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            ToDo dummyToDo \u003d new ToDo(\"test\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            String dummyInput \u003d \"todo test\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            s.writeToFile(dummyToDo, dummyInput.split(\" \", 2));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            FileReader fr \u003d new FileReader(\"storage\" + File.separator + \"data.txt\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            BufferedReader br \u003d new BufferedReader(fr);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            String lineToCheck \u003d br.readLine();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            br.close();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            fr.close();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            assertEquals(\"1|T|0|test\", lineToCheck);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            System.out.println(e);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    "
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public void testLoadToArray() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            String workingDir \u003d System.getProperty(\"user.dir\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            java.nio.file.Path path \u003d java.nio.file.Paths.get(workingDir, \"mockstorage\", \"mockdata.txt\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            Storage s \u003d new Storage(path);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            ToDo dummyToDo \u003d new ToDo(\"test\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            ArrayList\u003cTask\u003e loadedTasks \u003d s.load();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            assertEquals(dummyToDo.toString(), loadedTasks.get(0).toString());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            System.out.println(e);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    "
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    @AfterAll"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public static void resetDir() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            String workingDir \u003d System.getProperty(\"user.dir\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            if (java.nio.file.Files.exists(java.nio.file.Paths.get(workingDir, \"storage\", \"data.txt\"))) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                java.nio.file.Path pathToTxt \u003d java.nio.file.Paths.get(workingDir, \"storage\", \"data.txt\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                Files.delete(pathToTxt);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                java.nio.file.Path pathToDir \u003d java.nio.file.Paths.get(workingDir, \"storage\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                Files.delete(pathToDir);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            "
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            String mockDir \u003d System.getProperty(\"user.dir\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            java.nio.file.Path pathToMockTxt \u003d java.nio.file.Paths.get(workingDir, \"mockstorage\", \"mockdata.txt\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            Files.delete(pathToMockTxt);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            java.nio.file.Path pathToMockDir \u003d java.nio.file.Paths.get(workingDir, \"mockstorage\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            Files.delete(pathToMockDir);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            File newDir \u003d new File(\"mockstorage\" + File.separator + \"mockdata.txt\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            newDir.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            newDir.createNewFile();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            FileWriter fw \u003d new FileWriter(\"mockstorage\" + File.separator + \"mockdata.txt\", true);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            fw.write(\"1|T|0|test\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            System.out.println(e);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tnsyn": 88
    }
  },
  {
    "path": "src/test/java/duke/TaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "import java.io.ByteArrayOutputStream;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "public class TaskTest {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    private final PrintStream standardOut \u003d System.out;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    private final ByteArrayOutputStream outputStreamCaptor \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public void setUp() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        System.setOut(new PrintStream(outputStreamCaptor));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    @Test "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public void testInitialisation() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        ArrayList\u003cTask\u003e loadedList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        loadedList.add(new ToDo(\"test\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        TaskList list \u003d new TaskList(loadedList);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        assertEquals(1, list.getStoredTasks().size());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    "
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    @Test "
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public void testAddToDo() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        ArrayList\u003cTask\u003e loadedList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        TaskList list \u003d new TaskList(loadedList);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        String input \u003d \"todo test\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        ToDo dummyToDo \u003d new ToDo(\"test\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        list.addTodoAndGetMessage(input.split(\" \", 2));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        assertEquals(dummyToDo.toString(), list.getStoredTasks().get(0).toString());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    "
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    @Test "
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public void testConquerTask() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        ArrayList\u003cTask\u003e loadedList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        ToDo dummyToDo \u003d new ToDo(\"test\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        loadedList.add(dummyToDo);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        TaskList list \u003d new TaskList(loadedList);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        "
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        String input \u003d \"conquer 1\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        list.conquerTaskAndGetMessage(input.split(\" \", 2));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        assertEquals(\"[T][✓] test\", list.getStoredTasks().get(0).toString());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    "
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    @Test "
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public void testDeleteTask() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        ArrayList\u003cTask\u003e loadedList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        ToDo dummyToDo \u003d new ToDo(\"test\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        loadedList.add(dummyToDo);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        TaskList list \u003d new TaskList(loadedList);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        assertEquals(1, list.getStoredTasks().size());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        String input \u003d \"delete 1\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        list.deleteTaskAndGetMessage(input.split(\" \", 2));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        assertEquals(0, list.getStoredTasks().size());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    "
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tnsyn": 63
    }
  },
  {
    "path": "src/test/mockstorage/mockdata.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "1|T|0|test"
      }
    ],
    "authorContributionMap": {
      "tnsyn": 1
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "assist"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "deadline return book /by 2020-01-01"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "scroll"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "scROLL"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "conquer 1"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "scroll"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "conquer 2"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "scroll "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "conquer 3"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "event arts experience /on 2020-04-02 18:00"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "scroll"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "list"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "event"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "todo"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "deadline code /for Monday"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "event hackathon /by Tuesday"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "deadline     "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "event    "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "conquer $$$"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "delete fbeg"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "conquer"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "delete"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "conquer "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "delete "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "todo   "
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "       "
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "conquer 1"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "scroll "
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "  todo "
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "  todo return book"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "  conquer   2"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "  delete  1"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tnsyn"
        },
        "content": " scroll"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "dismiss"
      }
    ],
    "authorContributionMap": {
      "tnsyn": 37
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/duke/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "java -classpath ../bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "tnsyn": 2,
      "-": 36
    }
  }
]
