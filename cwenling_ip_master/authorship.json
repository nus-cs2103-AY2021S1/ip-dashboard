[
  {
    "path": "src/main/java/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cwenling"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    private Task task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public AddCommand(Task task) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        String echoizer \u003d \"\\t Got it. I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cwenling"
        },
        "content": "                + \"\\t %s\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cwenling"
        },
        "content": "                + \"\\t Now you have %d tasks in the list.\\n\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        ui.showAction(String.format(echoizer, task, tasks.size()));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cwenling"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cwenling": 16
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cwenling"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public Command() {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cwenling"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cwenling": 11
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cwenling"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    protected LocalDateTime time;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public Deadline(String description, String by) throws DukeException {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        LocalDateTime timeBy;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            timeBy \u003d LocalDateTime.parse(by, DateTimeFormatter.ofPattern(\"yyyy-MM-dd kkmm\"));"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        } catch (DateTimeParseException ex) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            throw new DukeException(\"Deadline timing cannot be parsed\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        this.time \u003d timeBy;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        String by \u003d time.format(DateTimeFormatter.ofPattern(\"MMM d yyyy kk:mm\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public String toData() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        String isDone \u003d super.isDone ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        String separator \u003d \"~\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        String by \u003d time.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd kkmm\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        return \"D\" + separator + isDone + separator + super.description + separator + by + \"\\n\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cwenling"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cwenling": 33
    }
  },
  {
    "path": "src/main/java/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cwenling"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    private int i;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public DeleteCommand(int i) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        this.i \u003d i;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            Task t \u003d tasks.tasks.get(i - 1);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            tasks.tasks.remove(i - 1);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            ui.showAction(String.format(\"\\t Noted. I\u0027ve removed this task:\\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cwenling"
        },
        "content": "                    + \"\\t   %s\\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cwenling"
        },
        "content": "                    + \"\\t Now you have %d tasks in the list.\\n\", t, tasks.size()));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        } catch (IndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            throw new DukeException(\"Can\u0027t delete a task that does not exist.\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cwenling"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cwenling": 21
    }
  },
  {
    "path": "src/main/java/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cwenling"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    private int i;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public DoneCommand(int i) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        this.i \u003d i;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            Task t \u003d tasks.tasks.get(i - 1);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            t.markAsDone();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            ui.showAction(String.format(\"\\t Nice! I\u0027ve marked this task as done:\\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cwenling"
        },
        "content": "                    + \"\\t   %s\\n\", t));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        } catch (IndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            throw new DukeException(\"Can\u0027t complete a task that does not exist.\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cwenling"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cwenling": 20
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    private static Ui ui;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    private static Storage storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    private static TaskList tasks;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public Duke(String filePath, String folderPath) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        storage \u003d new Storage(filePath, folderPath);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cwenling"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cwenling"
        },
        "content": "                //ui.showLine(); // show the divider line (\"_______\")"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cwenling"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cwenling"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cwenling"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cwenling"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cwenling"
        },
        "content": "                //ui.showLine();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        new Duke(\"/data/duke.txt\", \"/data\").run();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cwenling": 32,
      "-": 7
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cwenling"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public DukeException(String errorMessage) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cwenling"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cwenling": 7
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cwenling"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    protected LocalDateTime timeStart;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    protected LocalDateTime timeEnd;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public Event(String description, String at) throws DukeException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        String[] startEnd \u003d at.split(\" to \");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        LocalDateTime timeStart;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        LocalDateTime timeEnd;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            timeStart \u003d LocalDateTime.parse(startEnd[0], DateTimeFormatter.ofPattern(\"yyyy-MM-dd kkmm\"));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            timeEnd \u003d LocalDateTime.parse(startEnd[1], DateTimeFormatter.ofPattern(\"yyyy-MM-dd kkmm\"));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        } catch (DateTimeParseException ex) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            throw new DukeException(\"Event timing details cannot be parsed\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        this.timeStart \u003d timeStart;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        this.timeEnd \u003d timeEnd;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        String at \u003d timeStart.format(DateTimeFormatter.ofPattern(\"MMM d yyyy kk:mm\"))"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cwenling"
        },
        "content": "                + \" to \""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cwenling"
        },
        "content": "                + timeEnd.format(DateTimeFormatter.ofPattern(\"MMM d yyyy kk:mm\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public String toData() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        String isDone \u003d super.isDone ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        String separator \u003d \"~\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        String at \u003d timeStart.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd kkmm\"))"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "cwenling"
        },
        "content": "                + \" to \""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "cwenling"
        },
        "content": "                + timeEnd.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd kkmm\"));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        return \"E\" + separator + isDone + separator + super.description + separator + at + \"\\n\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "cwenling"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cwenling": 42
    }
  },
  {
    "path": "src/main/java/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cwenling"
        },
        "content": "public class ExitCommand extends Command{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public ExitCommand() {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        ui.showFarewell();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        storage.save(tasks.tasks);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        System.exit(0);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cwenling"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cwenling": 17
    }
  },
  {
    "path": "src/main/java/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cwenling"
        },
        "content": "public class ListCommand extends Command{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public ListCommand() {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        String tasksString \u003d tasks.listTasks();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        ui.showAction(\"\\t Here are the tasks in your list:\\n\" + tasksString);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cwenling"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cwenling": 11
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cwenling"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public static Command parse(String fullCommand) throws DukeException {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        Command command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        if (fullCommand.equals(\"bye\")) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        } else if (fullCommand.equals(\"list\")) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            command \u003d new ListCommand();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        } else if (fullCommand.startsWith(\"done\")) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            command \u003d new DoneCommand(Integer.parseInt(fullCommand.split(\" \")[1]));"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        } else if (fullCommand.startsWith(\"delete\")) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            command \u003d new DeleteCommand(Integer.parseInt(fullCommand.split(\" \")[1]));"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        } else if (fullCommand.startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            command \u003d new AddCommand(parseTask(\"todo\", fullCommand));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        } else if (fullCommand.startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            command \u003d new AddCommand(parseTask(\"deadline\", fullCommand));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        } else if (fullCommand.startsWith(\"event\")) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            command \u003d new AddCommand(parseTask(\"event\", fullCommand));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            command \u003d new UnknownCommand(fullCommand);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        return command;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public static Task parseTask(String type, String task) throws DukeException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        Task t;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        switch (type) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cwenling"
        },
        "content": "                if (task.length() \u003c\u003d 5) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cwenling"
        },
        "content": "                    throw new DukeException(\"The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cwenling"
        },
        "content": "                }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cwenling"
        },
        "content": "                t \u003d new ToDo(task.substring(5));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cwenling"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cwenling"
        },
        "content": "                if (task.length() \u003c\u003d 9) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cwenling"
        },
        "content": "                    throw new DukeException(\"The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "cwenling"
        },
        "content": "                }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "cwenling"
        },
        "content": "                String[] taskArr \u003d task.substring(9).split(\" /by \");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "cwenling"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "cwenling"
        },
        "content": "                    t \u003d new Deadline(taskArr[0], taskArr[1]);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "cwenling"
        },
        "content": "                } catch (IndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "cwenling"
        },
        "content": "                    throw new DukeException(\"Invalid description of a deadline.\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "cwenling"
        },
        "content": "                }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "cwenling"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "cwenling"
        },
        "content": "                if (task.length() \u003c\u003d 6) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "cwenling"
        },
        "content": "                    throw new DukeException(\"The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "cwenling"
        },
        "content": "                }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "cwenling"
        },
        "content": "                String[] taskArr2 \u003d task.substring(6).split(\" /at \");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "cwenling"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "cwenling"
        },
        "content": "                    t \u003d new Event(taskArr2[0], taskArr2[1]);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "cwenling"
        },
        "content": "                } catch (IndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "cwenling"
        },
        "content": "                    throw new DukeException(\"Invalid description of an event.\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "cwenling"
        },
        "content": "                }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "cwenling"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "cwenling"
        },
        "content": "                throw new DukeException(\"Unexpected value: \" + type);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        return t;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "cwenling"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cwenling": 61
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cwenling"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    private String folderPath;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public Storage(String filePath, String folderPath) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        this.filePath \u003d System.getProperty(\"user.dir\") + filePath;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        this.folderPath \u003d System.getProperty(\"user.dir\") + folderPath;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public ArrayList\u003cString\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        File folder \u003d new File(folderPath);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        if (!folder.exists()) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            folder.mkdir();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cwenling"
        },
        "content": "                file.createNewFile();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            } catch (IOException ex) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cwenling"
        },
        "content": "                throw new DukeException(\"IOException from creating data file\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            throw new DukeException(\"Data folder does not exist\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        ArrayList\u003cString\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            BufferedReader bufferedReader \u003d new BufferedReader(new FileReader(file));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            String line;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            while ((line \u003d bufferedReader.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "cwenling"
        },
        "content": "                taskList.add(line);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            bufferedReader.close();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        } catch (FileNotFoundException ex) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            throw new DukeException(\"FileNotFoundException\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        } catch (IOException exception) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            throw new DukeException(\"Unable to read from file\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public void save(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            file.createNewFile();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        } catch (IOException ex) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            System.out.println(ex.getMessage());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        FileWriter fileWriter;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            fileWriter \u003d new FileWriter(file);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            for (Task task : taskList) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "cwenling"
        },
        "content": "                String taskLine \u003d task.toData();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "cwenling"
        },
        "content": "                fileWriter.write(taskLine);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            fileWriter.close();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        } catch (IOException ex) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            System.out.println(ex.getMessage());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "cwenling"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cwenling": 70
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cwenling"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return x or o symbols"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        return String.format(\"[%s] %s\", getStatusIcon(), description);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public String toData() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cwenling"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cwenling": 26
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cwenling"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public TaskList(ArrayList\u003cString\u003e taskStrings) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        for (String taskString : taskStrings) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cwenling"
        },
        "content": "                this.tasks.add(lineToTask(taskString));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            } catch (DukeException ignored) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public Task lineToTask(String taskString) throws DukeException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        String[] taskLine \u003d taskString.split(\"~\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        Task task \u003d null;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            switch (taskLine[0]) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cwenling"
        },
        "content": "                case \"T\":"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cwenling"
        },
        "content": "                    task \u003d new ToDo(taskLine[2]);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cwenling"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cwenling"
        },
        "content": "                case \"D\":"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cwenling"
        },
        "content": "                    task \u003d new Deadline(taskLine[2], taskLine[3]);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cwenling"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cwenling"
        },
        "content": "                case \"E\":"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cwenling"
        },
        "content": "                    task \u003d new Event(taskLine[2], taskLine[3]);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cwenling"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            if (taskLine[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "cwenling"
        },
        "content": "                assert task !\u003d null;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "cwenling"
        },
        "content": "                task.markAsDone();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            return task;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        } catch (DukeException ex) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            throw ex;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public String listTasks() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        String tasks \u003d \"\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        Task t;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        for (int i \u003d 0; i \u003c this.tasks.size(); i++) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            t \u003d this.tasks.get(i);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            tasks +\u003d String.format(\"\\t %d.%s%n\", i + 1, t);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "cwenling"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cwenling": 63
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cwenling"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public String toData() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        String isDone \u003d super.isDone ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        String separator \u003d \"~\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        return \"T\" + separator + isDone + separator + super.description + \"\\n\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cwenling"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cwenling": 17
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cwenling"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    private static final String DIVIDER \u003d"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            \"\\t____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    private static final String LOGO \u003d"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            \" _____     __   __   ________   _________\\n\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            + \"|     \\\\   |  | |  | |__    __| |   ______|\\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            + \"|  |\\\\  \\\\  |  | |  |    |  |    |  |______\\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            + \"|  | \\\\  \\\\ |  | |  |    |  |    |   ______|\\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            + \"|  |  \\\\  \\\\|  | |  |    |  |    |  |______\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            + \"|__|   \\\\_____| |__|    |__|    |_________|\\n\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    private static final String GREETING \u003d"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            \"\\t Hello! I\u0027m Nite, the Dark Knight,\\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            + \"\\t Here to help you track your tasks and achieve a great night.\\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            + \"\\t What can I do for you?\\n\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    private static final String GOODBYE \u003d"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            \"\\t Good nite! Hope you have a good night\u0027s sleep. See you soon!\\n\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        System.out.println(LOGO);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        System.out.println(DIVIDER + GREETING + DIVIDER);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public void showFarewell() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        System.out.print(DIVIDER + GOODBYE + DIVIDER);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public void showError(String errorMessage) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        String enhancedMessage \u003d \"\\t :-( OOPS!!! \" + errorMessage + \"\\n\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        System.out.println(DIVIDER + enhancedMessage + DIVIDER);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public void showAction(String actionMessage) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        System.out.println(DIVIDER + actionMessage + DIVIDER);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        System.out.println(\"Unable to load Tasklist\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        return sc.nextLine();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "cwenling"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cwenling": 54
    }
  },
  {
    "path": "src/main/java/UnknownCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cwenling"
        },
        "content": "public class UnknownCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    String gibberish;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public UnknownCommand(String gibberish) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        this.gibberish \u003d gibberish;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        throw new DukeException(String.format(\"I\u0027m sorry, but I don\u0027t know what \\\"%s\\\" means :-(\", gibberish));"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cwenling"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cwenling": 13
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cwenling"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cwenling"
        },
        "content": "delete 10"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cwenling"
        },
        "content": "deadline return book /by Friday 9pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cwenling"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cwenling"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cwenling"
        },
        "content": "carrots"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cwenling"
        },
        "content": "event book visiting /at June 13th 3-4am"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cwenling"
        },
        "content": "todo go to bed"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cwenling"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cwenling"
        },
        "content": "list"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cwenling"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "cwenling": 11
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cwenling"
        },
        "content": "set JAVA_TOOL_OPTIONS\u003d-Dfile.encoding\u003dUTF-8"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cwenling"
        },
        "content": "javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "cwenling": 3,
      "-": 20
    }
  }
]
