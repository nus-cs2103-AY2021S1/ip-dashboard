[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "# duke.Duke project template"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "1. Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Open or Import`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "1. After the importing is complete, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    ____        _        "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      }
    ],
    "authorContributionMap": {
      "ernestlim8": 2,
      "-": 24
    }
  },
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "/*"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": " * This file was generated by the Gradle \u0027init\u0027 task."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": " *"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": " * This is a general purpose Gradle build."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": " * Learn how to create Gradle builds at https://guides.gradle.org/creating-new-gradle-builds"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00276.0.0\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    id \u0027com.github.sherter.google-java-format\u0027 version \u00270.9\u0027"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "jar {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    manifest {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        attributes \u0027Main-Class\u0027: \u0027duke.Duke\u0027"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    jcenter()  // or mavenCentral()"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ernestlim8": 23
    }
  },
  {
    "path": "gradlew.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "@rem Copyright 2015 the original author or authors."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "@rem Licensed under the Apache License, Version 2.0 (the \"License\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "@rem you may not use this file except in compliance with the License."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "@rem You may obtain a copy of the License at"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "@rem      https://www.apache.org/licenses/LICENSE-2.0"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "@rem Unless required by applicable law or agreed to in writing, software"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "@rem distributed under the License is distributed on an \"AS IS\" BASIS,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "@rem See the License for the specific language governing permissions and"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "@rem limitations under the License."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "@rem  Gradle startup script for Windows"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "@rem Set local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "set DIRNAME\u003d%~dp0"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "set APP_BASE_NAME\u003d%~n0"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "set APP_HOME\u003d%DIRNAME%"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "@rem Find java.exe"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "if defined JAVA_HOME goto findJavaFromJavaHome"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "set JAVA_EXE\u003djava.exe"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto execute"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "echo."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "echo."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ":findJavaFromJavaHome"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "if exist \"%JAVA_EXE%\" goto execute"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "echo."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "echo."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ":execute"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "@rem Setup the command line"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "@rem Execute Gradle"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %*"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ":end"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "@rem End local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ":fail"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "rem the _cmd.exe /c_ return code!"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "exit /b 1"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ":mainEnd"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ":omega"
      }
    ],
    "authorContributionMap": {
      "ernestlim8": 89
    }
  },
  {
    "path": "settings.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "/*"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": " * This file was generated by the Gradle \u0027init\u0027 task."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": " *"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": " * The settings file is used to specify which projects to include in your build."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": " *"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": " * Detailed information about configuring a multi-project build in Gradle can be found"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": " * in the user manual at https://docs.gradle.org/6.6/userguide/multi_project_builds.html"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "rootProject.name \u003d \u0027ip\u0027"
      }
    ],
    "authorContributionMap": {
      "ernestlim8": 10
    }
  },
  {
    "path": "src/main/java/command/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    ui.showGoodbye();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    storage.saveTasks(taskList);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  public ByeCommand() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    super(Command.CommandType.Bye);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ernestlim8": 18
    }
  },
  {
    "path": "src/main/java/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "/** Parent Abstract Class to be inherited by actual children classes */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  public CommandType type;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "   * Runs the command, modifying the contents of taskList, Ui or storage depending on the"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "   * implementation of child class"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "   *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "   * @param taskList ArrayList of Tasks Objects"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "   * @param ui Object of the Ui class"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "   * @param storage Object of the Storage class"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "   * @throws DukeException Exception that occurs while executing the command"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "   */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  public abstract void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  public boolean isExit() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    return this.type.equals(CommandType.Bye);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  public enum CommandType {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    Bye,"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    Todo,"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    Deadline,"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    Event,"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    Done,"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    Delete,"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    List,"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    Find"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  Command(CommandType type) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    this.type \u003d type;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ernestlim8": 41
    }
  },
  {
    "path": "src/main/java/command/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import task.DeadlineTask;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "public class DeadlineCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  String taskName;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  LocalDateTime deadline;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    Task deadlineTask \u003d new DeadlineTask(this.taskName, this.deadline);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    taskList.addTask(deadlineTask);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    ui.showAdd(deadlineTask, taskList.getSize());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  public DeadlineCommand(String taskName, LocalDateTime deadline) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    super(CommandType.Deadline);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    this.taskName \u003d taskName;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  public boolean equals(Object o) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    if (this \u003d\u003d o) return true;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    if (o \u003d\u003d null || getClass() !\u003d o.getClass()) return false;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    DeadlineCommand that \u003d (DeadlineCommand) o;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    return Objects.equals(taskName, that.taskName) \u0026\u0026 Objects.equals(deadline, that.deadline);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ernestlim8": 36
    }
  },
  {
    "path": "src/main/java/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import exception.InvalidInputException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  int index;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    if (index !\u003d 0 \u0026\u0026 index \u003c\u003d taskList.getSize()) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "      Task task \u003d taskList.get(index - 1);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "      taskList.removeTask(index - 1);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "      ui.showDelete(task, taskList.getSize());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    } else {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "      throw new InvalidInputException("
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "          \"Number provided is too small or too large, Please provide a valid task number\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  public DeleteCommand(int index) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    super(CommandType.Delete);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    this.index \u003d index;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ernestlim8": 29
    }
  },
  {
    "path": "src/main/java/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import exception.InvalidInputException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  int index;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    if (index !\u003d 0 \u0026\u0026 index \u003c\u003d taskList.getSize()) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "      Task task \u003d taskList.get(index - 1);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "      task.MarkAsDone();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "      ui.showDone(task);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    } else {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "      throw new InvalidInputException("
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "          \"Number provided is too small or too large, Please provide a valid task number\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  public DoneCommand(int index) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    super(CommandType.Done);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    this.index \u003d index;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ernestlim8": 29
    }
  },
  {
    "path": "src/main/java/command/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import task.EventTask;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "public class EventCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  String taskName;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  LocalDateTime timing;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    Task eventTask \u003d new EventTask(this.taskName, this.timing);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    taskList.addTask(eventTask);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    ui.showAdd(eventTask, taskList.getSize());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  public EventCommand(String taskName, LocalDateTime timing) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    super(CommandType.Event);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    this.taskName \u003d taskName;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    this.timing \u003d timing;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ernestlim8": 27
    }
  },
  {
    "path": "src/main/java/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  String findString;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    TaskList filteredTaskList \u003d taskList.find(this.findString);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    ui.displayMatchingTasks(filteredTaskList);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  public FindCommand(String findString) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    super(CommandType.Find);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    this.findString \u003d findString;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  public boolean equals(Object o) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    if (this \u003d\u003d o) return true;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    if (o \u003d\u003d null || getClass() !\u003d o.getClass()) return false;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    FindCommand that \u003d (FindCommand) o;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    return Objects.equals(findString, that.findString);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ernestlim8": 30
    }
  },
  {
    "path": "src/main/java/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    ui.displayTaskList(taskList);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  public ListCommand() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    super(Command.CommandType.List);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ernestlim8": 18
    }
  },
  {
    "path": "src/main/java/command/TodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import task.TodoTask;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "public class TodoCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  String todo;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    Task todoTask \u003d new TodoTask(this.todo);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    taskList.addTask(todoTask);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    ui.showAdd(todoTask, taskList.getSize());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  public TodoCommand(String todo) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    super(CommandType.Todo);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    this.todo \u003d todo;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  public boolean equals(Object o) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    if (this \u003d\u003d o) return true;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    if (o \u003d\u003d null || getClass() !\u003d o.getClass()) return false;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    TodoCommand that \u003d (TodoCommand) o;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    return Objects.equals(todo, that.todo);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ernestlim8": 33
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": " * Duke is a chatbot that allows users to create, delete and complete tasks, which include todos,\\"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": " * events, and deadlines"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import command.Command;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  private Storage storage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  private TaskList taskList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  private Ui ui;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  public static void main(String[] args) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    new Duke(\"data/duke.txt\").run();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  public Duke(String filePath) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    ui \u003d new Ui();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    // Retrieve data from the file to the taskList"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "      taskList \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    } catch (DukeException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "      ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "      taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  /** This method runs the chatbot, accepting user input and adding it to a task list. */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  public void run() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    ui.showWelcome();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    boolean isExit \u003d false;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    while (!isExit) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "      try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        ui.showLine(); // show the divider line (\"_______\")"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        c.execute(taskList, ui, storage);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "      } catch (DukeException e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "      } finally {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        ui.showLine();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "      }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ernestlim8": 51
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import command.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import exception.EmptyDescriptionException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import exception.InvalidDateException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import exception.InvalidInputException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import java.util.regex.Matcher;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": " * Class that Parses the user input given to the chatbot"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  static Pattern todo \u003d Pattern.compile(\"todo (.+)\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  static Pattern deadline \u003d Pattern.compile(\"deadline (.+?) /by (.+)\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  static Pattern event \u003d Pattern.compile(\"event (.+?) /at (.+)\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  static Pattern done \u003d Pattern.compile(\"done ([0-9]+)\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  static Pattern delete \u003d Pattern.compile(\"delete ([0-9]+)\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  static Pattern datePattern \u003d"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "      Pattern.compile(\"^([0-9]{1,2})[/-]([0-9]{1,2})[/-]([0-9]{4}) ([0-9]{4})$\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  static Pattern find \u003d Pattern.compile(\"find (.+)\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "   * Static method that takes in a String and returns a Command"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "   *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "   * @param str String to be parsed"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "   * @return Object of the Command Class"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "   * @throws DukeException Any exceptions with parsing"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "   */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  public static Command parse(String str) throws DukeException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    if (str.equals(\"bye\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "      return new ByeCommand();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    } else if (str.equals(\"list\")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "      return new ListCommand();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    } else {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "      switch (str.split(\" \")[0]) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "          Matcher doneMatcher \u003d done.matcher(str);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "          if (doneMatcher.find()) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            int taskNum \u003d Integer.parseInt(doneMatcher.group(1));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            return new DoneCommand(taskNum);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "          } else {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            throw new EmptyDescriptionException(\"done\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "          }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "          Matcher deleteMatcher \u003d delete.matcher(str);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "          if (deleteMatcher.find()) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            int taskNum \u003d Integer.parseInt(deleteMatcher.group(1));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            return new DeleteCommand(taskNum);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "          } else {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            throw new EmptyDescriptionException(\"delete\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "          }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "          Matcher todoMatcher \u003d todo.matcher(str);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "          if (todoMatcher.find()) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            String todo \u003d todoMatcher.group(1);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            return new TodoCommand(todo);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "          } else {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            throw new EmptyDescriptionException(\"todo\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "          }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "          Matcher deadlineMatcher \u003d deadline.matcher(str);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "          if (deadlineMatcher.find()) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            LocalDateTime deadLine \u003d Parser.parseDate(deadlineMatcher.group(2));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            return new DeadlineCommand(deadlineMatcher.group(1), deadLine);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "          } else {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            throw new EmptyDescriptionException(\"deadline\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "          }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "          Matcher eventMatcher \u003d event.matcher(str);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "          if (eventMatcher.find()) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            LocalDateTime timing \u003d Parser.parseDate(eventMatcher.group(2));"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            return new EventCommand(eventMatcher.group(1), timing);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "          } else {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            throw new EmptyDescriptionException(\"event\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "          }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "          Matcher findMatcher \u003d find.matcher(str);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "          if (findMatcher.find()) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            return new FindCommand(findMatcher.group(1));"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "          } else {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            throw new EmptyDescriptionException(\"find\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "          }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "          throw new InvalidInputException();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "      }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "   * Static method that takes in a string and converts it into a LocalDateTime object"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "   *"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "   * @param dateString String representing a date in dd/MM/yyyy HHmm format"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "   * @return Object of the LocalDateTime class"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "   * @throws InvalidDateException Exception when the format of the string is invalid"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "   */"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  public static LocalDateTime parseDate(String dateString) throws InvalidDateException {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    Matcher dateMatcher \u003d datePattern.matcher(dateString);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    try {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "      if (dateMatcher.find()) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        String day \u003d dateMatcher.group(1);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        if (day.length() \u003d\u003d 1) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "          day \u003d \"0\" + day;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        String month \u003d dateMatcher.group(2);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        if (month.length() \u003d\u003d 1) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "          month \u003d \"0\" + month;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        String year \u003d dateMatcher.group(3);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        String time \u003d dateMatcher.group(4);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        LocalDateTime localDateTime \u003d"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            LocalDateTime.parse("
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "                String.format(\"%s-%s-%s %s\", day, month, year, time),"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "                DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\"));"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        return localDateTime;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "      } else {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        throw new InvalidDateException();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "      }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    } catch (Exception e) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "      throw new InvalidDateException();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ernestlim8": 130
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import exception.DukeFileException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import exception.DukeIOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import exception.InvalidInputException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import java.util.regex.Matcher;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import task.DeadlineTask;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import task.EventTask;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import task.TodoTask;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "/** Storage Class which handles reading and writing tasks from txt file */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  private String filePath;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  public Storage(String filePath) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  public List\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    File file \u003d readFile();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    return parseFile(file);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "   * Reads the file from the file at location filePath"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "   *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "   * @return File located at location filePath"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "   * @throws DukeException Exception when there are errors in file reading"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "   */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  public File readFile() throws DukeException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "      String FOLDERPATH \u003d \"data\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "      File directory \u003d new File(FOLDERPATH);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "      if (!directory.isDirectory()) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        // create Directory data"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        File folder \u003d new File(FOLDERPATH);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        if (!folder.mkdir()) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "          throw new DukeFileException();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "      }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "      File file \u003d new File(this.filePath);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "      if (file.exists() || file.createNewFile()) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        return file;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "      } else {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        throw new DukeFileException();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "      }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    } catch (IOException e1) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "      throw new DukeIOException();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "   * ReadLine takes in a String and returns a Task"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "   *"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "   * @param line String containing information about a Task"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "   * @return Task which corresponds to the String line"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "   * @throws DukeException Exception when there are errors in reading the line."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "   */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  public Task readLine(String line) throws DukeException {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    Pattern todoPattern \u003d Pattern.compile(\"T \\\\| ([01]) \\\\| (.+)\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    Pattern deadlinePattern \u003d Pattern.compile(\"D \\\\| ([01]) \\\\| (.+?) \\\\| (.+)\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    Pattern eventPattern \u003d Pattern.compile(\"E \\\\| ([01]) \\\\| (.+?) \\\\| (.+)\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    Matcher todoMatcher \u003d todoPattern.matcher(line);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    Matcher deadlineMatcher \u003d deadlinePattern.matcher(line);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    Matcher eventMatcher \u003d eventPattern.matcher(line);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    if (todoMatcher.find()) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "      return new TodoTask(todoMatcher.group(2), Integer.parseInt(todoMatcher.group(1)));"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    } else if (deadlineMatcher.find()) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "      return new DeadlineTask("
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "          deadlineMatcher.group(2),"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "          Integer.parseInt(deadlineMatcher.group(1)),"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "          LocalDateTime.parse(deadlineMatcher.group(3)));"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    } else if (eventMatcher.find()) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "      return new EventTask("
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "          eventMatcher.group(2),"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "          Integer.parseInt(eventMatcher.group(1)),"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "          LocalDateTime.parse(eventMatcher.group(3)));"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    } else {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "      // Formats do not match, input given is invalid"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "      throw new InvalidInputException();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "   * Parses the contents of the file given into a list of tasks"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "   *"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "   * @param file File that needs to parsed"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "   * @return ArrayList containing Task Objects"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "   * @throws DukeException Exceptions in parsing the file"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "   */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  public List\u003cTask\u003e parseFile(File file) throws DukeException {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    List\u003cTask\u003e result \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    try {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "      BufferedReader reader \u003d new BufferedReader(new FileReader(file));"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "      String line;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "      // T | 1 | read book"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "      while ((line \u003d reader.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        Task task \u003d readLine(line);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        if (task !\u003d null) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "          result.add(task);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "      }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "      return result;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "      throw new DukeFileException();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    } catch (IOException e2) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "      throw new DukeIOException();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "   * Saves the contents of the taskList into a txt file"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "   *"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "   * @param taskList ArrayList containing tasks to be saved"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "   * @throws DukeException Exceptions in saving tasks"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "   */"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  public void saveTasks(TaskList taskList) throws DukeException {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    try {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "      File file \u003d readFile();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "      BufferedWriter writer \u003d new BufferedWriter(new FileWriter(file));"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "      for (Task task : taskList.getTaskList()) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        if (task instanceof TodoTask) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "          writer.write(String.format(\"T | %s | %s\\n\", task.getHasCompleted(), task.getName()));"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        } else if (task instanceof DeadlineTask) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "          DeadlineTask deadlineTask \u003d (DeadlineTask) task;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "          writer.write("
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "              String.format("
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "                  \"D | %s | %s | %s\\n\","
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "                  deadlineTask.getHasCompleted(),"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "                  deadlineTask.getName(),"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "                  deadlineTask.getDeadline()));"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        } else if (task instanceof EventTask) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "          EventTask eventTask \u003d (EventTask) task;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "          writer.write("
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "              String.format("
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "                  \"E | %s | %s | %s\\n\","
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "                  eventTask.getHasCompleted(), eventTask.getName(), eventTask.getTime()));"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "      }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "      writer.close();"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    } catch (IOException e) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "      throw new DukeIOException();"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ernestlim8": 157
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "/** Class responsible for adding and deletion of tasks */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  List\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  public TaskList(List\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  public TaskList() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    this.taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  public List\u003cTask\u003e getTaskList() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    return taskList;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  public void addTask(Task task) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    this.taskList.add(task);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  public void removeTask(int index) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    this.taskList.remove(index);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  public int getSize() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    return this.taskList.size();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  public Task get(int i) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    return this.taskList.get(i);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  public TaskList find(String findString) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    List\u003cTask\u003e findList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    for (Task task : this.taskList) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "      if (task.getName().contains(findString)) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        findList.add(task);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "      }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    return new TaskList(findList);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ernestlim8": 48
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "/** Class that handles interactions with the user */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  private String line \u003d \"____________________________________________________________\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  String welcomeMessage \u003d \"Hello! I\u0027m Duke\\n What can I do for you?\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  String goodbyeMessage \u003d \"Bye! Message me anytime!!\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  public void showLine() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    System.out.println(this.line);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  public void showWelcome() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    System.out.println(line);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    System.out.println(this.welcomeMessage);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    System.out.println(line);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  public void showGoodbye() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    System.out.println(this.goodbyeMessage);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  public void showDone(Task task) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    System.out.println(\"Nice! I\u0027ve marked this task as done: \");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    System.out.println(task);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  public void showAdd(Task task, int size) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    System.out.println(\"Added task.Task!\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    System.out.println(task);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    showTaskQty(size);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  public void showTaskQty(int size) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    System.out.println(String.format(\"You have %s remaining tasks left, work on them soon!\", size));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  public void showDelete(Task task, int size) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    System.out.println(\"Deleting task.Task: \");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    System.out.println(task);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    showTaskQty(size);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  public void showError(String errMsg) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    System.out.println(errMsg);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  public void displayTaskList(TaskList taskList) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    System.out.println(\"Here are your current tasks:\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    for (int i \u003d 0; i \u003c taskList.getTaskList().size(); i++) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "      System.out.println(i + 1 + \".\" + taskList.getTaskList().get(i));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "   * Uses the Java Scanner to read User Input and trims it"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "   *"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "   * @return String containing the trimmed user input"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "   * @throws DukeException When the user input given is invalid"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "   */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  public String readCommand() throws DukeException {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    String line \u003d sc.nextLine();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    if (line !\u003d null) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "      return line.trim();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    } else {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "      throw new DukeException(\"Please type in a command!\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  public void displayMatchingTasks(TaskList filteredTaskList) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    if (filteredTaskList.getSize() \u003e 0) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "      System.out.println(\"Here are the matching tasks in your list\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "      for (int i \u003d 0; i \u003c filteredTaskList.getTaskList().size(); i++) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        System.out.println(i + 1 + \".\" + filteredTaskList.getTaskList().get(i));"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "      }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    } else {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "      System.out.println(\"You have no matching tasks!\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ernestlim8": 86
    }
  },
  {
    "path": "src/main/java/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  public DukeException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ernestlim8": 7
    }
  },
  {
    "path": "src/main/java/exception/DukeFileException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "public class DukeFileException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  public DukeFileException() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    super(\"Error Occured when reading the File\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ernestlim8": 7
    }
  },
  {
    "path": "src/main/java/exception/DukeIOException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "public class DukeIOException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  public DukeIOException() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    super(\"IO Exception occurred\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ernestlim8": 7
    }
  },
  {
    "path": "src/main/java/exception/EmptyDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "public class EmptyDescriptionException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  public EmptyDescriptionException(String s) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    super(String.format(\"Description of %s is empty, please try again.\", s));"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ernestlim8": 7
    }
  },
  {
    "path": "src/main/java/exception/InvalidDateException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "public class InvalidDateException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  public InvalidDateException() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    super(\"Date is given in the wrong format! Please try again!\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  public InvalidDateException(String message) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    super(message);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ernestlim8": 11
    }
  },
  {
    "path": "src/main/java/exception/InvalidInputException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "public class InvalidInputException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  public InvalidInputException() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    super(\"Input given is invalid! Please try again!\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  public InvalidInputException(String message) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    super(message);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ernestlim8": 11
    }
  },
  {
    "path": "src/main/java/task/DeadlineTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "public class DeadlineTask extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  private LocalDateTime deadline;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  public DeadlineTask(String name, LocalDateTime deadline) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    super(name);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  public DeadlineTask(String name, int hasCompleted, LocalDateTime deadline) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    super(name, hasCompleted);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  public LocalDateTime getDeadline() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    return deadline;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  public String toString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    return \"[D]\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        + super.toString()"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        + \" (by: \""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        + this.deadline.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HHmm\"))"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        + \")\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  public boolean equals(Object o) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    if (this \u003d\u003d o) return true;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    if (o \u003d\u003d null || getClass() !\u003d o.getClass()) return false;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    DeadlineTask that \u003d (DeadlineTask) o;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    return Objects.equals(deadline, that.deadline);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ernestlim8": 40
    }
  },
  {
    "path": "src/main/java/task/EventTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "public class EventTask extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  LocalDateTime time;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  public EventTask(String name, LocalDateTime time) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    super(name);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    this.time \u003d time;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  public EventTask(String name, int hasCompleted, LocalDateTime time) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    super(name, hasCompleted);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    this.time \u003d time;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  public LocalDateTime getTime() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    return time;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  public String toString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    return \"[E]\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        + super.toString()"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        + \" (at: \""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        + this.time.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HHmm\"))"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        + \")\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ernestlim8": 31
    }
  },
  {
    "path": "src/main/java/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  private int hasCompleted;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  private String name;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  public Task(String name) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    this.hasCompleted \u003d 0;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    this.name \u003d name;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  public Task(String name, int hasCompleted) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    this.hasCompleted \u003d hasCompleted;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    this.name \u003d name;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  public void MarkAsDone() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    this.hasCompleted \u003d 1;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  public int getHasCompleted() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    return hasCompleted;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  public String getName() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    return name;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  public String toString() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    return String.format(\"[%s] %s\", this.hasCompleted \u003d\u003d 1 ? \"✓\" : \"✗\", this.name);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ernestlim8": 32
    }
  },
  {
    "path": "src/main/java/task/TodoTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "public class TodoTask extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  public TodoTask(String name) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    super(name);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  public TodoTask(String name, int hasCompleted) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    super(name, hasCompleted);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  public String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  public boolean equals(Object o) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    if (this \u003d\u003d o) return true;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    if (o \u003d\u003d null || getClass() !\u003d o.getClass()) return false;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    TodoTask that \u003d (TodoTask) o;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    return Objects.equals(this.getName(), that.getName())"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        \u0026\u0026 Objects.equals(this.getHasCompleted(), that.getHasCompleted());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ernestlim8": 27
    }
  },
  {
    "path": "src/test/java/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import command.DeadlineCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import command.TodoCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import duke.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import exception.InvalidDateException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  public void parseDateTest1() throws InvalidDateException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    assertEquals(Parser.parseDate(\"12/12/2019 0910\"), LocalDateTime.of(2019, 12, 12, 9, 10));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  public void parseDateTest2() throws InvalidDateException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    assertEquals(Parser.parseDate(\"2/5/2020 1700\"), LocalDateTime.of(2020, 5, 2, 17, 0));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  public void parseTest1() throws DukeException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    assertEquals(Parser.parse(\"todo Eat lunch\"), new TodoCommand(\"Eat lunch\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  @Test"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  public void parseTest2() throws DukeException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    assertEquals("
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        Parser.parse(\"deadline finish assignment /by 12/12/2019 0910\"),"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        new DeadlineCommand(\"finish assignment\", LocalDateTime.of(2019, 12, 12, 9, 10)));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ernestlim8": 34
    }
  },
  {
    "path": "src/test/java/StorageTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import task.DeadlineTask;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import task.TodoTask;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "public class StorageTest {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  public void TestReadValidFile() throws DukeException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    assertEquals(new Storage(\"data/duke.txt\").readFile(), new File(\"data/duke.txt\"));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  public void TestLoad() throws DukeException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    List\u003cTask\u003e arrayList \u003d new Storage(\"data/duke.txt\").load();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    assertEquals(arrayList.size(), 1);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    assertEquals(arrayList.get(0), new TodoTask(\"Wash Clothes\", 1));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  // Test data/duke.txt if it doesn\u0027t exist in test/data/duke.txt"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  @Test"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  public void TestLoadEmptyDirectory() throws DukeException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    assertEquals(new Storage(\"data/dukeEmpty.txt\").load(), new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  @Test"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  public void TestReadLine() throws DukeException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    assertEquals("
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        new Storage(\"\").readLine(\"D | 0 | tasking | 2020-02-02T18:00\"),"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        new DeadlineTask(\"tasking\", LocalDateTime.of(2020, 2, 2, 18, 0)));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  @Test"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  public void TestSaveTask() throws DukeException {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    Storage testStorage \u003d new Storage(\"data/saveTask.txt\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    testStorage.load();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    taskList.addTask(new TodoTask(\"Wash Clothes\", 1));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    taskList.addTask(new TodoTask(\"Do tutorial\", 0));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    testStorage.saveTasks(taskList);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    List\u003cTask\u003e arrayList \u003d testStorage.load();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    assertEquals(arrayList.size(), 2);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    assertEquals(arrayList.get(0), new TodoTask(\"Wash Clothes\", 1));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    assertEquals(arrayList.get(1), new TodoTask(\"Do tutorial\", 0));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ernestlim8": 58
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "ernestlim8": 4
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke.Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "ernestlim8": 2,
      "-": 19
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "if"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  ! ("
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    find ../src/main/java -name \"*.java\" \u003esources.txt"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    javac -cp ../src -Xlint:none -d ../bin @sources.txt"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  )"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "java -classpath ../bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "ernestlim8": 6,
      "-": 36
    }
  },
  {
    "path": "text-ui-test/sources.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "../src/main/java/task.TodoTask.java"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "../src/main/java/task.EventTask.java"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "../src/main/java/task.DeadlineTask.java"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "../src/main/java/task.Task.java"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "../src/main/java/Bot.java"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "../src/main/java/duke.Duke.java"
      }
    ],
    "authorContributionMap": {
      "ernestlim8": 6
    }
  }
]
